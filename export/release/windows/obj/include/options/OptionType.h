// Generated by Haxe 4.3.4
#ifndef INCLUDED_options_OptionType
#define INCLUDED_options_OptionType

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(options,OptionType)
namespace options{


class OptionType_obj : public ::hx::EnumBase_obj
{
	typedef ::hx::EnumBase_obj super;
		typedef OptionType_obj OBJ_;

	public:
		OptionType_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_("options.OptionType",ff,87,2f,3d); }
		::String __ToString() const { return HX_("OptionType.",5f,fc,54,a1) + _hx_tag; }

		static ::options::OptionType BOOL;
		static inline ::options::OptionType BOOL_dyn() { return BOOL; }
		static ::options::OptionType FLOAT;
		static inline ::options::OptionType FLOAT_dyn() { return FLOAT; }
		static ::options::OptionType INT;
		static inline ::options::OptionType INT_dyn() { return INT; }
		static ::options::OptionType KEYBIND;
		static inline ::options::OptionType KEYBIND_dyn() { return KEYBIND; }
		static ::options::OptionType PERCENT;
		static inline ::options::OptionType PERCENT_dyn() { return PERCENT; }
		static ::options::OptionType STRING;
		static inline ::options::OptionType STRING_dyn() { return STRING; }
};

} // end namespace options

#endif /* INCLUDED_options_OptionType */ 

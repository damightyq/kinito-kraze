// Generated by Haxe 4.3.4
#ifndef INCLUDED_psychlua_CustomInterp
#define INCLUDED_psychlua_CustomInterp

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_crowplexus_hscript_Interp
#include <crowplexus/hscript/Interp.h>
#endif
HX_DECLARE_CLASS2(crowplexus,hscript,Interp)
HX_DECLARE_CLASS1(psychlua,CustomInterp)

namespace psychlua{


class HXCPP_CLASS_ATTRIBUTES CustomInterp_obj : public  ::crowplexus::hscript::Interp_obj
{
	public:
		typedef  ::crowplexus::hscript::Interp_obj super;
		typedef CustomInterp_obj OBJ_;
		CustomInterp_obj();

	public:
		enum { _hx_ClassId = 0x2013e222 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="psychlua.CustomInterp")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"psychlua.CustomInterp"); }
		static ::hx::ObjectPtr< CustomInterp_obj > __new();
		static ::hx::ObjectPtr< CustomInterp_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~CustomInterp_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("CustomInterp",85,1c,36,66); }

		 ::Dynamic parentInstance;
		::Array< ::String > _instanceFields;
		 ::Dynamic set_parentInstance( ::Dynamic inst);
		::Dynamic set_parentInstance_dyn();

		 ::Dynamic fcall( ::Dynamic o,::String funcToRun,::cpp::VirtualArray args);

		 ::Dynamic resolve(::String id);

};

} // end namespace psychlua

#endif /* INCLUDED_psychlua_CustomInterp */ 

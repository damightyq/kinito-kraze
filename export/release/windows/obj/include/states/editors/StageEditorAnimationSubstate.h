// Generated by Haxe 4.3.4
#ifndef INCLUDED_states_editors_StageEditorAnimationSubstate
#define INCLUDED_states_editors_StageEditorAnimationSubstate

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_backend_MusicBeatSubstate
#include <backend/MusicBeatSubstate.h>
#endif
HX_DECLARE_CLASS1(backend,MusicBeatSubstate)
HX_DECLARE_CLASS2(backend,ui,PsychUIBox)
HX_DECLARE_CLASS2(backend,ui,PsychUICheckBox)
HX_DECLARE_CLASS2(backend,ui,PsychUIDropDownMenu)
HX_DECLARE_CLASS2(backend,ui,PsychUIInputText)
HX_DECLARE_CLASS2(backend,ui,PsychUINumericStepper)
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxCamera)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS1(flixel,FlxState)
HX_DECLARE_CLASS1(flixel,FlxSubState)
HX_DECLARE_CLASS2(flixel,group,FlxTypedGroup)
HX_DECLARE_CLASS2(flixel,group,FlxTypedSpriteGroup)
HX_DECLARE_CLASS2(flixel,math,FlxBasePoint)
HX_DECLARE_CLASS2(flixel,text,FlxText)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS2(flixel,util,IFlxPooled)
HX_DECLARE_CLASS2(states,editors,StageEditorAnimationSubstate)
HX_DECLARE_CLASS2(states,editors,StageEditorMetaSprite)

namespace states{
namespace editors{


class HXCPP_CLASS_ATTRIBUTES StageEditorAnimationSubstate_obj : public  ::backend::MusicBeatSubstate_obj
{
	public:
		typedef  ::backend::MusicBeatSubstate_obj super;
		typedef StageEditorAnimationSubstate_obj OBJ_;
		StageEditorAnimationSubstate_obj();

	public:
		enum { _hx_ClassId = 0x1577d9ba };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="states.editors.StageEditorAnimationSubstate")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"states.editors.StageEditorAnimationSubstate"); }
		static ::hx::ObjectPtr< StageEditorAnimationSubstate_obj > __new();
		static ::hx::ObjectPtr< StageEditorAnimationSubstate_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~StageEditorAnimationSubstate_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("StageEditorAnimationSubstate",4a,18,c4,83); }

		 ::flixel::FlxSprite bg;
		Float originalZoom;
		 ::flixel::math::FlxBasePoint originalCamPoint;
		 ::flixel::math::FlxBasePoint originalPosition;
		 ::flixel::FlxObject originalCamTarget;
		Float originalAlpha;
		 ::states::editors::StageEditorMetaSprite target;
		int curAnim;
		 ::flixel::group::FlxTypedGroup animsTxtGroup;
		 ::backend::ui::PsychUIBox UI_animationbox;
		 ::flixel::FlxCamera camHUD;
		 ::backend::ui::PsychUIDropDownMenu animationDropDown;
		 ::backend::ui::PsychUIInputText animationInputText;
		 ::backend::ui::PsychUIInputText animationNameInputText;
		 ::backend::ui::PsychUIInputText animationIndicesInputText;
		 ::backend::ui::PsychUINumericStepper animationFramerate;
		 ::backend::ui::PsychUICheckBox animationLoopCheckBox;
		 ::flixel::text::FlxText mainAnimTxt;
		void addAnimationsUI();
		::Dynamic addAnimationsUI_dyn();

		void reloadAnimList();
		::Dynamic reloadAnimList_dyn();

		void reloadAnimationDropDown();
		::Dynamic reloadAnimationDropDown_dyn();

		void updateTextColors();
		::Dynamic updateTextColors_dyn();

		void playAnim(::String name,::hx::Null< bool >  force);
		::Dynamic playAnim_dyn();

		Float minZoom;
		int maxZoom;
		Float holdingArrowsTime;
		Float holdingArrowsElapsed;
		Float holdingFrameTime;
		Float holdingFrameElapsed;
		void update(Float elapsed);

};

} // end namespace states
} // end namespace editors

#endif /* INCLUDED_states_editors_StageEditorAnimationSubstate */ 

// Generated by Haxe 4.3.4
#ifndef INCLUDED_states_editors_content_Prompt
#define INCLUDED_states_editors_content_Prompt

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_states_editors_content_BasePrompt
#include <states/editors/content/BasePrompt.h>
#endif
HX_DECLARE_CLASS1(backend,MusicBeatSubstate)
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxState)
HX_DECLARE_CLASS1(flixel,FlxSubState)
HX_DECLARE_CLASS2(flixel,group,FlxTypedGroup)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS3(states,editors,content,BasePrompt)
HX_DECLARE_CLASS3(states,editors,content,Prompt)

namespace states{
namespace editors{
namespace content{


class HXCPP_CLASS_ATTRIBUTES Prompt_obj : public  ::states::editors::content::BasePrompt_obj
{
	public:
		typedef  ::states::editors::content::BasePrompt_obj super;
		typedef Prompt_obj OBJ_;
		Prompt_obj();

	public:
		enum { _hx_ClassId = 0x29854721 };

		void __construct(::String title, ::Dynamic yesFunction, ::Dynamic noFunction,::String _yesTxt,::String _noTxt);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="states.editors.content.Prompt")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"states.editors.content.Prompt"); }
		static ::hx::ObjectPtr< Prompt_obj > __new(::String title, ::Dynamic yesFunction, ::Dynamic noFunction,::String _yesTxt,::String _noTxt);
		static ::hx::ObjectPtr< Prompt_obj > __alloc(::hx::Ctx *_hx_ctx,::String title, ::Dynamic yesFunction, ::Dynamic noFunction,::String _yesTxt,::String _noTxt);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Prompt_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Prompt",c4,c5,ec,e9); }

		 ::Dynamic yesFunction;
		Dynamic yesFunction_dyn() { return yesFunction;}
		 ::Dynamic noFunction;
		Dynamic noFunction_dyn() { return noFunction;}
		::String _yesTxt;
		::String _noTxt;
		void promptCreate( ::states::editors::content::BasePrompt _);
		::Dynamic promptCreate_dyn();

		void close();

};

} // end namespace states
} // end namespace editors
} // end namespace content

#endif /* INCLUDED_states_editors_content_Prompt */ 

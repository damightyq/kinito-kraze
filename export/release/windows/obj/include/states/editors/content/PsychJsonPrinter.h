// Generated by Haxe 4.3.4
#ifndef INCLUDED_states_editors_content_PsychJsonPrinter
#define INCLUDED_states_editors_content_PsychJsonPrinter

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_haxe_format_JsonPrinter
#include <haxe/format/JsonPrinter.h>
#endif
HX_DECLARE_CLASS2(haxe,format,JsonPrinter)
HX_DECLARE_CLASS3(states,editors,content,PsychJsonPrinter)

namespace states{
namespace editors{
namespace content{


class HXCPP_CLASS_ATTRIBUTES PsychJsonPrinter_obj : public  ::haxe::format::JsonPrinter_obj
{
	public:
		typedef  ::haxe::format::JsonPrinter_obj super;
		typedef PsychJsonPrinter_obj OBJ_;
		PsychJsonPrinter_obj();

	public:
		enum { _hx_ClassId = 0x6f4536d4 };

		void __construct( ::Dynamic replacer,::String space);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="states.editors.content.PsychJsonPrinter")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"states.editors.content.PsychJsonPrinter"); }
		static ::hx::ObjectPtr< PsychJsonPrinter_obj > __new( ::Dynamic replacer,::String space);
		static ::hx::ObjectPtr< PsychJsonPrinter_obj > __alloc(::hx::Ctx *_hx_ctx, ::Dynamic replacer,::String space);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~PsychJsonPrinter_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("PsychJsonPrinter",37,7f,d4,dc); }

		static ::String print( ::Dynamic o,::Array< ::String > ignoreTab);
		static ::Dynamic print_dyn();

		::Array< ::String > _ignoreTab;
		bool _singleLineCheckNext;
		void fieldsString( ::Dynamic v,::Array< ::String > fields);

		void fieldsStringEx( ::Dynamic v,::Array< ::String > fields, ::Dynamic mapCheck);
		::Dynamic fieldsStringEx_dyn();

		void write( ::Dynamic k, ::Dynamic v);

};

} // end namespace states
} // end namespace editors
} // end namespace content

#endif /* INCLUDED_states_editors_content_PsychJsonPrinter */ 

// Generated by Haxe 4.3.4
#ifndef INCLUDED_states_editors_content_EventMetaNote
#define INCLUDED_states_editors_content_EventMetaNote

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_states_editors_content_MetaNote
#include <states/editors/content/MetaNote.h>
#endif
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS2(flixel,text,FlxText)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS1(objects,Note)
HX_DECLARE_CLASS3(states,editors,content,EventMetaNote)
HX_DECLARE_CLASS3(states,editors,content,MetaNote)

namespace states{
namespace editors{
namespace content{


class HXCPP_CLASS_ATTRIBUTES EventMetaNote_obj : public  ::states::editors::content::MetaNote_obj
{
	public:
		typedef  ::states::editors::content::MetaNote_obj super;
		typedef EventMetaNote_obj OBJ_;
		EventMetaNote_obj();

	public:
		enum { _hx_ClassId = 0x4fc1a498 };

		void __construct(Float time, ::Dynamic eventData);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="states.editors.content.EventMetaNote")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"states.editors.content.EventMetaNote"); }
		static ::hx::ObjectPtr< EventMetaNote_obj > __new(Float time, ::Dynamic eventData);
		static ::hx::ObjectPtr< EventMetaNote_obj > __alloc(::hx::Ctx *_hx_ctx,Float time, ::Dynamic eventData);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~EventMetaNote_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("EventMetaNote",71,53,8d,33); }

		 ::flixel::text::FlxText eventText;
		void draw();

		void setSustainLength(Float v,Float stepCrochet,::hx::Null< Float >  zoom);

		::Array< ::Dynamic> events;
		void updateEventText();
		::Dynamic updateEventText_dyn();

		void destroy();

};

} // end namespace states
} // end namespace editors
} // end namespace content

#endif /* INCLUDED_states_editors_content_EventMetaNote */ 

// Generated by Haxe 4.3.4
#ifndef INCLUDED_states_editors_content_BasePrompt
#define INCLUDED_states_editors_content_BasePrompt

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_backend_MusicBeatSubstate
#include <backend/MusicBeatSubstate.h>
#endif
HX_DECLARE_CLASS1(backend,MusicBeatSubstate)
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS1(flixel,FlxState)
HX_DECLARE_CLASS1(flixel,FlxSubState)
HX_DECLARE_CLASS2(flixel,group,FlxTypedGroup)
HX_DECLARE_CLASS2(flixel,text,FlxText)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS3(states,editors,content,BasePrompt)

namespace states{
namespace editors{
namespace content{


class HXCPP_CLASS_ATTRIBUTES BasePrompt_obj : public  ::backend::MusicBeatSubstate_obj
{
	public:
		typedef  ::backend::MusicBeatSubstate_obj super;
		typedef BasePrompt_obj OBJ_;
		BasePrompt_obj();

	public:
		enum { _hx_ClassId = 0x4d35a1ca };

		void __construct( ::Dynamic __o_sizeX, ::Dynamic __o_sizeY,::String title, ::Dynamic onCreate, ::Dynamic onUpdate);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="states.editors.content.BasePrompt")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"states.editors.content.BasePrompt"); }
		static ::hx::ObjectPtr< BasePrompt_obj > __new( ::Dynamic __o_sizeX, ::Dynamic __o_sizeY,::String title, ::Dynamic onCreate, ::Dynamic onUpdate);
		static ::hx::ObjectPtr< BasePrompt_obj > __alloc(::hx::Ctx *_hx_ctx, ::Dynamic __o_sizeX, ::Dynamic __o_sizeY,::String title, ::Dynamic onCreate, ::Dynamic onUpdate);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~BasePrompt_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("BasePrompt",b5,94,39,84); }

		Float _sizeX;
		Float _sizeY;
		::String _title;
		 ::Dynamic onCreate;
		Dynamic onCreate_dyn() { return onCreate;}
		 ::Dynamic onUpdate;
		Dynamic onUpdate_dyn() { return onUpdate;}
		 ::flixel::FlxSprite bg;
		 ::flixel::text::FlxText titleText;
		void create();

		Float _blockInput;
		void update(Float elapsed);

		void destroy();

};

} // end namespace states
} // end namespace editors
} // end namespace content

#endif /* INCLUDED_states_editors_content_BasePrompt */ 

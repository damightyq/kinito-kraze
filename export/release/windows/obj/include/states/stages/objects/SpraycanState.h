// Generated by Haxe 4.3.4
#ifndef INCLUDED_states_stages_objects_SpraycanState
#define INCLUDED_states_stages_objects_SpraycanState

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(states,stages,objects,SpraycanState)
namespace states{
namespace stages{
namespace objects{


class SpraycanState_obj : public ::hx::EnumBase_obj
{
	typedef ::hx::EnumBase_obj super;
		typedef SpraycanState_obj OBJ_;

	public:
		SpraycanState_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_("states.stages.objects.SpraycanState",87,40,fd,01); }
		::String __ToString() const { return HX_("SpraycanState.",40,3a,63,f9) + _hx_tag; }

		static ::states::stages::objects::SpraycanState ARCING;
		static inline ::states::stages::objects::SpraycanState ARCING_dyn() { return ARCING; }
		static ::states::stages::objects::SpraycanState IMPACTED;
		static inline ::states::stages::objects::SpraycanState IMPACTED_dyn() { return IMPACTED; }
		static ::states::stages::objects::SpraycanState SHOT;
		static inline ::states::stages::objects::SpraycanState SHOT_dyn() { return SHOT; }
		static ::states::stages::objects::SpraycanState WAITING;
		static inline ::states::stages::objects::SpraycanState WAITING_dyn() { return WAITING; }
};

} // end namespace states
} // end namespace stages
} // end namespace objects

#endif /* INCLUDED_states_stages_objects_SpraycanState */ 

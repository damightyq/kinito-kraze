// Generated by Haxe 4.3.4
#ifndef INCLUDED_states_stages_PhillyStreets
#define INCLUDED_states_stages_PhillyStreets

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_backend_BaseStage
#include <backend/BaseStage.h>
#endif
HX_DECLARE_CLASS1(backend,BaseStage)
HX_DECLARE_CLASS1(cutscenes,CutsceneHandler)
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS1(flixel,FlxStrip)
HX_DECLARE_CLASS3(flixel,addons,display,FlxTiledSprite)
HX_DECLARE_CLASS3(flixel,graphics,frames,FlxAtlasFrames)
HX_DECLARE_CLASS3(flixel,graphics,frames,FlxFramesCollection)
HX_DECLARE_CLASS3(flixel,graphics,tile,FlxGraphicsShader)
HX_DECLARE_CLASS2(flixel,group,FlxTypedSpriteGroup)
HX_DECLARE_CLASS2(flixel,sound,FlxSound)
HX_DECLARE_CLASS2(flixel,util,FlxTimer)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS1(objects,BGSprite)
HX_DECLARE_CLASS1(objects,Note)
HX_DECLARE_CLASS2(openfl,display,GraphicsShader)
HX_DECLARE_CLASS2(openfl,display,Shader)
HX_DECLARE_CLASS1(shaders,RainShader)
HX_DECLARE_CLASS2(states,stages,NeneState)
HX_DECLARE_CLASS2(states,stages,PhillyStreets)
HX_DECLARE_CLASS3(states,stages,objects,ABotSpeaker)
HX_DECLARE_CLASS3(states,stages,objects,SpraycanAtlasSprite)

namespace states{
namespace stages{


class HXCPP_CLASS_ATTRIBUTES PhillyStreets_obj : public  ::backend::BaseStage_obj
{
	public:
		typedef  ::backend::BaseStage_obj super;
		typedef PhillyStreets_obj OBJ_;
		PhillyStreets_obj();

	public:
		enum { _hx_ClassId = 0x057d6f11 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="states.stages.PhillyStreets")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"states.stages.PhillyStreets"); }
		static ::hx::ObjectPtr< PhillyStreets_obj > __new();
		static ::hx::ObjectPtr< PhillyStreets_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~PhillyStreets_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("PhillyStreets",a8,a0,d9,46); }

		int MIN_BLINK_DELAY;
		int MAX_BLINK_DELAY;
		Float VULTURE_THRESHOLD;
		int blinkCountdown;
		 ::shaders::RainShader rainShader;
		Float rainShaderStartIntensity;
		Float rainShaderEndIntensity;
		 ::flixel::addons::display::FlxTiledSprite scrollingSky;
		 ::objects::BGSprite phillyTraffic;
		 ::objects::BGSprite phillyCars;
		 ::objects::BGSprite phillyCars2;
		 ::flixel::FlxSprite picoFade;
		 ::states::stages::objects::SpraycanAtlasSprite spraycan;
		 ::objects::BGSprite spraycanPile;
		::Array< ::Dynamic> darkenable;
		 ::states::stages::objects::ABotSpeaker abot;
		void create();

		::Array< ::String > noteTypes;
		void createPost();

		bool videoEnded;
		void videoCutscene(::String videoName);
		::Dynamic videoCutscene_dyn();

		 ::cutscenes::CutsceneHandler cutsceneHandler;
		void darnellCutscene();
		::Dynamic darnellCutscene_dyn();

		void updateABotEye(::hx::Null< bool >  finishInstantly);
		::Dynamic updateABotEye_dyn();

		void startSong();

		void onNeneAnimationFinished(::String name);
		::Dynamic onNeneAnimationFinished_dyn();

		 ::flixel::group::FlxTypedSpriteGroup casingGroup;
		 ::flixel::graphics::frames::FlxAtlasFrames casingFrames;
		 ::flixel::sound::FlxSound gunPrepSnd;
		 ::flixel::sound::FlxSound bonkSnd;
		 ::flixel::sound::FlxSound lightCanSnd;
		 ::flixel::sound::FlxSound kickCanSnd;
		 ::flixel::sound::FlxSound kneeCanSnd;
		void precache();
		::Dynamic precache_dyn();

		void setupRainShader();
		::Dynamic setupRainShader_dyn();

		 ::states::stages::NeneState currentNeneState;
		bool animationFinished;
		void update(Float elapsed);

		void transitionState();
		::Dynamic transitionState_dyn();

		void sectionHit();

		bool lightsStop;
		int lastChange;
		int changeInterval;
		bool carWaiting;
		bool carInterruptable;
		bool car2Interruptable;
		void beatHit();

		void changeLights(int beat);
		::Dynamic changeLights_dyn();

		void finishCarLights( ::objects::BGSprite sprite);
		::Dynamic finishCarLights_dyn();

		void driveCarLights( ::objects::BGSprite sprite);
		::Dynamic driveCarLights_dyn();

		void driveCar( ::objects::BGSprite sprite);
		::Dynamic driveCar_dyn();

		void driveCarBack( ::flixel::FlxSprite sprite);
		::Dynamic driveCarBack_dyn();

		void goodNoteHit( ::objects::Note note);

		void createCasing();
		::Dynamic createCasing_dyn();

		void opponentNoteHit( ::objects::Note note);

		 ::flixel::util::FlxTimer picoFlicker;
		void noteMiss( ::objects::Note note);

		void showPicoFade();
		::Dynamic showPicoFade_dyn();

		void darkenStageProps();
		::Dynamic darkenStageProps_dyn();

};

} // end namespace states
} // end namespace stages

#endif /* INCLUDED_states_stages_PhillyStreets */ 

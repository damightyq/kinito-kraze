// Generated by Haxe 4.3.4
#ifndef INCLUDED_states_MenuButton
#define INCLUDED_states_MenuButton

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_group_FlxTypedSpriteGroup
#include <flixel/group/FlxTypedSpriteGroup.h>
#endif
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS2(flixel,graphics,FlxGraphic)
HX_DECLARE_CLASS2(flixel,group,FlxTypedSpriteGroup)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS1(objects,Alphabet)
HX_DECLARE_CLASS1(states,MenuButton)

namespace states{


class HXCPP_CLASS_ATTRIBUTES MenuButton_obj : public  ::flixel::group::FlxTypedSpriteGroup_obj
{
	public:
		typedef  ::flixel::group::FlxTypedSpriteGroup_obj super;
		typedef MenuButton_obj OBJ_;
		MenuButton_obj();

	public:
		enum { _hx_ClassId = 0x420e6537 };

		void __construct(Float x,Float y,int width,int height,::String text, ::flixel::graphics::FlxGraphic img, ::Dynamic onClick,::hx::Null< int >  __o_animWidth,::hx::Null< int >  __o_animHeight);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="states.MenuButton")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"states.MenuButton"); }
		static ::hx::ObjectPtr< MenuButton_obj > __new(Float x,Float y,int width,int height,::String text, ::flixel::graphics::FlxGraphic img, ::Dynamic onClick,::hx::Null< int >  __o_animWidth,::hx::Null< int >  __o_animHeight);
		static ::hx::ObjectPtr< MenuButton_obj > __alloc(::hx::Ctx *_hx_ctx,Float x,Float y,int width,int height,::String text, ::flixel::graphics::FlxGraphic img, ::Dynamic onClick,::hx::Null< int >  __o_animWidth,::hx::Null< int >  __o_animHeight);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~MenuButton_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("MenuButton",11,a1,15,b3); }

		 ::flixel::FlxSprite bg;
		 ::objects::Alphabet textOn;
		 ::objects::Alphabet textOff;
		 ::flixel::FlxSprite icon;
		 ::Dynamic onClick;
		Dynamic onClick_dyn() { return onClick;}
		bool enabled;
		 ::Dynamic focusChangeCallback;
		Dynamic focusChangeCallback_dyn() { return focusChangeCallback;}
		bool onFocus;
		bool ignoreCheck;
		bool _needACheck;
		void update(Float elapsed);

		bool set_onFocus(bool newValue);
		::Dynamic set_onFocus_dyn();

		bool set_enabled(bool newValue);
		::Dynamic set_enabled_dyn();

		void setButtonVisibility(bool focusVal);
		::Dynamic setButtonVisibility_dyn();

		void centerOnBg( ::flixel::FlxSprite spr);
		::Dynamic centerOnBg_dyn();

};

} // end namespace states

#endif /* INCLUDED_states_MenuButton */ 

// Generated by Haxe 4.3.4
#ifndef INCLUDED_crowplexus_hscript_EnumValue
#define INCLUDED_crowplexus_hscript_EnumValue

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_9caaa3cdca7dc0aa_223_new)
HX_DECLARE_CLASS2(crowplexus,hscript,EnumValue)

namespace crowplexus{
namespace hscript{


class HXCPP_CLASS_ATTRIBUTES EnumValue_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef EnumValue_obj OBJ_;
		EnumValue_obj();

	public:
		enum { _hx_ClassId = 0x4d825621 };

		void __construct(::String enumName,::String name,int index,::cpp::VirtualArray args);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="crowplexus.hscript.EnumValue")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"crowplexus.hscript.EnumValue"); }

		inline static ::hx::ObjectPtr< EnumValue_obj > __new(::String enumName,::String name,int index,::cpp::VirtualArray args) {
			::hx::ObjectPtr< EnumValue_obj > __this = new EnumValue_obj();
			__this->__construct(enumName,name,index,args);
			return __this;
		}

		inline static ::hx::ObjectPtr< EnumValue_obj > __alloc(::hx::Ctx *_hx_ctx,::String enumName,::String name,int index,::cpp::VirtualArray args) {
			EnumValue_obj *__this = (EnumValue_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(EnumValue_obj), true, "crowplexus.hscript.EnumValue"));
			*(void **)__this = EnumValue_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_9caaa3cdca7dc0aa_223_new)
HXLINE( 224)		( ( ::crowplexus::hscript::EnumValue)(__this) )->enumName = enumName;
HXLINE( 225)		( ( ::crowplexus::hscript::EnumValue)(__this) )->name = name;
HXLINE( 226)		( ( ::crowplexus::hscript::EnumValue)(__this) )->index = index;
HXLINE( 227)		( ( ::crowplexus::hscript::EnumValue)(__this) )->args = args;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~EnumValue_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("EnumValue",90,e0,d9,c9); }

		::String enumName;
		::String name;
		int index;
		::cpp::VirtualArray args;
		virtual ::String toString();
		::Dynamic toString_dyn();

		::String getEnumName();
		::Dynamic getEnumName_dyn();

		::cpp::VirtualArray getConstructorArgs();
		::Dynamic getConstructorArgs_dyn();

		bool compare( ::crowplexus::hscript::EnumValue other);
		::Dynamic compare_dyn();

};

} // end namespace crowplexus
} // end namespace hscript

#endif /* INCLUDED_crowplexus_hscript_EnumValue */ 

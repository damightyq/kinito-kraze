// Generated by Haxe 4.3.4
#ifndef INCLUDED_crowplexus_hscript_ObjectDecl
#define INCLUDED_crowplexus_hscript_ObjectDecl

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(crowplexus,hscript,Expr)
HX_DECLARE_CLASS2(crowplexus,hscript,ObjectDecl)

namespace crowplexus{
namespace hscript{


class HXCPP_CLASS_ATTRIBUTES ObjectDecl_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef ObjectDecl_obj OBJ_;
		ObjectDecl_obj();

	public:
		enum { _hx_ClassId = 0x6b0e3438 };

		void __construct(::String name, ::crowplexus::hscript::Expr e);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="crowplexus.hscript.ObjectDecl")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"crowplexus.hscript.ObjectDecl"); }
		static ::hx::ObjectPtr< ObjectDecl_obj > __new(::String name, ::crowplexus::hscript::Expr e);
		static ::hx::ObjectPtr< ObjectDecl_obj > __alloc(::hx::Ctx *_hx_ctx,::String name, ::crowplexus::hscript::Expr e);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~ObjectDecl_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ObjectDecl",e9,ca,4f,bb); }

		::String name;
		 ::crowplexus::hscript::Expr e;
		virtual ::String toString();
		::Dynamic toString_dyn();

};

} // end namespace crowplexus
} // end namespace hscript

#endif /* INCLUDED_crowplexus_hscript_ObjectDecl */ 

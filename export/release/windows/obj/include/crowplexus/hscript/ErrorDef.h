// Generated by Haxe 4.3.4
#ifndef INCLUDED_crowplexus_hscript_ErrorDef
#define INCLUDED_crowplexus_hscript_ErrorDef

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(crowplexus,hscript,ErrorDef)
namespace crowplexus{
namespace hscript{


class ErrorDef_obj : public ::hx::EnumBase_obj
{
	typedef ::hx::EnumBase_obj super;
		typedef ErrorDef_obj OBJ_;

	public:
		ErrorDef_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_("crowplexus.hscript.ErrorDef",a2,87,c5,d0); }
		::String __ToString() const { return HX_("ErrorDef.",91,ae,a1,0a) + _hx_tag; }

		static ::crowplexus::hscript::ErrorDef ECustom(::String msg);
		static ::Dynamic ECustom_dyn();
		static ::crowplexus::hscript::ErrorDef EInvalidAccess(::String f);
		static ::Dynamic EInvalidAccess_dyn();
		static ::crowplexus::hscript::ErrorDef EInvalidChar(int c);
		static ::Dynamic EInvalidChar_dyn();
		static ::crowplexus::hscript::ErrorDef EInvalidIterator(::String v);
		static ::Dynamic EInvalidIterator_dyn();
		static ::crowplexus::hscript::ErrorDef EInvalidOp(::String op);
		static ::Dynamic EInvalidOp_dyn();
		static ::crowplexus::hscript::ErrorDef EInvalidPreprocessor(::String msg);
		static ::Dynamic EInvalidPreprocessor_dyn();
		static ::crowplexus::hscript::ErrorDef EUnexpected(::String s);
		static ::Dynamic EUnexpected_dyn();
		static ::crowplexus::hscript::ErrorDef EUnknownVariable(::String v);
		static ::Dynamic EUnknownVariable_dyn();
		static ::crowplexus::hscript::ErrorDef EUnterminatedComment;
		static inline ::crowplexus::hscript::ErrorDef EUnterminatedComment_dyn() { return EUnterminatedComment; }
		static ::crowplexus::hscript::ErrorDef EUnterminatedString;
		static inline ::crowplexus::hscript::ErrorDef EUnterminatedString_dyn() { return EUnterminatedString; }
};

} // end namespace crowplexus
} // end namespace hscript

#endif /* INCLUDED_crowplexus_hscript_ErrorDef */ 

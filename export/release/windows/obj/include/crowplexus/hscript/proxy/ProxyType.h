// Generated by Haxe 4.3.4
#ifndef INCLUDED_crowplexus_hscript_proxy_ProxyType
#define INCLUDED_crowplexus_hscript_proxy_ProxyType

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(ValueType)
HX_DECLARE_CLASS3(crowplexus,hscript,proxy,ProxyType)

namespace crowplexus{
namespace hscript{
namespace proxy{


class HXCPP_CLASS_ATTRIBUTES ProxyType_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef ProxyType_obj OBJ_;
		ProxyType_obj();

	public:
		enum { _hx_ClassId = 0x1d847065 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="crowplexus.hscript.proxy.ProxyType")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"crowplexus.hscript.proxy.ProxyType"); }

		inline static ::hx::ObjectPtr< ProxyType_obj > __new() {
			::hx::ObjectPtr< ProxyType_obj > __this = new ProxyType_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< ProxyType_obj > __alloc(::hx::Ctx *_hx_ctx) {
			ProxyType_obj *__this = (ProxyType_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ProxyType_obj), false, "crowplexus.hscript.proxy.ProxyType"));
			*(void **)__this = ProxyType_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~ProxyType_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ProxyType",28,bc,e7,49); }

		static ::hx::Class getClass( ::Dynamic o);
		static ::Dynamic getClass_dyn();

		static ::hx::Class getEnum( ::Dynamic o);
		static ::Dynamic getEnum_dyn();

		static ::hx::Class getSuperClass(::hx::Class c);
		static ::Dynamic getSuperClass_dyn();

		static ::String getClassName(::hx::Class c);
		static ::Dynamic getClassName_dyn();

		static ::String getEnumName(::hx::Class e);
		static ::Dynamic getEnumName_dyn();

		static ::hx::Class resolveClass(::String name);
		static ::Dynamic resolveClass_dyn();

		static ::hx::Class resolveEnum(::String name);
		static ::Dynamic resolveEnum_dyn();

		static  ::Dynamic createInstance(::hx::Class cl,::cpp::VirtualArray args);
		static ::Dynamic createInstance_dyn();

		static  ::Dynamic createEmptyInstance(::hx::Class cl);
		static ::Dynamic createEmptyInstance_dyn();

		static  ::Dynamic createEnum(::hx::Class e,::String constr,::cpp::VirtualArray params);
		static ::Dynamic createEnum_dyn();

		static  ::Dynamic createEnumIndex(::hx::Class e,int index,::cpp::VirtualArray params);
		static ::Dynamic createEnumIndex_dyn();

		static ::Array< ::String > getInstanceFields(::hx::Class c);
		static ::Dynamic getInstanceFields_dyn();

		static ::Array< ::String > getClassFields(::hx::Class c);
		static ::Dynamic getClassFields_dyn();

		static ::Array< ::String > getEnumConstructs(::hx::Class e);
		static ::Dynamic getEnumConstructs_dyn();

		static  ::ValueType _hx_typeof( ::Dynamic v);
		static ::Dynamic _hx_typeof_dyn();

		static bool enumEq( ::Dynamic a, ::Dynamic b);
		static ::Dynamic enumEq_dyn();

		static ::String enumConstructor( ::Dynamic e);
		static ::Dynamic enumConstructor_dyn();

		static ::cpp::VirtualArray enumParameters( ::Dynamic e);
		static ::Dynamic enumParameters_dyn();

		static int enumIndex( ::Dynamic e);
		static ::Dynamic enumIndex_dyn();

		static ::cpp::VirtualArray allEnums(::hx::Class e);
		static ::Dynamic allEnums_dyn();

};

} // end namespace crowplexus
} // end namespace hscript
} // end namespace proxy

#endif /* INCLUDED_crowplexus_hscript_proxy_ProxyType */ 

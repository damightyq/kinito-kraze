// Generated by Haxe 4.3.4
#ifndef INCLUDED_openfl_filters__BitmapFilterType_BitmapFilterType_Impl_
#define INCLUDED_openfl_filters__BitmapFilterType_BitmapFilterType_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(openfl,filters,_BitmapFilterType,BitmapFilterType_Impl_)

namespace openfl{
namespace filters{
namespace _BitmapFilterType{


class HXCPP_CLASS_ATTRIBUTES BitmapFilterType_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef BitmapFilterType_Impl__obj OBJ_;
		BitmapFilterType_Impl__obj();

	public:
		enum { _hx_ClassId = 0x4f8a47f6 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="openfl.filters._BitmapFilterType.BitmapFilterType_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"openfl.filters._BitmapFilterType.BitmapFilterType_Impl_"); }

		inline static ::hx::ObjectPtr< BitmapFilterType_Impl__obj > __new() {
			::hx::ObjectPtr< BitmapFilterType_Impl__obj > __this = new BitmapFilterType_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< BitmapFilterType_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			BitmapFilterType_Impl__obj *__this = (BitmapFilterType_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(BitmapFilterType_Impl__obj), false, "openfl.filters._BitmapFilterType.BitmapFilterType_Impl_"));
			*(void **)__this = BitmapFilterType_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~BitmapFilterType_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("BitmapFilterType_Impl_",e1,9e,98,f3); }

		static void __boot();
		static  ::Dynamic FULL;
		static  ::Dynamic INNER;
		static  ::Dynamic OUTER;
		static  ::Dynamic fromString(::String value);
		static ::Dynamic fromString_dyn();

		static ::String toString( ::Dynamic this1);
		static ::Dynamic toString_dyn();

};

} // end namespace openfl
} // end namespace filters
} // end namespace _BitmapFilterType

#endif /* INCLUDED_openfl_filters__BitmapFilterType_BitmapFilterType_Impl_ */ 

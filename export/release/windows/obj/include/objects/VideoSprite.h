// Generated by Haxe 4.3.4
#ifndef INCLUDED_objects_VideoSprite
#define INCLUDED_objects_VideoSprite

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_group_FlxTypedSpriteGroup
#include <flixel/group/FlxTypedSpriteGroup.h>
#endif
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS2(flixel,group,FlxTypedSpriteGroup)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS1(objects,VideoSprite)

namespace objects{


class HXCPP_CLASS_ATTRIBUTES VideoSprite_obj : public  ::flixel::group::FlxTypedSpriteGroup_obj
{
	public:
		typedef  ::flixel::group::FlxTypedSpriteGroup_obj super;
		typedef VideoSprite_obj OBJ_;
		VideoSprite_obj();

	public:
		enum { _hx_ClassId = 0x27b6056c };

		void __construct( ::Dynamic X, ::Dynamic Y, ::Dynamic MaxSize);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="objects.VideoSprite")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"objects.VideoSprite"); }
		static ::hx::ObjectPtr< VideoSprite_obj > __new( ::Dynamic X, ::Dynamic Y, ::Dynamic MaxSize);
		static ::hx::ObjectPtr< VideoSprite_obj > __alloc(::hx::Ctx *_hx_ctx, ::Dynamic X, ::Dynamic Y, ::Dynamic MaxSize);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~VideoSprite_obj();

		HX_DO_RTTI_ALL;
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("VideoSprite",c0,0a,70,20); }

};

} // end namespace objects

#endif /* INCLUDED_objects_VideoSprite */ 

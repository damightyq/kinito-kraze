// Generated by Haxe 4.3.4
#ifndef INCLUDED_objects_CDSprite
#define INCLUDED_objects_CDSprite

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_group_FlxTypedSpriteGroup
#include <flixel/group/FlxTypedSpriteGroup.h>
#endif
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS2(flixel,group,FlxTypedSpriteGroup)
HX_DECLARE_CLASS2(flixel,tweens,FlxTween)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS1(objects,CDSprite)

namespace objects{


class HXCPP_CLASS_ATTRIBUTES CDSprite_obj : public  ::flixel::group::FlxTypedSpriteGroup_obj
{
	public:
		typedef  ::flixel::group::FlxTypedSpriteGroup_obj super;
		typedef CDSprite_obj OBJ_;
		CDSprite_obj();

	public:
		enum { _hx_ClassId = 0x7f960d22 };

		void __construct(Float x,Float y,::String coverart);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="objects.CDSprite")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"objects.CDSprite"); }
		static ::hx::ObjectPtr< CDSprite_obj > __new(Float x,Float y,::String coverart);
		static ::hx::ObjectPtr< CDSprite_obj > __alloc(::hx::Ctx *_hx_ctx,Float x,Float y,::String coverart);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~CDSprite_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("CDSprite",86,b9,11,fc); }

		 ::flixel::FlxSprite coverArt;
		 ::flixel::FlxSprite cdShine1;
		 ::flixel::FlxSprite cdShine2;
		 ::flixel::tweens::FlxTween spinTween;
		::String formatedCoverArt;
		::String name;
		::String songName;
		::String songTrueName;
		int originalSize;
		void setX(Float newX);
		::Dynamic setX_dyn();

		void setY(Float newY);
		::Dynamic setY_dyn();

		void tweenScale( ::Dynamic shrink);
		::Dynamic tweenScale_dyn();

		void spinCD(Float duration);
		::Dynamic spinCD_dyn();

		void stopSpinCD();
		::Dynamic stopSpinCD_dyn();

		::String getName();
		::Dynamic getName_dyn();

		::String getTrueName();
		::Dynamic getTrueName_dyn();

		void updateCover();
		::Dynamic updateCover_dyn();

};

} // end namespace objects

#endif /* INCLUDED_objects_CDSprite */ 

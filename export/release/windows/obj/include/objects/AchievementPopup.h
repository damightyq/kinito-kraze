// Generated by Haxe 4.3.4
#ifndef INCLUDED_objects_AchievementPopup
#define INCLUDED_objects_AchievementPopup

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS2(flixel,text,FlxText)
HX_DECLARE_CLASS2(flixel,tweens,FlxTween)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS1(objects,AchievementPopup)
HX_DECLARE_CLASS2(openfl,display,BitmapData)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,Event)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)

namespace objects{


class HXCPP_CLASS_ATTRIBUTES AchievementPopup_obj : public  ::openfl::display::Sprite_obj
{
	public:
		typedef  ::openfl::display::Sprite_obj super;
		typedef AchievementPopup_obj OBJ_;
		AchievementPopup_obj();

	public:
		enum { _hx_ClassId = 0x6e030d69 };

		void __construct(::String achieve, ::Dynamic onFinish);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="objects.AchievementPopup")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"objects.AchievementPopup"); }
		static ::hx::ObjectPtr< AchievementPopup_obj > __new(::String achieve, ::Dynamic onFinish);
		static ::hx::ObjectPtr< AchievementPopup_obj > __alloc(::hx::Ctx *_hx_ctx,::String achieve, ::Dynamic onFinish);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~AchievementPopup_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("AchievementPopup",5d,a3,65,12); }

		 ::Dynamic onFinish;
		Dynamic onFinish_dyn() { return onFinish;}
		 ::flixel::tweens::FlxTween alphaTween;
		Float lastScale;
		::Array< ::Dynamic> bitmaps;
		void drawTextAt( ::flixel::text::FlxText text,::String str,Float textX,Float textY);
		::Dynamic drawTextAt_dyn();

		Float lerpTime;
		Float countedTime;
		Float timePassed;
		Float intendedY;
		void update( ::openfl::events::Event e);
		::Dynamic update_dyn();

		void onResize( ::openfl::events::Event e);
		::Dynamic onResize_dyn();

		void destroy();
		::Dynamic destroy_dyn();

		void deleteClonedBitmaps();
		::Dynamic deleteClonedBitmaps_dyn();

};

} // end namespace objects

#endif /* INCLUDED_objects_AchievementPopup */ 

// Generated by Haxe 4.3.4
#ifndef INCLUDED_backend__Discord_DiscordPresence
#define INCLUDED_backend__Discord_DiscordPresence

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_966ecec371c23c3e
#define INCLUDED_966ecec371c23c3e
#include "discord_rpc.hpp"
#endif
HX_DECLARE_CLASS2(backend,_Discord,DiscordPresence)

namespace backend{
namespace _Discord{


class HXCPP_CLASS_ATTRIBUTES DiscordPresence_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef DiscordPresence_obj OBJ_;
		DiscordPresence_obj();

	public:
		enum { _hx_ClassId = 0x17571e4a };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="backend._Discord.DiscordPresence")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"backend._Discord.DiscordPresence"); }
		static ::hx::ObjectPtr< DiscordPresence_obj > __new();
		static ::hx::ObjectPtr< DiscordPresence_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~DiscordPresence_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("DiscordPresence",e7,5b,dd,56); }

		 DiscordRichPresence _hx___presence;
		virtual ::String toString();
		::Dynamic toString_dyn();

		::String get_state();
		::Dynamic get_state_dyn();

		::String set_state(::String value);
		::Dynamic set_state_dyn();

		::String get_details();
		::Dynamic get_details_dyn();

		::String set_details(::String value);
		::Dynamic set_details_dyn();

		::String get_smallImageKey();
		::Dynamic get_smallImageKey_dyn();

		::String set_smallImageKey(::String value);
		::Dynamic set_smallImageKey_dyn();

		::String get_largeImageKey();
		::Dynamic get_largeImageKey_dyn();

		::String set_largeImageKey(::String value);
		::Dynamic set_largeImageKey_dyn();

		::String get_largeImageText();
		::Dynamic get_largeImageText_dyn();

		::String set_largeImageText(::String value);
		::Dynamic set_largeImageText_dyn();

		int get_startTimestamp();
		::Dynamic get_startTimestamp_dyn();

		int set_startTimestamp(int value);
		::Dynamic set_startTimestamp_dyn();

		int get_endTimestamp();
		::Dynamic get_endTimestamp_dyn();

		int set_endTimestamp(int value);
		::Dynamic set_endTimestamp_dyn();

};

} // end namespace backend
} // end namespace _Discord

#endif /* INCLUDED_backend__Discord_DiscordPresence */ 

// Generated by Haxe 4.3.4
#ifndef INCLUDED_backend_animation_PsychAnimationController
#define INCLUDED_backend_animation_PsychAnimationController

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_animation_FlxAnimationController
#include <flixel/animation/FlxAnimationController.h>
#endif
HX_DECLARE_CLASS2(backend,animation,PsychAnimationController)
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS2(flixel,animation,FlxAnimationController)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)

namespace backend{
namespace animation{


class HXCPP_CLASS_ATTRIBUTES PsychAnimationController_obj : public  ::flixel::animation::FlxAnimationController_obj
{
	public:
		typedef  ::flixel::animation::FlxAnimationController_obj super;
		typedef PsychAnimationController_obj OBJ_;
		PsychAnimationController_obj();

	public:
		enum { _hx_ClassId = 0x41c4ee95 };

		void __construct( ::flixel::FlxSprite sprite);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="backend.animation.PsychAnimationController")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"backend.animation.PsychAnimationController"); }
		static ::hx::ObjectPtr< PsychAnimationController_obj > __new( ::flixel::FlxSprite sprite);
		static ::hx::ObjectPtr< PsychAnimationController_obj > __alloc(::hx::Ctx *_hx_ctx, ::flixel::FlxSprite sprite);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~PsychAnimationController_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("PsychAnimationController",65,54,9f,58); }

		bool followGlobalSpeed;
		void update(Float elapsed);

};

} // end namespace backend
} // end namespace animation

#endif /* INCLUDED_backend_animation_PsychAnimationController */ 

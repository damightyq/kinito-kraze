// Generated by Haxe 4.3.4
#ifndef INCLUDED_backend_ui_PsychUIDropDownMenu
#define INCLUDED_backend_ui_PsychUIDropDownMenu

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_backend_ui_PsychUIInputText
#include <backend/ui/PsychUIInputText.h>
#endif
HX_DECLARE_CLASS2(backend,ui,PsychUIDropDownItem)
HX_DECLARE_CLASS2(backend,ui,PsychUIDropDownMenu)
HX_DECLARE_CLASS2(backend,ui,PsychUIInputText)
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS2(flixel,group,FlxTypedSpriteGroup)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)

namespace backend{
namespace ui{


class HXCPP_CLASS_ATTRIBUTES PsychUIDropDownMenu_obj : public  ::backend::ui::PsychUIInputText_obj
{
	public:
		typedef  ::backend::ui::PsychUIInputText_obj super;
		typedef PsychUIDropDownMenu_obj OBJ_;
		PsychUIDropDownMenu_obj();

	public:
		enum { _hx_ClassId = 0x16c0afdf };

		void __construct(Float x,Float y,::Array< ::String > list, ::Dynamic callback, ::Dynamic __o_width);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="backend.ui.PsychUIDropDownMenu")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"backend.ui.PsychUIDropDownMenu"); }
		static ::hx::ObjectPtr< PsychUIDropDownMenu_obj > __new(Float x,Float y,::Array< ::String > list, ::Dynamic callback, ::Dynamic __o_width);
		static ::hx::ObjectPtr< PsychUIDropDownMenu_obj > __alloc(::hx::Ctx *_hx_ctx,Float x,Float y,::Array< ::String > list, ::Dynamic callback, ::Dynamic __o_width);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~PsychUIDropDownMenu_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("PsychUIDropDownMenu",3f,f5,41,ac); }

		static void __boot();
		static ::String CLICK_EVENT;
		::Array< ::String > list;
		 ::flixel::FlxSprite button;
		 ::Dynamic onSelect;
		Dynamic onSelect_dyn() { return onSelect;}
		int selectedIndex;
		::String selectedLabel;
		::Array< ::String > _curFilter;
		Float _itemWidth;
		int set_selectedIndex(int v);
		::Dynamic set_selectedIndex_dyn();

		::String set_selectedLabel(::String v);
		::Dynamic set_selectedLabel_dyn();

		::Array< ::Dynamic> _items;
		int curScroll;
		void update(Float elapsed);

		void showDropDownClickFix();
		::Dynamic showDropDownClickFix_dyn();

		void showDropDown(::hx::Null< bool >  vis,::hx::Null< int >  scroll,::Array< ::String > onlyAllowed);
		::Dynamic showDropDown_dyn();

		bool broadcastDropDownEvent;
		void clickedOn(int num,::String label);
		::Dynamic clickedOn_dyn();

		void addOption(::String option);
		::Dynamic addOption_dyn();

		::Array< ::String > set_list(::Array< ::String > v);
		::Dynamic set_list_dyn();

};

} // end namespace backend
} // end namespace ui

#endif /* INCLUDED_backend_ui_PsychUIDropDownMenu */ 

// Generated by Haxe 4.3.4
#ifndef INCLUDED_flxanimate_motion_DynamicMatrix
#define INCLUDED_flxanimate_motion_DynamicMatrix

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(flxanimate,motion,DynamicMatrix)
HX_DECLARE_CLASS2(openfl,_Vector,IVector)
HX_DECLARE_CLASS2(openfl,_Vector,ObjectVector)

namespace flxanimate{
namespace motion{


class HXCPP_CLASS_ATTRIBUTES DynamicMatrix_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef DynamicMatrix_obj OBJ_;
		DynamicMatrix_obj();

	public:
		enum { _hx_ClassId = 0x79460ebb };

		void __construct(int width,int height);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="flxanimate.motion.DynamicMatrix")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"flxanimate.motion.DynamicMatrix"); }
		static ::hx::ObjectPtr< DynamicMatrix_obj > __new(int width,int height);
		static ::hx::ObjectPtr< DynamicMatrix_obj > __alloc(::hx::Ctx *_hx_ctx,int width,int height);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~DynamicMatrix_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("DynamicMatrix",00,c3,09,22); }

		static void __boot();
		static int MATRIX_ORDER_PREPEND;
		static int MATRIX_ORDER_APPEND;
		int m_width;
		int m_height;
		 ::openfl::_Vector::ObjectVector m_matrix;
		void create(int width,int height);
		::Dynamic create_dyn();

		int getWidth();
		::Dynamic getWidth_dyn();

		int getHeight();
		::Dynamic getHeight_dyn();

		Float getValue(int row,int col);
		::Dynamic getValue_dyn();

		void setValue(int row,int col,Float value);
		::Dynamic setValue_dyn();

		void loadIdentity();
		::Dynamic loadIdentity_dyn();

		void loadZeros();
		::Dynamic loadZeros_dyn();

		bool multiply( ::flxanimate::motion::DynamicMatrix inMatrix,::hx::Null< int >  order);
		::Dynamic multiply_dyn();

		bool multiplyNumber(Float value);
		::Dynamic multiplyNumber_dyn();

		bool add( ::flxanimate::motion::DynamicMatrix inMatrix);
		::Dynamic add_dyn();

};

} // end namespace flxanimate
} // end namespace motion

#endif /* INCLUDED_flxanimate_motion_DynamicMatrix */ 

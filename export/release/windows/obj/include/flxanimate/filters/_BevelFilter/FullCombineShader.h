// Generated by Haxe 4.3.4
#ifndef INCLUDED_flxanimate_filters__BevelFilter_FullCombineShader
#define INCLUDED_flxanimate_filters__BevelFilter_FullCombineShader

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flxanimate_filters__BevelFilter_BevelShader
#include <flxanimate/filters/_BevelFilter/BevelShader.h>
#endif
HX_DECLARE_CLASS3(flxanimate,filters,_BevelFilter,BevelShader)
HX_DECLARE_CLASS3(flxanimate,filters,_BevelFilter,FullCombineShader)
HX_DECLARE_CLASS2(openfl,display,Shader)
HX_DECLARE_CLASS2(openfl,filters,BitmapFilterShader)

namespace flxanimate{
namespace filters{
namespace _BevelFilter{


class HXCPP_CLASS_ATTRIBUTES FullCombineShader_obj : public  ::flxanimate::filters::_BevelFilter::BevelShader_obj
{
	public:
		typedef  ::flxanimate::filters::_BevelFilter::BevelShader_obj super;
		typedef FullCombineShader_obj OBJ_;
		FullCombineShader_obj();

	public:
		enum { _hx_ClassId = 0x22d20f42 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="flxanimate.filters._BevelFilter.FullCombineShader")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"flxanimate.filters._BevelFilter.FullCombineShader"); }
		static ::hx::ObjectPtr< FullCombineShader_obj > __new();
		static ::hx::ObjectPtr< FullCombineShader_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~FullCombineShader_obj();

		HX_DO_RTTI_ALL;
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("FullCombineShader",d5,df,e9,e3); }

};

} // end namespace flxanimate
} // end namespace filters
} // end namespace _BevelFilter

#endif /* INCLUDED_flxanimate_filters__BevelFilter_FullCombineShader */ 

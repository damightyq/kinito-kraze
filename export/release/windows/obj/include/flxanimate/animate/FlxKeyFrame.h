// Generated by Haxe 4.3.4
#ifndef INCLUDED_flxanimate_animate_FlxKeyFrame
#define INCLUDED_flxanimate_animate_FlxKeyFrame

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS3(flixel,graphics,frames,FlxFrame)
HX_DECLARE_CLASS2(flixel,math,FlxMatrix)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS2(flxanimate,animate,FlxElement)
HX_DECLARE_CLASS2(flxanimate,animate,FlxKeyFrame)
HX_DECLARE_CLASS2(flxanimate,animate,FlxLayer)
HX_DECLARE_CLASS2(flxanimate,effects,FlxColorEffect)
HX_DECLARE_CLASS2(flxanimate,interfaces,IFilterable)
HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,StringMap)
HX_DECLARE_CLASS2(openfl,filters,BitmapFilter)
HX_DECLARE_CLASS2(openfl,geom,Matrix)

namespace flxanimate{
namespace animate{


class HXCPP_CLASS_ATTRIBUTES FlxKeyFrame_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef FlxKeyFrame_obj OBJ_;
		FlxKeyFrame_obj();

	public:
		enum { _hx_ClassId = 0x6a124bae };

		void __construct(int index, ::Dynamic __o_duration,::Array< ::Dynamic> elements, ::flxanimate::effects::FlxColorEffect colorEffect,::String name);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="flxanimate.animate.FlxKeyFrame")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"flxanimate.animate.FlxKeyFrame"); }
		static ::hx::ObjectPtr< FlxKeyFrame_obj > __new(int index, ::Dynamic __o_duration,::Array< ::Dynamic> elements, ::flxanimate::effects::FlxColorEffect colorEffect,::String name);
		static ::hx::ObjectPtr< FlxKeyFrame_obj > __alloc(::hx::Ctx *_hx_ctx,int index, ::Dynamic __o_duration,::Array< ::Dynamic> elements, ::flxanimate::effects::FlxColorEffect colorEffect,::String name);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~FlxKeyFrame_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("FlxKeyFrame",80,f8,03,62); }

		static  ::flxanimate::animate::FlxKeyFrame fromJSON( ::Dynamic frame);
		static ::Dynamic fromJSON_dyn();

		::String name;
		 ::flixel::graphics::frames::FlxFrame _filterFrame;
		bool classicTween;
		 ::flxanimate::animate::FlxKeyFrame _tFrame;
		 ::flixel::math::FlxMatrix _bitmapMatrix;
		::cpp::VirtualArray callbacks;
		 ::flxanimate::animate::FlxLayer _parent;
		int index;
		int duration;
		 ::flxanimate::effects::FlxColorEffect colorEffect;
		::Array< ::Dynamic> _elements;
		bool _renderDirty;
		bool _cacheAsBitmap;
		int _ff;
		 ::flixel::math::FlxMatrix clTMat;
		::Array< ::Dynamic> filters;
		int _curFrame;
		int set_duration(int duration);
		::Dynamic set_duration_dyn();

		::Array< ::Dynamic> set_filters(::Array< ::Dynamic> value);
		::Dynamic set_filters_dyn();

		::Array< int > getFrameIndices();
		::Dynamic getFrameIndices_dyn();

		void update(int frame);
		::Dynamic update_dyn();

		void updateRender(Float elapsed,int curFrame, ::haxe::ds::StringMap dictionary, ::Dynamic swfRender);
		::Dynamic updateRender_dyn();

		 ::Dynamic add( ::Dynamic element);
		::Dynamic add_dyn();

		 ::flxanimate::animate::FlxElement get(int element);
		::Dynamic get_dyn();

		::Array< ::Dynamic> getList();
		::Dynamic getList_dyn();

		 ::Dynamic remove( ::Dynamic element);
		::Dynamic remove_dyn();

		void fireCallbacks();
		::Dynamic fireCallbacks_dyn();

		void removeCallbacks();
		::Dynamic removeCallbacks_dyn();

		 ::flxanimate::animate::FlxKeyFrame clone();
		::Dynamic clone_dyn();

		void destroy();
		::Dynamic destroy_dyn();

		virtual ::String toString();
		::Dynamic toString_dyn();

		 ::flxanimate::effects::FlxColorEffect set_colorEffect( ::Dynamic value);
		::Dynamic set_colorEffect_dyn();

		int set_index(int i);
		::Dynamic set_index_dyn();

		::String set_name(::String name);
		::Dynamic set_name_dyn();

		bool set_classicTween(bool value);
		::Dynamic set_classicTween_dyn();

};

} // end namespace flxanimate
} // end namespace animate

#endif /* INCLUDED_flxanimate_animate_FlxKeyFrame */ 

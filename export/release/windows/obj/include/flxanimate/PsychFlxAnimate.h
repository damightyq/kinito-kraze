// Generated by Haxe 4.3.4
#ifndef INCLUDED_flxanimate_PsychFlxAnimate
#define INCLUDED_flxanimate_PsychFlxAnimate

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flxanimate_FlxAnimate
#include <flxanimate/FlxAnimate.h>
#endif
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS1(flxanimate,FlxAnimate)
HX_DECLARE_CLASS1(flxanimate,PsychFlxAnimate)

namespace flxanimate{


class HXCPP_CLASS_ATTRIBUTES PsychFlxAnimate_obj : public  ::flxanimate::FlxAnimate_obj
{
	public:
		typedef  ::flxanimate::FlxAnimate_obj super;
		typedef PsychFlxAnimate_obj OBJ_;
		PsychFlxAnimate_obj();

	public:
		enum { _hx_ClassId = 0x6d2f127b };

		void __construct( ::Dynamic X, ::Dynamic Y,::String Path, ::Dynamic Settings);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="flxanimate.PsychFlxAnimate")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"flxanimate.PsychFlxAnimate"); }
		static ::hx::ObjectPtr< PsychFlxAnimate_obj > __new( ::Dynamic X, ::Dynamic Y,::String Path, ::Dynamic Settings);
		static ::hx::ObjectPtr< PsychFlxAnimate_obj > __alloc(::hx::Ctx *_hx_ctx, ::Dynamic X, ::Dynamic Y,::String Path, ::Dynamic Settings);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~PsychFlxAnimate_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("PsychFlxAnimate",4a,3d,55,6b); }

		void loadAtlasEx( ::Dynamic img,::String pathOrStr, ::Dynamic myJson);
		::Dynamic loadAtlasEx_dyn();

		void draw();

		void destroy();

		::String _removeBOM(::String str);
		::Dynamic _removeBOM_dyn();

		void pauseAnimation();
		::Dynamic pauseAnimation_dyn();

		void resumeAnimation();
		::Dynamic resumeAnimation_dyn();

};

} // end namespace flxanimate

#endif /* INCLUDED_flxanimate_PsychFlxAnimate */ 

// Generated by Haxe 4.3.4
#include <hxcpp.h>

#ifndef INCLUDED_Sys
#include <Sys.h>
#endif
#ifndef INCLUDED_backend_ALSoftConfig
#include <backend/ALSoftConfig.h>
#endif
#ifndef INCLUDED_haxe_io_Path
#include <haxe/io/Path.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_583401cea7ade392_13___init__,"::backend::ALSoftConfig_obj","__init__",0xf76ea57b,"::backend::ALSoftConfig_obj.__init__","backend/ALSoftConfig.hx",13,0x2fbb37cc)
namespace backend{

void ALSoftConfig_obj::__construct() { }

Dynamic ALSoftConfig_obj::__CreateEmpty() { return new ALSoftConfig_obj; }

void *ALSoftConfig_obj::_hx_vtable = 0;

Dynamic ALSoftConfig_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ALSoftConfig_obj > _hx_result = new ALSoftConfig_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ALSoftConfig_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x451e1b63;
}

void ALSoftConfig_obj::__init__(){
            	HX_STACKFRAME(&_hx_pos_583401cea7ade392_13___init__)
HXLINE(  14)		::String origin = ::Sys_obj::programPath();
HXLINE(  16)		::String configPath = ::haxe::io::Path_obj::directory(::haxe::io::Path_obj::withoutExtension(origin));
HXLINE(  18)		configPath = (configPath + HX_("/plugins/alsoft.ini",c9,61,fe,7a));
HXLINE(  25)		::Sys_obj::putEnv(HX_("ALSOFT_CONF",4e,7a,da,ad),configPath);
            	}



ALSoftConfig_obj::ALSoftConfig_obj()
{
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *ALSoftConfig_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *ALSoftConfig_obj_sStaticStorageInfo = 0;
#endif

::hx::Class ALSoftConfig_obj::__mClass;

void ALSoftConfig_obj::__register()
{
	ALSoftConfig_obj _hx_dummy;
	ALSoftConfig_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("backend.ALSoftConfig",b1,f8,21,84);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< ALSoftConfig_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ALSoftConfig_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ALSoftConfig_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void ALSoftConfig_obj::__boot()
{
}

} // end namespace backend

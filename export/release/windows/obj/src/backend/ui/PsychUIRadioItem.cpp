// Generated by Haxe 4.3.4
#include <hxcpp.h>

#ifndef INCLUDED_backend_Paths
#include <backend/Paths.h>
#endif
#ifndef INCLUDED_backend_ui_PsychUICheckBox
#include <backend/ui/PsychUICheckBox.h>
#endif
#ifndef INCLUDED_backend_ui_PsychUIRadioItem
#include <backend/ui/PsychUIRadioItem.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_animation_FlxAnimationController
#include <flixel/animation/FlxAnimationController.h>
#endif
#ifndef INCLUDED_flixel_graphics_FlxGraphic
#include <flixel/graphics/FlxGraphic.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedSpriteGroup
#include <flixel/group/FlxTypedSpriteGroup.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_02040e8724a597e5_325_new,"backend.ui.PsychUIRadioItem","new",0x6fb973f1,"backend.ui.PsychUIRadioItem.new","backend/ui/PsychUIRadioGroup.hx",325,0x4e47afeb)
HX_LOCAL_STACK_FRAME(_hx_pos_02040e8724a597e5_330_boxGraphic,"backend.ui.PsychUIRadioItem","boxGraphic",0x1fa3cc6c,"backend.ui.PsychUIRadioItem.boxGraphic","backend/ui/PsychUIRadioGroup.hx",330,0x4e47afeb)
static const int _hx_array_data_213aa77f_2[] = {
	(int)0,
};
static const int _hx_array_data_213aa77f_3[] = {
	(int)1,
};
namespace backend{
namespace ui{

void PsychUIRadioItem_obj::__construct(Float x,Float y,::String label,::hx::Null< int >  __o_textWid){
            		int textWid = __o_textWid.Default(100);
            	HX_STACKFRAME(&_hx_pos_02040e8724a597e5_325_new)
HXLINE( 326)		super::__construct(x,y,label,textWid,null());
HXLINE( 327)		this->broadcastCheckBoxEvent = false;
            	}

Dynamic PsychUIRadioItem_obj::__CreateEmpty() { return new PsychUIRadioItem_obj; }

void *PsychUIRadioItem_obj::_hx_vtable = 0;

Dynamic PsychUIRadioItem_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< PsychUIRadioItem_obj > _hx_result = new PsychUIRadioItem_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3]);
	return _hx_result;
}

bool PsychUIRadioItem_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x5e94b94a) {
		if (inClassId<=(int)0x2c01639b) {
			if (inClassId<=(int)0x288ce903) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x288ce903;
			} else {
				return inClassId==(int)0x2c01639b;
			}
		} else {
			return inClassId==(int)0x5e94b94a;
		}
	} else {
		if (inClassId<=(int)0x7dab0655) {
			return inClassId==(int)0x7ccf8994 || inClassId==(int)0x7dab0655;
		} else {
			return inClassId==(int)0x7f5f1b93;
		}
	}
}

void PsychUIRadioItem_obj::boxGraphic(){
            	HX_STACKFRAME(&_hx_pos_02040e8724a597e5_330_boxGraphic)
HXLINE( 331)		 ::flixel::FlxSprite _hx_tmp = this->box;
HXDLIN( 331)		_hx_tmp->loadGraphic(::backend::Paths_obj::image(HX_("psych-ui/radio",52,30,b5,7e),HX_("embed",d9,8d,cf,6f),null()),true,16,16,null(),null());
HXLINE( 332)		this->box->animation->add(HX_("false",a3,35,4f,fb),::Array_obj< int >::fromData( _hx_array_data_213aa77f_2,1),null(),null(),null(),null());
HXLINE( 333)		this->box->animation->add(HX_("true",4e,a7,03,4d),::Array_obj< int >::fromData( _hx_array_data_213aa77f_3,1),null(),null(),null(),null());
HXLINE( 334)		this->box->animation->play(HX_("false",a3,35,4f,fb),null(),null(),null());
            	}



::hx::ObjectPtr< PsychUIRadioItem_obj > PsychUIRadioItem_obj::__new(Float x,Float y,::String label,::hx::Null< int >  __o_textWid) {
	::hx::ObjectPtr< PsychUIRadioItem_obj > __this = new PsychUIRadioItem_obj();
	__this->__construct(x,y,label,__o_textWid);
	return __this;
}

::hx::ObjectPtr< PsychUIRadioItem_obj > PsychUIRadioItem_obj::__alloc(::hx::Ctx *_hx_ctx,Float x,Float y,::String label,::hx::Null< int >  __o_textWid) {
	PsychUIRadioItem_obj *__this = (PsychUIRadioItem_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(PsychUIRadioItem_obj), true, "backend.ui.PsychUIRadioItem"));
	*(void **)__this = PsychUIRadioItem_obj::_hx_vtable;
	__this->__construct(x,y,label,__o_textWid);
	return __this;
}

PsychUIRadioItem_obj::PsychUIRadioItem_obj()
{
}

::hx::Val PsychUIRadioItem_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"boxGraphic") ) { return ::hx::Val( boxGraphic_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *PsychUIRadioItem_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *PsychUIRadioItem_obj_sStaticStorageInfo = 0;
#endif

static ::String PsychUIRadioItem_obj_sMemberFields[] = {
	HX_("boxGraphic",dd,6b,2c,24),
	::String(null()) };

::hx::Class PsychUIRadioItem_obj::__mClass;

void PsychUIRadioItem_obj::__register()
{
	PsychUIRadioItem_obj _hx_dummy;
	PsychUIRadioItem_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("backend.ui.PsychUIRadioItem",7f,a7,3a,21);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(PsychUIRadioItem_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< PsychUIRadioItem_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = PsychUIRadioItem_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = PsychUIRadioItem_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace backend
} // end namespace ui

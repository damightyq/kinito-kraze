// Generated by Haxe 4.3.4
#include <hxcpp.h>

#ifndef INCLUDED_backend_ui_PsychUIBox
#include <backend/ui/PsychUIBox.h>
#endif
#ifndef INCLUDED_backend_ui_PsychUITab
#include <backend/ui/PsychUITab.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxCamera
#include <flixel/FlxCamera.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedSpriteGroup
#include <flixel/group/FlxTypedSpriteGroup.h>
#endif
#ifndef INCLUDED_flixel_math_FlxBasePoint
#include <flixel/math/FlxBasePoint.h>
#endif
#ifndef INCLUDED_flixel_text_FlxText
#include <flixel/text/FlxText.h>
#endif
#ifndef INCLUDED_flixel_util_FlxDestroyUtil
#include <flixel/util/FlxDestroyUtil.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxPooled
#include <flixel/util/IFlxPooled.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_45c6ff77222521ce_6_new,"backend.ui.PsychUITab","new",0x8f1d0f58,"backend.ui.PsychUITab.new","backend/ui/PsychUITab.hx",6,0x33e74878)
HX_LOCAL_STACK_FRAME(_hx_pos_45c6ff77222521ce_25_draw,"backend.ui.PsychUITab","draw",0xa3be060c,"backend.ui.PsychUITab.draw","backend/ui/PsychUITab.hx",25,0x33e74878)
HX_LOCAL_STACK_FRAME(_hx_pos_45c6ff77222521ce_37_destroy,"backend.ui.PsychUITab","destroy",0xef2647f2,"backend.ui.PsychUITab.destroy","backend/ui/PsychUITab.hx",37,0x33e74878)
HX_LOCAL_STACK_FRAME(_hx_pos_45c6ff77222521ce_45_updateMenu,"backend.ui.PsychUITab","updateMenu",0x6de74050,"backend.ui.PsychUITab.updateMenu","backend/ui/PsychUITab.hx",45,0x33e74878)
HX_LOCAL_STACK_FRAME(_hx_pos_45c6ff77222521ce_54_drawMenu,"backend.ui.PsychUITab","drawMenu",0xde3a6dcb,"backend.ui.PsychUITab.drawMenu","backend/ui/PsychUITab.hx",54,0x33e74878)
HX_LOCAL_STACK_FRAME(_hx_pos_45c6ff77222521ce_63_resize,"backend.ui.PsychUITab","resize",0xbc79c5fc,"backend.ui.PsychUITab.resize","backend/ui/PsychUITab.hx",63,0x33e74878)
HX_LOCAL_STACK_FRAME(_hx_pos_45c6ff77222521ce_70_set_name,"backend.ui.PsychUITab","set_name",0xf88f0550,"backend.ui.PsychUITab.set_name","backend/ui/PsychUITab.hx",70,0x33e74878)
HX_LOCAL_STACK_FRAME(_hx_pos_45c6ff77222521ce_77_set_cameras,"backend.ui.PsychUITab","set_cameras",0x44ade849,"backend.ui.PsychUITab.set_cameras","backend/ui/PsychUITab.hx",77,0x33e74878)
HX_LOCAL_STACK_FRAME(_hx_pos_45c6ff77222521ce_84_set_camera,"backend.ui.PsychUITab","set_camera",0x186a64ea,"backend.ui.PsychUITab.set_camera","backend/ui/PsychUITab.hx",84,0x33e74878)
namespace backend{
namespace ui{

void PsychUITab_obj::__construct(::String name){
            	HX_GC_STACKFRAME(&_hx_pos_45c6ff77222521ce_6_new)
HXLINE(  10)		this->menu =  ::flixel::group::FlxTypedSpriteGroup_obj::__alloc( HX_CTX ,null(),null(),null());
HXLINE(  14)		super::__construct(null(),null(),null());
HXLINE(  15)		this->makeGraphic(1,1,-1,null(),null());
HXLINE(  16)		this->set_color(-16777216);
HXLINE(  17)		this->set_alpha(((Float)0.6));
HXLINE(  19)		this->name = name;
HXLINE(  20)		this->text =  ::flixel::text::FlxText_obj::__alloc( HX_CTX ,0,0,100,name,null(),null());
HXLINE(  21)		this->text->set_alignment(HX_("center",d5,25,db,05));
            	}

Dynamic PsychUITab_obj::__CreateEmpty() { return new PsychUITab_obj; }

void *PsychUITab_obj::_hx_vtable = 0;

Dynamic PsychUITab_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< PsychUITab_obj > _hx_result = new PsychUITab_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool PsychUITab_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x511d7c8e) {
		if (inClassId<=(int)0x2c01639b) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x2c01639b;
		} else {
			return inClassId==(int)0x511d7c8e;
		}
	} else {
		return inClassId==(int)0x7ccf8994 || inClassId==(int)0x7dab0655;
	}
}

void PsychUITab_obj::draw(){
            	HX_STACKFRAME(&_hx_pos_45c6ff77222521ce_25_draw)
HXLINE(  26)		this->super::draw();
HXLINE(  28)		bool _hx_tmp;
HXDLIN(  28)		bool _hx_tmp1;
HXDLIN(  28)		bool _hx_tmp2;
HXDLIN(  28)		if (this->visible) {
HXLINE(  28)			_hx_tmp2 = ::hx::IsNotNull( this->text );
            		}
            		else {
HXLINE(  28)			_hx_tmp2 = false;
            		}
HXDLIN(  28)		if (_hx_tmp2) {
HXLINE(  28)			_hx_tmp1 = this->text->exists;
            		}
            		else {
HXLINE(  28)			_hx_tmp1 = false;
            		}
HXDLIN(  28)		if (_hx_tmp1) {
HXLINE(  28)			_hx_tmp = this->text->visible;
            		}
            		else {
HXLINE(  28)			_hx_tmp = false;
            		}
HXDLIN(  28)		if (_hx_tmp) {
HXLINE(  30)			this->text->set_x(this->x);
HXLINE(  31)			 ::flixel::text::FlxText _hx_tmp3 = this->text;
HXDLIN(  31)			Float _hx_tmp4 = this->y;
HXDLIN(  31)			Float _hx_tmp5 = (_hx_tmp4 + (this->get_height() / ( (Float)(2) )));
HXDLIN(  31)			_hx_tmp3->set_y((_hx_tmp5 - (this->text->get_height() / ( (Float)(2) ))));
HXLINE(  32)			this->text->draw();
            		}
            	}


void PsychUITab_obj::destroy(){
            	HX_STACKFRAME(&_hx_pos_45c6ff77222521ce_37_destroy)
HXLINE(  38)		this->text = ( ( ::flixel::text::FlxText)(::flixel::util::FlxDestroyUtil_obj::destroy(this->text)) );
HXLINE(  39)		this->menu = ( ( ::flixel::group::FlxTypedSpriteGroup)(::flixel::util::FlxDestroyUtil_obj::destroy(this->menu)) );
HXLINE(  40)		this->super::destroy();
            	}


void PsychUITab_obj::updateMenu( ::backend::ui::PsychUIBox parent,Float elapsed){
            	HX_STACKFRAME(&_hx_pos_45c6ff77222521ce_45_updateMenu)
HXDLIN(  45)		bool _hx_tmp;
HXDLIN(  45)		bool _hx_tmp1;
HXDLIN(  45)		if (::hx::IsNotNull( this->menu )) {
HXDLIN(  45)			_hx_tmp1 = this->menu->exists;
            		}
            		else {
HXDLIN(  45)			_hx_tmp1 = false;
            		}
HXDLIN(  45)		if (_hx_tmp1) {
HXDLIN(  45)			_hx_tmp = this->menu->active;
            		}
            		else {
HXDLIN(  45)			_hx_tmp = false;
            		}
HXDLIN(  45)		if (_hx_tmp) {
HXLINE(  47)			{
HXLINE(  47)				 ::flixel::math::FlxBasePoint this1 = this->menu->scrollFactor;
HXDLIN(  47)				Float y = parent->scrollFactor->y;
HXDLIN(  47)				this1->set_x(parent->scrollFactor->x);
HXDLIN(  47)				this1->set_y(y);
            			}
HXLINE(  48)			this->menu->update(elapsed);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(PsychUITab_obj,updateMenu,(void))

void PsychUITab_obj::drawMenu( ::backend::ui::PsychUIBox parent){
            	HX_STACKFRAME(&_hx_pos_45c6ff77222521ce_54_drawMenu)
HXDLIN(  54)		bool _hx_tmp;
HXDLIN(  54)		bool _hx_tmp1;
HXDLIN(  54)		if (::hx::IsNotNull( this->menu )) {
HXDLIN(  54)			_hx_tmp1 = this->menu->exists;
            		}
            		else {
HXDLIN(  54)			_hx_tmp1 = false;
            		}
HXDLIN(  54)		if (_hx_tmp1) {
HXDLIN(  54)			_hx_tmp = this->menu->visible;
            		}
            		else {
HXDLIN(  54)			_hx_tmp = false;
            		}
HXDLIN(  54)		if (_hx_tmp) {
HXLINE(  56)			this->menu->set_x(parent->x);
HXLINE(  57)			this->menu->set_y((parent->y + parent->tabHeight));
HXLINE(  58)			this->menu->draw();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(PsychUITab_obj,drawMenu,(void))

void PsychUITab_obj::resize(int width,int height){
            	HX_STACKFRAME(&_hx_pos_45c6ff77222521ce_63_resize)
HXLINE(  64)		this->setGraphicSize(width,height);
HXLINE(  65)		this->updateHitbox();
HXLINE(  66)		this->text->set_fieldWidth(( (Float)(width) ));
            	}


HX_DEFINE_DYNAMIC_FUNC2(PsychUITab_obj,resize,(void))

::String PsychUITab_obj::set_name(::String v){
            	HX_STACKFRAME(&_hx_pos_45c6ff77222521ce_70_set_name)
HXLINE(  71)		this->text->set_text(v);
HXLINE(  72)		return (this->name = v);
            	}


HX_DEFINE_DYNAMIC_FUNC1(PsychUITab_obj,set_name,return )

::Array< ::Dynamic> PsychUITab_obj::set_cameras(::Array< ::Dynamic> v){
            	HX_STACKFRAME(&_hx_pos_45c6ff77222521ce_77_set_cameras)
HXLINE(  78)		this->text->set_cameras(v);
HXLINE(  79)		this->menu->set_cameras(v);
HXLINE(  80)		return this->super::set_cameras(v);
            	}


 ::flixel::FlxCamera PsychUITab_obj::set_camera( ::flixel::FlxCamera v){
            	HX_STACKFRAME(&_hx_pos_45c6ff77222521ce_84_set_camera)
HXLINE(  85)		this->text->set_camera(v);
HXLINE(  86)		this->menu->set_camera(v);
HXLINE(  87)		return this->super::set_camera(v);
            	}



::hx::ObjectPtr< PsychUITab_obj > PsychUITab_obj::__new(::String name) {
	::hx::ObjectPtr< PsychUITab_obj > __this = new PsychUITab_obj();
	__this->__construct(name);
	return __this;
}

::hx::ObjectPtr< PsychUITab_obj > PsychUITab_obj::__alloc(::hx::Ctx *_hx_ctx,::String name) {
	PsychUITab_obj *__this = (PsychUITab_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(PsychUITab_obj), true, "backend.ui.PsychUITab"));
	*(void **)__this = PsychUITab_obj::_hx_vtable;
	__this->__construct(name);
	return __this;
}

PsychUITab_obj::PsychUITab_obj()
{
}

void PsychUITab_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(PsychUITab);
	HX_MARK_MEMBER_NAME(name,"name");
	HX_MARK_MEMBER_NAME(text,"text");
	HX_MARK_MEMBER_NAME(menu,"menu");
	 ::flixel::FlxSprite_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void PsychUITab_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(name,"name");
	HX_VISIT_MEMBER_NAME(text,"text");
	HX_VISIT_MEMBER_NAME(menu,"menu");
	 ::flixel::FlxSprite_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val PsychUITab_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"name") ) { return ::hx::Val( name ); }
		if (HX_FIELD_EQ(inName,"text") ) { return ::hx::Val( text ); }
		if (HX_FIELD_EQ(inName,"menu") ) { return ::hx::Val( menu ); }
		if (HX_FIELD_EQ(inName,"draw") ) { return ::hx::Val( draw_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"resize") ) { return ::hx::Val( resize_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"destroy") ) { return ::hx::Val( destroy_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"drawMenu") ) { return ::hx::Val( drawMenu_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_name") ) { return ::hx::Val( set_name_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"updateMenu") ) { return ::hx::Val( updateMenu_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_camera") ) { return ::hx::Val( set_camera_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"set_cameras") ) { return ::hx::Val( set_cameras_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val PsychUITab_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"name") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_name(inValue.Cast< ::String >()) );name=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"text") ) { text=inValue.Cast<  ::flixel::text::FlxText >(); return inValue; }
		if (HX_FIELD_EQ(inName,"menu") ) { menu=inValue.Cast<  ::flixel::group::FlxTypedSpriteGroup >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void PsychUITab_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("name",4b,72,ff,48));
	outFields->push(HX_("text",ad,cc,f9,4c));
	outFields->push(HX_("menu",9f,45,59,48));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo PsychUITab_obj_sMemberStorageInfo[] = {
	{::hx::fsString,(int)offsetof(PsychUITab_obj,name),HX_("name",4b,72,ff,48)},
	{::hx::fsObject /*  ::flixel::text::FlxText */ ,(int)offsetof(PsychUITab_obj,text),HX_("text",ad,cc,f9,4c)},
	{::hx::fsObject /*  ::flixel::group::FlxTypedSpriteGroup */ ,(int)offsetof(PsychUITab_obj,menu),HX_("menu",9f,45,59,48)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *PsychUITab_obj_sStaticStorageInfo = 0;
#endif

static ::String PsychUITab_obj_sMemberFields[] = {
	HX_("name",4b,72,ff,48),
	HX_("text",ad,cc,f9,4c),
	HX_("menu",9f,45,59,48),
	HX_("draw",04,2c,70,42),
	HX_("destroy",fa,2c,86,24),
	HX_("updateMenu",48,30,0e,01),
	HX_("drawMenu",c3,ef,c2,5c),
	HX_("resize",f4,59,7b,08),
	HX_("set_name",48,87,17,77),
	HX_("set_cameras",51,f1,98,73),
	HX_("set_camera",e2,54,91,ab),
	::String(null()) };

::hx::Class PsychUITab_obj::__mClass;

void PsychUITab_obj::__register()
{
	PsychUITab_obj _hx_dummy;
	PsychUITab_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("backend.ui.PsychUITab",66,c3,64,90);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(PsychUITab_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< PsychUITab_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = PsychUITab_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = PsychUITab_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace backend
} // end namespace ui

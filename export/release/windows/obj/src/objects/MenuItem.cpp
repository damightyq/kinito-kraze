// Generated by Haxe 4.3.4
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_backend_ClientPrefs
#include <backend/ClientPrefs.h>
#endif
#ifndef INCLUDED_backend_Paths
#include <backend/Paths.h>
#endif
#ifndef INCLUDED_backend_SaveVariables
#include <backend/SaveVariables.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_graphics_FlxGraphic
#include <flixel/graphics/FlxGraphic.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_objects_MenuItem
#include <objects/MenuItem.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_f389d0832565e595_3_new,"objects.MenuItem","new",0x3388a03e,"objects.MenuItem.new","objects/MenuItem.hx",3,0x5a161e91)
HX_LOCAL_STACK_FRAME(_hx_pos_f389d0832565e595_21_set_isFlashing,"objects.MenuItem","set_isFlashing",0x699da8db,"objects.MenuItem.set_isFlashing","objects/MenuItem.hx",21,0x5a161e91)
HX_LOCAL_STACK_FRAME(_hx_pos_f389d0832565e595_29_update,"objects.MenuItem","update",0xb23974eb,"objects.MenuItem.update","objects/MenuItem.hx",29,0x5a161e91)
namespace objects{

void MenuItem_obj::__construct(Float x,Float y,::String __o_weekName){
            		::String weekName = __o_weekName;
            		if (::hx::IsNull(__o_weekName)) weekName = HX_("",00,00,00,00);
            	HX_STACKFRAME(&_hx_pos_f389d0832565e595_3_new)
HXLINE(  18)		this->flashes_ps = 6;
HXLINE(  17)		this->_flashColor = -13369345;
HXLINE(  16)		this->_flashingElapsed = ((Float)0);
HXLINE(  15)		this->isFlashing = false;
HXLINE(   5)		this->targetY = ((Float)0);
HXLINE(   9)		super::__construct(x,y,null());
HXLINE(  10)		this->loadGraphic(::backend::Paths_obj::image((HX_("storymenu/",9b,19,38,af) + weekName),null(),null()),null(),null(),null(),null(),null());
HXLINE(  11)		this->set_antialiasing(::backend::ClientPrefs_obj::data->antialiasing);
            	}

Dynamic MenuItem_obj::__CreateEmpty() { return new MenuItem_obj; }

void *MenuItem_obj::_hx_vtable = 0;

Dynamic MenuItem_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< MenuItem_obj > _hx_result = new MenuItem_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2]);
	return _hx_result;
}

bool MenuItem_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x7ccf8994) {
		if (inClassId<=(int)0x2c01639b) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x2c01639b;
		} else {
			return inClassId==(int)0x7ccf8994;
		}
	} else {
		return inClassId==(int)0x7dab0655 || inClassId==(int)0x7f879eba;
	}
}

bool MenuItem_obj::set_isFlashing(::hx::Null< bool >  __o_value){
            		bool value = __o_value.Default(true);
            	HX_STACKFRAME(&_hx_pos_f389d0832565e595_21_set_isFlashing)
HXLINE(  22)		this->isFlashing = value;
HXLINE(  23)		this->_flashingElapsed = ( (Float)(0) );
HXLINE(  24)		int _hx_tmp;
HXDLIN(  24)		if (this->isFlashing) {
HXLINE(  24)			_hx_tmp = this->_flashColor;
            		}
            		else {
HXLINE(  24)			_hx_tmp = -1;
            		}
HXDLIN(  24)		this->set_color(_hx_tmp);
HXLINE(  25)		return this->isFlashing;
            	}


HX_DEFINE_DYNAMIC_FUNC1(MenuItem_obj,set_isFlashing,return )

void MenuItem_obj::update(Float elapsed){
            	HX_STACKFRAME(&_hx_pos_f389d0832565e595_29_update)
HXLINE(  30)		this->super::update(elapsed);
HXLINE(  32)		if (this->isFlashing) {
HXLINE(  34)			 ::objects::MenuItem _hx_tmp = ::hx::ObjectPtr<OBJ_>(this);
HXDLIN(  34)			_hx_tmp->_flashingElapsed = (_hx_tmp->_flashingElapsed + elapsed);
HXLINE(  35)			int _hx_tmp1;
HXDLIN(  35)			if ((::hx::Mod(::Math_obj::floor(((this->_flashingElapsed * ( (Float)(::flixel::FlxG_obj::updateFramerate) )) * ( (Float)(this->flashes_ps) ))),2) == 0)) {
HXLINE(  35)				_hx_tmp1 = this->_flashColor;
            			}
            			else {
HXLINE(  35)				_hx_tmp1 = -1;
            			}
HXDLIN(  35)			this->set_color(_hx_tmp1);
            		}
            	}



::hx::ObjectPtr< MenuItem_obj > MenuItem_obj::__new(Float x,Float y,::String __o_weekName) {
	::hx::ObjectPtr< MenuItem_obj > __this = new MenuItem_obj();
	__this->__construct(x,y,__o_weekName);
	return __this;
}

::hx::ObjectPtr< MenuItem_obj > MenuItem_obj::__alloc(::hx::Ctx *_hx_ctx,Float x,Float y,::String __o_weekName) {
	MenuItem_obj *__this = (MenuItem_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(MenuItem_obj), true, "objects.MenuItem"));
	*(void **)__this = MenuItem_obj::_hx_vtable;
	__this->__construct(x,y,__o_weekName);
	return __this;
}

MenuItem_obj::MenuItem_obj()
{
}

::hx::Val MenuItem_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"update") ) { return ::hx::Val( update_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"targetY") ) { return ::hx::Val( targetY ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"isFlashing") ) { return ::hx::Val( isFlashing ); }
		if (HX_FIELD_EQ(inName,"flashes_ps") ) { return ::hx::Val( flashes_ps ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"_flashColor") ) { return ::hx::Val( _flashColor ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"set_isFlashing") ) { return ::hx::Val( set_isFlashing_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"_flashingElapsed") ) { return ::hx::Val( _flashingElapsed ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val MenuItem_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"targetY") ) { targetY=inValue.Cast< Float >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"isFlashing") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_isFlashing(inValue.Cast< bool >()) );isFlashing=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"flashes_ps") ) { flashes_ps=inValue.Cast< int >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"_flashColor") ) { _flashColor=inValue.Cast< int >(); return inValue; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"_flashingElapsed") ) { _flashingElapsed=inValue.Cast< Float >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void MenuItem_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("targetY",e8,f3,67,88));
	outFields->push(HX_("isFlashing",3c,97,97,14));
	outFields->push(HX_("_flashingElapsed",ab,67,2d,c7));
	outFields->push(HX_("_flashColor",b2,da,f6,3a));
	outFields->push(HX_("flashes_ps",c4,c4,a7,fe));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo MenuItem_obj_sMemberStorageInfo[] = {
	{::hx::fsFloat,(int)offsetof(MenuItem_obj,targetY),HX_("targetY",e8,f3,67,88)},
	{::hx::fsBool,(int)offsetof(MenuItem_obj,isFlashing),HX_("isFlashing",3c,97,97,14)},
	{::hx::fsFloat,(int)offsetof(MenuItem_obj,_flashingElapsed),HX_("_flashingElapsed",ab,67,2d,c7)},
	{::hx::fsInt,(int)offsetof(MenuItem_obj,_flashColor),HX_("_flashColor",b2,da,f6,3a)},
	{::hx::fsInt,(int)offsetof(MenuItem_obj,flashes_ps),HX_("flashes_ps",c4,c4,a7,fe)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *MenuItem_obj_sStaticStorageInfo = 0;
#endif

static ::String MenuItem_obj_sMemberFields[] = {
	HX_("targetY",e8,f3,67,88),
	HX_("isFlashing",3c,97,97,14),
	HX_("_flashingElapsed",ab,67,2d,c7),
	HX_("_flashColor",b2,da,f6,3a),
	HX_("flashes_ps",c4,c4,a7,fe),
	HX_("set_isFlashing",f9,07,ad,aa),
	HX_("update",09,86,05,87),
	::String(null()) };

::hx::Class MenuItem_obj::__mClass;

void MenuItem_obj::__register()
{
	MenuItem_obj _hx_dummy;
	MenuItem_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("objects.MenuItem",4c,69,70,c7);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(MenuItem_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< MenuItem_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MenuItem_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MenuItem_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace objects

// Generated by Haxe 4.3.4
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_StringBuf
#include <StringBuf.h>
#endif
#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_List
#include <haxe/ds/List.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_hscript_CType
#include <hscript/CType.h>
#endif
#ifndef INCLUDED_hscript_Const
#include <hscript/Const.h>
#endif
#ifndef INCLUDED_hscript_Error
#include <hscript/Error.h>
#endif
#ifndef INCLUDED_hscript_ErrorDef
#include <hscript/ErrorDef.h>
#endif
#ifndef INCLUDED_hscript_ExprDef
#include <hscript/ExprDef.h>
#endif
#ifndef INCLUDED_hscript_FieldAccess
#include <hscript/FieldAccess.h>
#endif
#ifndef INCLUDED_hscript_FieldKind
#include <hscript/FieldKind.h>
#endif
#ifndef INCLUDED_hscript_ModuleDecl
#include <hscript/ModuleDecl.h>
#endif
#ifndef INCLUDED_hscript_Parser
#include <hscript/Parser.h>
#endif
#ifndef INCLUDED_hscript_Token
#include <hscript/Token.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_46_new,"hscript.Parser","new",0x4b9f158c,"hscript.Parser.new","hscript/Parser.hx",46,0x98735743)
static const ::String _hx_array_data_e9f29f9a_3[] = {
	HX_("%",25,00,00,00),
};
static const ::String _hx_array_data_e9f29f9a_4[] = {
	HX_("*",2a,00,00,00),HX_("/",2f,00,00,00),
};
static const ::String _hx_array_data_e9f29f9a_5[] = {
	HX_("+",2b,00,00,00),HX_("-",2d,00,00,00),
};
static const ::String _hx_array_data_e9f29f9a_6[] = {
	HX_("<<",80,34,00,00),HX_(">>",40,36,00,00),HX_(">>>",fe,41,2f,00),
};
static const ::String _hx_array_data_e9f29f9a_7[] = {
	HX_("|",7c,00,00,00),HX_("&",26,00,00,00),HX_("^",5e,00,00,00),
};
static const ::String _hx_array_data_e9f29f9a_8[] = {
	HX_("==",60,35,00,00),HX_("!=",fc,1c,00,00),HX_(">",3e,00,00,00),HX_("<",3c,00,00,00),HX_(">=",3f,36,00,00),HX_("<=",81,34,00,00),
};
static const ::String _hx_array_data_e9f29f9a_9[] = {
	HX_("...",ee,0f,23,00),
};
static const ::String _hx_array_data_e9f29f9a_10[] = {
	HX_("&&",40,21,00,00),
};
static const ::String _hx_array_data_e9f29f9a_11[] = {
	HX_("||",80,6c,00,00),
};
static const ::String _hx_array_data_e9f29f9a_12[] = {
	HX_("=",3d,00,00,00),HX_("+=",b2,25,00,00),HX_("-=",70,27,00,00),HX_("*=",d3,24,00,00),HX_("/=",2e,29,00,00),HX_("%=",78,20,00,00),HX_("<<=",bd,bb,2d,00),HX_(">>=",fd,41,2f,00),HX_(">>>=",7f,7c,2a,29),HX_("|=",41,6c,00,00),HX_("&=",57,21,00,00),HX_("^=",1f,52,00,00),HX_("=>",61,35,00,00),
};
static const ::String _hx_array_data_e9f29f9a_13[] = {
	HX_("->",71,27,00,00),
};
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_134_get_currentPos,"hscript.Parser","get_currentPos",0xd52d5d78,"hscript.Parser.get_currentPos","hscript/Parser.hx",134,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_137_error,"hscript.Parser","error",0x9bb1b3f4,"hscript.Parser.error","hscript/Parser.hx",137,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_146_invalidChar,"hscript.Parser","invalidChar",0x0ae4fe99,"hscript.Parser.invalidChar","hscript/Parser.hx",146,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_149_initParser,"hscript.Parser","initParser",0xe350f063,"hscript.Parser.initParser","hscript/Parser.hx",149,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_172_parseString,"hscript.Parser","parseString",0xed832690,"hscript.Parser.parseString","hscript/Parser.hx",172,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_186_unexpected,"hscript.Parser","unexpected",0xb7770e25,"hscript.Parser.unexpected","hscript/Parser.hx",186,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_191_push,"hscript.Parser","push",0xe0f2532e,"hscript.Parser.push","hscript/Parser.hx",191,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_201_ensure,"hscript.Parser","ensure",0x52df3412,"hscript.Parser.ensure","hscript/Parser.hx",201,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_206_ensureToken,"hscript.Parser","ensureToken",0x4d49bd87,"hscript.Parser.ensureToken","hscript/Parser.hx",206,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_211_maybe,"hscript.Parser","maybe",0x2baefbd4,"hscript.Parser.maybe","hscript/Parser.hx",211,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_219_getIdent,"hscript.Parser","getIdent",0x33becdce,"hscript.Parser.getIdent","hscript/Parser.hx",219,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_231_expr,"hscript.Parser","expr",0xd9af3e89,"hscript.Parser.expr","hscript/Parser.hx",231,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_239_pmin,"hscript.Parser","pmin",0xe0ec3876,"hscript.Parser.pmin","hscript/Parser.hx",239,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_247_pmax,"hscript.Parser","pmax",0xe0ec3188,"hscript.Parser.pmax","hscript/Parser.hx",247,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_253_mk,"hscript.Parser","mk",0xd828e3b2,"hscript.Parser.mk","hscript/Parser.hx",253,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_264_isBlock,"hscript.Parser","isBlock",0x99f5642f,"hscript.Parser.isBlock","hscript/Parser.hx",264,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_283_parseFullExpr,"hscript.Parser","parseFullExpr",0x2c8eb1e3,"hscript.Parser.parseFullExpr","hscript/Parser.hx",283,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_303_parseObject,"hscript.Parser","parseObject",0xf1927c7e,"hscript.Parser.parseObject","hscript/Parser.hx",303,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_338_parseExpr,"hscript.Parser","parseExpr",0x8f01bd34,"hscript.Parser.parseExpr","hscript/Parser.hx",338,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_477_parseLambda,"hscript.Parser","parseLambda",0x2d1330c6,"hscript.Parser.parseLambda","hscript/Parser.hx",477,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_497_parseMetaArgs,"hscript.Parser","parseMetaArgs",0xfe617641,"hscript.Parser.parseMetaArgs","hscript/Parser.hx",497,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_521_mapCompr,"hscript.Parser","mapCompr",0xde0e1f9b,"hscript.Parser.mapCompr","hscript/Parser.hx",521,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_542_makeUnop,"hscript.Parser","makeUnop",0x60b6401c,"hscript.Parser.makeUnop","hscript/Parser.hx",542,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_552_makeBinop,"hscript.Parser","makeBinop",0x4ad5ff06,"hscript.Parser.makeBinop","hscript/Parser.hx",552,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_571_parseStructure,"hscript.Parser","parseStructure",0x237837d4,"hscript.Parser.parseStructure","hscript/Parser.hx",571,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_763_parseExprNext,"hscript.Parser","parseExprNext",0x83d61847,"hscript.Parser.parseExprNext","hscript/Parser.hx",763,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_824_parseFunctionArgs,"hscript.Parser","parseFunctionArgs",0xca222794,"hscript.Parser.parseFunctionArgs","hscript/Parser.hx",824,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_866_parseFunctionDecl,"hscript.Parser","parseFunctionDecl",0xcc13eaa1,"hscript.Parser.parseFunctionDecl","hscript/Parser.hx",866,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_880_parsePath,"hscript.Parser","parsePath",0x9635a5a4,"hscript.Parser.parsePath","hscript/Parser.hx",880,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_893_parseType,"hscript.Parser","parseType",0x98ecb2b9,"hscript.Parser.parseType","hscript/Parser.hx",893,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_938_parseType,"hscript.Parser","parseType",0x98ecb2b9,"hscript.Parser.parseType","hscript/Parser.hx",938,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_1015_parseTypeNext,"hscript.Parser","parseTypeNext",0x8b2ab44c,"hscript.Parser.parseTypeNext","hscript/Parser.hx",1015,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_1037_parseExprList,"hscript.Parser","parseExprList",0x8286afb2,"hscript.Parser.parseExprList","hscript/Parser.hx",1037,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_1059_parseModule,"hscript.Parser","parseModule",0x9d26326b,"hscript.Parser.parseModule","hscript/Parser.hx",1059,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_1075_parseMetadata,"hscript.Parser","parseMetadata",0x157712ee,"hscript.Parser.parseMetadata","hscript/Parser.hx",1075,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_1090_parseParams,"hscript.Parser","parseParams",0xc9cdf905,"hscript.Parser.parseParams","hscript/Parser.hx",1090,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_1096_parseModuleDecl,"hscript.Parser","parseModuleDecl",0xfa46c075,"hscript.Parser.parseModuleDecl","hscript/Parser.hx",1096,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_1189_parseField,"hscript.Parser","parseField",0x1bf7d3db,"hscript.Parser.parseField","hscript/Parser.hx",1189,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_1264_readChar,"hscript.Parser","readChar",0x8625b4a0,"hscript.Parser.readChar","hscript/Parser.hx",1264,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_1267_readString,"hscript.Parser","readString",0xfc2f051b,"hscript.Parser.readString","hscript/Parser.hx",1267,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_1327_token,"hscript.Parser","token",0x3cb36b25,"hscript.Parser.token","hscript/Parser.hx",1327,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_1343__token,"hscript.Parser","_token",0x5e76088e,"hscript.Parser._token","hscript/Parser.hx",1343,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_1551_preprocValue,"hscript.Parser","preprocValue",0xbabba0cc,"hscript.Parser.preprocValue","hscript/Parser.hx",1551,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_1556_parsePreproCond,"hscript.Parser","parsePreproCond",0x44c5e42b,"hscript.Parser.parsePreproCond","hscript/Parser.hx",1556,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_1572_evalPreproCond,"hscript.Parser","evalPreproCond",0x4859d7fc,"hscript.Parser.evalPreproCond","hscript/Parser.hx",1572,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_1590_preprocess,"hscript.Parser","preprocess",0x83c9d500,"hscript.Parser.preprocess","hscript/Parser.hx",1590,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_1622_skipTokens,"hscript.Parser","skipTokens",0xeb6e038d,"hscript.Parser.skipTokens","hscript/Parser.hx",1622,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_1637_tokenComment,"hscript.Parser","tokenComment",0xb86c15ba,"hscript.Parser.tokenComment","hscript/Parser.hx",1637,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_1680_constString,"hscript.Parser","constString",0x0a4693c0,"hscript.Parser.constString","hscript/Parser.hx",1680,0x98735743)
HX_LOCAL_STACK_FRAME(_hx_pos_2fd3d36595bebf3d_1688_tokenString,"hscript.Parser","tokenString",0x05f471d6,"hscript.Parser.tokenString","hscript/Parser.hx",1688,0x98735743)
namespace hscript{

void Parser_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_46_new)
HXLINE(  89)		this->uid = 0;
HXLINE(  58)		this->preprocesorValues =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE( 107)		this->line = 1;
HXLINE( 108)		this->opChars = HX_("+*/-=!><&|^%~",e2,ec,c4,dc);
HXLINE( 109)		this->identChars = HX_("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_",e0,b5,3b,15);
HXLINE( 110)		::Array< ::Dynamic> priorities = ::Array_obj< ::Dynamic>::__new(11)->init(0,::Array_obj< ::String >::fromData( _hx_array_data_e9f29f9a_3,1))->init(1,::Array_obj< ::String >::fromData( _hx_array_data_e9f29f9a_4,2))->init(2,::Array_obj< ::String >::fromData( _hx_array_data_e9f29f9a_5,2))->init(3,::Array_obj< ::String >::fromData( _hx_array_data_e9f29f9a_6,3))->init(4,::Array_obj< ::String >::fromData( _hx_array_data_e9f29f9a_7,3))->init(5,::Array_obj< ::String >::fromData( _hx_array_data_e9f29f9a_8,6))->init(6,::Array_obj< ::String >::fromData( _hx_array_data_e9f29f9a_9,1))->init(7,::Array_obj< ::String >::fromData( _hx_array_data_e9f29f9a_10,1))->init(8,::Array_obj< ::String >::fromData( _hx_array_data_e9f29f9a_11,1))->init(9,::Array_obj< ::String >::fromData( _hx_array_data_e9f29f9a_12,13))->init(10,::Array_obj< ::String >::fromData( _hx_array_data_e9f29f9a_13,1));
HXLINE( 123)		this->opPriority =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE( 124)		this->opRightAssoc =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE( 125)		{
HXLINE( 125)			int _g = 0;
HXDLIN( 125)			int _g1 = priorities->length;
HXDLIN( 125)			while((_g < _g1)){
HXLINE( 125)				_g = (_g + 1);
HXDLIN( 125)				int i = (_g - 1);
HXLINE( 126)				{
HXLINE( 126)					int _g2 = 0;
HXDLIN( 126)					::Array< ::String > _g3 = priorities->__get(i).StaticCast< ::Array< ::String > >();
HXDLIN( 126)					while((_g2 < _g3->length)){
HXLINE( 126)						::String x = _g3->__get(_g2);
HXDLIN( 126)						_g2 = (_g2 + 1);
HXLINE( 127)						this->opPriority->set(x,i);
HXLINE( 128)						if ((i == 9)) {
HXLINE( 128)							this->opRightAssoc->set(x,true);
            						}
            					}
            				}
            			}
            		}
HXLINE( 130)		{
HXLINE( 130)			{
HXLINE( 130)				::String x1 = HX_("!",21,00,00,00);
HXLINE( 131)				{
HXLINE( 131)					int _hx_tmp;
HXDLIN( 131)					bool _hx_tmp1;
HXDLIN( 131)					if ((x1 != HX_("++",a0,25,00,00))) {
HXLINE( 131)						_hx_tmp1 = (x1 == HX_("--",60,27,00,00));
            					}
            					else {
HXLINE( 131)						_hx_tmp1 = true;
            					}
HXDLIN( 131)					if (_hx_tmp1) {
HXLINE( 131)						_hx_tmp = -1;
            					}
            					else {
HXLINE( 131)						_hx_tmp = -2;
            					}
HXDLIN( 131)					this->opPriority->set(x1,_hx_tmp);
            				}
            			}
HXLINE( 130)			{
HXLINE( 130)				::String x2 = HX_("++",a0,25,00,00);
HXLINE( 131)				{
HXLINE( 131)					int _hx_tmp2;
HXDLIN( 131)					bool _hx_tmp3;
HXDLIN( 131)					if ((x2 != HX_("++",a0,25,00,00))) {
HXLINE( 131)						_hx_tmp3 = (x2 == HX_("--",60,27,00,00));
            					}
            					else {
HXLINE( 131)						_hx_tmp3 = true;
            					}
HXDLIN( 131)					if (_hx_tmp3) {
HXLINE( 131)						_hx_tmp2 = -1;
            					}
            					else {
HXLINE( 131)						_hx_tmp2 = -2;
            					}
HXDLIN( 131)					this->opPriority->set(x2,_hx_tmp2);
            				}
            			}
HXLINE( 130)			{
HXLINE( 130)				::String x3 = HX_("--",60,27,00,00);
HXLINE( 131)				{
HXLINE( 131)					int _hx_tmp4;
HXDLIN( 131)					bool _hx_tmp5;
HXDLIN( 131)					if ((x3 != HX_("++",a0,25,00,00))) {
HXLINE( 131)						_hx_tmp5 = (x3 == HX_("--",60,27,00,00));
            					}
            					else {
HXLINE( 131)						_hx_tmp5 = true;
            					}
HXDLIN( 131)					if (_hx_tmp5) {
HXLINE( 131)						_hx_tmp4 = -1;
            					}
            					else {
HXLINE( 131)						_hx_tmp4 = -2;
            					}
HXDLIN( 131)					this->opPriority->set(x3,_hx_tmp4);
            				}
            			}
HXLINE( 130)			{
HXLINE( 130)				::String x4 = HX_("~",7e,00,00,00);
HXLINE( 131)				{
HXLINE( 131)					int _hx_tmp6;
HXDLIN( 131)					bool _hx_tmp7;
HXDLIN( 131)					if ((x4 != HX_("++",a0,25,00,00))) {
HXLINE( 131)						_hx_tmp7 = (x4 == HX_("--",60,27,00,00));
            					}
            					else {
HXLINE( 131)						_hx_tmp7 = true;
            					}
HXDLIN( 131)					if (_hx_tmp7) {
HXLINE( 131)						_hx_tmp6 = -1;
            					}
            					else {
HXLINE( 131)						_hx_tmp6 = -2;
            					}
HXDLIN( 131)					this->opPriority->set(x4,_hx_tmp6);
            				}
            			}
            		}
            	}

Dynamic Parser_obj::__CreateEmpty() { return new Parser_obj; }

void *Parser_obj::_hx_vtable = 0;

Dynamic Parser_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Parser_obj > _hx_result = new Parser_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Parser_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x1b857072;
}

int Parser_obj::get_currentPos(){
            	HX_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_134_get_currentPos)
HXDLIN( 134)		return (this->readPos + this->offset);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,get_currentPos,return )

void Parser_obj::error( ::hscript::ErrorDef err,int pmin,int pmax){
            	HX_GC_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_137_error)
HXDLIN( 137)		if (!(this->resumeErrors)) {
HXLINE( 139)			HX_STACK_DO_THROW( ::hscript::Error_obj::__alloc( HX_CTX ,err,pmin,pmax,this->origin,this->line));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC3(Parser_obj,error,(void))

void Parser_obj::invalidChar(int c){
            	HX_GC_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_146_invalidChar)
HXDLIN( 146)		if (!(this->resumeErrors)) {
HXDLIN( 146)			HX_STACK_DO_THROW( ::hscript::Error_obj::__alloc( HX_CTX ,::hscript::ErrorDef_obj::EInvalidChar(c),(this->readPos - 1),(this->readPos - 1),this->origin,this->line));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,invalidChar,(void))

void Parser_obj::initParser(::String origin,int pos){
            	HX_GC_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_149_initParser)
HXLINE( 151)		this->preprocStack = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 153)		this->origin = origin;
HXLINE( 154)		this->readPos = 0;
HXLINE( 155)		this->tokenMin = (this->oldTokenMin = pos);
HXLINE( 156)		this->tokenMax = (this->oldTokenMax = pos);
HXLINE( 157)		this->tokens =  ::haxe::ds::List_obj::__alloc( HX_CTX );
HXLINE( 161)		this->offset = pos;
HXLINE( 162)		this->_hx_char = -1;
HXLINE( 163)		this->ops = ::Array_obj< bool >::__new();
HXLINE( 164)		this->idents = ::Array_obj< bool >::__new();
HXLINE( 165)		this->uid = 0;
HXLINE( 166)		{
HXLINE( 166)			int _g = 0;
HXDLIN( 166)			int _g1 = this->opChars.length;
HXDLIN( 166)			while((_g < _g1)){
HXLINE( 166)				_g = (_g + 1);
HXDLIN( 166)				int i = (_g - 1);
HXLINE( 167)				this->ops[( (int)(this->opChars.charCodeAt(i)) )] = true;
            			}
            		}
HXLINE( 168)		{
HXLINE( 168)			int _g2 = 0;
HXDLIN( 168)			int _g3 = this->identChars.length;
HXDLIN( 168)			while((_g2 < _g3)){
HXLINE( 168)				_g2 = (_g2 + 1);
HXDLIN( 168)				int i1 = (_g2 - 1);
HXLINE( 169)				this->idents[( (int)(this->identChars.charCodeAt(i1)) )] = true;
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(Parser_obj,initParser,(void))

 ::Dynamic Parser_obj::parseString(::String s,::String __o_origin, ::Dynamic __o_position){
            		::String origin = __o_origin;
            		if (::hx::IsNull(__o_origin)) origin = HX_("hscript",73,8c,18,2c);
            		 ::Dynamic position = __o_position;
            		if (::hx::IsNull(__o_position)) position = 0;
            	HX_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_172_parseString)
HXLINE( 173)		this->initParser(origin,( (int)(position) ));
HXLINE( 174)		this->input = s;
HXLINE( 175)		this->readPos = 0;
HXLINE( 176)		::Array< ::Dynamic> a = ::Array_obj< ::Dynamic>::__new();
HXLINE( 177)		while(true){
HXLINE( 178)			 ::hscript::Token tk = this->token();
HXLINE( 179)			if (::hx::IsPointerEq( tk,::hscript::Token_obj::TEof_dyn() )) {
HXLINE( 179)				goto _hx_goto_20;
            			}
HXLINE( 180)			{
HXLINE( 180)				this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            					->setFixed(0,HX_("t",74,00,00,00),tk)
            					->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            					->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN( 180)				this->tokenMin = this->oldTokenMin;
HXDLIN( 180)				this->tokenMax = this->oldTokenMax;
            			}
HXLINE( 181)			this->parseFullExpr(a);
            		}
            		_hx_goto_20:;
HXLINE( 183)		if ((a->length == 1)) {
HXLINE( 183)			return a->__get(0);
            		}
            		else {
HXLINE( 183)			 ::hscript::ExprDef e = ::hscript::ExprDef_obj::EBlock(a);
HXDLIN( 183)			 ::Dynamic pmin = 0;
HXDLIN( 183)			 ::Dynamic pmax = null();
HXDLIN( 183)			if (::hx::IsNull( e )) {
HXLINE( 183)				return null();
            			}
            			else {
HXLINE( 183)				if (::hx::IsNull( pmin )) {
HXLINE( 183)					pmin = this->tokenMin;
            				}
HXDLIN( 183)				if (::hx::IsNull( pmax )) {
HXLINE( 183)					pmax = this->tokenMax;
            				}
HXDLIN( 183)				return  ::Dynamic(::hx::Anon_obj::Create(5)
            					->setFixed(0,HX_("e",65,00,00,00),e)
            					->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            					->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax)
            					->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin)
            					->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            			}
            		}
HXDLIN( 183)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC3(Parser_obj,parseString,return )

 ::Dynamic Parser_obj::unexpected( ::hscript::Token tk){
            	HX_GC_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_186_unexpected)
HXLINE( 187)		{
HXLINE( 187)			 ::hscript::ErrorDef err = ::hscript::ErrorDef_obj::EUnexpected(this->tokenString(tk));
HXDLIN( 187)			if (!(this->resumeErrors)) {
HXLINE( 187)				HX_STACK_DO_THROW( ::hscript::Error_obj::__alloc( HX_CTX ,err,this->tokenMin,this->tokenMax,this->origin,this->line));
            			}
            		}
HXLINE( 188)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,unexpected,return )

void Parser_obj::push( ::hscript::Token tk){
            	HX_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_191_push)
HXLINE( 193)		this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            			->setFixed(0,HX_("t",74,00,00,00),tk)
            			->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            			->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXLINE( 194)		this->tokenMin = this->oldTokenMin;
HXLINE( 195)		this->tokenMax = this->oldTokenMax;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,push,(void))

void Parser_obj::ensure( ::hscript::Token tk){
            	HX_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_201_ensure)
HXLINE( 202)		 ::hscript::Token t = this->token();
HXLINE( 203)		if (::hx::IsPointerNotEq( t,tk )) {
HXLINE( 203)			this->unexpected(t);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,ensure,(void))

void Parser_obj::ensureToken( ::hscript::Token tk){
            	HX_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_206_ensureToken)
HXLINE( 207)		 ::hscript::Token t = this->token();
HXLINE( 208)		if (!(__hxcpp_enum_eq(t,tk))) {
HXLINE( 208)			this->unexpected(t);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,ensureToken,(void))

bool Parser_obj::maybe( ::hscript::Token tk){
            	HX_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_211_maybe)
HXLINE( 212)		 ::hscript::Token t = this->token();
HXLINE( 213)		if (__hxcpp_enum_eq(t,tk)) {
HXLINE( 214)			return true;
            		}
HXLINE( 215)		{
HXLINE( 215)			this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            				->setFixed(0,HX_("t",74,00,00,00),t)
            				->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            				->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN( 215)			this->tokenMin = this->oldTokenMin;
HXDLIN( 215)			this->tokenMax = this->oldTokenMax;
            		}
HXLINE( 216)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,maybe,return )

::String Parser_obj::getIdent(){
            	HX_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_219_getIdent)
HXLINE( 220)		 ::hscript::Token tk = this->token();
HXLINE( 221)		if ((tk->_hx_getIndex() == 2)) {
HXLINE( 222)			::String id = tk->_hx_getString(0);
HXDLIN( 222)			return id;
            		}
            		else {
HXLINE( 224)			this->unexpected(tk);
HXLINE( 225)			return null();
            		}
HXLINE( 221)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,getIdent,return )

 ::hscript::ExprDef Parser_obj::expr( ::Dynamic e){
            	HX_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_231_expr)
HXDLIN( 231)		return e->__Field(HX_("e",65,00,00,00),::hx::paccDynamic);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,expr,return )

int Parser_obj::pmin( ::Dynamic e){
            	HX_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_239_pmin)
HXDLIN( 239)		if (::hx::IsNull( e )) {
HXDLIN( 239)			return 0;
            		}
            		else {
HXDLIN( 239)			return ( (int)(e->__Field(HX_("pmin",22,f7,5a,4a),::hx::paccDynamic)) );
            		}
HXDLIN( 239)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,pmin,return )

int Parser_obj::pmax( ::Dynamic e){
            	HX_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_247_pmax)
HXDLIN( 247)		if (::hx::IsNull( e )) {
HXDLIN( 247)			return 0;
            		}
            		else {
HXDLIN( 247)			return ( (int)(e->__Field(HX_("pmax",34,f0,5a,4a),::hx::paccDynamic)) );
            		}
HXDLIN( 247)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,pmax,return )

 ::Dynamic Parser_obj::mk( ::hscript::ExprDef e, ::Dynamic pmin, ::Dynamic pmax){
            	HX_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_253_mk)
HXLINE( 255)		if (::hx::IsNull( e )) {
HXLINE( 255)			return null();
            		}
HXLINE( 256)		if (::hx::IsNull( pmin )) {
HXLINE( 256)			pmin = this->tokenMin;
            		}
HXLINE( 257)		if (::hx::IsNull( pmax )) {
HXLINE( 257)			pmax = this->tokenMax;
            		}
HXLINE( 258)		return  ::Dynamic(::hx::Anon_obj::Create(5)
            			->setFixed(0,HX_("e",65,00,00,00),e)
            			->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            			->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax)
            			->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin)
            			->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            	}


HX_DEFINE_DYNAMIC_FUNC3(Parser_obj,mk,return )

bool Parser_obj::isBlock( ::Dynamic e){
            	HX_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_264_isBlock)
HXLINE( 265)		if (::hx::IsNull( e )) {
HXLINE( 265)			return false;
            		}
HXLINE( 266)		 ::hscript::ExprDef _g = e->__Field(HX_("e",65,00,00,00),::hx::paccDynamic);
HXDLIN( 266)		switch((int)(_g->_hx_getIndex())){
            			case (int)2: {
HXLINE( 269)				::String _g1 = _g->_hx_getString(0);
HXDLIN( 269)				 ::hscript::CType t = _g->_hx_getObject(1).StaticCast<  ::hscript::CType >();
HXDLIN( 269)				 ::Dynamic e1 = _g->_hx_getObject(2);
HXDLIN( 269)				if (::hx::IsNotNull( e1 )) {
HXLINE( 269)					return this->isBlock(e1);
            				}
            				else {
HXLINE( 269)					if (::hx::IsNotNull( t )) {
HXLINE( 269)						if (::hx::IsNull( t )) {
HXLINE( 269)							return false;
            						}
            						else {
HXLINE( 269)							if ((t->_hx_getIndex() == 2)) {
HXLINE( 269)								::Array< ::Dynamic> _g2 = t->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 269)								return true;
            							}
            							else {
HXLINE( 269)								return false;
            							}
            						}
            					}
            					else {
HXLINE( 269)						return false;
            					}
            				}
            			}
            			break;
            			case (int)4: {
HXLINE( 267)				::Array< ::Dynamic> _g3 = _g->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 267)				return true;
            			}
            			break;
            			case (int)6: {
HXLINE( 271)				::String _g4 = _g->_hx_getString(0);
HXDLIN( 271)				 ::Dynamic _g5 = _g->_hx_getObject(1);
HXDLIN( 271)				 ::Dynamic e2 = _g->_hx_getObject(2);
HXDLIN( 271)				return this->isBlock(e2);
            			}
            			break;
            			case (int)7: {
HXLINE( 272)				::String _g6 = _g->_hx_getString(0);
HXDLIN( 272)				bool prefix = _g->_hx_getBool(1);
HXDLIN( 272)				 ::Dynamic e3 = _g->_hx_getObject(2);
HXDLIN( 272)				if (!(prefix)) {
HXLINE( 272)					return this->isBlock(e3);
            				}
            				else {
HXLINE( 272)					return false;
            				}
            			}
            			break;
            			case (int)9: {
HXLINE( 270)				 ::Dynamic _g7 = _g->_hx_getObject(0);
HXDLIN( 270)				 ::Dynamic e11 = _g->_hx_getObject(1);
HXDLIN( 270)				 ::Dynamic e21 = _g->_hx_getObject(2);
HXDLIN( 270)				if (::hx::IsNotNull( e21 )) {
HXLINE( 270)					return this->isBlock(e21);
            				}
            				else {
HXLINE( 270)					return this->isBlock(e11);
            				}
            			}
            			break;
            			case (int)10: {
HXLINE( 273)				 ::Dynamic _g8 = _g->_hx_getObject(0);
HXDLIN( 273)				 ::Dynamic e4 = _g->_hx_getObject(1);
HXDLIN( 273)				return this->isBlock(e4);
            			}
            			break;
            			case (int)11: {
HXLINE( 275)				::String _g9 = _g->_hx_getString(0);
HXDLIN( 275)				 ::Dynamic _g10 = _g->_hx_getObject(1);
HXDLIN( 275)				 ::Dynamic e5 = _g->_hx_getObject(2);
HXDLIN( 275)				return this->isBlock(e5);
            			}
            			break;
            			case (int)14: {
HXLINE( 268)				::Array< ::Dynamic> _g11 = _g->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 268)				::String _g12 = _g->_hx_getString(2);
HXDLIN( 268)				 ::hscript::CType _g13 = _g->_hx_getObject(3).StaticCast<  ::hscript::CType >();
HXDLIN( 268)				 ::Dynamic e6 = _g->_hx_getObject(1);
HXDLIN( 268)				return this->isBlock(e6);
            			}
            			break;
            			case (int)15: {
HXLINE( 276)				 ::Dynamic e7 = _g->_hx_getObject(0);
HXDLIN( 276)				if (::hx::IsNotNull( e7 )) {
HXLINE( 276)					return this->isBlock(e7);
            				}
            				else {
HXLINE( 276)					return false;
            				}
            			}
            			break;
            			case (int)20: {
HXLINE( 277)				 ::Dynamic _g14 = _g->_hx_getObject(0);
HXDLIN( 277)				::String _g15 = _g->_hx_getString(1);
HXDLIN( 277)				 ::hscript::CType _g16 = _g->_hx_getObject(2).StaticCast<  ::hscript::CType >();
HXDLIN( 277)				 ::Dynamic e8 = _g->_hx_getObject(3);
HXDLIN( 277)				return this->isBlock(e8);
            			}
            			break;
            			case (int)21: {
HXLINE( 267)				::Array< ::Dynamic> _g17 = _g->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 267)				return true;
            			}
            			break;
            			case (int)23: {
HXLINE( 267)				 ::Dynamic _g18 = _g->_hx_getObject(0);
HXDLIN( 267)				::Array< ::Dynamic> _g19 = _g->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 267)				 ::Dynamic _g20 = _g->_hx_getObject(2);
HXDLIN( 267)				return true;
            			}
            			break;
            			case (int)24: {
HXLINE( 274)				 ::Dynamic _g21 = _g->_hx_getObject(0);
HXDLIN( 274)				 ::Dynamic e9 = _g->_hx_getObject(1);
HXDLIN( 274)				return this->isBlock(e9);
            			}
            			break;
            			case (int)25: {
HXLINE( 278)				::String _g22 = _g->_hx_getString(0);
HXDLIN( 278)				::Array< ::Dynamic> _g23 = _g->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 278)				 ::Dynamic e10 = _g->_hx_getObject(2);
HXDLIN( 278)				return this->isBlock(e10);
            			}
            			break;
            			default:{
HXLINE( 279)				return false;
            			}
            		}
HXLINE( 266)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,isBlock,return )

void Parser_obj::parseFullExpr(::Array< ::Dynamic> exprs){
            	HX_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_283_parseFullExpr)
HXLINE( 284)		 ::Dynamic e = this->parseExpr();
HXLINE( 285)		exprs->push(e);
HXLINE( 287)		 ::hscript::Token tk = this->token();
HXLINE( 289)		while(true){
HXLINE( 289)			bool _hx_tmp;
HXDLIN( 289)			bool _hx_tmp1;
HXDLIN( 289)			if (::hx::IsPointerEq( tk,::hscript::Token_obj::TComma_dyn() )) {
HXLINE( 289)				_hx_tmp1 = ::hx::IsNotNull( e );
            			}
            			else {
HXLINE( 289)				_hx_tmp1 = false;
            			}
HXDLIN( 289)			if (_hx_tmp1) {
HXLINE( 289)				 ::hscript::ExprDef _g = e->__Field(HX_("e",65,00,00,00),::hx::paccDynamic);
HXDLIN( 289)				if ((_g->_hx_getIndex() == 2)) {
HXLINE( 289)					::String _g1 = _g->_hx_getString(0);
HXDLIN( 289)					 ::hscript::CType _g2 = _g->_hx_getObject(1).StaticCast<  ::hscript::CType >();
HXDLIN( 289)					 ::Dynamic _g3 = _g->_hx_getObject(2);
HXDLIN( 289)					_hx_tmp = true;
            				}
            				else {
HXLINE( 289)					_hx_tmp = false;
            				}
            			}
            			else {
HXLINE( 289)				_hx_tmp = false;
            			}
HXDLIN( 289)			if (!(_hx_tmp)) {
HXLINE( 289)				goto _hx_goto_33;
            			}
HXLINE( 290)			e = this->parseStructure(HX_("var",e7,de,59,00));
HXLINE( 291)			exprs->push(e);
HXLINE( 292)			tk = this->token();
            		}
            		_hx_goto_33:;
HXLINE( 295)		bool _hx_tmp2;
HXDLIN( 295)		if (::hx::IsPointerNotEq( tk,::hscript::Token_obj::TSemicolon_dyn() )) {
HXLINE( 295)			_hx_tmp2 = ::hx::IsPointerNotEq( tk,::hscript::Token_obj::TEof_dyn() );
            		}
            		else {
HXLINE( 295)			_hx_tmp2 = false;
            		}
HXDLIN( 295)		if (_hx_tmp2) {
HXLINE( 296)			if (this->isBlock(e)) {
HXLINE( 297)				this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            					->setFixed(0,HX_("t",74,00,00,00),tk)
            					->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            					->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN( 297)				this->tokenMin = this->oldTokenMin;
HXDLIN( 297)				this->tokenMax = this->oldTokenMax;
            			}
            			else {
HXLINE( 299)				this->unexpected(tk);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,parseFullExpr,(void))

 ::Dynamic Parser_obj::parseObject( ::Dynamic p1){
            	HX_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_303_parseObject)
HXLINE( 305)		::Array< ::Dynamic> fl = ::Array_obj< ::Dynamic>::__new();
HXLINE( 306)		while(true){
HXLINE( 307)			 ::hscript::Token tk = this->token();
HXLINE( 308)			::String id = null();
HXLINE( 309)			switch((int)(tk->_hx_getIndex())){
            				case (int)1: {
HXLINE( 311)					 ::hscript::Const c = tk->_hx_getObject(0).StaticCast<  ::hscript::Const >();
HXDLIN( 311)					{
HXLINE( 312)						if (!(this->allowJSON)) {
HXLINE( 313)							this->unexpected(tk);
            						}
HXLINE( 314)						if ((c->_hx_getIndex() == 2)) {
HXLINE( 315)							::String s = c->_hx_getString(0);
HXDLIN( 315)							id = s;
            						}
            						else {
HXLINE( 316)							this->unexpected(tk);
            						}
            					}
            				}
            				break;
            				case (int)2: {
HXLINE( 310)					::String i = tk->_hx_getString(0);
HXDLIN( 310)					id = i;
            				}
            				break;
            				case (int)7: {
HXLINE( 319)					goto _hx_goto_35;
            				}
            				break;
            				default:{
HXLINE( 321)					this->unexpected(tk);
HXLINE( 322)					goto _hx_goto_35;
            				}
            			}
HXLINE( 324)			{
HXLINE( 324)				 ::hscript::Token t = this->token();
HXDLIN( 324)				if (::hx::IsPointerNotEq( t,::hscript::Token_obj::TDoubleDot_dyn() )) {
HXLINE( 324)					this->unexpected(t);
            				}
            			}
HXLINE( 325)			fl->push( ::Dynamic(::hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("e",65,00,00,00),this->parseExpr())
            				->setFixed(1,HX_("name",4b,72,ff,48),id)));
HXLINE( 326)			tk = this->token();
HXLINE( 327)			switch((int)(tk->_hx_getIndex())){
            				case (int)7: {
HXLINE( 329)					goto _hx_goto_35;
            				}
            				break;
            				case (int)10: {
            				}
            				break;
            				default:{
HXLINE( 332)					this->unexpected(tk);
            				}
            			}
            		}
            		_hx_goto_35:;
HXLINE( 335)		 ::hscript::ExprDef e = ::hscript::ExprDef_obj::EObject(fl);
HXDLIN( 335)		 ::Dynamic pmin = p1;
HXDLIN( 335)		 ::Dynamic pmax = null();
HXDLIN( 335)		 ::Dynamic _hx_tmp;
HXDLIN( 335)		if (::hx::IsNull( e )) {
HXLINE( 335)			_hx_tmp = null();
            		}
            		else {
HXLINE( 335)			if (::hx::IsNull( pmin )) {
HXLINE( 335)				pmin = this->tokenMin;
            			}
HXDLIN( 335)			if (::hx::IsNull( pmax )) {
HXLINE( 335)				pmax = this->tokenMax;
            			}
HXDLIN( 335)			_hx_tmp =  ::Dynamic(::hx::Anon_obj::Create(5)
            				->setFixed(0,HX_("e",65,00,00,00),e)
            				->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            				->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax)
            				->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin)
            				->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            		}
HXDLIN( 335)		return this->parseExprNext(_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,parseObject,return )

 ::Dynamic Parser_obj::parseExpr(){
            	HX_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_338_parseExpr)
HXLINE( 339)		 ::hscript::Token tk = this->token();
HXLINE( 341)		int p1 = this->tokenMin;
HXLINE( 343)		switch((int)(tk->_hx_getIndex())){
            			case (int)1: {
HXLINE( 349)				 ::hscript::Const c = tk->_hx_getObject(0).StaticCast<  ::hscript::Const >();
HXLINE( 350)				 ::hscript::ExprDef e = ::hscript::ExprDef_obj::EConst(c);
HXDLIN( 350)				 ::Dynamic pmin = null();
HXDLIN( 350)				 ::Dynamic pmax = null();
HXDLIN( 350)				 ::Dynamic _hx_tmp;
HXDLIN( 350)				if (::hx::IsNull( e )) {
HXLINE( 350)					_hx_tmp = null();
            				}
            				else {
HXLINE( 350)					if (::hx::IsNull( pmin )) {
HXLINE( 350)						pmin = this->tokenMin;
            					}
HXDLIN( 350)					if (::hx::IsNull( pmax )) {
HXLINE( 350)						pmax = this->tokenMax;
            					}
HXDLIN( 350)					_hx_tmp =  ::Dynamic(::hx::Anon_obj::Create(5)
            						->setFixed(0,HX_("e",65,00,00,00),e)
            						->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            						->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax)
            						->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin)
            						->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            				}
HXDLIN( 350)				return this->parseExprNext(_hx_tmp);
            			}
            			break;
            			case (int)2: {
HXLINE( 344)				::String id = tk->_hx_getString(0);
HXLINE( 345)				 ::Dynamic e1 = this->parseStructure(id);
HXLINE( 346)				if (::hx::IsNull( e1 )) {
HXLINE( 347)					 ::hscript::ExprDef e2 = ::hscript::ExprDef_obj::EIdent(id);
HXDLIN( 347)					 ::Dynamic pmin1 = null();
HXDLIN( 347)					 ::Dynamic pmax1 = null();
HXDLIN( 347)					if (::hx::IsNull( e2 )) {
HXLINE( 347)						e1 = null();
            					}
            					else {
HXLINE( 347)						if (::hx::IsNull( pmin1 )) {
HXLINE( 347)							pmin1 = this->tokenMin;
            						}
HXDLIN( 347)						if (::hx::IsNull( pmax1 )) {
HXLINE( 347)							pmax1 = this->tokenMax;
            						}
HXDLIN( 347)						e1 =  ::Dynamic(::hx::Anon_obj::Create(5)
            							->setFixed(0,HX_("e",65,00,00,00),e2)
            							->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            							->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax1)
            							->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin1)
            							->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            					}
            				}
HXLINE( 348)				return this->parseExprNext(e1);
            			}
            			break;
            			case (int)3: {
HXLINE( 428)				::String op = tk->_hx_getString(0);
HXLINE( 429)				if ((op == HX_("-",2d,00,00,00))) {
HXLINE( 430)					int start = this->tokenMin;
HXLINE( 431)					 ::Dynamic e3 = this->parseExpr();
HXLINE( 432)					if (::hx::IsNull( e3 )) {
HXLINE( 433)						return this->makeUnop(op,e3);
            					}
HXLINE( 434)					 ::hscript::ExprDef _g = e3->__Field(HX_("e",65,00,00,00),::hx::paccDynamic);
HXDLIN( 434)					if ((_g->_hx_getIndex() == 0)) {
HXLINE( 437)						 ::hscript::Const _g1 = _g->_hx_getObject(0).StaticCast<  ::hscript::Const >();
HXDLIN( 437)						switch((int)(_g1->_hx_getIndex())){
            							case (int)0: {
HXLINE( 435)								int i = _g1->_hx_getInt(0);
HXLINE( 436)								 ::hscript::ExprDef e4 = ::hscript::ExprDef_obj::EConst(::hscript::Const_obj::CInt(-(i)));
HXDLIN( 436)								 ::Dynamic pmin2 = start;
HXDLIN( 436)								 ::Dynamic pmax2;
HXDLIN( 436)								if (::hx::IsNull( e3 )) {
HXLINE( 436)									pmax2 = 0;
            								}
            								else {
HXLINE( 436)									pmax2 = e3->__Field(HX_("pmax",34,f0,5a,4a),::hx::paccDynamic);
            								}
HXDLIN( 436)								if (::hx::IsNull( e4 )) {
HXLINE( 436)									return null();
            								}
            								else {
HXLINE( 436)									if (::hx::IsNull( pmin2 )) {
HXLINE( 436)										pmin2 = this->tokenMin;
            									}
HXDLIN( 436)									if (::hx::IsNull( pmax2 )) {
HXLINE( 436)										pmax2 = this->tokenMax;
            									}
HXDLIN( 436)									return  ::Dynamic(::hx::Anon_obj::Create(5)
            										->setFixed(0,HX_("e",65,00,00,00),e4)
            										->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            										->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax2)
            										->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin2)
            										->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            								}
            							}
            							break;
            							case (int)1: {
HXLINE( 437)								Float f = _g1->_hx_getFloat(0);
HXLINE( 438)								 ::hscript::ExprDef e5 = ::hscript::ExprDef_obj::EConst(::hscript::Const_obj::CFloat(-(f)));
HXDLIN( 438)								 ::Dynamic pmin3 = start;
HXDLIN( 438)								 ::Dynamic pmax3;
HXDLIN( 438)								if (::hx::IsNull( e3 )) {
HXLINE( 438)									pmax3 = 0;
            								}
            								else {
HXLINE( 438)									pmax3 = e3->__Field(HX_("pmax",34,f0,5a,4a),::hx::paccDynamic);
            								}
HXDLIN( 438)								if (::hx::IsNull( e5 )) {
HXLINE( 438)									return null();
            								}
            								else {
HXLINE( 438)									if (::hx::IsNull( pmin3 )) {
HXLINE( 438)										pmin3 = this->tokenMin;
            									}
HXDLIN( 438)									if (::hx::IsNull( pmax3 )) {
HXLINE( 438)										pmax3 = this->tokenMax;
            									}
HXDLIN( 438)									return  ::Dynamic(::hx::Anon_obj::Create(5)
            										->setFixed(0,HX_("e",65,00,00,00),e5)
            										->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            										->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax3)
            										->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin3)
            										->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            								}
            							}
            							break;
            							default:{
HXLINE( 440)								return this->makeUnop(op,e3);
            							}
            						}
            					}
            					else {
HXLINE( 440)						return this->makeUnop(op,e3);
            					}
            				}
HXLINE( 443)				if (::hx::IsLess( this->opPriority->get(op),0 )) {
HXLINE( 444)					return this->makeUnop(op,this->parseExpr());
            				}
HXLINE( 445)				return this->unexpected(tk);
            			}
            			break;
            			case (int)4: {
HXLINE( 352)				tk = this->token();
HXLINE( 353)				if (::hx::IsPointerEq( tk,::hscript::Token_obj::TPClose_dyn() )) {
HXLINE( 354)					{
HXLINE( 354)						 ::hscript::Token t = this->token();
HXDLIN( 354)						if (!(__hxcpp_enum_eq(t,::hscript::Token_obj::TOp(HX_("->",71,27,00,00))))) {
HXLINE( 354)							this->unexpected(t);
            						}
            					}
HXLINE( 355)					 ::Dynamic eret = this->parseExpr();
HXLINE( 356)					 ::hscript::ExprDef e6 = ::hscript::ExprDef_obj::EReturn(eret);
HXDLIN( 356)					 ::Dynamic pmin4 = p1;
HXDLIN( 356)					 ::Dynamic pmax4 = null();
HXDLIN( 356)					 ::Dynamic e7;
HXDLIN( 356)					if (::hx::IsNull( e6 )) {
HXLINE( 356)						e7 = null();
            					}
            					else {
HXLINE( 356)						if (::hx::IsNull( pmin4 )) {
HXLINE( 356)							pmin4 = this->tokenMin;
            						}
HXDLIN( 356)						if (::hx::IsNull( pmax4 )) {
HXLINE( 356)							pmax4 = this->tokenMax;
            						}
HXDLIN( 356)						e7 =  ::Dynamic(::hx::Anon_obj::Create(5)
            							->setFixed(0,HX_("e",65,00,00,00),e6)
            							->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            							->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax4)
            							->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin4)
            							->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            					}
HXDLIN( 356)					 ::hscript::ExprDef e8 = ::hscript::ExprDef_obj::EFunction(::Array_obj< ::Dynamic>::__new(0),e7,null(),null());
HXDLIN( 356)					 ::Dynamic pmin5 = p1;
HXDLIN( 356)					 ::Dynamic pmax5 = null();
HXDLIN( 356)					if (::hx::IsNull( e8 )) {
HXLINE( 356)						return null();
            					}
            					else {
HXLINE( 356)						if (::hx::IsNull( pmin5 )) {
HXLINE( 356)							pmin5 = this->tokenMin;
            						}
HXDLIN( 356)						if (::hx::IsNull( pmax5 )) {
HXLINE( 356)							pmax5 = this->tokenMax;
            						}
HXDLIN( 356)						return  ::Dynamic(::hx::Anon_obj::Create(5)
            							->setFixed(0,HX_("e",65,00,00,00),e8)
            							->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            							->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax5)
            							->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin5)
            							->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            					}
            				}
HXLINE( 358)				{
HXLINE( 358)					this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            						->setFixed(0,HX_("t",74,00,00,00),tk)
            						->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            						->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN( 358)					this->tokenMin = this->oldTokenMin;
HXDLIN( 358)					this->tokenMax = this->oldTokenMax;
            				}
HXLINE( 359)				 ::Dynamic e9 = this->parseExpr();
HXLINE( 360)				tk = this->token();
HXLINE( 361)				switch((int)(tk->_hx_getIndex())){
            					case (int)5: {
HXLINE( 363)						 ::hscript::ExprDef e10 = ::hscript::ExprDef_obj::EParent(e9);
HXDLIN( 363)						 ::Dynamic pmin6 = p1;
HXDLIN( 363)						 ::Dynamic pmax6 = this->tokenMax;
HXDLIN( 363)						 ::Dynamic _hx_tmp1;
HXDLIN( 363)						if (::hx::IsNull( e10 )) {
HXLINE( 363)							_hx_tmp1 = null();
            						}
            						else {
HXLINE( 363)							if (::hx::IsNull( pmin6 )) {
HXLINE( 363)								pmin6 = this->tokenMin;
            							}
HXDLIN( 363)							if (::hx::IsNull( pmax6 )) {
HXLINE( 363)								pmax6 = this->tokenMax;
            							}
HXDLIN( 363)							_hx_tmp1 =  ::Dynamic(::hx::Anon_obj::Create(5)
            								->setFixed(0,HX_("e",65,00,00,00),e10)
            								->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            								->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax6)
            								->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin6)
            								->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            						}
HXDLIN( 363)						return this->parseExprNext(_hx_tmp1);
            					}
            					break;
            					case (int)10: {
HXLINE( 378)						 ::hscript::ExprDef _g2 = e9->__Field(HX_("e",65,00,00,00),::hx::paccDynamic);
HXDLIN( 378)						if ((_g2->_hx_getIndex() == 1)) {
HXLINE( 379)							::String v = _g2->_hx_getString(0);
HXDLIN( 379)							int _hx_tmp2;
HXDLIN( 379)							if (::hx::IsNull( e9 )) {
HXLINE( 379)								_hx_tmp2 = 0;
            							}
            							else {
HXLINE( 379)								_hx_tmp2 = ( (int)(e9->__Field(HX_("pmin",22,f7,5a,4a),::hx::paccDynamic)) );
            							}
HXDLIN( 379)							return this->parseLambda(::Array_obj< ::Dynamic>::__new(1)->init(0, ::Dynamic(::hx::Anon_obj::Create(1)
            								->setFixed(0,HX_("name",4b,72,ff,48),v))),_hx_tmp2);
            						}
            					}
            					break;
            					case (int)15: {
HXLINE( 365)						 ::hscript::CType t1 = this->parseType();
HXLINE( 366)						tk = this->token();
HXLINE( 367)						switch((int)(tk->_hx_getIndex())){
            							case (int)5: {
HXLINE( 369)								 ::hscript::ExprDef e11 = ::hscript::ExprDef_obj::ECheckType(e9,t1);
HXDLIN( 369)								 ::Dynamic pmin7 = p1;
HXDLIN( 369)								 ::Dynamic pmax7 = this->tokenMax;
HXDLIN( 369)								 ::Dynamic _hx_tmp3;
HXDLIN( 369)								if (::hx::IsNull( e11 )) {
HXLINE( 369)									_hx_tmp3 = null();
            								}
            								else {
HXLINE( 369)									if (::hx::IsNull( pmin7 )) {
HXLINE( 369)										pmin7 = this->tokenMin;
            									}
HXDLIN( 369)									if (::hx::IsNull( pmax7 )) {
HXLINE( 369)										pmax7 = this->tokenMax;
            									}
HXDLIN( 369)									_hx_tmp3 =  ::Dynamic(::hx::Anon_obj::Create(5)
            										->setFixed(0,HX_("e",65,00,00,00),e11)
            										->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            										->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax7)
            										->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin7)
            										->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            								}
HXDLIN( 369)								return this->parseExprNext(_hx_tmp3);
            							}
            							break;
            							case (int)10: {
HXLINE( 371)								 ::hscript::ExprDef _g3 = e9->__Field(HX_("e",65,00,00,00),::hx::paccDynamic);
HXDLIN( 371)								if ((_g3->_hx_getIndex() == 1)) {
HXLINE( 372)									::String v1 = _g3->_hx_getString(0);
HXDLIN( 372)									int _hx_tmp4;
HXDLIN( 372)									if (::hx::IsNull( e9 )) {
HXLINE( 372)										_hx_tmp4 = 0;
            									}
            									else {
HXLINE( 372)										_hx_tmp4 = ( (int)(e9->__Field(HX_("pmin",22,f7,5a,4a),::hx::paccDynamic)) );
            									}
HXDLIN( 372)									return this->parseLambda(::Array_obj< ::Dynamic>::__new(1)->init(0, ::Dynamic(::hx::Anon_obj::Create(2)
            										->setFixed(0,HX_("t",74,00,00,00),t1)
            										->setFixed(1,HX_("name",4b,72,ff,48),v1))),_hx_tmp4);
            								}
            							}
            							break;
            							default:{
            							}
            						}
            					}
            					break;
            					default:{
            					}
            				}
HXLINE( 384)				return this->unexpected(tk);
            			}
            			break;
            			case (int)6: {
HXLINE( 386)				tk = this->token();
HXLINE( 387)				switch((int)(tk->_hx_getIndex())){
            					case (int)1: {
HXLINE( 399)						 ::hscript::Const c1 = tk->_hx_getObject(0).StaticCast<  ::hscript::Const >();
HXLINE( 400)						if (this->allowJSON) {
HXLINE( 401)							if ((c1->_hx_getIndex() == 2)) {
HXLINE( 402)								::String _g4 = c1->_hx_getString(0);
HXDLIN( 402)								{
HXLINE( 403)									 ::hscript::Token tk2 = this->token();
HXLINE( 404)									{
HXLINE( 404)										this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            											->setFixed(0,HX_("t",74,00,00,00),tk2)
            											->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            											->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN( 404)										this->tokenMin = this->oldTokenMin;
HXDLIN( 404)										this->tokenMax = this->oldTokenMax;
            									}
HXLINE( 405)									{
HXLINE( 405)										this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            											->setFixed(0,HX_("t",74,00,00,00),tk)
            											->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            											->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN( 405)										this->tokenMin = this->oldTokenMin;
HXDLIN( 405)										this->tokenMax = this->oldTokenMax;
            									}
HXLINE( 406)									if ((tk2->_hx_getIndex() == 15)) {
HXLINE( 408)										return this->parseExprNext(this->parseObject(p1));
            									}
            								}
            							}
            							else {
HXLINE( 412)								this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            									->setFixed(0,HX_("t",74,00,00,00),tk)
            									->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            									->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN( 412)								this->tokenMin = this->oldTokenMin;
HXDLIN( 412)								this->tokenMax = this->oldTokenMax;
            							}
            						}
            						else {
HXLINE( 415)							this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            								->setFixed(0,HX_("t",74,00,00,00),tk)
            								->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            								->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN( 415)							this->tokenMin = this->oldTokenMin;
HXDLIN( 415)							this->tokenMax = this->oldTokenMax;
            						}
            					}
            					break;
            					case (int)2: {
HXLINE( 390)						::String _g5 = tk->_hx_getString(0);
HXDLIN( 390)						{
HXLINE( 391)							 ::hscript::Token tk21 = this->token();
HXLINE( 392)							{
HXLINE( 392)								this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            									->setFixed(0,HX_("t",74,00,00,00),tk21)
            									->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            									->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN( 392)								this->tokenMin = this->oldTokenMin;
HXDLIN( 392)								this->tokenMax = this->oldTokenMax;
            							}
HXLINE( 393)							{
HXLINE( 393)								this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            									->setFixed(0,HX_("t",74,00,00,00),tk)
            									->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            									->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN( 393)								this->tokenMin = this->oldTokenMin;
HXDLIN( 393)								this->tokenMax = this->oldTokenMax;
            							}
HXLINE( 394)							if ((tk21->_hx_getIndex() == 15)) {
HXLINE( 396)								return this->parseExprNext(this->parseObject(p1));
            							}
            						}
            					}
            					break;
            					case (int)7: {
HXLINE( 389)						 ::hscript::ExprDef e12 = ::hscript::ExprDef_obj::EObject(::Array_obj< ::Dynamic>::__new(0));
HXDLIN( 389)						 ::Dynamic pmin8 = p1;
HXDLIN( 389)						 ::Dynamic pmax8 = null();
HXDLIN( 389)						 ::Dynamic _hx_tmp5;
HXDLIN( 389)						if (::hx::IsNull( e12 )) {
HXLINE( 389)							_hx_tmp5 = null();
            						}
            						else {
HXLINE( 389)							if (::hx::IsNull( pmin8 )) {
HXLINE( 389)								pmin8 = this->tokenMin;
            							}
HXDLIN( 389)							if (::hx::IsNull( pmax8 )) {
HXLINE( 389)								pmax8 = this->tokenMax;
            							}
HXDLIN( 389)							_hx_tmp5 =  ::Dynamic(::hx::Anon_obj::Create(5)
            								->setFixed(0,HX_("e",65,00,00,00),e12)
            								->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            								->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax8)
            								->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin8)
            								->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            						}
HXDLIN( 389)						return this->parseExprNext(_hx_tmp5);
            					}
            					break;
            					default:{
HXLINE( 417)						this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            							->setFixed(0,HX_("t",74,00,00,00),tk)
            							->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            							->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN( 417)						this->tokenMin = this->oldTokenMin;
HXDLIN( 417)						this->tokenMax = this->oldTokenMax;
            					}
            				}
HXLINE( 419)				::Array< ::Dynamic> a = ::Array_obj< ::Dynamic>::__new();
HXLINE( 420)				while(true){
HXLINE( 421)					this->parseFullExpr(a);
HXLINE( 422)					tk = this->token();
HXLINE( 423)					bool _hx_tmp6;
HXDLIN( 423)					if (::hx::IsPointerNotEq( tk,::hscript::Token_obj::TBrClose_dyn() )) {
HXLINE( 423)						if (this->resumeErrors) {
HXLINE( 423)							_hx_tmp6 = ::hx::IsPointerEq( tk,::hscript::Token_obj::TEof_dyn() );
            						}
            						else {
HXLINE( 423)							_hx_tmp6 = false;
            						}
            					}
            					else {
HXLINE( 423)						_hx_tmp6 = true;
            					}
HXDLIN( 423)					if (_hx_tmp6) {
HXLINE( 424)						goto _hx_goto_37;
            					}
HXLINE( 425)					{
HXLINE( 425)						this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            							->setFixed(0,HX_("t",74,00,00,00),tk)
            							->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            							->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN( 425)						this->tokenMin = this->oldTokenMin;
HXDLIN( 425)						this->tokenMax = this->oldTokenMax;
            					}
            				}
            				_hx_goto_37:;
HXLINE( 427)				 ::hscript::ExprDef e13 = ::hscript::ExprDef_obj::EBlock(a);
HXDLIN( 427)				 ::Dynamic pmin9 = p1;
HXDLIN( 427)				 ::Dynamic pmax9 = null();
HXDLIN( 427)				if (::hx::IsNull( e13 )) {
HXLINE( 427)					return null();
            				}
            				else {
HXLINE( 427)					if (::hx::IsNull( pmin9 )) {
HXLINE( 427)						pmin9 = this->tokenMin;
            					}
HXDLIN( 427)					if (::hx::IsNull( pmax9 )) {
HXLINE( 427)						pmax9 = this->tokenMax;
            					}
HXDLIN( 427)					return  ::Dynamic(::hx::Anon_obj::Create(5)
            						->setFixed(0,HX_("e",65,00,00,00),e13)
            						->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            						->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax9)
            						->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin9)
            						->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            				}
            			}
            			break;
            			case (int)12: {
HXLINE( 447)				::Array< ::Dynamic> a1 = ::Array_obj< ::Dynamic>::__new();
HXLINE( 448)				tk = this->token();
HXLINE( 449)				while(true){
HXLINE( 449)					bool _hx_tmp7;
HXDLIN( 449)					if (::hx::IsPointerNotEq( tk,::hscript::Token_obj::TBkClose_dyn() )) {
HXLINE( 449)						if (this->resumeErrors) {
HXLINE( 449)							_hx_tmp7 = ::hx::IsPointerNotEq( tk,::hscript::Token_obj::TEof_dyn() );
            						}
            						else {
HXLINE( 449)							_hx_tmp7 = true;
            						}
            					}
            					else {
HXLINE( 449)						_hx_tmp7 = false;
            					}
HXDLIN( 449)					if (!(_hx_tmp7)) {
HXLINE( 449)						goto _hx_goto_38;
            					}
HXLINE( 450)					{
HXLINE( 450)						this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            							->setFixed(0,HX_("t",74,00,00,00),tk)
            							->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            							->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN( 450)						this->tokenMin = this->oldTokenMin;
HXDLIN( 450)						this->tokenMax = this->oldTokenMax;
            					}
HXLINE( 451)					a1->push(this->parseExpr());
HXLINE( 452)					tk = this->token();
HXLINE( 453)					if (::hx::IsPointerEq( tk,::hscript::Token_obj::TComma_dyn() )) {
HXLINE( 454)						tk = this->token();
            					}
            				}
            				_hx_goto_38:;
HXLINE( 456)				bool _hx_tmp8;
HXDLIN( 456)				if ((a1->length == 1)) {
HXLINE( 456)					_hx_tmp8 = ::hx::IsNotNull( a1->__get(0) );
            				}
            				else {
HXLINE( 456)					_hx_tmp8 = false;
            				}
HXDLIN( 456)				if (_hx_tmp8) {
HXLINE( 457)					 ::hscript::ExprDef _g6 = a1->__get(0)->__Field(HX_("e",65,00,00,00),::hx::paccDynamic);
HXDLIN( 457)					switch((int)(_g6->_hx_getIndex())){
            						case (int)10: {
HXLINE( 458)							 ::Dynamic _g7 = _g6->_hx_getObject(0);
HXDLIN( 458)							 ::Dynamic _g8 = _g6->_hx_getObject(1);
HXLINE( 459)							::String tmp = (HX_("__a_",fe,af,13,3f) + this->uid++);
HXLINE( 461)							 ::hscript::ExprDef e14 = ::hscript::ExprDef_obj::EArrayDecl(::Array_obj< ::Dynamic>::__new(0));
HXDLIN( 461)							 ::Dynamic pmin10 = p1;
HXDLIN( 461)							 ::Dynamic pmax10 = null();
HXDLIN( 461)							 ::Dynamic e15;
HXDLIN( 461)							if (::hx::IsNull( e14 )) {
HXLINE( 461)								e15 = null();
            							}
            							else {
HXLINE( 461)								if (::hx::IsNull( pmin10 )) {
HXLINE( 461)									pmin10 = this->tokenMin;
            								}
HXDLIN( 461)								if (::hx::IsNull( pmax10 )) {
HXLINE( 461)									pmax10 = this->tokenMax;
            								}
HXDLIN( 461)								e15 =  ::Dynamic(::hx::Anon_obj::Create(5)
            									->setFixed(0,HX_("e",65,00,00,00),e14)
            									->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            									->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax10)
            									->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin10)
            									->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            							}
HXDLIN( 461)							 ::hscript::ExprDef e16 = ::hscript::ExprDef_obj::EVar(tmp,null(),e15);
HXDLIN( 461)							 ::Dynamic pmin11 = p1;
HXDLIN( 461)							 ::Dynamic pmax11 = null();
HXDLIN( 461)							 ::Dynamic e17;
HXDLIN( 461)							if (::hx::IsNull( e16 )) {
HXLINE( 461)								e17 = null();
            							}
            							else {
HXLINE( 461)								if (::hx::IsNull( pmin11 )) {
HXLINE( 461)									pmin11 = this->tokenMin;
            								}
HXDLIN( 461)								if (::hx::IsNull( pmax11 )) {
HXLINE( 461)									pmax11 = this->tokenMax;
            								}
HXDLIN( 461)								e17 =  ::Dynamic(::hx::Anon_obj::Create(5)
            									->setFixed(0,HX_("e",65,00,00,00),e16)
            									->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            									->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax11)
            									->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin11)
            									->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            							}
HXLINE( 462)							 ::Dynamic e18 = this->mapCompr(tmp,a1->__get(0));
HXLINE( 463)							 ::hscript::ExprDef e19 = ::hscript::ExprDef_obj::EIdent(tmp);
HXDLIN( 463)							 ::Dynamic pmin12 = p1;
HXDLIN( 463)							 ::Dynamic pmax12 = null();
HXDLIN( 463)							 ::Dynamic e20;
HXDLIN( 463)							if (::hx::IsNull( e19 )) {
HXLINE( 463)								e20 = null();
            							}
            							else {
HXLINE( 463)								if (::hx::IsNull( pmin12 )) {
HXLINE( 463)									pmin12 = this->tokenMin;
            								}
HXDLIN( 463)								if (::hx::IsNull( pmax12 )) {
HXLINE( 463)									pmax12 = this->tokenMax;
            								}
HXDLIN( 463)								e20 =  ::Dynamic(::hx::Anon_obj::Create(5)
            									->setFixed(0,HX_("e",65,00,00,00),e19)
            									->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            									->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax12)
            									->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin12)
            									->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            							}
HXLINE( 460)							 ::hscript::ExprDef e21 = ::hscript::ExprDef_obj::EBlock(::Array_obj< ::Dynamic>::__new(3)->init(0,e17)->init(1,e18)->init(2,e20));
HXDLIN( 460)							 ::Dynamic pmin13 = p1;
HXDLIN( 460)							 ::Dynamic pmax13 = null();
HXDLIN( 460)							 ::Dynamic e22;
HXDLIN( 460)							if (::hx::IsNull( e21 )) {
HXLINE( 460)								e22 = null();
            							}
            							else {
HXLINE( 460)								if (::hx::IsNull( pmin13 )) {
HXLINE( 460)									pmin13 = this->tokenMin;
            								}
HXDLIN( 460)								if (::hx::IsNull( pmax13 )) {
HXLINE( 460)									pmax13 = this->tokenMax;
            								}
HXDLIN( 460)								e22 =  ::Dynamic(::hx::Anon_obj::Create(5)
            									->setFixed(0,HX_("e",65,00,00,00),e21)
            									->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            									->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax13)
            									->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin13)
            									->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            							}
HXLINE( 465)							return this->parseExprNext(e22);
            						}
            						break;
            						case (int)11: {
HXLINE( 458)							::String _g9 = _g6->_hx_getString(0);
HXDLIN( 458)							 ::Dynamic _g10 = _g6->_hx_getObject(1);
HXDLIN( 458)							 ::Dynamic _g11 = _g6->_hx_getObject(2);
HXLINE( 459)							::String tmp1 = (HX_("__a_",fe,af,13,3f) + this->uid++);
HXLINE( 461)							 ::hscript::ExprDef e23 = ::hscript::ExprDef_obj::EArrayDecl(::Array_obj< ::Dynamic>::__new(0));
HXDLIN( 461)							 ::Dynamic pmin14 = p1;
HXDLIN( 461)							 ::Dynamic pmax14 = null();
HXDLIN( 461)							 ::Dynamic e24;
HXDLIN( 461)							if (::hx::IsNull( e23 )) {
HXLINE( 461)								e24 = null();
            							}
            							else {
HXLINE( 461)								if (::hx::IsNull( pmin14 )) {
HXLINE( 461)									pmin14 = this->tokenMin;
            								}
HXDLIN( 461)								if (::hx::IsNull( pmax14 )) {
HXLINE( 461)									pmax14 = this->tokenMax;
            								}
HXDLIN( 461)								e24 =  ::Dynamic(::hx::Anon_obj::Create(5)
            									->setFixed(0,HX_("e",65,00,00,00),e23)
            									->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            									->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax14)
            									->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin14)
            									->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            							}
HXDLIN( 461)							 ::hscript::ExprDef e25 = ::hscript::ExprDef_obj::EVar(tmp1,null(),e24);
HXDLIN( 461)							 ::Dynamic pmin15 = p1;
HXDLIN( 461)							 ::Dynamic pmax15 = null();
HXDLIN( 461)							 ::Dynamic e26;
HXDLIN( 461)							if (::hx::IsNull( e25 )) {
HXLINE( 461)								e26 = null();
            							}
            							else {
HXLINE( 461)								if (::hx::IsNull( pmin15 )) {
HXLINE( 461)									pmin15 = this->tokenMin;
            								}
HXDLIN( 461)								if (::hx::IsNull( pmax15 )) {
HXLINE( 461)									pmax15 = this->tokenMax;
            								}
HXDLIN( 461)								e26 =  ::Dynamic(::hx::Anon_obj::Create(5)
            									->setFixed(0,HX_("e",65,00,00,00),e25)
            									->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            									->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax15)
            									->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin15)
            									->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            							}
HXLINE( 462)							 ::Dynamic e27 = this->mapCompr(tmp1,a1->__get(0));
HXLINE( 463)							 ::hscript::ExprDef e28 = ::hscript::ExprDef_obj::EIdent(tmp1);
HXDLIN( 463)							 ::Dynamic pmin16 = p1;
HXDLIN( 463)							 ::Dynamic pmax16 = null();
HXDLIN( 463)							 ::Dynamic e29;
HXDLIN( 463)							if (::hx::IsNull( e28 )) {
HXLINE( 463)								e29 = null();
            							}
            							else {
HXLINE( 463)								if (::hx::IsNull( pmin16 )) {
HXLINE( 463)									pmin16 = this->tokenMin;
            								}
HXDLIN( 463)								if (::hx::IsNull( pmax16 )) {
HXLINE( 463)									pmax16 = this->tokenMax;
            								}
HXDLIN( 463)								e29 =  ::Dynamic(::hx::Anon_obj::Create(5)
            									->setFixed(0,HX_("e",65,00,00,00),e28)
            									->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            									->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax16)
            									->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin16)
            									->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            							}
HXLINE( 460)							 ::hscript::ExprDef e30 = ::hscript::ExprDef_obj::EBlock(::Array_obj< ::Dynamic>::__new(3)->init(0,e26)->init(1,e27)->init(2,e29));
HXDLIN( 460)							 ::Dynamic pmin17 = p1;
HXDLIN( 460)							 ::Dynamic pmax17 = null();
HXDLIN( 460)							 ::Dynamic e31;
HXDLIN( 460)							if (::hx::IsNull( e30 )) {
HXLINE( 460)								e31 = null();
            							}
            							else {
HXLINE( 460)								if (::hx::IsNull( pmin17 )) {
HXLINE( 460)									pmin17 = this->tokenMin;
            								}
HXDLIN( 460)								if (::hx::IsNull( pmax17 )) {
HXLINE( 460)									pmax17 = this->tokenMax;
            								}
HXDLIN( 460)								e31 =  ::Dynamic(::hx::Anon_obj::Create(5)
            									->setFixed(0,HX_("e",65,00,00,00),e30)
            									->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            									->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax17)
            									->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin17)
            									->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            							}
HXLINE( 465)							return this->parseExprNext(e31);
            						}
            						break;
            						case (int)24: {
HXLINE( 458)							 ::Dynamic _g12 = _g6->_hx_getObject(0);
HXDLIN( 458)							 ::Dynamic _g13 = _g6->_hx_getObject(1);
HXLINE( 459)							::String tmp2 = (HX_("__a_",fe,af,13,3f) + this->uid++);
HXLINE( 461)							 ::hscript::ExprDef e32 = ::hscript::ExprDef_obj::EArrayDecl(::Array_obj< ::Dynamic>::__new(0));
HXDLIN( 461)							 ::Dynamic pmin18 = p1;
HXDLIN( 461)							 ::Dynamic pmax18 = null();
HXDLIN( 461)							 ::Dynamic e33;
HXDLIN( 461)							if (::hx::IsNull( e32 )) {
HXLINE( 461)								e33 = null();
            							}
            							else {
HXLINE( 461)								if (::hx::IsNull( pmin18 )) {
HXLINE( 461)									pmin18 = this->tokenMin;
            								}
HXDLIN( 461)								if (::hx::IsNull( pmax18 )) {
HXLINE( 461)									pmax18 = this->tokenMax;
            								}
HXDLIN( 461)								e33 =  ::Dynamic(::hx::Anon_obj::Create(5)
            									->setFixed(0,HX_("e",65,00,00,00),e32)
            									->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            									->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax18)
            									->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin18)
            									->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            							}
HXDLIN( 461)							 ::hscript::ExprDef e34 = ::hscript::ExprDef_obj::EVar(tmp2,null(),e33);
HXDLIN( 461)							 ::Dynamic pmin19 = p1;
HXDLIN( 461)							 ::Dynamic pmax19 = null();
HXDLIN( 461)							 ::Dynamic e35;
HXDLIN( 461)							if (::hx::IsNull( e34 )) {
HXLINE( 461)								e35 = null();
            							}
            							else {
HXLINE( 461)								if (::hx::IsNull( pmin19 )) {
HXLINE( 461)									pmin19 = this->tokenMin;
            								}
HXDLIN( 461)								if (::hx::IsNull( pmax19 )) {
HXLINE( 461)									pmax19 = this->tokenMax;
            								}
HXDLIN( 461)								e35 =  ::Dynamic(::hx::Anon_obj::Create(5)
            									->setFixed(0,HX_("e",65,00,00,00),e34)
            									->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            									->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax19)
            									->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin19)
            									->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            							}
HXLINE( 462)							 ::Dynamic e36 = this->mapCompr(tmp2,a1->__get(0));
HXLINE( 463)							 ::hscript::ExprDef e37 = ::hscript::ExprDef_obj::EIdent(tmp2);
HXDLIN( 463)							 ::Dynamic pmin20 = p1;
HXDLIN( 463)							 ::Dynamic pmax20 = null();
HXDLIN( 463)							 ::Dynamic e38;
HXDLIN( 463)							if (::hx::IsNull( e37 )) {
HXLINE( 463)								e38 = null();
            							}
            							else {
HXLINE( 463)								if (::hx::IsNull( pmin20 )) {
HXLINE( 463)									pmin20 = this->tokenMin;
            								}
HXDLIN( 463)								if (::hx::IsNull( pmax20 )) {
HXLINE( 463)									pmax20 = this->tokenMax;
            								}
HXDLIN( 463)								e38 =  ::Dynamic(::hx::Anon_obj::Create(5)
            									->setFixed(0,HX_("e",65,00,00,00),e37)
            									->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            									->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax20)
            									->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin20)
            									->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            							}
HXLINE( 460)							 ::hscript::ExprDef e39 = ::hscript::ExprDef_obj::EBlock(::Array_obj< ::Dynamic>::__new(3)->init(0,e35)->init(1,e36)->init(2,e38));
HXDLIN( 460)							 ::Dynamic pmin21 = p1;
HXDLIN( 460)							 ::Dynamic pmax21 = null();
HXDLIN( 460)							 ::Dynamic e40;
HXDLIN( 460)							if (::hx::IsNull( e39 )) {
HXLINE( 460)								e40 = null();
            							}
            							else {
HXLINE( 460)								if (::hx::IsNull( pmin21 )) {
HXLINE( 460)									pmin21 = this->tokenMin;
            								}
HXDLIN( 460)								if (::hx::IsNull( pmax21 )) {
HXLINE( 460)									pmax21 = this->tokenMax;
            								}
HXDLIN( 460)								e40 =  ::Dynamic(::hx::Anon_obj::Create(5)
            									->setFixed(0,HX_("e",65,00,00,00),e39)
            									->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            									->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax21)
            									->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin21)
            									->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            							}
HXLINE( 465)							return this->parseExprNext(e40);
            						}
            						break;
            						default:{
            						}
            					}
            				}
HXLINE( 468)				 ::hscript::ExprDef e41 = ::hscript::ExprDef_obj::EArrayDecl(a1);
HXDLIN( 468)				 ::Dynamic pmin22 = p1;
HXDLIN( 468)				 ::Dynamic pmax22 = null();
HXDLIN( 468)				 ::Dynamic _hx_tmp9;
HXDLIN( 468)				if (::hx::IsNull( e41 )) {
HXLINE( 468)					_hx_tmp9 = null();
            				}
            				else {
HXLINE( 468)					if (::hx::IsNull( pmin22 )) {
HXLINE( 468)						pmin22 = this->tokenMin;
            					}
HXDLIN( 468)					if (::hx::IsNull( pmax22 )) {
HXLINE( 468)						pmax22 = this->tokenMax;
            					}
HXDLIN( 468)					_hx_tmp9 =  ::Dynamic(::hx::Anon_obj::Create(5)
            						->setFixed(0,HX_("e",65,00,00,00),e41)
            						->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            						->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax22)
            						->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin22)
            						->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            				}
HXDLIN( 468)				return this->parseExprNext(_hx_tmp9);
            			}
            			break;
            			case (int)16: {
HXLINE( 469)				::String id1 = tk->_hx_getString(0);
HXDLIN( 469)				if (this->allowMetadata) {
HXLINE( 470)					::Array< ::Dynamic> args = this->parseMetaArgs();
HXLINE( 471)					 ::hscript::ExprDef e42 = ::hscript::ExprDef_obj::EMeta(id1,args,this->parseExpr());
HXDLIN( 471)					 ::Dynamic pmin23 = p1;
HXDLIN( 471)					 ::Dynamic pmax23 = null();
HXDLIN( 471)					if (::hx::IsNull( e42 )) {
HXLINE( 471)						return null();
            					}
            					else {
HXLINE( 471)						if (::hx::IsNull( pmin23 )) {
HXLINE( 471)							pmin23 = this->tokenMin;
            						}
HXDLIN( 471)						if (::hx::IsNull( pmax23 )) {
HXLINE( 471)							pmax23 = this->tokenMax;
            						}
HXDLIN( 471)						return  ::Dynamic(::hx::Anon_obj::Create(5)
            							->setFixed(0,HX_("e",65,00,00,00),e42)
            							->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            							->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax23)
            							->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin23)
            							->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            					}
            				}
            				else {
HXLINE( 473)					return this->unexpected(tk);
            				}
            			}
            			break;
            			default:{
HXLINE( 473)				return this->unexpected(tk);
            			}
            		}
HXLINE( 343)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,parseExpr,return )

 ::Dynamic Parser_obj::parseLambda(::Array< ::Dynamic> args, ::Dynamic pmin){
            	HX_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_477_parseLambda)
HXLINE( 478)		while(true){
HXLINE( 479)			::String id = this->getIdent();
HXLINE( 480)			 ::hscript::CType t;
HXDLIN( 480)			if (this->maybe(::hscript::Token_obj::TDoubleDot_dyn())) {
HXLINE( 480)				t = this->parseType();
            			}
            			else {
HXLINE( 480)				t = null();
            			}
HXLINE( 481)			args->push( ::Dynamic(::hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("t",74,00,00,00),t)
            				->setFixed(1,HX_("name",4b,72,ff,48),id)));
HXLINE( 482)			 ::hscript::Token tk = this->token();
HXLINE( 483)			switch((int)(tk->_hx_getIndex())){
            				case (int)5: {
HXLINE( 486)					goto _hx_goto_40;
            				}
            				break;
            				case (int)10: {
            				}
            				break;
            				default:{
HXLINE( 488)					this->unexpected(tk);
HXLINE( 489)					goto _hx_goto_40;
            				}
            			}
            		}
            		_hx_goto_40:;
HXLINE( 492)		{
HXLINE( 492)			 ::hscript::Token t1 = this->token();
HXDLIN( 492)			if (!(__hxcpp_enum_eq(t1,::hscript::Token_obj::TOp(HX_("->",71,27,00,00))))) {
HXLINE( 492)				this->unexpected(t1);
            			}
            		}
HXLINE( 493)		 ::Dynamic eret = this->parseExpr();
HXLINE( 494)		 ::hscript::ExprDef e = ::hscript::ExprDef_obj::EReturn(eret);
HXDLIN( 494)		 ::Dynamic pmin1 = pmin;
HXDLIN( 494)		 ::Dynamic pmax = null();
HXDLIN( 494)		 ::Dynamic e1;
HXDLIN( 494)		if (::hx::IsNull( e )) {
HXLINE( 494)			e1 = null();
            		}
            		else {
HXLINE( 494)			if (::hx::IsNull( pmin1 )) {
HXLINE( 494)				pmin1 = this->tokenMin;
            			}
HXDLIN( 494)			if (::hx::IsNull( pmax )) {
HXLINE( 494)				pmax = this->tokenMax;
            			}
HXDLIN( 494)			e1 =  ::Dynamic(::hx::Anon_obj::Create(5)
            				->setFixed(0,HX_("e",65,00,00,00),e)
            				->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            				->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax)
            				->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin1)
            				->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            		}
HXDLIN( 494)		 ::hscript::ExprDef e2 = ::hscript::ExprDef_obj::EFunction(args,e1,null(),null());
HXDLIN( 494)		 ::Dynamic pmin2 = pmin;
HXDLIN( 494)		 ::Dynamic pmax1 = null();
HXDLIN( 494)		if (::hx::IsNull( e2 )) {
HXLINE( 494)			return null();
            		}
            		else {
HXLINE( 494)			if (::hx::IsNull( pmin2 )) {
HXLINE( 494)				pmin2 = this->tokenMin;
            			}
HXDLIN( 494)			if (::hx::IsNull( pmax1 )) {
HXLINE( 494)				pmax1 = this->tokenMax;
            			}
HXDLIN( 494)			return  ::Dynamic(::hx::Anon_obj::Create(5)
            				->setFixed(0,HX_("e",65,00,00,00),e2)
            				->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            				->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax1)
            				->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin2)
            				->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            		}
HXDLIN( 494)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC2(Parser_obj,parseLambda,return )

::Array< ::Dynamic> Parser_obj::parseMetaArgs(){
            	HX_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_497_parseMetaArgs)
HXLINE( 498)		 ::hscript::Token tk = this->token();
HXLINE( 499)		if (::hx::IsPointerNotEq( tk,::hscript::Token_obj::TPOpen_dyn() )) {
HXLINE( 500)			{
HXLINE( 500)				this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            					->setFixed(0,HX_("t",74,00,00,00),tk)
            					->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            					->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN( 500)				this->tokenMin = this->oldTokenMin;
HXDLIN( 500)				this->tokenMax = this->oldTokenMax;
            			}
HXLINE( 501)			return null();
            		}
HXLINE( 503)		::Array< ::Dynamic> args = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 504)		tk = this->token();
HXLINE( 505)		if (::hx::IsPointerNotEq( tk,::hscript::Token_obj::TPClose_dyn() )) {
HXLINE( 506)			{
HXLINE( 506)				this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            					->setFixed(0,HX_("t",74,00,00,00),tk)
            					->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            					->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN( 506)				this->tokenMin = this->oldTokenMin;
HXDLIN( 506)				this->tokenMax = this->oldTokenMax;
            			}
HXLINE( 507)			while(true){
HXLINE( 508)				args->push(this->parseExpr());
HXLINE( 509)				{
HXLINE( 509)					 ::hscript::Token _g = this->token();
HXDLIN( 509)					switch((int)(_g->_hx_getIndex())){
            						case (int)5: {
HXLINE( 512)							goto _hx_goto_42;
            						}
            						break;
            						case (int)10: {
            						}
            						break;
            						default:{
HXLINE( 513)							 ::hscript::Token tk1 = _g;
HXLINE( 514)							this->unexpected(tk1);
            						}
            					}
            				}
            			}
            			_hx_goto_42:;
            		}
HXLINE( 518)		return args;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,parseMetaArgs,return )

 ::Dynamic Parser_obj::mapCompr(::String tmp, ::Dynamic e){
            	HX_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_521_mapCompr)
HXLINE( 522)		if (::hx::IsNull( e )) {
HXLINE( 522)			return null();
            		}
HXLINE( 523)		 ::hscript::ExprDef edef;
HXDLIN( 523)		 ::hscript::ExprDef _g = e->__Field(HX_("e",65,00,00,00),::hx::paccDynamic);
HXDLIN( 523)		switch((int)(_g->_hx_getIndex())){
            			case (int)3: {
HXLINE( 534)				 ::Dynamic e2 = _g->_hx_getObject(0);
HXLINE( 523)				edef = ::hscript::ExprDef_obj::EParent(this->mapCompr(tmp,e2));
            			}
            			break;
            			case (int)4: {
HXLINE( 532)				::Array< ::Dynamic> _g1 = _g->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 532)				if ((_g1->length == 1)) {
HXLINE( 532)					 ::Dynamic e1 = _g1->__get(0);
HXLINE( 523)					edef = ::hscript::ExprDef_obj::EBlock(::Array_obj< ::Dynamic>::__new(1)->init(0,this->mapCompr(tmp,e1)));
            				}
            				else {
HXLINE( 537)					 ::hscript::ExprDef e3 = ::hscript::ExprDef_obj::EIdent(tmp);
HXDLIN( 537)					 ::Dynamic pmin;
HXDLIN( 537)					if (::hx::IsNull( e )) {
HXLINE( 537)						pmin = 0;
            					}
            					else {
HXLINE( 537)						pmin = e->__Field(HX_("pmin",22,f7,5a,4a),::hx::paccDynamic);
            					}
HXDLIN( 537)					 ::Dynamic pmax;
HXDLIN( 537)					if (::hx::IsNull( e )) {
HXLINE( 537)						pmax = 0;
            					}
            					else {
HXLINE( 537)						pmax = e->__Field(HX_("pmax",34,f0,5a,4a),::hx::paccDynamic);
            					}
HXDLIN( 537)					 ::Dynamic e4;
HXDLIN( 537)					if (::hx::IsNull( e3 )) {
HXLINE( 537)						e4 = null();
            					}
            					else {
HXLINE( 537)						if (::hx::IsNull( pmin )) {
HXLINE( 537)							pmin = this->tokenMin;
            						}
HXDLIN( 537)						if (::hx::IsNull( pmax )) {
HXLINE( 537)							pmax = this->tokenMax;
            						}
HXDLIN( 537)						e4 =  ::Dynamic(::hx::Anon_obj::Create(5)
            							->setFixed(0,HX_("e",65,00,00,00),e3)
            							->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            							->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax)
            							->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin)
            							->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            					}
HXDLIN( 537)					 ::hscript::ExprDef e5 = ::hscript::ExprDef_obj::EField(e4,HX_("push",da,11,61,4a));
HXDLIN( 537)					 ::Dynamic pmin1;
HXDLIN( 537)					if (::hx::IsNull( e )) {
HXLINE( 537)						pmin1 = 0;
            					}
            					else {
HXLINE( 537)						pmin1 = e->__Field(HX_("pmin",22,f7,5a,4a),::hx::paccDynamic);
            					}
HXDLIN( 537)					 ::Dynamic pmax1;
HXDLIN( 537)					if (::hx::IsNull( e )) {
HXLINE( 537)						pmax1 = 0;
            					}
            					else {
HXLINE( 537)						pmax1 = e->__Field(HX_("pmax",34,f0,5a,4a),::hx::paccDynamic);
            					}
HXDLIN( 537)					 ::Dynamic edef1;
HXDLIN( 537)					if (::hx::IsNull( e5 )) {
HXLINE( 537)						edef1 = null();
            					}
            					else {
HXLINE( 537)						if (::hx::IsNull( pmin1 )) {
HXLINE( 537)							pmin1 = this->tokenMin;
            						}
HXDLIN( 537)						if (::hx::IsNull( pmax1 )) {
HXLINE( 537)							pmax1 = this->tokenMax;
            						}
HXDLIN( 537)						edef1 =  ::Dynamic(::hx::Anon_obj::Create(5)
            							->setFixed(0,HX_("e",65,00,00,00),e5)
            							->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            							->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax1)
            							->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin1)
            							->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            					}
HXLINE( 523)					edef = ::hscript::ExprDef_obj::ECall(edef1,::Array_obj< ::Dynamic>::__new(1)->init(0,e));
            				}
            			}
            			break;
            			case (int)9: {
HXLINE( 530)				 ::Dynamic cond = _g->_hx_getObject(0);
HXDLIN( 530)				 ::Dynamic e11 = _g->_hx_getObject(1);
HXDLIN( 530)				 ::Dynamic e21 = _g->_hx_getObject(2);
HXDLIN( 530)				if (::hx::IsNull( e21 )) {
HXLINE( 523)					edef = ::hscript::ExprDef_obj::EIf(cond,this->mapCompr(tmp,e11),null());
            				}
            				else {
HXLINE( 537)					 ::hscript::ExprDef e6 = ::hscript::ExprDef_obj::EIdent(tmp);
HXDLIN( 537)					 ::Dynamic pmin2;
HXDLIN( 537)					if (::hx::IsNull( e )) {
HXLINE( 537)						pmin2 = 0;
            					}
            					else {
HXLINE( 537)						pmin2 = e->__Field(HX_("pmin",22,f7,5a,4a),::hx::paccDynamic);
            					}
HXDLIN( 537)					 ::Dynamic pmax2;
HXDLIN( 537)					if (::hx::IsNull( e )) {
HXLINE( 537)						pmax2 = 0;
            					}
            					else {
HXLINE( 537)						pmax2 = e->__Field(HX_("pmax",34,f0,5a,4a),::hx::paccDynamic);
            					}
HXDLIN( 537)					 ::Dynamic e7;
HXDLIN( 537)					if (::hx::IsNull( e6 )) {
HXLINE( 537)						e7 = null();
            					}
            					else {
HXLINE( 537)						if (::hx::IsNull( pmin2 )) {
HXLINE( 537)							pmin2 = this->tokenMin;
            						}
HXDLIN( 537)						if (::hx::IsNull( pmax2 )) {
HXLINE( 537)							pmax2 = this->tokenMax;
            						}
HXDLIN( 537)						e7 =  ::Dynamic(::hx::Anon_obj::Create(5)
            							->setFixed(0,HX_("e",65,00,00,00),e6)
            							->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            							->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax2)
            							->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin2)
            							->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            					}
HXDLIN( 537)					 ::hscript::ExprDef e8 = ::hscript::ExprDef_obj::EField(e7,HX_("push",da,11,61,4a));
HXDLIN( 537)					 ::Dynamic pmin3;
HXDLIN( 537)					if (::hx::IsNull( e )) {
HXLINE( 537)						pmin3 = 0;
            					}
            					else {
HXLINE( 537)						pmin3 = e->__Field(HX_("pmin",22,f7,5a,4a),::hx::paccDynamic);
            					}
HXDLIN( 537)					 ::Dynamic pmax3;
HXDLIN( 537)					if (::hx::IsNull( e )) {
HXLINE( 537)						pmax3 = 0;
            					}
            					else {
HXLINE( 537)						pmax3 = e->__Field(HX_("pmax",34,f0,5a,4a),::hx::paccDynamic);
            					}
HXDLIN( 537)					 ::Dynamic edef2;
HXDLIN( 537)					if (::hx::IsNull( e8 )) {
HXLINE( 537)						edef2 = null();
            					}
            					else {
HXLINE( 537)						if (::hx::IsNull( pmin3 )) {
HXLINE( 537)							pmin3 = this->tokenMin;
            						}
HXDLIN( 537)						if (::hx::IsNull( pmax3 )) {
HXLINE( 537)							pmax3 = this->tokenMax;
            						}
HXDLIN( 537)						edef2 =  ::Dynamic(::hx::Anon_obj::Create(5)
            							->setFixed(0,HX_("e",65,00,00,00),e8)
            							->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            							->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax3)
            							->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin3)
            							->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            					}
HXLINE( 523)					edef = ::hscript::ExprDef_obj::ECall(edef2,::Array_obj< ::Dynamic>::__new(1)->init(0,e));
            				}
            			}
            			break;
            			case (int)10: {
HXLINE( 526)				 ::Dynamic cond1 = _g->_hx_getObject(0);
HXDLIN( 526)				 ::Dynamic e22 = _g->_hx_getObject(1);
HXLINE( 523)				edef = ::hscript::ExprDef_obj::EWhile(cond1,this->mapCompr(tmp,e22));
            			}
            			break;
            			case (int)11: {
HXLINE( 524)				::String v = _g->_hx_getString(0);
HXDLIN( 524)				 ::Dynamic it = _g->_hx_getObject(1);
HXDLIN( 524)				 ::Dynamic e23 = _g->_hx_getObject(2);
HXLINE( 523)				edef = ::hscript::ExprDef_obj::EFor(v,it,this->mapCompr(tmp,e23));
            			}
            			break;
            			case (int)24: {
HXLINE( 528)				 ::Dynamic cond2 = _g->_hx_getObject(0);
HXDLIN( 528)				 ::Dynamic e24 = _g->_hx_getObject(1);
HXLINE( 523)				edef = ::hscript::ExprDef_obj::EDoWhile(cond2,this->mapCompr(tmp,e24));
            			}
            			break;
            			default:{
HXLINE( 537)				 ::hscript::ExprDef e9 = ::hscript::ExprDef_obj::EIdent(tmp);
HXDLIN( 537)				 ::Dynamic pmin4;
HXDLIN( 537)				if (::hx::IsNull( e )) {
HXLINE( 537)					pmin4 = 0;
            				}
            				else {
HXLINE( 537)					pmin4 = e->__Field(HX_("pmin",22,f7,5a,4a),::hx::paccDynamic);
            				}
HXDLIN( 537)				 ::Dynamic pmax4;
HXDLIN( 537)				if (::hx::IsNull( e )) {
HXLINE( 537)					pmax4 = 0;
            				}
            				else {
HXLINE( 537)					pmax4 = e->__Field(HX_("pmax",34,f0,5a,4a),::hx::paccDynamic);
            				}
HXDLIN( 537)				 ::Dynamic e10;
HXDLIN( 537)				if (::hx::IsNull( e9 )) {
HXLINE( 537)					e10 = null();
            				}
            				else {
HXLINE( 537)					if (::hx::IsNull( pmin4 )) {
HXLINE( 537)						pmin4 = this->tokenMin;
            					}
HXDLIN( 537)					if (::hx::IsNull( pmax4 )) {
HXLINE( 537)						pmax4 = this->tokenMax;
            					}
HXDLIN( 537)					e10 =  ::Dynamic(::hx::Anon_obj::Create(5)
            						->setFixed(0,HX_("e",65,00,00,00),e9)
            						->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            						->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax4)
            						->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin4)
            						->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            				}
HXDLIN( 537)				 ::hscript::ExprDef e12 = ::hscript::ExprDef_obj::EField(e10,HX_("push",da,11,61,4a));
HXDLIN( 537)				 ::Dynamic pmin5;
HXDLIN( 537)				if (::hx::IsNull( e )) {
HXLINE( 537)					pmin5 = 0;
            				}
            				else {
HXLINE( 537)					pmin5 = e->__Field(HX_("pmin",22,f7,5a,4a),::hx::paccDynamic);
            				}
HXDLIN( 537)				 ::Dynamic pmax5;
HXDLIN( 537)				if (::hx::IsNull( e )) {
HXLINE( 537)					pmax5 = 0;
            				}
            				else {
HXLINE( 537)					pmax5 = e->__Field(HX_("pmax",34,f0,5a,4a),::hx::paccDynamic);
            				}
HXDLIN( 537)				 ::Dynamic edef3;
HXDLIN( 537)				if (::hx::IsNull( e12 )) {
HXLINE( 537)					edef3 = null();
            				}
            				else {
HXLINE( 537)					if (::hx::IsNull( pmin5 )) {
HXLINE( 537)						pmin5 = this->tokenMin;
            					}
HXDLIN( 537)					if (::hx::IsNull( pmax5 )) {
HXLINE( 537)						pmax5 = this->tokenMax;
            					}
HXDLIN( 537)					edef3 =  ::Dynamic(::hx::Anon_obj::Create(5)
            						->setFixed(0,HX_("e",65,00,00,00),e12)
            						->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            						->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax5)
            						->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin5)
            						->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            				}
HXLINE( 523)				edef = ::hscript::ExprDef_obj::ECall(edef3,::Array_obj< ::Dynamic>::__new(1)->init(0,e));
            			}
            		}
HXLINE( 539)		 ::Dynamic pmin6;
HXDLIN( 539)		if (::hx::IsNull( e )) {
HXLINE( 539)			pmin6 = 0;
            		}
            		else {
HXLINE( 539)			pmin6 = e->__Field(HX_("pmin",22,f7,5a,4a),::hx::paccDynamic);
            		}
HXDLIN( 539)		 ::Dynamic pmax6;
HXDLIN( 539)		if (::hx::IsNull( e )) {
HXLINE( 539)			pmax6 = 0;
            		}
            		else {
HXLINE( 539)			pmax6 = e->__Field(HX_("pmax",34,f0,5a,4a),::hx::paccDynamic);
            		}
HXDLIN( 539)		if (::hx::IsNull( edef )) {
HXLINE( 539)			return null();
            		}
            		else {
HXLINE( 539)			if (::hx::IsNull( pmin6 )) {
HXLINE( 539)				pmin6 = this->tokenMin;
            			}
HXDLIN( 539)			if (::hx::IsNull( pmax6 )) {
HXLINE( 539)				pmax6 = this->tokenMax;
            			}
HXDLIN( 539)			return  ::Dynamic(::hx::Anon_obj::Create(5)
            				->setFixed(0,HX_("e",65,00,00,00),edef)
            				->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            				->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax6)
            				->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin6)
            				->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            		}
HXDLIN( 539)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC2(Parser_obj,mapCompr,return )

 ::Dynamic Parser_obj::makeUnop(::String op, ::Dynamic e){
            	HX_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_542_makeUnop)
HXLINE( 543)		bool _hx_tmp;
HXDLIN( 543)		if (::hx::IsNull( e )) {
HXLINE( 543)			_hx_tmp = this->resumeErrors;
            		}
            		else {
HXLINE( 543)			_hx_tmp = false;
            		}
HXDLIN( 543)		if (_hx_tmp) {
HXLINE( 544)			return null();
            		}
HXLINE( 545)		 ::hscript::ExprDef _g = e->__Field(HX_("e",65,00,00,00),::hx::paccDynamic);
HXDLIN( 545)		switch((int)(_g->_hx_getIndex())){
            			case (int)6: {
HXLINE( 546)				::String bop = _g->_hx_getString(0);
HXDLIN( 546)				 ::Dynamic e1 = _g->_hx_getObject(1);
HXDLIN( 546)				 ::Dynamic e2 = _g->_hx_getObject(2);
HXDLIN( 546)				 ::hscript::ExprDef e3 = ::hscript::ExprDef_obj::EBinop(bop,this->makeUnop(op,e1),e2);
HXDLIN( 546)				 ::Dynamic pmin;
HXDLIN( 546)				if (::hx::IsNull( e1 )) {
HXLINE( 546)					pmin = 0;
            				}
            				else {
HXLINE( 546)					pmin = e1->__Field(HX_("pmin",22,f7,5a,4a),::hx::paccDynamic);
            				}
HXDLIN( 546)				 ::Dynamic pmax;
HXDLIN( 546)				if (::hx::IsNull( e2 )) {
HXLINE( 546)					pmax = 0;
            				}
            				else {
HXLINE( 546)					pmax = e2->__Field(HX_("pmax",34,f0,5a,4a),::hx::paccDynamic);
            				}
HXDLIN( 546)				if (::hx::IsNull( e3 )) {
HXLINE( 546)					return null();
            				}
            				else {
HXLINE( 546)					if (::hx::IsNull( pmin )) {
HXLINE( 546)						pmin = this->tokenMin;
            					}
HXDLIN( 546)					if (::hx::IsNull( pmax )) {
HXLINE( 546)						pmax = this->tokenMax;
            					}
HXDLIN( 546)					return  ::Dynamic(::hx::Anon_obj::Create(5)
            						->setFixed(0,HX_("e",65,00,00,00),e3)
            						->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            						->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax)
            						->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin)
            						->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            				}
            			}
            			break;
            			case (int)22: {
HXLINE( 547)				 ::Dynamic e11 = _g->_hx_getObject(0);
HXDLIN( 547)				 ::Dynamic e21 = _g->_hx_getObject(1);
HXDLIN( 547)				 ::Dynamic e31 = _g->_hx_getObject(2);
HXDLIN( 547)				 ::hscript::ExprDef e4 = ::hscript::ExprDef_obj::ETernary(this->makeUnop(op,e11),e21,e31);
HXDLIN( 547)				 ::Dynamic pmin1;
HXDLIN( 547)				if (::hx::IsNull( e11 )) {
HXLINE( 547)					pmin1 = 0;
            				}
            				else {
HXLINE( 547)					pmin1 = e11->__Field(HX_("pmin",22,f7,5a,4a),::hx::paccDynamic);
            				}
HXDLIN( 547)				 ::Dynamic pmax1;
HXDLIN( 547)				if (::hx::IsNull( e31 )) {
HXLINE( 547)					pmax1 = 0;
            				}
            				else {
HXLINE( 547)					pmax1 = e31->__Field(HX_("pmax",34,f0,5a,4a),::hx::paccDynamic);
            				}
HXDLIN( 547)				if (::hx::IsNull( e4 )) {
HXLINE( 547)					return null();
            				}
            				else {
HXLINE( 547)					if (::hx::IsNull( pmin1 )) {
HXLINE( 547)						pmin1 = this->tokenMin;
            					}
HXDLIN( 547)					if (::hx::IsNull( pmax1 )) {
HXLINE( 547)						pmax1 = this->tokenMax;
            					}
HXDLIN( 547)					return  ::Dynamic(::hx::Anon_obj::Create(5)
            						->setFixed(0,HX_("e",65,00,00,00),e4)
            						->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            						->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax1)
            						->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin1)
            						->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            				}
            			}
            			break;
            			default:{
HXLINE( 548)				 ::hscript::ExprDef e5 = ::hscript::ExprDef_obj::EUnop(op,true,e);
HXDLIN( 548)				 ::Dynamic pmin2;
HXDLIN( 548)				if (::hx::IsNull( e )) {
HXLINE( 548)					pmin2 = 0;
            				}
            				else {
HXLINE( 548)					pmin2 = e->__Field(HX_("pmin",22,f7,5a,4a),::hx::paccDynamic);
            				}
HXDLIN( 548)				 ::Dynamic pmax2;
HXDLIN( 548)				if (::hx::IsNull( e )) {
HXLINE( 548)					pmax2 = 0;
            				}
            				else {
HXLINE( 548)					pmax2 = e->__Field(HX_("pmax",34,f0,5a,4a),::hx::paccDynamic);
            				}
HXDLIN( 548)				if (::hx::IsNull( e5 )) {
HXLINE( 548)					return null();
            				}
            				else {
HXLINE( 548)					if (::hx::IsNull( pmin2 )) {
HXLINE( 548)						pmin2 = this->tokenMin;
            					}
HXDLIN( 548)					if (::hx::IsNull( pmax2 )) {
HXLINE( 548)						pmax2 = this->tokenMax;
            					}
HXDLIN( 548)					return  ::Dynamic(::hx::Anon_obj::Create(5)
            						->setFixed(0,HX_("e",65,00,00,00),e5)
            						->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            						->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax2)
            						->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin2)
            						->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            				}
            			}
            		}
HXLINE( 545)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC2(Parser_obj,makeUnop,return )

 ::Dynamic Parser_obj::makeBinop(::String op, ::Dynamic e1, ::Dynamic e){
            	HX_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_552_makeBinop)
HXLINE( 553)		bool _hx_tmp;
HXDLIN( 553)		if (::hx::IsNull( e )) {
HXLINE( 553)			_hx_tmp = this->resumeErrors;
            		}
            		else {
HXLINE( 553)			_hx_tmp = false;
            		}
HXDLIN( 553)		if (_hx_tmp) {
HXLINE( 554)			 ::hscript::ExprDef e2 = ::hscript::ExprDef_obj::EBinop(op,e1,e);
HXDLIN( 554)			 ::Dynamic pmin;
HXDLIN( 554)			if (::hx::IsNull( e1 )) {
HXLINE( 554)				pmin = 0;
            			}
            			else {
HXLINE( 554)				pmin = e1->__Field(HX_("pmin",22,f7,5a,4a),::hx::paccDynamic);
            			}
HXDLIN( 554)			 ::Dynamic pmax;
HXDLIN( 554)			if (::hx::IsNull( e1 )) {
HXLINE( 554)				pmax = 0;
            			}
            			else {
HXLINE( 554)				pmax = e1->__Field(HX_("pmax",34,f0,5a,4a),::hx::paccDynamic);
            			}
HXDLIN( 554)			if (::hx::IsNull( e2 )) {
HXLINE( 554)				return null();
            			}
            			else {
HXLINE( 554)				if (::hx::IsNull( pmin )) {
HXLINE( 554)					pmin = this->tokenMin;
            				}
HXDLIN( 554)				if (::hx::IsNull( pmax )) {
HXLINE( 554)					pmax = this->tokenMax;
            				}
HXDLIN( 554)				return  ::Dynamic(::hx::Anon_obj::Create(5)
            					->setFixed(0,HX_("e",65,00,00,00),e2)
            					->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            					->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax)
            					->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin)
            					->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            			}
            		}
HXLINE( 555)		 ::hscript::ExprDef _g = e->__Field(HX_("e",65,00,00,00),::hx::paccDynamic);
HXDLIN( 555)		switch((int)(_g->_hx_getIndex())){
            			case (int)6: {
HXLINE( 556)				::String op2 = _g->_hx_getString(0);
HXDLIN( 556)				 ::Dynamic e21 = _g->_hx_getObject(1);
HXDLIN( 556)				 ::Dynamic e3 = _g->_hx_getObject(2);
HXLINE( 557)				bool _hx_tmp1;
HXDLIN( 557)				 ::Dynamic _hx_tmp2 = this->opPriority->get(op);
HXDLIN( 557)				if (::hx::IsLessEq( _hx_tmp2,this->opPriority->get(op2) )) {
HXLINE( 557)					_hx_tmp1 = !(this->opRightAssoc->exists(op));
            				}
            				else {
HXLINE( 557)					_hx_tmp1 = false;
            				}
HXDLIN( 557)				if (_hx_tmp1) {
HXLINE( 558)					 ::hscript::ExprDef e4 = ::hscript::ExprDef_obj::EBinop(op2,this->makeBinop(op,e1,e21),e3);
HXDLIN( 558)					 ::Dynamic pmin1;
HXDLIN( 558)					if (::hx::IsNull( e1 )) {
HXLINE( 558)						pmin1 = 0;
            					}
            					else {
HXLINE( 558)						pmin1 = e1->__Field(HX_("pmin",22,f7,5a,4a),::hx::paccDynamic);
            					}
HXDLIN( 558)					 ::Dynamic pmax1;
HXDLIN( 558)					if (::hx::IsNull( e3 )) {
HXLINE( 558)						pmax1 = 0;
            					}
            					else {
HXLINE( 558)						pmax1 = e3->__Field(HX_("pmax",34,f0,5a,4a),::hx::paccDynamic);
            					}
HXDLIN( 558)					if (::hx::IsNull( e4 )) {
HXLINE( 558)						return null();
            					}
            					else {
HXLINE( 558)						if (::hx::IsNull( pmin1 )) {
HXLINE( 558)							pmin1 = this->tokenMin;
            						}
HXDLIN( 558)						if (::hx::IsNull( pmax1 )) {
HXLINE( 558)							pmax1 = this->tokenMax;
            						}
HXDLIN( 558)						return  ::Dynamic(::hx::Anon_obj::Create(5)
            							->setFixed(0,HX_("e",65,00,00,00),e4)
            							->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            							->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax1)
            							->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin1)
            							->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            					}
            				}
            				else {
HXLINE( 560)					 ::hscript::ExprDef e5 = ::hscript::ExprDef_obj::EBinop(op,e1,e);
HXDLIN( 560)					 ::Dynamic pmin2;
HXDLIN( 560)					if (::hx::IsNull( e1 )) {
HXLINE( 560)						pmin2 = 0;
            					}
            					else {
HXLINE( 560)						pmin2 = e1->__Field(HX_("pmin",22,f7,5a,4a),::hx::paccDynamic);
            					}
HXDLIN( 560)					 ::Dynamic pmax2;
HXDLIN( 560)					if (::hx::IsNull( e )) {
HXLINE( 560)						pmax2 = 0;
            					}
            					else {
HXLINE( 560)						pmax2 = e->__Field(HX_("pmax",34,f0,5a,4a),::hx::paccDynamic);
            					}
HXDLIN( 560)					if (::hx::IsNull( e5 )) {
HXLINE( 560)						return null();
            					}
            					else {
HXLINE( 560)						if (::hx::IsNull( pmin2 )) {
HXLINE( 560)							pmin2 = this->tokenMin;
            						}
HXDLIN( 560)						if (::hx::IsNull( pmax2 )) {
HXLINE( 560)							pmax2 = this->tokenMax;
            						}
HXDLIN( 560)						return  ::Dynamic(::hx::Anon_obj::Create(5)
            							->setFixed(0,HX_("e",65,00,00,00),e5)
            							->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            							->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax2)
            							->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin2)
            							->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            					}
            				}
            			}
            			break;
            			case (int)22: {
HXLINE( 561)				 ::Dynamic e22 = _g->_hx_getObject(0);
HXDLIN( 561)				 ::Dynamic e31 = _g->_hx_getObject(1);
HXDLIN( 561)				 ::Dynamic e41 = _g->_hx_getObject(2);
HXLINE( 562)				if (this->opRightAssoc->exists(op)) {
HXLINE( 563)					 ::hscript::ExprDef e6 = ::hscript::ExprDef_obj::EBinop(op,e1,e);
HXDLIN( 563)					 ::Dynamic pmin3;
HXDLIN( 563)					if (::hx::IsNull( e1 )) {
HXLINE( 563)						pmin3 = 0;
            					}
            					else {
HXLINE( 563)						pmin3 = e1->__Field(HX_("pmin",22,f7,5a,4a),::hx::paccDynamic);
            					}
HXDLIN( 563)					 ::Dynamic pmax3;
HXDLIN( 563)					if (::hx::IsNull( e )) {
HXLINE( 563)						pmax3 = 0;
            					}
            					else {
HXLINE( 563)						pmax3 = e->__Field(HX_("pmax",34,f0,5a,4a),::hx::paccDynamic);
            					}
HXDLIN( 563)					if (::hx::IsNull( e6 )) {
HXLINE( 563)						return null();
            					}
            					else {
HXLINE( 563)						if (::hx::IsNull( pmin3 )) {
HXLINE( 563)							pmin3 = this->tokenMin;
            						}
HXDLIN( 563)						if (::hx::IsNull( pmax3 )) {
HXLINE( 563)							pmax3 = this->tokenMax;
            						}
HXDLIN( 563)						return  ::Dynamic(::hx::Anon_obj::Create(5)
            							->setFixed(0,HX_("e",65,00,00,00),e6)
            							->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            							->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax3)
            							->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin3)
            							->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            					}
            				}
            				else {
HXLINE( 565)					 ::hscript::ExprDef e7 = ::hscript::ExprDef_obj::ETernary(this->makeBinop(op,e1,e22),e31,e41);
HXDLIN( 565)					 ::Dynamic pmin4;
HXDLIN( 565)					if (::hx::IsNull( e1 )) {
HXLINE( 565)						pmin4 = 0;
            					}
            					else {
HXLINE( 565)						pmin4 = e1->__Field(HX_("pmin",22,f7,5a,4a),::hx::paccDynamic);
            					}
HXDLIN( 565)					 ::Dynamic pmax4;
HXDLIN( 565)					if (::hx::IsNull( e )) {
HXLINE( 565)						pmax4 = 0;
            					}
            					else {
HXLINE( 565)						pmax4 = e->__Field(HX_("pmax",34,f0,5a,4a),::hx::paccDynamic);
            					}
HXDLIN( 565)					if (::hx::IsNull( e7 )) {
HXLINE( 565)						return null();
            					}
            					else {
HXLINE( 565)						if (::hx::IsNull( pmin4 )) {
HXLINE( 565)							pmin4 = this->tokenMin;
            						}
HXDLIN( 565)						if (::hx::IsNull( pmax4 )) {
HXLINE( 565)							pmax4 = this->tokenMax;
            						}
HXDLIN( 565)						return  ::Dynamic(::hx::Anon_obj::Create(5)
            							->setFixed(0,HX_("e",65,00,00,00),e7)
            							->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            							->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax4)
            							->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin4)
            							->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            					}
            				}
            			}
            			break;
            			default:{
HXLINE( 567)				 ::hscript::ExprDef e8 = ::hscript::ExprDef_obj::EBinop(op,e1,e);
HXDLIN( 567)				 ::Dynamic pmin5;
HXDLIN( 567)				if (::hx::IsNull( e1 )) {
HXLINE( 567)					pmin5 = 0;
            				}
            				else {
HXLINE( 567)					pmin5 = e1->__Field(HX_("pmin",22,f7,5a,4a),::hx::paccDynamic);
            				}
HXDLIN( 567)				 ::Dynamic pmax5;
HXDLIN( 567)				if (::hx::IsNull( e )) {
HXLINE( 567)					pmax5 = 0;
            				}
            				else {
HXLINE( 567)					pmax5 = e->__Field(HX_("pmax",34,f0,5a,4a),::hx::paccDynamic);
            				}
HXDLIN( 567)				if (::hx::IsNull( e8 )) {
HXLINE( 567)					return null();
            				}
            				else {
HXLINE( 567)					if (::hx::IsNull( pmin5 )) {
HXLINE( 567)						pmin5 = this->tokenMin;
            					}
HXDLIN( 567)					if (::hx::IsNull( pmax5 )) {
HXLINE( 567)						pmax5 = this->tokenMax;
            					}
HXDLIN( 567)					return  ::Dynamic(::hx::Anon_obj::Create(5)
            						->setFixed(0,HX_("e",65,00,00,00),e8)
            						->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            						->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax5)
            						->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin5)
            						->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            				}
            			}
            		}
HXLINE( 555)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC3(Parser_obj,makeBinop,return )

 ::Dynamic Parser_obj::parseStructure(::String id){
            	HX_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_571_parseStructure)
HXLINE( 573)		int p1 = this->tokenMin;
HXLINE( 575)		::String _hx_switch_0 = id;
            		if (  (_hx_switch_0==HX_("break",bf,24,ec,b8)) ){
HXLINE( 631)			 ::hscript::ExprDef e = ::hscript::ExprDef_obj::EBreak_dyn();
HXDLIN( 631)			 ::Dynamic pmin = null();
HXDLIN( 631)			 ::Dynamic pmax = null();
HXDLIN( 631)			if (::hx::IsNull( e )) {
HXLINE( 631)				return null();
            			}
            			else {
HXLINE( 631)				if (::hx::IsNull( pmin )) {
HXLINE( 631)					pmin = this->tokenMin;
            				}
HXDLIN( 631)				if (::hx::IsNull( pmax )) {
HXLINE( 631)					pmax = this->tokenMax;
            				}
HXDLIN( 631)				return  ::Dynamic(::hx::Anon_obj::Create(5)
            					->setFixed(0,HX_("e",65,00,00,00),e)
            					->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            					->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax)
            					->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin)
            					->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            			}
HXDLIN( 631)			goto _hx_goto_47;
            		}
            		if (  (_hx_switch_0==HX_("continue",67,e0,c8,31)) ){
HXLINE( 632)			 ::hscript::ExprDef e1 = ::hscript::ExprDef_obj::EContinue_dyn();
HXDLIN( 632)			 ::Dynamic pmin1 = null();
HXDLIN( 632)			 ::Dynamic pmax1 = null();
HXDLIN( 632)			if (::hx::IsNull( e1 )) {
HXLINE( 632)				return null();
            			}
            			else {
HXLINE( 632)				if (::hx::IsNull( pmin1 )) {
HXLINE( 632)					pmin1 = this->tokenMin;
            				}
HXDLIN( 632)				if (::hx::IsNull( pmax1 )) {
HXLINE( 632)					pmax1 = this->tokenMax;
            				}
HXDLIN( 632)				return  ::Dynamic(::hx::Anon_obj::Create(5)
            					->setFixed(0,HX_("e",65,00,00,00),e1)
            					->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            					->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax1)
            					->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin1)
            					->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            			}
HXDLIN( 632)			goto _hx_goto_47;
            		}
            		if (  (_hx_switch_0==HX_("do",8b,57,00,00)) ){
HXLINE( 614)			 ::Dynamic e2 = this->parseExpr();
HXLINE( 615)			 ::hscript::Token tk = this->token();
HXLINE( 616)			if ((tk->_hx_getIndex() == 2)) {
HXLINE( 618)				if ((tk->_hx_getString(0) != HX_("while",b1,43,bd,c9))) {
HXLINE( 619)					this->unexpected(tk);
            				}
            			}
            			else {
HXLINE( 619)				this->unexpected(tk);
            			}
HXLINE( 621)			 ::Dynamic econd = this->parseExpr();
HXLINE( 622)			 ::hscript::ExprDef e3 = ::hscript::ExprDef_obj::EDoWhile(econd,e2);
HXDLIN( 622)			 ::Dynamic pmin2 = p1;
HXDLIN( 622)			 ::Dynamic pmax2;
HXDLIN( 622)			if (::hx::IsNull( econd )) {
HXLINE( 622)				pmax2 = 0;
            			}
            			else {
HXLINE( 622)				pmax2 = econd->__Field(HX_("pmax",34,f0,5a,4a),::hx::paccDynamic);
            			}
HXDLIN( 622)			if (::hx::IsNull( e3 )) {
HXLINE( 622)				return null();
            			}
            			else {
HXLINE( 622)				if (::hx::IsNull( pmin2 )) {
HXLINE( 622)					pmin2 = this->tokenMin;
            				}
HXDLIN( 622)				if (::hx::IsNull( pmax2 )) {
HXLINE( 622)					pmax2 = this->tokenMax;
            				}
HXDLIN( 622)				return  ::Dynamic(::hx::Anon_obj::Create(5)
            					->setFixed(0,HX_("e",65,00,00,00),e3)
            					->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            					->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax2)
            					->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin2)
            					->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            			}
HXLINE( 613)			goto _hx_goto_47;
            		}
            		if (  (_hx_switch_0==HX_("else",b9,e4,14,43)) ){
HXLINE( 633)			return this->unexpected(::hscript::Token_obj::TId(id));
HXDLIN( 633)			goto _hx_goto_47;
            		}
            		if (  (_hx_switch_0==HX_("for",09,c7,4d,00)) ){
HXLINE( 624)			{
HXLINE( 624)				 ::hscript::Token t = this->token();
HXDLIN( 624)				if (::hx::IsPointerNotEq( t,::hscript::Token_obj::TPOpen_dyn() )) {
HXLINE( 624)					this->unexpected(t);
            				}
            			}
HXLINE( 625)			::String vname = this->getIdent();
HXLINE( 626)			{
HXLINE( 626)				 ::hscript::Token t1 = this->token();
HXDLIN( 626)				if (!(__hxcpp_enum_eq(t1,::hscript::Token_obj::TId(HX_("in",e5,5b,00,00))))) {
HXLINE( 626)					this->unexpected(t1);
            				}
            			}
HXLINE( 627)			 ::Dynamic eiter = this->parseExpr();
HXLINE( 628)			{
HXLINE( 628)				 ::hscript::Token t2 = this->token();
HXDLIN( 628)				if (::hx::IsPointerNotEq( t2,::hscript::Token_obj::TPClose_dyn() )) {
HXLINE( 628)					this->unexpected(t2);
            				}
            			}
HXLINE( 629)			 ::Dynamic e4 = this->parseExpr();
HXLINE( 630)			 ::hscript::ExprDef e5 = ::hscript::ExprDef_obj::EFor(vname,eiter,e4);
HXDLIN( 630)			 ::Dynamic pmin3 = p1;
HXDLIN( 630)			 ::Dynamic pmax3;
HXDLIN( 630)			if (::hx::IsNull( e4 )) {
HXLINE( 630)				pmax3 = 0;
            			}
            			else {
HXLINE( 630)				pmax3 = e4->__Field(HX_("pmax",34,f0,5a,4a),::hx::paccDynamic);
            			}
HXDLIN( 630)			if (::hx::IsNull( e5 )) {
HXLINE( 630)				return null();
            			}
            			else {
HXLINE( 630)				if (::hx::IsNull( pmin3 )) {
HXLINE( 630)					pmin3 = this->tokenMin;
            				}
HXDLIN( 630)				if (::hx::IsNull( pmax3 )) {
HXLINE( 630)					pmax3 = this->tokenMax;
            				}
HXDLIN( 630)				return  ::Dynamic(::hx::Anon_obj::Create(5)
            					->setFixed(0,HX_("e",65,00,00,00),e5)
            					->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            					->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax3)
            					->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin3)
            					->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            			}
HXLINE( 623)			goto _hx_goto_47;
            		}
            		if (  (_hx_switch_0==HX_("function",18,ab,52,14)) ){
HXLINE( 638)			 ::hscript::Token tk1 = this->token();
HXLINE( 639)			::String name = null();
HXLINE( 640)			if ((tk1->_hx_getIndex() == 2)) {
HXLINE( 641)				::String id1 = tk1->_hx_getString(0);
HXDLIN( 641)				name = id1;
            			}
            			else {
HXLINE( 642)				this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            					->setFixed(0,HX_("t",74,00,00,00),tk1)
            					->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            					->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN( 642)				this->tokenMin = this->oldTokenMin;
HXDLIN( 642)				this->tokenMax = this->oldTokenMax;
            			}
HXLINE( 644)			 ::Dynamic inf = this->parseFunctionDecl();
HXLINE( 645)			 ::hscript::ExprDef e6 = ::hscript::ExprDef_obj::EFunction( ::Dynamic(inf->__Field(HX_("args",5d,8d,74,40),::hx::paccDynamic)), ::Dynamic(inf->__Field(HX_("body",a2,7a,1b,41),::hx::paccDynamic)),name, ::Dynamic(inf->__Field(HX_("ret",61,d9,56,00),::hx::paccDynamic)));
HXDLIN( 645)			 ::Dynamic pmin4 = p1;
HXDLIN( 645)			 ::Dynamic e7 = inf->__Field(HX_("body",a2,7a,1b,41),::hx::paccDynamic);
HXDLIN( 645)			 ::Dynamic pmax4;
HXDLIN( 645)			if (::hx::IsNull( e7 )) {
HXLINE( 645)				pmax4 = 0;
            			}
            			else {
HXLINE( 645)				pmax4 = e7->__Field(HX_("pmax",34,f0,5a,4a),::hx::paccDynamic);
            			}
HXDLIN( 645)			if (::hx::IsNull( e6 )) {
HXLINE( 645)				return null();
            			}
            			else {
HXLINE( 645)				if (::hx::IsNull( pmin4 )) {
HXLINE( 645)					pmin4 = this->tokenMin;
            				}
HXDLIN( 645)				if (::hx::IsNull( pmax4 )) {
HXLINE( 645)					pmax4 = this->tokenMax;
            				}
HXDLIN( 645)				return  ::Dynamic(::hx::Anon_obj::Create(5)
            					->setFixed(0,HX_("e",65,00,00,00),e6)
            					->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            					->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax4)
            					->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin4)
            					->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            			}
HXLINE( 637)			goto _hx_goto_47;
            		}
            		if (  (_hx_switch_0==HX_("if",dd,5b,00,00)) ){
HXLINE( 577)			{
HXLINE( 577)				 ::hscript::Token t3 = this->token();
HXDLIN( 577)				if (::hx::IsPointerNotEq( t3,::hscript::Token_obj::TPOpen_dyn() )) {
HXLINE( 577)					this->unexpected(t3);
            				}
            			}
HXLINE( 578)			 ::Dynamic cond = this->parseExpr();
HXLINE( 579)			{
HXLINE( 579)				 ::hscript::Token t4 = this->token();
HXDLIN( 579)				if (::hx::IsPointerNotEq( t4,::hscript::Token_obj::TPClose_dyn() )) {
HXLINE( 579)					this->unexpected(t4);
            				}
            			}
HXLINE( 580)			 ::Dynamic e11 = this->parseExpr();
HXLINE( 581)			 ::Dynamic e21 = null();
HXLINE( 582)			bool semic = false;
HXLINE( 583)			 ::hscript::Token tk2 = this->token();
HXLINE( 584)			if (::hx::IsPointerEq( tk2,::hscript::Token_obj::TSemicolon_dyn() )) {
HXLINE( 585)				semic = true;
HXLINE( 586)				tk2 = this->token();
            			}
HXLINE( 588)			if (__hxcpp_enum_eq(tk2,::hscript::Token_obj::TId(HX_("else",b9,e4,14,43)))) {
HXLINE( 589)				e21 = this->parseExpr();
            			}
            			else {
HXLINE( 591)				{
HXLINE( 591)					this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            						->setFixed(0,HX_("t",74,00,00,00),tk2)
            						->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            						->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN( 591)					this->tokenMin = this->oldTokenMin;
HXDLIN( 591)					this->tokenMax = this->oldTokenMax;
            				}
HXLINE( 592)				if (semic) {
HXLINE( 592)					this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            						->setFixed(0,HX_("t",74,00,00,00),::hscript::Token_obj::TSemicolon_dyn())
            						->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            						->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN( 592)					this->tokenMin = this->oldTokenMin;
HXDLIN( 592)					this->tokenMax = this->oldTokenMax;
            				}
            			}
HXLINE( 594)			 ::hscript::ExprDef e8 = ::hscript::ExprDef_obj::EIf(cond,e11,e21);
HXDLIN( 594)			 ::Dynamic pmin5 = p1;
HXDLIN( 594)			 ::Dynamic pmax5;
HXDLIN( 594)			if (::hx::IsNull( e21 )) {
HXLINE( 594)				pmax5 = this->tokenMax;
            			}
            			else {
HXLINE( 594)				if (::hx::IsNull( e21 )) {
HXLINE( 594)					pmax5 = 0;
            				}
            				else {
HXLINE( 594)					pmax5 = e21->__Field(HX_("pmax",34,f0,5a,4a),::hx::paccDynamic);
            				}
            			}
HXDLIN( 594)			if (::hx::IsNull( e8 )) {
HXLINE( 594)				return null();
            			}
            			else {
HXLINE( 594)				if (::hx::IsNull( pmin5 )) {
HXLINE( 594)					pmin5 = this->tokenMin;
            				}
HXDLIN( 594)				if (::hx::IsNull( pmax5 )) {
HXLINE( 594)					pmax5 = this->tokenMax;
            				}
HXDLIN( 594)				return  ::Dynamic(::hx::Anon_obj::Create(5)
            					->setFixed(0,HX_("e",65,00,00,00),e8)
            					->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            					->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax5)
            					->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin5)
            					->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            			}
HXLINE( 576)			goto _hx_goto_47;
            		}
            		if (  (_hx_switch_0==HX_("inline",59,ca,3f,99)) ){
HXLINE( 635)			if (!(this->maybe(::hscript::Token_obj::TId(HX_("function",18,ab,52,14))))) {
HXLINE( 635)				this->unexpected(::hscript::Token_obj::TId(HX_("inline",59,ca,3f,99)));
            			}
HXLINE( 636)			return this->parseStructure(HX_("function",18,ab,52,14));
HXLINE( 634)			goto _hx_goto_47;
            		}
            		if (  (_hx_switch_0==HX_("new",60,d0,53,00)) ){
HXLINE( 652)			::Array< ::String > a = ::Array_obj< ::String >::__new();
HXLINE( 653)			a->push(this->getIdent());
HXLINE( 654)			while(true){
HXLINE( 655)				 ::hscript::Token tk3 = this->token();
HXLINE( 656)				switch((int)(tk3->_hx_getIndex())){
            					case (int)4: {
HXLINE( 660)						goto _hx_goto_48;
            					}
            					break;
            					case (int)8: {
HXLINE( 658)						a->push(this->getIdent());
            					}
            					break;
            					default:{
HXLINE( 662)						this->unexpected(tk3);
HXLINE( 663)						goto _hx_goto_48;
            					}
            				}
            			}
            			_hx_goto_48:;
HXLINE( 666)			::Array< ::Dynamic> args = this->parseExprList(::hscript::Token_obj::TPClose_dyn());
HXLINE( 667)			 ::hscript::ExprDef e9 = ::hscript::ExprDef_obj::ENew(a->join(HX_(".",2e,00,00,00)),args);
HXDLIN( 667)			 ::Dynamic pmin6 = p1;
HXDLIN( 667)			 ::Dynamic pmax6 = null();
HXDLIN( 667)			if (::hx::IsNull( e9 )) {
HXLINE( 667)				return null();
            			}
            			else {
HXLINE( 667)				if (::hx::IsNull( pmin6 )) {
HXLINE( 667)					pmin6 = this->tokenMin;
            				}
HXDLIN( 667)				if (::hx::IsNull( pmax6 )) {
HXLINE( 667)					pmax6 = this->tokenMax;
            				}
HXDLIN( 667)				return  ::Dynamic(::hx::Anon_obj::Create(5)
            					->setFixed(0,HX_("e",65,00,00,00),e9)
            					->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            					->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax6)
            					->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin6)
            					->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            			}
HXLINE( 651)			goto _hx_goto_47;
            		}
            		if (  (_hx_switch_0==HX_("return",b0,a4,2d,09)) ){
HXLINE( 647)			 ::hscript::Token tk4 = this->token();
HXLINE( 648)			{
HXLINE( 648)				this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            					->setFixed(0,HX_("t",74,00,00,00),tk4)
            					->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            					->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN( 648)				this->tokenMin = this->oldTokenMin;
HXDLIN( 648)				this->tokenMax = this->oldTokenMax;
            			}
HXLINE( 649)			 ::Dynamic e10;
HXDLIN( 649)			if (::hx::IsPointerEq( tk4,::hscript::Token_obj::TSemicolon_dyn() )) {
HXLINE( 649)				e10 = null();
            			}
            			else {
HXLINE( 649)				e10 = this->parseExpr();
            			}
HXLINE( 650)			 ::hscript::ExprDef e12 = ::hscript::ExprDef_obj::EReturn(e10);
HXDLIN( 650)			 ::Dynamic pmin7 = p1;
HXDLIN( 650)			 ::Dynamic pmax7;
HXDLIN( 650)			if (::hx::IsNull( e10 )) {
HXLINE( 650)				pmax7 = this->tokenMax;
            			}
            			else {
HXLINE( 650)				if (::hx::IsNull( e10 )) {
HXLINE( 650)					pmax7 = 0;
            				}
            				else {
HXLINE( 650)					pmax7 = e10->__Field(HX_("pmax",34,f0,5a,4a),::hx::paccDynamic);
            				}
            			}
HXDLIN( 650)			if (::hx::IsNull( e12 )) {
HXLINE( 650)				return null();
            			}
            			else {
HXLINE( 650)				if (::hx::IsNull( pmin7 )) {
HXLINE( 650)					pmin7 = this->tokenMin;
            				}
HXDLIN( 650)				if (::hx::IsNull( pmax7 )) {
HXLINE( 650)					pmax7 = this->tokenMax;
            				}
HXDLIN( 650)				return  ::Dynamic(::hx::Anon_obj::Create(5)
            					->setFixed(0,HX_("e",65,00,00,00),e12)
            					->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            					->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax7)
            					->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin7)
            					->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            			}
HXLINE( 646)			goto _hx_goto_47;
            		}
            		if (  (_hx_switch_0==HX_("switch",f4,49,79,c5)) ){
HXLINE( 686)			 ::Dynamic e13 = this->parseExpr();
HXLINE( 687)			 ::Dynamic def = null();
HXDLIN( 687)			::Array< ::Dynamic> cases = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 688)			{
HXLINE( 688)				 ::hscript::Token t5 = this->token();
HXDLIN( 688)				if (::hx::IsPointerNotEq( t5,::hscript::Token_obj::TBrOpen_dyn() )) {
HXLINE( 688)					this->unexpected(t5);
            				}
            			}
HXLINE( 689)			while(true){
HXLINE( 690)				 ::hscript::Token tk5 = this->token();
HXLINE( 691)				switch((int)(tk5->_hx_getIndex())){
            					case (int)2: {
HXLINE( 728)						::String _hx_switch_1 = tk5->_hx_getString(0);
            						if (  (_hx_switch_1==HX_("case",b0,1e,ba,41)) ){
HXLINE( 693)							 ::Dynamic c =  ::Dynamic(::hx::Anon_obj::Create(2)
            								->setFixed(0,HX_("expr",35,fd,1d,43),null())
            								->setFixed(1,HX_("values",e2,03,b7,4f),::Array_obj< ::Dynamic>::__new(0)));
HXLINE( 694)							cases->push(c);
HXLINE( 695)							while(true){
HXLINE( 696)								 ::Dynamic e14 = this->parseExpr();
HXLINE( 697)								( (::Array< ::Dynamic>)(c->__Field(HX_("values",e2,03,b7,4f),::hx::paccDynamic)) )->push(e14);
HXLINE( 698)								tk5 = this->token();
HXLINE( 699)								switch((int)(tk5->_hx_getIndex())){
            									case (int)10: {
            									}
            									break;
            									case (int)15: {
HXLINE( 703)										goto _hx_goto_51;
            									}
            									break;
            									default:{
HXLINE( 705)										this->unexpected(tk5);
HXLINE( 706)										goto _hx_goto_51;
            									}
            								}
            							}
            							_hx_goto_51:;
HXLINE( 709)							::Array< ::Dynamic> exprs = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 710)							while(true){
HXLINE( 711)								tk5 = this->token();
HXLINE( 712)								{
HXLINE( 712)									this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            										->setFixed(0,HX_("t",74,00,00,00),tk5)
            										->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            										->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN( 712)									this->tokenMin = this->oldTokenMin;
HXDLIN( 712)									this->tokenMax = this->oldTokenMax;
            								}
HXLINE( 713)								switch((int)(tk5->_hx_getIndex())){
            									case (int)0: {
HXLINE( 716)										if (this->resumeErrors) {
HXLINE( 717)											goto _hx_goto_52;
            										}
            										else {
HXLINE( 719)											this->parseFullExpr(exprs);
            										}
            									}
            									break;
            									case (int)2: {
HXLINE( 714)										::String _hx_switch_2 = tk5->_hx_getString(0);
            										if (  (_hx_switch_2==HX_("case",b0,1e,ba,41)) ||  (_hx_switch_2==HX_("default",c1,d8,c3,9b)) ){
HXLINE( 715)											goto _hx_goto_52;
HXDLIN( 715)											goto _hx_goto_53;
            										}
            										/* default */{
HXLINE( 719)											this->parseFullExpr(exprs);
            										}
            										_hx_goto_53:;
            									}
            									break;
            									case (int)7: {
HXLINE( 715)										goto _hx_goto_52;
            									}
            									break;
            									default:{
HXLINE( 719)										this->parseFullExpr(exprs);
            									}
            								}
            							}
            							_hx_goto_52:;
HXLINE( 722)							 ::Dynamic _hx_tmp;
HXDLIN( 722)							if ((exprs->length == 1)) {
HXLINE( 722)								_hx_tmp = exprs->__get(0);
            							}
            							else {
HXLINE( 724)								if ((exprs->length == 0)) {
HXLINE( 725)									 ::hscript::ExprDef e15 = ::hscript::ExprDef_obj::EBlock(::Array_obj< ::Dynamic>::__new(0));
HXDLIN( 725)									 ::Dynamic pmin8 = this->tokenMin;
HXDLIN( 725)									 ::Dynamic pmax8 = this->tokenMin;
HXDLIN( 725)									if (::hx::IsNull( e15 )) {
HXLINE( 722)										_hx_tmp = null();
            									}
            									else {
HXLINE( 725)										if (::hx::IsNull( pmin8 )) {
HXLINE( 725)											pmin8 = this->tokenMin;
            										}
HXDLIN( 725)										if (::hx::IsNull( pmax8 )) {
HXLINE( 725)											pmax8 = this->tokenMax;
            										}
HXLINE( 722)										_hx_tmp =  ::Dynamic(::hx::Anon_obj::Create(5)
            											->setFixed(0,HX_("e",65,00,00,00),e15)
            											->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            											->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax8)
            											->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin8)
            											->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            									}
            								}
            								else {
HXLINE( 727)									 ::hscript::ExprDef e16 = ::hscript::ExprDef_obj::EBlock(exprs);
HXDLIN( 727)									 ::Dynamic e17 = exprs->__get(0);
HXDLIN( 727)									 ::Dynamic pmin9;
HXDLIN( 727)									if (::hx::IsNull( e17 )) {
HXLINE( 727)										pmin9 = 0;
            									}
            									else {
HXLINE( 727)										pmin9 = e17->__Field(HX_("pmin",22,f7,5a,4a),::hx::paccDynamic);
            									}
HXDLIN( 727)									 ::Dynamic e18 = exprs->__get((exprs->length - 1));
HXDLIN( 727)									 ::Dynamic pmax9;
HXDLIN( 727)									if (::hx::IsNull( e18 )) {
HXLINE( 727)										pmax9 = 0;
            									}
            									else {
HXLINE( 727)										pmax9 = e18->__Field(HX_("pmax",34,f0,5a,4a),::hx::paccDynamic);
            									}
HXDLIN( 727)									if (::hx::IsNull( e16 )) {
HXLINE( 722)										_hx_tmp = null();
            									}
            									else {
HXLINE( 727)										if (::hx::IsNull( pmin9 )) {
HXLINE( 727)											pmin9 = this->tokenMin;
            										}
HXDLIN( 727)										if (::hx::IsNull( pmax9 )) {
HXLINE( 727)											pmax9 = this->tokenMax;
            										}
HXLINE( 722)										_hx_tmp =  ::Dynamic(::hx::Anon_obj::Create(5)
            											->setFixed(0,HX_("e",65,00,00,00),e16)
            											->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            											->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax9)
            											->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin9)
            											->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            									}
            								}
            							}
HXDLIN( 722)							c->__SetField(HX_("expr",35,fd,1d,43),_hx_tmp,::hx::paccDynamic);
HXLINE( 692)							goto _hx_goto_50;
            						}
            						if (  (_hx_switch_1==HX_("default",c1,d8,c3,9b)) ){
HXLINE( 729)							if (::hx::IsNotNull( def )) {
HXLINE( 729)								this->unexpected(tk5);
            							}
HXLINE( 730)							{
HXLINE( 730)								 ::hscript::Token t6 = this->token();
HXDLIN( 730)								if (::hx::IsPointerNotEq( t6,::hscript::Token_obj::TDoubleDot_dyn() )) {
HXLINE( 730)									this->unexpected(t6);
            								}
            							}
HXLINE( 731)							::Array< ::Dynamic> exprs1 = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 732)							while(true){
HXLINE( 733)								tk5 = this->token();
HXLINE( 734)								{
HXLINE( 734)									this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            										->setFixed(0,HX_("t",74,00,00,00),tk5)
            										->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            										->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN( 734)									this->tokenMin = this->oldTokenMin;
HXDLIN( 734)									this->tokenMax = this->oldTokenMax;
            								}
HXLINE( 735)								switch((int)(tk5->_hx_getIndex())){
            									case (int)0: {
HXLINE( 738)										if (this->resumeErrors) {
HXLINE( 739)											goto _hx_goto_54;
            										}
            										else {
HXLINE( 741)											this->parseFullExpr(exprs1);
            										}
            									}
            									break;
            									case (int)2: {
HXLINE( 736)										::String _hx_switch_3 = tk5->_hx_getString(0);
            										if (  (_hx_switch_3==HX_("case",b0,1e,ba,41)) ||  (_hx_switch_3==HX_("default",c1,d8,c3,9b)) ){
HXLINE( 737)											goto _hx_goto_54;
HXDLIN( 737)											goto _hx_goto_55;
            										}
            										/* default */{
HXLINE( 741)											this->parseFullExpr(exprs1);
            										}
            										_hx_goto_55:;
            									}
            									break;
            									case (int)7: {
HXLINE( 737)										goto _hx_goto_54;
            									}
            									break;
            									default:{
HXLINE( 741)										this->parseFullExpr(exprs1);
            									}
            								}
            							}
            							_hx_goto_54:;
HXLINE( 744)							if ((exprs1->length == 1)) {
HXLINE( 745)								def = exprs1->__get(0);
            							}
            							else {
HXLINE( 746)								if ((exprs1->length == 0)) {
HXLINE( 747)									 ::hscript::ExprDef e19 = ::hscript::ExprDef_obj::EBlock(::Array_obj< ::Dynamic>::__new(0));
HXDLIN( 747)									 ::Dynamic pmin10 = this->tokenMin;
HXDLIN( 747)									 ::Dynamic pmax10 = this->tokenMin;
HXDLIN( 747)									if (::hx::IsNull( e19 )) {
HXLINE( 747)										def = null();
            									}
            									else {
HXLINE( 747)										if (::hx::IsNull( pmin10 )) {
HXLINE( 747)											pmin10 = this->tokenMin;
            										}
HXDLIN( 747)										if (::hx::IsNull( pmax10 )) {
HXLINE( 747)											pmax10 = this->tokenMax;
            										}
HXDLIN( 747)										def =  ::Dynamic(::hx::Anon_obj::Create(5)
            											->setFixed(0,HX_("e",65,00,00,00),e19)
            											->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            											->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax10)
            											->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin10)
            											->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            									}
            								}
            								else {
HXLINE( 749)									 ::hscript::ExprDef e20 = ::hscript::ExprDef_obj::EBlock(exprs1);
HXDLIN( 749)									 ::Dynamic e22 = exprs1->__get(0);
HXDLIN( 749)									 ::Dynamic pmin11;
HXDLIN( 749)									if (::hx::IsNull( e22 )) {
HXLINE( 749)										pmin11 = 0;
            									}
            									else {
HXLINE( 749)										pmin11 = e22->__Field(HX_("pmin",22,f7,5a,4a),::hx::paccDynamic);
            									}
HXDLIN( 749)									 ::Dynamic e23 = exprs1->__get((exprs1->length - 1));
HXDLIN( 749)									 ::Dynamic pmax11;
HXDLIN( 749)									if (::hx::IsNull( e23 )) {
HXLINE( 749)										pmax11 = 0;
            									}
            									else {
HXLINE( 749)										pmax11 = e23->__Field(HX_("pmax",34,f0,5a,4a),::hx::paccDynamic);
            									}
HXDLIN( 749)									if (::hx::IsNull( e20 )) {
HXLINE( 749)										def = null();
            									}
            									else {
HXLINE( 749)										if (::hx::IsNull( pmin11 )) {
HXLINE( 749)											pmin11 = this->tokenMin;
            										}
HXDLIN( 749)										if (::hx::IsNull( pmax11 )) {
HXLINE( 749)											pmax11 = this->tokenMax;
            										}
HXDLIN( 749)										def =  ::Dynamic(::hx::Anon_obj::Create(5)
            											->setFixed(0,HX_("e",65,00,00,00),e20)
            											->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            											->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax11)
            											->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin11)
            											->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            									}
            								}
            							}
HXLINE( 728)							goto _hx_goto_50;
            						}
            						/* default */{
HXLINE( 753)							this->unexpected(tk5);
HXLINE( 754)							goto _hx_goto_49;
            						}
            						_hx_goto_50:;
            					}
            					break;
            					case (int)7: {
HXLINE( 751)						goto _hx_goto_49;
            					}
            					break;
            					default:{
HXLINE( 753)						this->unexpected(tk5);
HXLINE( 754)						goto _hx_goto_49;
            					}
            				}
            			}
            			_hx_goto_49:;
HXLINE( 757)			 ::hscript::ExprDef e24 = ::hscript::ExprDef_obj::ESwitch(e13,cases,def);
HXDLIN( 757)			 ::Dynamic pmin12 = p1;
HXDLIN( 757)			 ::Dynamic pmax12 = this->tokenMax;
HXDLIN( 757)			if (::hx::IsNull( e24 )) {
HXLINE( 757)				return null();
            			}
            			else {
HXLINE( 757)				if (::hx::IsNull( pmin12 )) {
HXLINE( 757)					pmin12 = this->tokenMin;
            				}
HXDLIN( 757)				if (::hx::IsNull( pmax12 )) {
HXLINE( 757)					pmax12 = this->tokenMax;
            				}
HXDLIN( 757)				return  ::Dynamic(::hx::Anon_obj::Create(5)
            					->setFixed(0,HX_("e",65,00,00,00),e24)
            					->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            					->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax12)
            					->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin12)
            					->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            			}
HXLINE( 685)			goto _hx_goto_47;
            		}
            		if (  (_hx_switch_0==HX_("throw",26,5d,90,0f)) ){
HXLINE( 669)			 ::Dynamic e25 = this->parseExpr();
HXLINE( 670)			 ::hscript::ExprDef e26 = ::hscript::ExprDef_obj::EThrow(e25);
HXDLIN( 670)			 ::Dynamic pmin13 = p1;
HXDLIN( 670)			 ::Dynamic pmax13;
HXDLIN( 670)			if (::hx::IsNull( e25 )) {
HXLINE( 670)				pmax13 = 0;
            			}
            			else {
HXLINE( 670)				pmax13 = e25->__Field(HX_("pmax",34,f0,5a,4a),::hx::paccDynamic);
            			}
HXDLIN( 670)			if (::hx::IsNull( e26 )) {
HXLINE( 670)				return null();
            			}
            			else {
HXLINE( 670)				if (::hx::IsNull( pmin13 )) {
HXLINE( 670)					pmin13 = this->tokenMin;
            				}
HXDLIN( 670)				if (::hx::IsNull( pmax13 )) {
HXLINE( 670)					pmax13 = this->tokenMax;
            				}
HXDLIN( 670)				return  ::Dynamic(::hx::Anon_obj::Create(5)
            					->setFixed(0,HX_("e",65,00,00,00),e26)
            					->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            					->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax13)
            					->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin13)
            					->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            			}
HXLINE( 668)			goto _hx_goto_47;
            		}
            		if (  (_hx_switch_0==HX_("try",3b,69,58,00)) ){
HXLINE( 672)			 ::Dynamic e27 = this->parseExpr();
HXLINE( 673)			{
HXLINE( 673)				 ::hscript::Token t7 = this->token();
HXDLIN( 673)				if (!(__hxcpp_enum_eq(t7,::hscript::Token_obj::TId(HX_("catch",3b,7c,21,41))))) {
HXLINE( 673)					this->unexpected(t7);
            				}
            			}
HXLINE( 674)			{
HXLINE( 674)				 ::hscript::Token t8 = this->token();
HXDLIN( 674)				if (::hx::IsPointerNotEq( t8,::hscript::Token_obj::TPOpen_dyn() )) {
HXLINE( 674)					this->unexpected(t8);
            				}
            			}
HXLINE( 675)			::String vname1 = this->getIdent();
HXLINE( 676)			{
HXLINE( 676)				 ::hscript::Token t9 = this->token();
HXDLIN( 676)				if (::hx::IsPointerNotEq( t9,::hscript::Token_obj::TDoubleDot_dyn() )) {
HXLINE( 676)					this->unexpected(t9);
            				}
            			}
HXLINE( 677)			 ::hscript::CType t10 = null();
HXLINE( 678)			if (this->allowTypes) {
HXLINE( 679)				t10 = this->parseType();
            			}
            			else {
HXLINE( 681)				 ::hscript::Token t11 = this->token();
HXDLIN( 681)				if (!(__hxcpp_enum_eq(t11,::hscript::Token_obj::TId(HX_("Dynamic",5f,c7,66,03))))) {
HXLINE( 681)					this->unexpected(t11);
            				}
            			}
HXLINE( 682)			{
HXLINE( 682)				 ::hscript::Token t12 = this->token();
HXDLIN( 682)				if (::hx::IsPointerNotEq( t12,::hscript::Token_obj::TPClose_dyn() )) {
HXLINE( 682)					this->unexpected(t12);
            				}
            			}
HXLINE( 683)			 ::Dynamic ec = this->parseExpr();
HXLINE( 684)			 ::hscript::ExprDef e28 = ::hscript::ExprDef_obj::ETry(e27,vname1,t10,ec);
HXDLIN( 684)			 ::Dynamic pmin14 = p1;
HXDLIN( 684)			 ::Dynamic pmax14;
HXDLIN( 684)			if (::hx::IsNull( ec )) {
HXLINE( 684)				pmax14 = 0;
            			}
            			else {
HXLINE( 684)				pmax14 = ec->__Field(HX_("pmax",34,f0,5a,4a),::hx::paccDynamic);
            			}
HXDLIN( 684)			if (::hx::IsNull( e28 )) {
HXLINE( 684)				return null();
            			}
            			else {
HXLINE( 684)				if (::hx::IsNull( pmin14 )) {
HXLINE( 684)					pmin14 = this->tokenMin;
            				}
HXDLIN( 684)				if (::hx::IsNull( pmax14 )) {
HXLINE( 684)					pmax14 = this->tokenMax;
            				}
HXDLIN( 684)				return  ::Dynamic(::hx::Anon_obj::Create(5)
            					->setFixed(0,HX_("e",65,00,00,00),e28)
            					->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            					->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax14)
            					->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin14)
            					->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            			}
HXLINE( 671)			goto _hx_goto_47;
            		}
            		if (  (_hx_switch_0==HX_("var",e7,de,59,00)) ){
HXLINE( 596)			::String ident = this->getIdent();
HXLINE( 597)			 ::hscript::Token tk6 = this->token();
HXLINE( 598)			 ::hscript::CType t13 = null();
HXLINE( 599)			bool _hx_tmp1;
HXDLIN( 599)			if (::hx::IsPointerEq( tk6,::hscript::Token_obj::TDoubleDot_dyn() )) {
HXLINE( 599)				_hx_tmp1 = this->allowTypes;
            			}
            			else {
HXLINE( 599)				_hx_tmp1 = false;
            			}
HXDLIN( 599)			if (_hx_tmp1) {
HXLINE( 600)				t13 = this->parseType();
HXLINE( 601)				tk6 = this->token();
            			}
HXLINE( 603)			 ::Dynamic e29 = null();
HXLINE( 604)			if (__hxcpp_enum_eq(tk6,::hscript::Token_obj::TOp(HX_("=",3d,00,00,00)))) {
HXLINE( 605)				e29 = this->parseExpr();
            			}
            			else {
HXLINE( 607)				this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            					->setFixed(0,HX_("t",74,00,00,00),tk6)
            					->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            					->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN( 607)				this->tokenMin = this->oldTokenMin;
HXDLIN( 607)				this->tokenMax = this->oldTokenMax;
            			}
HXLINE( 608)			 ::hscript::ExprDef e30 = ::hscript::ExprDef_obj::EVar(ident,t13,e29);
HXDLIN( 608)			 ::Dynamic pmin15 = p1;
HXDLIN( 608)			 ::Dynamic pmax15;
HXDLIN( 608)			if (::hx::IsNull( e29 )) {
HXLINE( 608)				pmax15 = this->tokenMax;
            			}
            			else {
HXLINE( 608)				if (::hx::IsNull( e29 )) {
HXLINE( 608)					pmax15 = 0;
            				}
            				else {
HXLINE( 608)					pmax15 = e29->__Field(HX_("pmax",34,f0,5a,4a),::hx::paccDynamic);
            				}
            			}
HXDLIN( 608)			if (::hx::IsNull( e30 )) {
HXLINE( 608)				return null();
            			}
            			else {
HXLINE( 608)				if (::hx::IsNull( pmin15 )) {
HXLINE( 608)					pmin15 = this->tokenMin;
            				}
HXDLIN( 608)				if (::hx::IsNull( pmax15 )) {
HXLINE( 608)					pmax15 = this->tokenMax;
            				}
HXDLIN( 608)				return  ::Dynamic(::hx::Anon_obj::Create(5)
            					->setFixed(0,HX_("e",65,00,00,00),e30)
            					->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            					->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax15)
            					->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin15)
            					->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            			}
HXLINE( 595)			goto _hx_goto_47;
            		}
            		if (  (_hx_switch_0==HX_("while",b1,43,bd,c9)) ){
HXLINE( 610)			 ::Dynamic econd1 = this->parseExpr();
HXLINE( 611)			 ::Dynamic e31 = this->parseExpr();
HXLINE( 612)			 ::hscript::ExprDef e32 = ::hscript::ExprDef_obj::EWhile(econd1,e31);
HXDLIN( 612)			 ::Dynamic pmin16 = p1;
HXDLIN( 612)			 ::Dynamic pmax16;
HXDLIN( 612)			if (::hx::IsNull( e31 )) {
HXLINE( 612)				pmax16 = 0;
            			}
            			else {
HXLINE( 612)				pmax16 = e31->__Field(HX_("pmax",34,f0,5a,4a),::hx::paccDynamic);
            			}
HXDLIN( 612)			if (::hx::IsNull( e32 )) {
HXLINE( 612)				return null();
            			}
            			else {
HXLINE( 612)				if (::hx::IsNull( pmin16 )) {
HXLINE( 612)					pmin16 = this->tokenMin;
            				}
HXDLIN( 612)				if (::hx::IsNull( pmax16 )) {
HXLINE( 612)					pmax16 = this->tokenMax;
            				}
HXDLIN( 612)				return  ::Dynamic(::hx::Anon_obj::Create(5)
            					->setFixed(0,HX_("e",65,00,00,00),e32)
            					->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            					->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax16)
            					->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin16)
            					->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            			}
HXLINE( 609)			goto _hx_goto_47;
            		}
            		/* default */{
HXLINE( 759)			return null();
            		}
            		_hx_goto_47:;
HXLINE( 575)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,parseStructure,return )

 ::Dynamic Parser_obj::parseExprNext( ::Dynamic e1){
            	HX_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_763_parseExprNext)
HXLINE( 764)		 ::hscript::Token tk = this->token();
HXLINE( 765)		switch((int)(tk->_hx_getIndex())){
            			case (int)2: {
HXLINE( 790)				::String op = tk->_hx_getString(0);
HXDLIN( 790)				if ((op == HX_("is",ea,5b,00,00))) {
HXLINE( 791)					return this->makeBinop(op,e1,this->parseExpr());
            				}
            				else {
HXLINE( 819)					{
HXLINE( 819)						this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            							->setFixed(0,HX_("t",74,00,00,00),tk)
            							->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            							->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN( 819)						this->tokenMin = this->oldTokenMin;
HXDLIN( 819)						this->tokenMax = this->oldTokenMax;
            					}
HXLINE( 820)					return e1;
            				}
            			}
            			break;
            			case (int)3: {
HXLINE( 766)				::String op1 = tk->_hx_getString(0);
HXLINE( 768)				if ((op1 == HX_("->",71,27,00,00))) {
HXLINE( 770)					{
HXLINE( 770)						 ::hscript::ExprDef _g = e1->__Field(HX_("e",65,00,00,00),::hx::paccDynamic);
HXDLIN( 770)						switch((int)(_g->_hx_getIndex())){
            							case (int)1: {
HXLINE( 771)								::String i = _g->_hx_getString(0);
HXLINE( 772)								 ::Dynamic eret = this->parseExpr();
HXLINE( 773)								 ::hscript::ExprDef e = ::hscript::ExprDef_obj::EReturn(eret);
HXDLIN( 773)								 ::Dynamic pmin;
HXDLIN( 773)								if (::hx::IsNull( eret )) {
HXLINE( 773)									pmin = 0;
            								}
            								else {
HXLINE( 773)									pmin = eret->__Field(HX_("pmin",22,f7,5a,4a),::hx::paccDynamic);
            								}
HXDLIN( 773)								 ::Dynamic pmax = null();
HXDLIN( 773)								 ::Dynamic e2;
HXDLIN( 773)								if (::hx::IsNull( e )) {
HXLINE( 773)									e2 = null();
            								}
            								else {
HXLINE( 773)									if (::hx::IsNull( pmin )) {
HXLINE( 773)										pmin = this->tokenMin;
            									}
HXDLIN( 773)									if (::hx::IsNull( pmax )) {
HXLINE( 773)										pmax = this->tokenMax;
            									}
HXDLIN( 773)									e2 =  ::Dynamic(::hx::Anon_obj::Create(5)
            										->setFixed(0,HX_("e",65,00,00,00),e)
            										->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            										->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax)
            										->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin)
            										->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            								}
HXDLIN( 773)								 ::hscript::ExprDef e3 = ::hscript::ExprDef_obj::EFunction(::Array_obj< ::Dynamic>::__new(1)->init(0, ::Dynamic(::hx::Anon_obj::Create(1)
            									->setFixed(0,HX_("name",4b,72,ff,48),i))),e2,null(),null());
HXDLIN( 773)								 ::Dynamic pmin1;
HXDLIN( 773)								if (::hx::IsNull( e1 )) {
HXLINE( 773)									pmin1 = 0;
            								}
            								else {
HXLINE( 773)									pmin1 = e1->__Field(HX_("pmin",22,f7,5a,4a),::hx::paccDynamic);
            								}
HXDLIN( 773)								 ::Dynamic pmax1 = null();
HXDLIN( 773)								if (::hx::IsNull( e3 )) {
HXLINE( 773)									return null();
            								}
            								else {
HXLINE( 773)									if (::hx::IsNull( pmin1 )) {
HXLINE( 773)										pmin1 = this->tokenMin;
            									}
HXDLIN( 773)									if (::hx::IsNull( pmax1 )) {
HXLINE( 773)										pmax1 = this->tokenMax;
            									}
HXDLIN( 773)									return  ::Dynamic(::hx::Anon_obj::Create(5)
            										->setFixed(0,HX_("e",65,00,00,00),e3)
            										->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            										->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax1)
            										->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin1)
            										->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            								}
            							}
            							break;
            							case (int)3: {
HXLINE( 771)								 ::hscript::ExprDef _hx_tmp = _g->_hx_getObject(0)->__Field(HX_("e",65,00,00,00),::hx::paccDynamic);
HXDLIN( 771)								if ((_hx_tmp->_hx_getIndex() == 1)) {
HXLINE( 771)									::String i1 = _hx_tmp->_hx_getString(0);
HXLINE( 772)									 ::Dynamic eret1 = this->parseExpr();
HXLINE( 773)									 ::hscript::ExprDef e4 = ::hscript::ExprDef_obj::EReturn(eret1);
HXDLIN( 773)									 ::Dynamic pmin2;
HXDLIN( 773)									if (::hx::IsNull( eret1 )) {
HXLINE( 773)										pmin2 = 0;
            									}
            									else {
HXLINE( 773)										pmin2 = eret1->__Field(HX_("pmin",22,f7,5a,4a),::hx::paccDynamic);
            									}
HXDLIN( 773)									 ::Dynamic pmax2 = null();
HXDLIN( 773)									 ::Dynamic e5;
HXDLIN( 773)									if (::hx::IsNull( e4 )) {
HXLINE( 773)										e5 = null();
            									}
            									else {
HXLINE( 773)										if (::hx::IsNull( pmin2 )) {
HXLINE( 773)											pmin2 = this->tokenMin;
            										}
HXDLIN( 773)										if (::hx::IsNull( pmax2 )) {
HXLINE( 773)											pmax2 = this->tokenMax;
            										}
HXDLIN( 773)										e5 =  ::Dynamic(::hx::Anon_obj::Create(5)
            											->setFixed(0,HX_("e",65,00,00,00),e4)
            											->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            											->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax2)
            											->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin2)
            											->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            									}
HXDLIN( 773)									 ::hscript::ExprDef e6 = ::hscript::ExprDef_obj::EFunction(::Array_obj< ::Dynamic>::__new(1)->init(0, ::Dynamic(::hx::Anon_obj::Create(1)
            										->setFixed(0,HX_("name",4b,72,ff,48),i1))),e5,null(),null());
HXDLIN( 773)									 ::Dynamic pmin3;
HXDLIN( 773)									if (::hx::IsNull( e1 )) {
HXLINE( 773)										pmin3 = 0;
            									}
            									else {
HXLINE( 773)										pmin3 = e1->__Field(HX_("pmin",22,f7,5a,4a),::hx::paccDynamic);
            									}
HXDLIN( 773)									 ::Dynamic pmax3 = null();
HXDLIN( 773)									if (::hx::IsNull( e6 )) {
HXLINE( 773)										return null();
            									}
            									else {
HXLINE( 773)										if (::hx::IsNull( pmin3 )) {
HXLINE( 773)											pmin3 = this->tokenMin;
            										}
HXDLIN( 773)										if (::hx::IsNull( pmax3 )) {
HXLINE( 773)											pmax3 = this->tokenMax;
            										}
HXDLIN( 773)										return  ::Dynamic(::hx::Anon_obj::Create(5)
            											->setFixed(0,HX_("e",65,00,00,00),e6)
            											->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            											->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax3)
            											->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin3)
            											->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            									}
            								}
            							}
            							break;
            							case (int)26: {
HXLINE( 774)								 ::hscript::ExprDef _hx_tmp1 = _g->_hx_getObject(0)->__Field(HX_("e",65,00,00,00),::hx::paccDynamic);
HXDLIN( 774)								if ((_hx_tmp1->_hx_getIndex() == 1)) {
HXLINE( 774)									::String i2 = _hx_tmp1->_hx_getString(0);
HXDLIN( 774)									 ::hscript::CType t = _g->_hx_getObject(1).StaticCast<  ::hscript::CType >();
HXLINE( 775)									 ::Dynamic eret2 = this->parseExpr();
HXLINE( 776)									 ::hscript::ExprDef e7 = ::hscript::ExprDef_obj::EReturn(eret2);
HXDLIN( 776)									 ::Dynamic pmin4;
HXDLIN( 776)									if (::hx::IsNull( eret2 )) {
HXLINE( 776)										pmin4 = 0;
            									}
            									else {
HXLINE( 776)										pmin4 = eret2->__Field(HX_("pmin",22,f7,5a,4a),::hx::paccDynamic);
            									}
HXDLIN( 776)									 ::Dynamic pmax4 = null();
HXDLIN( 776)									 ::Dynamic e8;
HXDLIN( 776)									if (::hx::IsNull( e7 )) {
HXLINE( 776)										e8 = null();
            									}
            									else {
HXLINE( 776)										if (::hx::IsNull( pmin4 )) {
HXLINE( 776)											pmin4 = this->tokenMin;
            										}
HXDLIN( 776)										if (::hx::IsNull( pmax4 )) {
HXLINE( 776)											pmax4 = this->tokenMax;
            										}
HXDLIN( 776)										e8 =  ::Dynamic(::hx::Anon_obj::Create(5)
            											->setFixed(0,HX_("e",65,00,00,00),e7)
            											->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            											->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax4)
            											->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin4)
            											->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            									}
HXDLIN( 776)									 ::hscript::ExprDef e9 = ::hscript::ExprDef_obj::EFunction(::Array_obj< ::Dynamic>::__new(1)->init(0, ::Dynamic(::hx::Anon_obj::Create(2)
            										->setFixed(0,HX_("t",74,00,00,00),t)
            										->setFixed(1,HX_("name",4b,72,ff,48),i2))),e8,null(),null());
HXDLIN( 776)									 ::Dynamic pmin5;
HXDLIN( 776)									if (::hx::IsNull( e1 )) {
HXLINE( 776)										pmin5 = 0;
            									}
            									else {
HXLINE( 776)										pmin5 = e1->__Field(HX_("pmin",22,f7,5a,4a),::hx::paccDynamic);
            									}
HXDLIN( 776)									 ::Dynamic pmax5 = null();
HXDLIN( 776)									if (::hx::IsNull( e9 )) {
HXLINE( 776)										return null();
            									}
            									else {
HXLINE( 776)										if (::hx::IsNull( pmin5 )) {
HXLINE( 776)											pmin5 = this->tokenMin;
            										}
HXDLIN( 776)										if (::hx::IsNull( pmax5 )) {
HXLINE( 776)											pmax5 = this->tokenMax;
            										}
HXDLIN( 776)										return  ::Dynamic(::hx::Anon_obj::Create(5)
            											->setFixed(0,HX_("e",65,00,00,00),e9)
            											->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            											->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax5)
            											->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin5)
            											->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            									}
            								}
            							}
            							break;
            							default:{
            							}
            						}
            					}
HXLINE( 779)					this->unexpected(tk);
            				}
HXLINE( 782)				if (::hx::IsEq( this->opPriority->get(op1),-1 )) {
HXLINE( 783)					bool _hx_tmp2;
HXDLIN( 783)					if (!(this->isBlock(e1))) {
HXLINE( 783)						 ::hscript::ExprDef _g1 = e1->__Field(HX_("e",65,00,00,00),::hx::paccDynamic);
HXDLIN( 783)						if ((_g1->_hx_getIndex() == 3)) {
HXLINE( 783)							 ::Dynamic _g2 = _g1->_hx_getObject(0);
HXDLIN( 783)							_hx_tmp2 = true;
            						}
            						else {
HXLINE( 783)							_hx_tmp2 = false;
            						}
            					}
            					else {
HXLINE( 783)						_hx_tmp2 = true;
            					}
HXDLIN( 783)					if (_hx_tmp2) {
HXLINE( 784)						{
HXLINE( 784)							this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            								->setFixed(0,HX_("t",74,00,00,00),tk)
            								->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            								->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN( 784)							this->tokenMin = this->oldTokenMin;
HXDLIN( 784)							this->tokenMax = this->oldTokenMax;
            						}
HXLINE( 785)						return e1;
            					}
HXLINE( 787)					 ::hscript::ExprDef e10 = ::hscript::ExprDef_obj::EUnop(op1,false,e1);
HXDLIN( 787)					 ::Dynamic pmin6;
HXDLIN( 787)					if (::hx::IsNull( e1 )) {
HXLINE( 787)						pmin6 = 0;
            					}
            					else {
HXLINE( 787)						pmin6 = e1->__Field(HX_("pmin",22,f7,5a,4a),::hx::paccDynamic);
            					}
HXDLIN( 787)					 ::Dynamic pmax6 = null();
HXDLIN( 787)					 ::Dynamic _hx_tmp3;
HXDLIN( 787)					if (::hx::IsNull( e10 )) {
HXLINE( 787)						_hx_tmp3 = null();
            					}
            					else {
HXLINE( 787)						if (::hx::IsNull( pmin6 )) {
HXLINE( 787)							pmin6 = this->tokenMin;
            						}
HXDLIN( 787)						if (::hx::IsNull( pmax6 )) {
HXLINE( 787)							pmax6 = this->tokenMax;
            						}
HXDLIN( 787)						_hx_tmp3 =  ::Dynamic(::hx::Anon_obj::Create(5)
            							->setFixed(0,HX_("e",65,00,00,00),e10)
            							->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            							->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax6)
            							->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin6)
            							->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            					}
HXDLIN( 787)					return this->parseExprNext(_hx_tmp3);
            				}
HXLINE( 789)				return this->makeBinop(op1,e1,this->parseExpr());
            			}
            			break;
            			case (int)4: {
HXLINE( 808)				 ::hscript::ExprDef e11 = ::hscript::ExprDef_obj::ECall(e1,this->parseExprList(::hscript::Token_obj::TPClose_dyn()));
HXDLIN( 808)				 ::Dynamic pmin7;
HXDLIN( 808)				if (::hx::IsNull( e1 )) {
HXLINE( 808)					pmin7 = 0;
            				}
            				else {
HXLINE( 808)					pmin7 = e1->__Field(HX_("pmin",22,f7,5a,4a),::hx::paccDynamic);
            				}
HXDLIN( 808)				 ::Dynamic pmax7 = null();
HXDLIN( 808)				 ::Dynamic _hx_tmp4;
HXDLIN( 808)				if (::hx::IsNull( e11 )) {
HXLINE( 808)					_hx_tmp4 = null();
            				}
            				else {
HXLINE( 808)					if (::hx::IsNull( pmin7 )) {
HXLINE( 808)						pmin7 = this->tokenMin;
            					}
HXDLIN( 808)					if (::hx::IsNull( pmax7 )) {
HXLINE( 808)						pmax7 = this->tokenMax;
            					}
HXDLIN( 808)					_hx_tmp4 =  ::Dynamic(::hx::Anon_obj::Create(5)
            						->setFixed(0,HX_("e",65,00,00,00),e11)
            						->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            						->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax7)
            						->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin7)
            						->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            				}
HXDLIN( 808)				return this->parseExprNext(_hx_tmp4);
            			}
            			break;
            			case (int)8: {
HXLINE( 793)				::String field = this->getIdent();
HXLINE( 794)				 ::hscript::ExprDef e12 = ::hscript::ExprDef_obj::EField(e1,field);
HXDLIN( 794)				 ::Dynamic pmin8;
HXDLIN( 794)				if (::hx::IsNull( e1 )) {
HXLINE( 794)					pmin8 = 0;
            				}
            				else {
HXLINE( 794)					pmin8 = e1->__Field(HX_("pmin",22,f7,5a,4a),::hx::paccDynamic);
            				}
HXDLIN( 794)				 ::Dynamic pmax8 = null();
HXDLIN( 794)				 ::Dynamic _hx_tmp5;
HXDLIN( 794)				if (::hx::IsNull( e12 )) {
HXLINE( 794)					_hx_tmp5 = null();
            				}
            				else {
HXLINE( 794)					if (::hx::IsNull( pmin8 )) {
HXLINE( 794)						pmin8 = this->tokenMin;
            					}
HXDLIN( 794)					if (::hx::IsNull( pmax8 )) {
HXLINE( 794)						pmax8 = this->tokenMax;
            					}
HXDLIN( 794)					_hx_tmp5 =  ::Dynamic(::hx::Anon_obj::Create(5)
            						->setFixed(0,HX_("e",65,00,00,00),e12)
            						->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            						->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax8)
            						->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin8)
            						->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            				}
HXDLIN( 794)				return this->parseExprNext(_hx_tmp5);
            			}
            			break;
            			case (int)9: {
HXLINE( 796)				::String field1 = this->getIdent();
HXLINE( 797)				::String tmp = (HX_("__a_",fe,af,13,3f) + this->uid++);
HXLINE( 799)				 ::hscript::ExprDef e13 = ::hscript::ExprDef_obj::EVar(tmp,null(),e1);
HXDLIN( 799)				 ::Dynamic pmin9;
HXDLIN( 799)				if (::hx::IsNull( e1 )) {
HXLINE( 799)					pmin9 = 0;
            				}
            				else {
HXLINE( 799)					pmin9 = e1->__Field(HX_("pmin",22,f7,5a,4a),::hx::paccDynamic);
            				}
HXDLIN( 799)				 ::Dynamic pmax9;
HXDLIN( 799)				if (::hx::IsNull( e1 )) {
HXLINE( 799)					pmax9 = 0;
            				}
            				else {
HXLINE( 799)					pmax9 = e1->__Field(HX_("pmax",34,f0,5a,4a),::hx::paccDynamic);
            				}
HXDLIN( 799)				 ::Dynamic e14;
HXDLIN( 799)				if (::hx::IsNull( e13 )) {
HXLINE( 799)					e14 = null();
            				}
            				else {
HXLINE( 799)					if (::hx::IsNull( pmin9 )) {
HXLINE( 799)						pmin9 = this->tokenMin;
            					}
HXDLIN( 799)					if (::hx::IsNull( pmax9 )) {
HXLINE( 799)						pmax9 = this->tokenMax;
            					}
HXDLIN( 799)					e14 =  ::Dynamic(::hx::Anon_obj::Create(5)
            						->setFixed(0,HX_("e",65,00,00,00),e13)
            						->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            						->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax9)
            						->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin9)
            						->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            				}
HXLINE( 801)				 ::hscript::ExprDef e15 = ::hscript::ExprDef_obj::EIdent(tmp);
HXDLIN( 801)				 ::Dynamic pmin10;
HXDLIN( 801)				if (::hx::IsNull( e1 )) {
HXLINE( 801)					pmin10 = 0;
            				}
            				else {
HXLINE( 801)					pmin10 = e1->__Field(HX_("pmin",22,f7,5a,4a),::hx::paccDynamic);
            				}
HXDLIN( 801)				 ::Dynamic pmax10;
HXDLIN( 801)				if (::hx::IsNull( e1 )) {
HXLINE( 801)					pmax10 = 0;
            				}
            				else {
HXLINE( 801)					pmax10 = e1->__Field(HX_("pmax",34,f0,5a,4a),::hx::paccDynamic);
            				}
HXDLIN( 801)				 ::Dynamic e16;
HXDLIN( 801)				if (::hx::IsNull( e15 )) {
HXLINE( 801)					e16 = null();
            				}
            				else {
HXLINE( 801)					if (::hx::IsNull( pmin10 )) {
HXLINE( 801)						pmin10 = this->tokenMin;
            					}
HXDLIN( 801)					if (::hx::IsNull( pmax10 )) {
HXLINE( 801)						pmax10 = this->tokenMax;
            					}
HXDLIN( 801)					e16 =  ::Dynamic(::hx::Anon_obj::Create(5)
            						->setFixed(0,HX_("e",65,00,00,00),e15)
            						->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            						->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax10)
            						->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin10)
            						->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            				}
HXDLIN( 801)				 ::hscript::ExprDef e17 = ::hscript::ExprDef_obj::EIdent(HX_("null",87,9e,0e,49));
HXDLIN( 801)				 ::Dynamic pmin11;
HXDLIN( 801)				if (::hx::IsNull( e1 )) {
HXLINE( 801)					pmin11 = 0;
            				}
            				else {
HXLINE( 801)					pmin11 = e1->__Field(HX_("pmin",22,f7,5a,4a),::hx::paccDynamic);
            				}
HXDLIN( 801)				 ::Dynamic pmax11;
HXDLIN( 801)				if (::hx::IsNull( e1 )) {
HXLINE( 801)					pmax11 = 0;
            				}
            				else {
HXLINE( 801)					pmax11 = e1->__Field(HX_("pmax",34,f0,5a,4a),::hx::paccDynamic);
            				}
HXDLIN( 801)				 ::Dynamic e18;
HXDLIN( 801)				if (::hx::IsNull( e17 )) {
HXLINE( 801)					e18 = null();
            				}
            				else {
HXLINE( 801)					if (::hx::IsNull( pmin11 )) {
HXLINE( 801)						pmin11 = this->tokenMin;
            					}
HXDLIN( 801)					if (::hx::IsNull( pmax11 )) {
HXLINE( 801)						pmax11 = this->tokenMax;
            					}
HXDLIN( 801)					e18 =  ::Dynamic(::hx::Anon_obj::Create(5)
            						->setFixed(0,HX_("e",65,00,00,00),e17)
            						->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            						->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax11)
            						->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin11)
            						->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            				}
HXDLIN( 801)				 ::hscript::ExprDef e19 = ::hscript::ExprDef_obj::EBinop(HX_("==",60,35,00,00),e16,e18);
HXDLIN( 801)				 ::Dynamic pmin12 = null();
HXDLIN( 801)				 ::Dynamic pmax12 = null();
HXDLIN( 801)				 ::Dynamic e20;
HXDLIN( 801)				if (::hx::IsNull( e19 )) {
HXLINE( 801)					e20 = null();
            				}
            				else {
HXLINE( 801)					if (::hx::IsNull( pmin12 )) {
HXLINE( 801)						pmin12 = this->tokenMin;
            					}
HXDLIN( 801)					if (::hx::IsNull( pmax12 )) {
HXLINE( 801)						pmax12 = this->tokenMax;
            					}
HXDLIN( 801)					e20 =  ::Dynamic(::hx::Anon_obj::Create(5)
            						->setFixed(0,HX_("e",65,00,00,00),e19)
            						->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            						->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax12)
            						->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin12)
            						->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            				}
HXLINE( 802)				 ::hscript::ExprDef e21 = ::hscript::ExprDef_obj::EIdent(HX_("null",87,9e,0e,49));
HXDLIN( 802)				 ::Dynamic pmin13;
HXDLIN( 802)				if (::hx::IsNull( e1 )) {
HXLINE( 802)					pmin13 = 0;
            				}
            				else {
HXLINE( 802)					pmin13 = e1->__Field(HX_("pmin",22,f7,5a,4a),::hx::paccDynamic);
            				}
HXDLIN( 802)				 ::Dynamic pmax13;
HXDLIN( 802)				if (::hx::IsNull( e1 )) {
HXLINE( 802)					pmax13 = 0;
            				}
            				else {
HXLINE( 802)					pmax13 = e1->__Field(HX_("pmax",34,f0,5a,4a),::hx::paccDynamic);
            				}
HXDLIN( 802)				 ::Dynamic e22;
HXDLIN( 802)				if (::hx::IsNull( e21 )) {
HXLINE( 802)					e22 = null();
            				}
            				else {
HXLINE( 802)					if (::hx::IsNull( pmin13 )) {
HXLINE( 802)						pmin13 = this->tokenMin;
            					}
HXDLIN( 802)					if (::hx::IsNull( pmax13 )) {
HXLINE( 802)						pmax13 = this->tokenMax;
            					}
HXDLIN( 802)					e22 =  ::Dynamic(::hx::Anon_obj::Create(5)
            						->setFixed(0,HX_("e",65,00,00,00),e21)
            						->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            						->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax13)
            						->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin13)
            						->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            				}
HXLINE( 803)				 ::hscript::ExprDef e23 = ::hscript::ExprDef_obj::EIdent(tmp);
HXDLIN( 803)				 ::Dynamic pmin14;
HXDLIN( 803)				if (::hx::IsNull( e1 )) {
HXLINE( 803)					pmin14 = 0;
            				}
            				else {
HXLINE( 803)					pmin14 = e1->__Field(HX_("pmin",22,f7,5a,4a),::hx::paccDynamic);
            				}
HXDLIN( 803)				 ::Dynamic pmax14;
HXDLIN( 803)				if (::hx::IsNull( e1 )) {
HXLINE( 803)					pmax14 = 0;
            				}
            				else {
HXLINE( 803)					pmax14 = e1->__Field(HX_("pmax",34,f0,5a,4a),::hx::paccDynamic);
            				}
HXDLIN( 803)				 ::Dynamic e24;
HXDLIN( 803)				if (::hx::IsNull( e23 )) {
HXLINE( 803)					e24 = null();
            				}
            				else {
HXLINE( 803)					if (::hx::IsNull( pmin14 )) {
HXLINE( 803)						pmin14 = this->tokenMin;
            					}
HXDLIN( 803)					if (::hx::IsNull( pmax14 )) {
HXLINE( 803)						pmax14 = this->tokenMax;
            					}
HXDLIN( 803)					e24 =  ::Dynamic(::hx::Anon_obj::Create(5)
            						->setFixed(0,HX_("e",65,00,00,00),e23)
            						->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            						->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax14)
            						->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin14)
            						->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            				}
HXDLIN( 803)				 ::hscript::ExprDef e25 = ::hscript::ExprDef_obj::EField(e24,field1);
HXDLIN( 803)				 ::Dynamic pmin15;
HXDLIN( 803)				if (::hx::IsNull( e1 )) {
HXLINE( 803)					pmin15 = 0;
            				}
            				else {
HXLINE( 803)					pmin15 = e1->__Field(HX_("pmin",22,f7,5a,4a),::hx::paccDynamic);
            				}
HXDLIN( 803)				 ::Dynamic pmax15 = null();
HXDLIN( 803)				 ::Dynamic e26;
HXDLIN( 803)				if (::hx::IsNull( e25 )) {
HXLINE( 803)					e26 = null();
            				}
            				else {
HXLINE( 803)					if (::hx::IsNull( pmin15 )) {
HXLINE( 803)						pmin15 = this->tokenMin;
            					}
HXDLIN( 803)					if (::hx::IsNull( pmax15 )) {
HXLINE( 803)						pmax15 = this->tokenMax;
            					}
HXDLIN( 803)					e26 =  ::Dynamic(::hx::Anon_obj::Create(5)
            						->setFixed(0,HX_("e",65,00,00,00),e25)
            						->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            						->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax15)
            						->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin15)
            						->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            				}
HXLINE( 800)				 ::hscript::ExprDef e27 = ::hscript::ExprDef_obj::ETernary(e20,e22,e26);
HXDLIN( 800)				 ::Dynamic pmin16 = null();
HXDLIN( 800)				 ::Dynamic pmax16 = null();
HXDLIN( 800)				 ::Dynamic e28;
HXDLIN( 800)				if (::hx::IsNull( e27 )) {
HXLINE( 800)					e28 = null();
            				}
            				else {
HXLINE( 800)					if (::hx::IsNull( pmin16 )) {
HXLINE( 800)						pmin16 = this->tokenMin;
            					}
HXDLIN( 800)					if (::hx::IsNull( pmax16 )) {
HXLINE( 800)						pmax16 = this->tokenMax;
            					}
HXDLIN( 800)					e28 =  ::Dynamic(::hx::Anon_obj::Create(5)
            						->setFixed(0,HX_("e",65,00,00,00),e27)
            						->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            						->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax16)
            						->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin16)
            						->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            				}
HXLINE( 798)				 ::hscript::ExprDef e29 = ::hscript::ExprDef_obj::EBlock(::Array_obj< ::Dynamic>::__new(2)->init(0,e14)->init(1,e28));
HXDLIN( 798)				 ::Dynamic pmin17;
HXLINE( 805)				if (::hx::IsNull( e1 )) {
HXLINE( 798)					pmin17 = 0;
            				}
            				else {
HXLINE( 798)					pmin17 = e1->__Field(HX_("pmin",22,f7,5a,4a),::hx::paccDynamic);
            				}
HXDLIN( 798)				 ::Dynamic pmax17 = null();
HXDLIN( 798)				 ::Dynamic e30;
HXDLIN( 798)				if (::hx::IsNull( e29 )) {
HXLINE( 798)					e30 = null();
            				}
            				else {
HXLINE( 798)					if (::hx::IsNull( pmin17 )) {
HXLINE( 798)						pmin17 = this->tokenMin;
            					}
HXDLIN( 798)					if (::hx::IsNull( pmax17 )) {
HXLINE( 798)						pmax17 = this->tokenMax;
            					}
HXDLIN( 798)					e30 =  ::Dynamic(::hx::Anon_obj::Create(5)
            						->setFixed(0,HX_("e",65,00,00,00),e29)
            						->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            						->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax17)
            						->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin17)
            						->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            				}
HXLINE( 806)				return this->parseExprNext(e30);
            			}
            			break;
            			case (int)12: {
HXLINE( 810)				 ::Dynamic e210 = this->parseExpr();
HXLINE( 811)				{
HXLINE( 811)					 ::hscript::Token t1 = this->token();
HXDLIN( 811)					if (::hx::IsPointerNotEq( t1,::hscript::Token_obj::TBkClose_dyn() )) {
HXLINE( 811)						this->unexpected(t1);
            					}
            				}
HXLINE( 812)				 ::hscript::ExprDef e31 = ::hscript::ExprDef_obj::EArray(e1,e210);
HXDLIN( 812)				 ::Dynamic pmin18;
HXDLIN( 812)				if (::hx::IsNull( e1 )) {
HXLINE( 812)					pmin18 = 0;
            				}
            				else {
HXLINE( 812)					pmin18 = e1->__Field(HX_("pmin",22,f7,5a,4a),::hx::paccDynamic);
            				}
HXDLIN( 812)				 ::Dynamic pmax18 = null();
HXDLIN( 812)				 ::Dynamic _hx_tmp6;
HXDLIN( 812)				if (::hx::IsNull( e31 )) {
HXLINE( 812)					_hx_tmp6 = null();
            				}
            				else {
HXLINE( 812)					if (::hx::IsNull( pmin18 )) {
HXLINE( 812)						pmin18 = this->tokenMin;
            					}
HXDLIN( 812)					if (::hx::IsNull( pmax18 )) {
HXLINE( 812)						pmax18 = this->tokenMax;
            					}
HXDLIN( 812)					_hx_tmp6 =  ::Dynamic(::hx::Anon_obj::Create(5)
            						->setFixed(0,HX_("e",65,00,00,00),e31)
            						->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            						->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax18)
            						->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin18)
            						->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            				}
HXDLIN( 812)				return this->parseExprNext(_hx_tmp6);
            			}
            			break;
            			case (int)14: {
HXLINE( 814)				 ::Dynamic e211 = this->parseExpr();
HXLINE( 815)				{
HXLINE( 815)					 ::hscript::Token t2 = this->token();
HXDLIN( 815)					if (::hx::IsPointerNotEq( t2,::hscript::Token_obj::TDoubleDot_dyn() )) {
HXLINE( 815)						this->unexpected(t2);
            					}
            				}
HXLINE( 816)				 ::Dynamic e32 = this->parseExpr();
HXLINE( 817)				 ::hscript::ExprDef e33 = ::hscript::ExprDef_obj::ETernary(e1,e211,e32);
HXDLIN( 817)				 ::Dynamic pmin19;
HXDLIN( 817)				if (::hx::IsNull( e1 )) {
HXLINE( 817)					pmin19 = 0;
            				}
            				else {
HXLINE( 817)					pmin19 = e1->__Field(HX_("pmin",22,f7,5a,4a),::hx::paccDynamic);
            				}
HXDLIN( 817)				 ::Dynamic pmax19;
HXDLIN( 817)				if (::hx::IsNull( e32 )) {
HXLINE( 817)					pmax19 = 0;
            				}
            				else {
HXLINE( 817)					pmax19 = e32->__Field(HX_("pmax",34,f0,5a,4a),::hx::paccDynamic);
            				}
HXDLIN( 817)				if (::hx::IsNull( e33 )) {
HXLINE( 817)					return null();
            				}
            				else {
HXLINE( 817)					if (::hx::IsNull( pmin19 )) {
HXLINE( 817)						pmin19 = this->tokenMin;
            					}
HXDLIN( 817)					if (::hx::IsNull( pmax19 )) {
HXLINE( 817)						pmax19 = this->tokenMax;
            					}
HXDLIN( 817)					return  ::Dynamic(::hx::Anon_obj::Create(5)
            						->setFixed(0,HX_("e",65,00,00,00),e33)
            						->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            						->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax19)
            						->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin19)
            						->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            				}
            			}
            			break;
            			default:{
HXLINE( 819)				{
HXLINE( 819)					this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            						->setFixed(0,HX_("t",74,00,00,00),tk)
            						->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            						->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN( 819)					this->tokenMin = this->oldTokenMin;
HXDLIN( 819)					this->tokenMax = this->oldTokenMax;
            				}
HXLINE( 820)				return e1;
            			}
            		}
HXLINE( 765)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,parseExprNext,return )

::Array< ::Dynamic> Parser_obj::parseFunctionArgs(){
            	HX_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_824_parseFunctionArgs)
HXLINE( 825)		::Array< ::Dynamic> args = ::Array_obj< ::Dynamic>::__new();
HXLINE( 826)		 ::hscript::Token tk = this->token();
HXLINE( 827)		if (::hx::IsPointerNotEq( tk,::hscript::Token_obj::TPClose_dyn() )) {
HXLINE( 828)			bool done = false;
HXLINE( 829)			while(!(done)){
HXLINE( 830)				::String name = null();
HXDLIN( 830)				bool opt = false;
HXLINE( 831)				if ((tk->_hx_getIndex() == 14)) {
HXLINE( 833)					opt = true;
HXLINE( 834)					tk = this->token();
            				}
HXLINE( 837)				if ((tk->_hx_getIndex() == 2)) {
HXLINE( 838)					::String id = tk->_hx_getString(0);
HXDLIN( 838)					name = id;
            				}
            				else {
HXLINE( 840)					this->unexpected(tk);
HXLINE( 841)					goto _hx_goto_58;
            				}
HXLINE( 843)				 ::Dynamic arg =  ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("name",4b,72,ff,48),name));
HXLINE( 844)				args->push(arg);
HXLINE( 845)				if (opt) {
HXLINE( 845)					arg->__SetField(HX_("opt",33,9c,54,00),true,::hx::paccDynamic);
            				}
HXLINE( 846)				if (this->allowTypes) {
HXLINE( 847)					if (this->maybe(::hscript::Token_obj::TDoubleDot_dyn())) {
HXLINE( 848)						arg->__SetField(HX_("t",74,00,00,00),this->parseType(),::hx::paccDynamic);
            					}
HXLINE( 849)					if (this->maybe(::hscript::Token_obj::TOp(HX_("=",3d,00,00,00)))) {
HXLINE( 850)						arg->__SetField(HX_("value",71,7f,b8,31),this->parseExpr(),::hx::paccDynamic);
            					}
            				}
HXLINE( 852)				tk = this->token();
HXLINE( 853)				switch((int)(tk->_hx_getIndex())){
            					case (int)5: {
HXLINE( 857)						done = true;
            					}
            					break;
            					case (int)10: {
HXLINE( 855)						tk = this->token();
            					}
            					break;
            					default:{
HXLINE( 859)						this->unexpected(tk);
            					}
            				}
            			}
            			_hx_goto_58:;
            		}
HXLINE( 863)		return args;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,parseFunctionArgs,return )

 ::Dynamic Parser_obj::parseFunctionDecl(){
            	HX_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_866_parseFunctionDecl)
HXLINE( 867)		{
HXLINE( 867)			 ::hscript::Token t = this->token();
HXDLIN( 867)			if (::hx::IsPointerNotEq( t,::hscript::Token_obj::TPOpen_dyn() )) {
HXLINE( 867)				this->unexpected(t);
            			}
            		}
HXLINE( 868)		::Array< ::Dynamic> args = this->parseFunctionArgs();
HXLINE( 869)		 ::hscript::CType ret = null();
HXLINE( 870)		if (this->allowTypes) {
HXLINE( 871)			 ::hscript::Token tk = this->token();
HXLINE( 872)			if (::hx::IsPointerNotEq( tk,::hscript::Token_obj::TDoubleDot_dyn() )) {
HXLINE( 873)				this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            					->setFixed(0,HX_("t",74,00,00,00),tk)
            					->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            					->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN( 873)				this->tokenMin = this->oldTokenMin;
HXDLIN( 873)				this->tokenMax = this->oldTokenMax;
            			}
            			else {
HXLINE( 875)				ret = this->parseType();
            			}
            		}
HXLINE( 877)		return  ::Dynamic(::hx::Anon_obj::Create(3)
            			->setFixed(0,HX_("ret",61,d9,56,00),ret)
            			->setFixed(1,HX_("args",5d,8d,74,40),args)
            			->setFixed(2,HX_("body",a2,7a,1b,41),this->parseExpr()));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,parseFunctionDecl,return )

::Array< ::String > Parser_obj::parsePath(){
            	HX_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_880_parsePath)
HXLINE( 881)		::Array< ::String > path = ::Array_obj< ::String >::__new(1)->init(0,this->getIdent());
HXLINE( 882)		while(true){
HXLINE( 883)			 ::hscript::Token t = this->token();
HXLINE( 884)			if (::hx::IsPointerNotEq( t,::hscript::Token_obj::TDot_dyn() )) {
HXLINE( 885)				{
HXLINE( 885)					this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            						->setFixed(0,HX_("t",74,00,00,00),t)
            						->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            						->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN( 885)					this->tokenMin = this->oldTokenMin;
HXDLIN( 885)					this->tokenMax = this->oldTokenMax;
            				}
HXLINE( 886)				goto _hx_goto_61;
            			}
HXLINE( 888)			path->push(this->getIdent());
            		}
            		_hx_goto_61:;
HXLINE( 890)		return path;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,parsePath,return )

 ::hscript::CType Parser_obj::parseType(){
            	HX_GC_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_893_parseType)
HXDLIN( 893)		 ::hscript::Parser _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 894)		 ::hscript::Token t = this->token();
HXLINE( 895)		switch((int)(t->_hx_getIndex())){
            			case (int)2: {
HXLINE( 896)				::String v = t->_hx_getString(0);
HXLINE( 897)				{
HXLINE( 897)					this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            						->setFixed(0,HX_("t",74,00,00,00),t)
            						->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            						->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN( 897)					this->tokenMin = this->oldTokenMin;
HXDLIN( 897)					this->tokenMax = this->oldTokenMax;
            				}
HXLINE( 898)				::Array< ::String > path = this->parsePath();
HXLINE( 899)				::Array< ::Dynamic> params = null();
HXLINE( 900)				t = this->token();
HXLINE( 901)				if ((t->_hx_getIndex() == 3)) {
HXLINE( 902)					::String op = t->_hx_getString(0);
HXLINE( 903)					if ((op == HX_("<",3c,00,00,00))) {
HXLINE( 904)						params = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 905)						while(true){
HXLINE( 906)							params->push(this->parseType());
HXLINE( 907)							t = this->token();
HXLINE( 908)							switch((int)(t->_hx_getIndex())){
            								case (int)3: {
HXLINE( 910)									::String op1 = t->_hx_getString(0);
HXDLIN( 910)									{
HXLINE( 911)										if ((op1 == HX_(">",3e,00,00,00))) {
HXLINE( 911)											goto _hx_goto_63;
            										}
HXLINE( 912)										if (::hx::IsEq( op1.charCodeAt(0),62 )) {
HXLINE( 914)											 ::haxe::ds::List _hx_tmp = this->tokens;
HXDLIN( 914)											 ::hscript::Token _hx_tmp1 = ::hscript::Token_obj::TOp(op1.substr(1,null()));
HXDLIN( 914)											_hx_tmp->add( ::Dynamic(::hx::Anon_obj::Create(3)
            												->setFixed(0,HX_("t",74,00,00,00),_hx_tmp1)
            												->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            												->setFixed(2,HX_("min",92,11,53,00),((this->tokenMax - op1.length) - 1))));
HXLINE( 918)											goto _hx_goto_63;
            										}
            									}
            								}
            								break;
            								case (int)10: {
HXLINE( 909)									continue;
            								}
            								break;
            								default:{
            								}
            							}
HXLINE( 922)							this->unexpected(t);
HXLINE( 923)							goto _hx_goto_63;
            						}
            						_hx_goto_63:;
            					}
            					else {
HXLINE( 926)						this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            							->setFixed(0,HX_("t",74,00,00,00),t)
            							->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            							->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN( 926)						this->tokenMin = this->oldTokenMin;
HXDLIN( 926)						this->tokenMax = this->oldTokenMax;
            					}
            				}
            				else {
HXLINE( 928)					this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            						->setFixed(0,HX_("t",74,00,00,00),t)
            						->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            						->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN( 928)					this->tokenMin = this->oldTokenMin;
HXDLIN( 928)					this->tokenMax = this->oldTokenMax;
            				}
HXLINE( 930)				return this->parseTypeNext(::hscript::CType_obj::CTPath(path,params));
            			}
            			break;
            			case (int)4: {
            				HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::hscript::Parser,_gthis) HXARGC(1)
            				 ::hscript::CType _hx_run(::Array< ::Dynamic> args){
            					HX_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_938_parseType)
HXLINE( 939)					{
HXLINE( 939)						 ::hscript::Token _g = _gthis->token();
HXDLIN( 939)						if ((_g->_hx_getIndex() == 3)) {
HXLINE( 940)							if ((_g->_hx_getString(0) != HX_("->",71,27,00,00))) {
HXLINE( 941)								 ::hscript::Token t = _g;
HXDLIN( 941)								_gthis->unexpected(t);
            							}
            						}
            						else {
HXLINE( 941)							 ::hscript::Token t1 = _g;
HXDLIN( 941)							_gthis->unexpected(t1);
            						}
            					}
HXLINE( 944)					return ::hscript::CType_obj::CTFun(args,_gthis->parseType());
            				}
            				HX_END_LOCAL_FUNC1(return)

HXLINE( 932)				 ::hscript::Token a = this->token();
HXDLIN( 932)				 ::hscript::Token b = this->token();
HXLINE( 935)				{
HXLINE( 935)					this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            						->setFixed(0,HX_("t",74,00,00,00),b)
            						->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            						->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN( 935)					this->tokenMin = this->oldTokenMin;
HXDLIN( 935)					this->tokenMax = this->oldTokenMax;
            				}
HXLINE( 936)				{
HXLINE( 936)					this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            						->setFixed(0,HX_("t",74,00,00,00),a)
            						->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            						->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN( 936)					this->tokenMin = this->oldTokenMin;
HXDLIN( 936)					this->tokenMax = this->oldTokenMax;
            				}
HXLINE( 938)				 ::Dynamic withReturn =  ::Dynamic(new _hx_Closure_0(_gthis));
HXLINE( 947)				switch((int)(a->_hx_getIndex())){
            					case (int)2: {
HXLINE( 948)						::String _g = a->_hx_getString(0);
HXLINE( 947)						if ((b->_hx_getIndex() == 15)) {
HXLINE( 950)							::Array< ::Dynamic> _g1 = ::Array_obj< ::Dynamic>::__new(0);
HXDLIN( 950)							{
HXLINE( 950)								int _g2 = 0;
HXDLIN( 950)								::Array< ::Dynamic> _g3 = this->parseFunctionArgs();
HXDLIN( 950)								while((_g2 < _g3->length)){
HXLINE( 950)									 ::Dynamic arg = _g3->__get(_g2);
HXDLIN( 950)									_g2 = (_g2 + 1);
HXLINE( 951)									{
HXLINE( 951)										 ::Dynamic _g4 = arg->__Field(HX_("value",71,7f,b8,31),::hx::paccDynamic);
HXLINE( 952)										if (::hx::IsNotNull( _g4 )) {
HXLINE( 953)											 ::Dynamic v1 = _g4;
HXLINE( 954)											if (!(this->resumeErrors)) {
HXLINE( 954)												HX_STACK_DO_THROW( ::hscript::Error_obj::__alloc( HX_CTX ,::hscript::ErrorDef_obj::ECustom(HX_("Default values not allowed in function types",28,46,7a,e6)),( (int)(v1->__Field(HX_("pmin",22,f7,5a,4a),::hx::paccDynamic)) ),( (int)(v1->__Field(HX_("pmax",34,f0,5a,4a),::hx::paccDynamic)) ),this->origin,this->line));
            											}
            										}
            									}
HXLINE( 957)									 ::hscript::CType _hx_tmp2;
HXDLIN( 957)									if (( (bool)(arg->__Field(HX_("opt",33,9c,54,00),::hx::paccDynamic)) )) {
HXLINE( 957)										_hx_tmp2 = ::hscript::CType_obj::CTOpt( ::Dynamic(arg->__Field(HX_("t",74,00,00,00),::hx::paccDynamic)));
            									}
            									else {
HXLINE( 957)										_hx_tmp2 = arg->__Field(HX_("t",74,00,00,00),::hx::paccDynamic);
            									}
HXDLIN( 957)									_g1->push(::hscript::CType_obj::CTNamed( ::Dynamic(arg->__Field(HX_("name",4b,72,ff,48),::hx::paccDynamic)),_hx_tmp2));
            								}
            							}
HXLINE( 950)							::Array< ::Dynamic> args = _g1;
HXLINE( 960)							return withReturn(args);
            						}
            						else {
HXLINE( 963)							 ::hscript::CType t1 = this->parseType();
HXLINE( 964)							 ::hscript::Token _g5 = this->token();
HXDLIN( 964)							switch((int)(_g5->_hx_getIndex())){
            								case (int)5: {
HXLINE( 975)									return this->parseTypeNext(::hscript::CType_obj::CTParent(t1));
            								}
            								break;
            								case (int)10: {
HXLINE( 966)									::Array< ::Dynamic> args1 = ::Array_obj< ::Dynamic>::__new(1)->init(0,t1);
HXLINE( 968)									do {
HXLINE( 969)										args1->push(this->parseType());
            									} while(this->maybe(::hscript::Token_obj::TComma_dyn()));
;
HXLINE( 972)									{
HXLINE( 972)										 ::hscript::Token t2 = this->token();
HXDLIN( 972)										if (::hx::IsPointerNotEq( t2,::hscript::Token_obj::TPClose_dyn() )) {
HXLINE( 972)											this->unexpected(t2);
            										}
            									}
HXLINE( 973)									return withReturn(args1);
            								}
            								break;
            								default:{
HXLINE( 976)									 ::hscript::Token t3 = _g5;
HXDLIN( 976)									return this->unexpected(t3);
            								}
            							}
            						}
            					}
            					break;
            					case (int)5: {
HXLINE( 950)						::Array< ::Dynamic> _g6 = ::Array_obj< ::Dynamic>::__new(0);
HXDLIN( 950)						{
HXLINE( 950)							int _g7 = 0;
HXDLIN( 950)							::Array< ::Dynamic> _g8 = this->parseFunctionArgs();
HXDLIN( 950)							while((_g7 < _g8->length)){
HXLINE( 950)								 ::Dynamic arg1 = _g8->__get(_g7);
HXDLIN( 950)								_g7 = (_g7 + 1);
HXLINE( 951)								{
HXLINE( 951)									 ::Dynamic _g9 = arg1->__Field(HX_("value",71,7f,b8,31),::hx::paccDynamic);
HXLINE( 952)									if (::hx::IsNotNull( _g9 )) {
HXLINE( 953)										 ::Dynamic v2 = _g9;
HXLINE( 954)										if (!(this->resumeErrors)) {
HXLINE( 954)											HX_STACK_DO_THROW( ::hscript::Error_obj::__alloc( HX_CTX ,::hscript::ErrorDef_obj::ECustom(HX_("Default values not allowed in function types",28,46,7a,e6)),( (int)(v2->__Field(HX_("pmin",22,f7,5a,4a),::hx::paccDynamic)) ),( (int)(v2->__Field(HX_("pmax",34,f0,5a,4a),::hx::paccDynamic)) ),this->origin,this->line));
            										}
            									}
            								}
HXLINE( 957)								 ::hscript::CType _hx_tmp3;
HXDLIN( 957)								if (( (bool)(arg1->__Field(HX_("opt",33,9c,54,00),::hx::paccDynamic)) )) {
HXLINE( 957)									_hx_tmp3 = ::hscript::CType_obj::CTOpt( ::Dynamic(arg1->__Field(HX_("t",74,00,00,00),::hx::paccDynamic)));
            								}
            								else {
HXLINE( 957)									_hx_tmp3 = arg1->__Field(HX_("t",74,00,00,00),::hx::paccDynamic);
            								}
HXDLIN( 957)								_g6->push(::hscript::CType_obj::CTNamed( ::Dynamic(arg1->__Field(HX_("name",4b,72,ff,48),::hx::paccDynamic)),_hx_tmp3));
            							}
            						}
HXLINE( 950)						::Array< ::Dynamic> args2 = _g6;
HXLINE( 960)						return withReturn(args2);
            					}
            					break;
            					default:{
HXLINE( 963)						 ::hscript::CType t4 = this->parseType();
HXLINE( 964)						 ::hscript::Token _g10 = this->token();
HXDLIN( 964)						switch((int)(_g10->_hx_getIndex())){
            							case (int)5: {
HXLINE( 975)								return this->parseTypeNext(::hscript::CType_obj::CTParent(t4));
            							}
            							break;
            							case (int)10: {
HXLINE( 966)								::Array< ::Dynamic> args3 = ::Array_obj< ::Dynamic>::__new(1)->init(0,t4);
HXLINE( 968)								do {
HXLINE( 969)									args3->push(this->parseType());
            								} while(this->maybe(::hscript::Token_obj::TComma_dyn()));
;
HXLINE( 972)								{
HXLINE( 972)									 ::hscript::Token t5 = this->token();
HXDLIN( 972)									if (::hx::IsPointerNotEq( t5,::hscript::Token_obj::TPClose_dyn() )) {
HXLINE( 972)										this->unexpected(t5);
            									}
            								}
HXLINE( 973)								return withReturn(args3);
            							}
            							break;
            							default:{
HXLINE( 976)								 ::hscript::Token t6 = _g10;
HXDLIN( 976)								return this->unexpected(t6);
            							}
            						}
            					}
            				}
            			}
            			break;
            			case (int)6: {
HXLINE( 980)				::Array< ::Dynamic> fields = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 981)				::Array< ::Dynamic> meta = null();
HXLINE( 982)				while(true){
HXLINE( 983)					t = this->token();
HXLINE( 984)					switch((int)(t->_hx_getIndex())){
            						case (int)2: {
HXLINE( 992)							::String _g11 = t->_hx_getString(0);
HXDLIN( 992)							if ((_g11 == HX_("var",e7,de,59,00))) {
HXLINE( 987)								::String name = this->getIdent();
HXLINE( 988)								{
HXLINE( 988)									 ::hscript::Token t7 = this->token();
HXDLIN( 988)									if (::hx::IsPointerNotEq( t7,::hscript::Token_obj::TDoubleDot_dyn() )) {
HXLINE( 988)										this->unexpected(t7);
            									}
            								}
HXLINE( 989)								fields->push( ::Dynamic(::hx::Anon_obj::Create(3)
            									->setFixed(0,HX_("t",74,00,00,00),this->parseType())
            									->setFixed(1,HX_("meta",c5,4a,59,48),meta)
            									->setFixed(2,HX_("name",4b,72,ff,48),name)));
HXLINE( 990)								meta = null();
HXLINE( 991)								{
HXLINE( 991)									 ::hscript::Token t8 = this->token();
HXDLIN( 991)									if (::hx::IsPointerNotEq( t8,::hscript::Token_obj::TSemicolon_dyn() )) {
HXLINE( 991)										this->unexpected(t8);
            									}
            								}
            							}
            							else {
HXLINE( 992)								::String name1 = _g11;
HXDLIN( 992)								{
HXLINE( 993)									{
HXLINE( 993)										 ::hscript::Token t9 = this->token();
HXDLIN( 993)										if (::hx::IsPointerNotEq( t9,::hscript::Token_obj::TDoubleDot_dyn() )) {
HXLINE( 993)											this->unexpected(t9);
            										}
            									}
HXLINE( 994)									fields->push( ::Dynamic(::hx::Anon_obj::Create(3)
            										->setFixed(0,HX_("t",74,00,00,00),this->parseType())
            										->setFixed(1,HX_("meta",c5,4a,59,48),meta)
            										->setFixed(2,HX_("name",4b,72,ff,48),name1)));
HXLINE( 995)									t = this->token();
HXLINE( 996)									switch((int)(t->_hx_getIndex())){
            										case (int)7: {
HXLINE( 998)											goto _hx_goto_68;
            										}
            										break;
            										case (int)10: {
            										}
            										break;
            										default:{
HXLINE( 999)											this->unexpected(t);
            										}
            									}
            								}
            							}
            						}
            						break;
            						case (int)7: {
HXLINE( 985)							goto _hx_goto_68;
            						}
            						break;
            						case (int)16: {
HXLINE(1001)							::String name2 = t->_hx_getString(0);
HXDLIN(1001)							{
HXLINE(1002)								if (::hx::IsNull( meta )) {
HXLINE(1002)									meta = ::Array_obj< ::Dynamic>::__new(0);
            								}
HXLINE(1003)								meta->push( ::Dynamic(::hx::Anon_obj::Create(2)
            									->setFixed(0,HX_("params",46,fb,7a,ed),this->parseMetaArgs())
            									->setFixed(1,HX_("name",4b,72,ff,48),name2)));
            							}
            						}
            						break;
            						default:{
HXLINE(1005)							this->unexpected(t);
HXLINE(1006)							goto _hx_goto_68;
            						}
            					}
            				}
            				_hx_goto_68:;
HXLINE(1009)				return this->parseTypeNext(::hscript::CType_obj::CTAnon(fields));
            			}
            			break;
            			default:{
HXLINE(1011)				return this->unexpected(t);
            			}
            		}
HXLINE( 895)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,parseType,return )

 ::hscript::CType Parser_obj::parseTypeNext( ::hscript::CType t){
            	HX_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_1015_parseTypeNext)
HXLINE(1016)		 ::hscript::Token tk = this->token();
HXLINE(1017)		if ((tk->_hx_getIndex() == 3)) {
HXLINE(1018)			::String op = tk->_hx_getString(0);
HXLINE(1019)			if ((op != HX_("->",71,27,00,00))) {
HXLINE(1020)				{
HXLINE(1020)					this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            						->setFixed(0,HX_("t",74,00,00,00),tk)
            						->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            						->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN(1020)					this->tokenMin = this->oldTokenMin;
HXDLIN(1020)					this->tokenMax = this->oldTokenMax;
            				}
HXLINE(1021)				return t;
            			}
            		}
            		else {
HXLINE(1024)			{
HXLINE(1024)				this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            					->setFixed(0,HX_("t",74,00,00,00),tk)
            					->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            					->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN(1024)				this->tokenMin = this->oldTokenMin;
HXDLIN(1024)				this->tokenMax = this->oldTokenMax;
            			}
HXLINE(1025)			return t;
            		}
HXLINE(1027)		 ::hscript::CType t2 = this->parseType();
HXLINE(1028)		if ((t2->_hx_getIndex() == 1)) {
HXLINE(1029)			 ::hscript::CType _g = t2->_hx_getObject(1).StaticCast<  ::hscript::CType >();
HXDLIN(1029)			::Array< ::Dynamic> args = t2->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
HXLINE(1030)			args->unshift(t);
HXLINE(1031)			return t2;
            		}
            		else {
HXLINE(1033)			return ::hscript::CType_obj::CTFun(::Array_obj< ::Dynamic>::__new(1)->init(0,t),t2);
            		}
HXLINE(1028)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,parseTypeNext,return )

::Array< ::Dynamic> Parser_obj::parseExprList( ::hscript::Token etk){
            	HX_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_1037_parseExprList)
HXLINE(1038)		::Array< ::Dynamic> args = ::Array_obj< ::Dynamic>::__new();
HXLINE(1039)		 ::hscript::Token tk = this->token();
HXLINE(1040)		if (::hx::IsPointerEq( tk,etk )) {
HXLINE(1041)			return args;
            		}
HXLINE(1042)		{
HXLINE(1042)			this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            				->setFixed(0,HX_("t",74,00,00,00),tk)
            				->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            				->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN(1042)			this->tokenMin = this->oldTokenMin;
HXDLIN(1042)			this->tokenMax = this->oldTokenMax;
            		}
HXLINE(1043)		while(true){
HXLINE(1044)			args->push(this->parseExpr());
HXLINE(1045)			tk = this->token();
HXLINE(1046)			if ((tk->_hx_getIndex() != 10)) {
HXLINE(1049)				if (::hx::IsPointerEq( tk,etk )) {
HXLINE(1049)					goto _hx_goto_72;
            				}
HXLINE(1050)				this->unexpected(tk);
HXLINE(1051)				goto _hx_goto_72;
            			}
            		}
            		_hx_goto_72:;
HXLINE(1054)		return args;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,parseExprList,return )

::Array< ::Dynamic> Parser_obj::parseModule(::String content,::String __o_origin, ::Dynamic __o_position){
            		::String origin = __o_origin;
            		if (::hx::IsNull(__o_origin)) origin = HX_("hscript",73,8c,18,2c);
            		 ::Dynamic position = __o_position;
            		if (::hx::IsNull(__o_position)) position = 0;
            	HX_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_1059_parseModule)
HXLINE(1060)		this->initParser(origin,( (int)(position) ));
HXLINE(1061)		this->input = content;
HXLINE(1062)		this->readPos = 0;
HXLINE(1063)		this->allowTypes = true;
HXLINE(1064)		this->allowMetadata = true;
HXLINE(1065)		::Array< ::Dynamic> decls = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(1066)		while(true){
HXLINE(1067)			 ::hscript::Token tk = this->token();
HXLINE(1068)			if (::hx::IsPointerEq( tk,::hscript::Token_obj::TEof_dyn() )) {
HXLINE(1068)				goto _hx_goto_74;
            			}
HXLINE(1069)			{
HXLINE(1069)				this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            					->setFixed(0,HX_("t",74,00,00,00),tk)
            					->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            					->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN(1069)				this->tokenMin = this->oldTokenMin;
HXDLIN(1069)				this->tokenMax = this->oldTokenMax;
            			}
HXLINE(1070)			decls->push(this->parseModuleDecl());
            		}
            		_hx_goto_74:;
HXLINE(1072)		return decls;
            	}


HX_DEFINE_DYNAMIC_FUNC3(Parser_obj,parseModule,return )

::Array< ::Dynamic> Parser_obj::parseMetadata(){
            	HX_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_1075_parseMetadata)
HXLINE(1076)		::Array< ::Dynamic> meta = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(1077)		while(true){
HXLINE(1078)			 ::hscript::Token tk = this->token();
HXLINE(1079)			if ((tk->_hx_getIndex() == 16)) {
HXLINE(1080)				::String name = tk->_hx_getString(0);
HXLINE(1081)				meta->push( ::Dynamic(::hx::Anon_obj::Create(2)
            					->setFixed(0,HX_("params",46,fb,7a,ed),this->parseMetaArgs())
            					->setFixed(1,HX_("name",4b,72,ff,48),name)));
            			}
            			else {
HXLINE(1083)				{
HXLINE(1083)					this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            						->setFixed(0,HX_("t",74,00,00,00),tk)
            						->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            						->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN(1083)					this->tokenMin = this->oldTokenMin;
HXDLIN(1083)					this->tokenMax = this->oldTokenMax;
            				}
HXLINE(1084)				goto _hx_goto_76;
            			}
            		}
            		_hx_goto_76:;
HXLINE(1087)		return meta;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,parseMetadata,return )

 ::Dynamic Parser_obj::parseParams(){
            	HX_GC_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_1090_parseParams)
HXLINE(1091)		if (this->maybe(::hscript::Token_obj::TOp(HX_("<",3c,00,00,00)))) {
HXLINE(1092)			if (!(this->resumeErrors)) {
HXLINE(1092)				HX_STACK_DO_THROW( ::hscript::Error_obj::__alloc( HX_CTX ,::hscript::ErrorDef_obj::EInvalidOp(HX_("Unsupported class type parameters",9d,ae,a3,50)),(this->readPos + this->offset),(this->readPos + this->offset),this->origin,this->line));
            			}
            		}
HXLINE(1093)		return  ::Dynamic(::hx::Anon_obj::Create(0));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,parseParams,return )

 ::hscript::ModuleDecl Parser_obj::parseModuleDecl(){
            	HX_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_1096_parseModuleDecl)
HXLINE(1097)		::Array< ::Dynamic> meta = this->parseMetadata();
HXLINE(1098)		::String ident = this->getIdent();
HXLINE(1099)		bool isPrivate = false;
HXDLIN(1099)		bool isExtern = false;
HXLINE(1100)		while(true){
HXLINE(1101)			::String _hx_switch_0 = ident;
            			if (  (_hx_switch_0==HX_("extern",60,d5,1a,c7)) ){
HXLINE(1105)				isExtern = true;
HXDLIN(1105)				goto _hx_goto_80;
            			}
            			if (  (_hx_switch_0==HX_("private",03,2d,6f,89)) ){
HXLINE(1103)				isPrivate = true;
HXDLIN(1103)				goto _hx_goto_80;
            			}
            			/* default */{
HXLINE(1107)				goto _hx_goto_79;
            			}
            			_hx_goto_80:;
HXLINE(1109)			ident = this->getIdent();
            		}
            		_hx_goto_79:;
HXLINE(1111)		::String _hx_switch_1 = ident;
            		if (  (_hx_switch_1==HX_("class",38,78,58,48)) ){
HXLINE(1138)			::String name = this->getIdent();
HXLINE(1139)			 ::Dynamic params = this->parseParams();
HXLINE(1140)			 ::hscript::CType extend = null();
HXLINE(1141)			::Array< ::Dynamic> implement = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(1143)			while(true){
HXLINE(1144)				 ::hscript::Token t = this->token();
HXLINE(1145)				if ((t->_hx_getIndex() == 2)) {
HXLINE(1148)					::String _hx_switch_2 = t->_hx_getString(0);
            					if (  (_hx_switch_2==HX_("extends",59,cd,5c,70)) ){
HXLINE(1147)						extend = this->parseType();
HXDLIN(1147)						goto _hx_goto_83;
            					}
            					if (  (_hx_switch_2==HX_("implements",70,fd,43,a8)) ){
HXLINE(1149)						implement->push(this->parseType());
HXDLIN(1149)						goto _hx_goto_83;
            					}
            					/* default */{
HXLINE(1151)						{
HXLINE(1151)							this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            								->setFixed(0,HX_("t",74,00,00,00),t)
            								->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            								->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN(1151)							this->tokenMin = this->oldTokenMin;
HXDLIN(1151)							this->tokenMax = this->oldTokenMax;
            						}
HXLINE(1152)						goto _hx_goto_82;
            					}
            					_hx_goto_83:;
            				}
            				else {
HXLINE(1151)					{
HXLINE(1151)						this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            							->setFixed(0,HX_("t",74,00,00,00),t)
            							->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            							->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN(1151)						this->tokenMin = this->oldTokenMin;
HXDLIN(1151)						this->tokenMax = this->oldTokenMax;
            					}
HXLINE(1152)					goto _hx_goto_82;
            				}
            			}
            			_hx_goto_82:;
HXLINE(1156)			::Array< ::Dynamic> fields = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(1157)			{
HXLINE(1157)				 ::hscript::Token t1 = this->token();
HXDLIN(1157)				if (::hx::IsPointerNotEq( t1,::hscript::Token_obj::TBrOpen_dyn() )) {
HXLINE(1157)					this->unexpected(t1);
            				}
            			}
HXLINE(1158)			while(!(this->maybe(::hscript::Token_obj::TBrClose_dyn()))){
HXLINE(1159)				fields->push(this->parseField());
            			}
HXLINE(1161)			return ::hscript::ModuleDecl_obj::DClass( ::Dynamic(::hx::Anon_obj::Create(8)
            				->setFixed(0,HX_("fields",79,8e,8e,80),fields)
            				->setFixed(1,HX_("isPrivate",39,aa,6d,8d),isPrivate)
            				->setFixed(2,HX_("implement",a3,71,3f,af),implement)
            				->setFixed(3,HX_("extend",da,d1,1a,c7),extend)
            				->setFixed(4,HX_("params",46,fb,7a,ed),params)
            				->setFixed(5,HX_("isExtern",ea,70,84,1f),isExtern)
            				->setFixed(6,HX_("meta",c5,4a,59,48),meta)
            				->setFixed(7,HX_("name",4b,72,ff,48),name)));
HXLINE(1137)			goto _hx_goto_81;
            		}
            		if (  (_hx_switch_1==HX_("import",65,a1,82,08)) ){
HXLINE(1117)			::Array< ::String > path = ::Array_obj< ::String >::__new(1)->init(0,this->getIdent());
HXLINE(1118)			bool star = false;
HXLINE(1119)			while(true){
HXLINE(1120)				 ::hscript::Token t2 = this->token();
HXLINE(1121)				if (::hx::IsPointerNotEq( t2,::hscript::Token_obj::TDot_dyn() )) {
HXLINE(1122)					{
HXLINE(1122)						this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            							->setFixed(0,HX_("t",74,00,00,00),t2)
            							->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            							->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN(1122)						this->tokenMin = this->oldTokenMin;
HXDLIN(1122)						this->tokenMax = this->oldTokenMax;
            					}
HXLINE(1123)					goto _hx_goto_85;
            				}
HXLINE(1125)				t2 = this->token();
HXLINE(1126)				switch((int)(t2->_hx_getIndex())){
            					case (int)2: {
HXLINE(1127)						::String id = t2->_hx_getString(0);
HXLINE(1128)						path->push(id);
            					}
            					break;
            					case (int)3: {
HXLINE(1129)						if ((t2->_hx_getString(0) == HX_("*",2a,00,00,00))) {
HXLINE(1130)							star = true;
            						}
            						else {
HXLINE(1132)							this->unexpected(t2);
            						}
            					}
            					break;
            					default:{
HXLINE(1132)						this->unexpected(t2);
            					}
            				}
            			}
            			_hx_goto_85:;
HXLINE(1135)			{
HXLINE(1135)				 ::hscript::Token t3 = this->token();
HXDLIN(1135)				if (::hx::IsPointerNotEq( t3,::hscript::Token_obj::TSemicolon_dyn() )) {
HXLINE(1135)					this->unexpected(t3);
            				}
            			}
HXLINE(1136)			return ::hscript::ModuleDecl_obj::DImport(path,star);
HXLINE(1116)			goto _hx_goto_81;
            		}
            		if (  (_hx_switch_1==HX_("package",86,2b,b1,41)) ){
HXLINE(1113)			::Array< ::String > path1 = this->parsePath();
HXLINE(1114)			{
HXLINE(1114)				 ::hscript::Token t4 = this->token();
HXDLIN(1114)				if (::hx::IsPointerNotEq( t4,::hscript::Token_obj::TSemicolon_dyn() )) {
HXLINE(1114)					this->unexpected(t4);
            				}
            			}
HXLINE(1115)			return ::hscript::ModuleDecl_obj::DPackage(path1);
HXLINE(1112)			goto _hx_goto_81;
            		}
            		if (  (_hx_switch_1==HX_("typedef",4b,37,d8,f8)) ){
HXLINE(1172)			::String name1 = this->getIdent();
HXLINE(1173)			 ::Dynamic params1 = this->parseParams();
HXLINE(1174)			{
HXLINE(1174)				 ::hscript::Token t5 = this->token();
HXDLIN(1174)				if (!(__hxcpp_enum_eq(t5,::hscript::Token_obj::TOp(HX_("=",3d,00,00,00))))) {
HXLINE(1174)					this->unexpected(t5);
            				}
            			}
HXLINE(1175)			 ::hscript::CType t6 = this->parseType();
HXLINE(1176)			return ::hscript::ModuleDecl_obj::DTypedef( ::Dynamic(::hx::Anon_obj::Create(5)
            				->setFixed(0,HX_("isPrivate",39,aa,6d,8d),isPrivate)
            				->setFixed(1,HX_("params",46,fb,7a,ed),params1)
            				->setFixed(2,HX_("t",74,00,00,00),t6)
            				->setFixed(3,HX_("meta",c5,4a,59,48),meta)
            				->setFixed(4,HX_("name",4b,72,ff,48),name1)));
HXLINE(1171)			goto _hx_goto_81;
            		}
            		/* default */{
HXLINE(1184)			this->unexpected(::hscript::Token_obj::TId(ident));
            		}
            		_hx_goto_81:;
HXLINE(1186)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,parseModuleDecl,return )

 ::Dynamic Parser_obj::parseField(){
            	HX_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_1189_parseField)
HXLINE(1190)		::Array< ::Dynamic> meta = this->parseMetadata();
HXLINE(1191)		::Array< ::Dynamic> access = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(1192)		while(true){
HXLINE(1193)			::String id = this->getIdent();
HXLINE(1194)			::String _hx_switch_0 = id;
            			if (  (_hx_switch_0==HX_("function",18,ab,52,14)) ){
HXLINE(1208)				::String name = this->getIdent();
HXLINE(1209)				 ::Dynamic inf = this->parseFunctionDecl();
HXLINE(1210)				return  ::Dynamic(::hx::Anon_obj::Create(4)
            					->setFixed(0,HX_("access",a4,95,06,0b),access)
            					->setFixed(1,HX_("kind",54,e1,09,47),::hscript::FieldKind_obj::KFunction( ::Dynamic(::hx::Anon_obj::Create(3)
            						->setFixed(0,HX_("ret",61,d9,56,00), ::Dynamic(inf->__Field(HX_("ret",61,d9,56,00),::hx::paccDynamic)))
            						->setFixed(1,HX_("args",5d,8d,74,40), ::Dynamic(inf->__Field(HX_("args",5d,8d,74,40),::hx::paccDynamic)))
            						->setFixed(2,HX_("expr",35,fd,1d,43), ::Dynamic(inf->__Field(HX_("body",a2,7a,1b,41),::hx::paccDynamic))))))
            					->setFixed(2,HX_("meta",c5,4a,59,48),meta)
            					->setFixed(3,HX_("name",4b,72,ff,48),name));
HXLINE(1207)				goto _hx_goto_88;
            			}
            			if (  (_hx_switch_0==HX_("inline",59,ca,3f,99)) ){
HXLINE(1202)				access->push(::hscript::FieldAccess_obj::AInline_dyn());
HXDLIN(1202)				goto _hx_goto_88;
            			}
            			if (  (_hx_switch_0==HX_("macro",0c,70,16,03)) ){
HXLINE(1206)				access->push(::hscript::FieldAccess_obj::AMacro_dyn());
HXDLIN(1206)				goto _hx_goto_88;
            			}
            			if (  (_hx_switch_0==HX_("override",4c,22,28,49)) ){
HXLINE(1196)				access->push(::hscript::FieldAccess_obj::AOverride_dyn());
HXDLIN(1196)				goto _hx_goto_88;
            			}
            			if (  (_hx_switch_0==HX_("private",03,2d,6f,89)) ){
HXLINE(1200)				access->push(::hscript::FieldAccess_obj::APrivate_dyn());
HXDLIN(1200)				goto _hx_goto_88;
            			}
            			if (  (_hx_switch_0==HX_("public",a9,80,f3,66)) ){
HXLINE(1198)				access->push(::hscript::FieldAccess_obj::APublic_dyn());
HXDLIN(1198)				goto _hx_goto_88;
            			}
            			if (  (_hx_switch_0==HX_("static",ae,dc,fb,05)) ){
HXLINE(1204)				access->push(::hscript::FieldAccess_obj::AStatic_dyn());
HXDLIN(1204)				goto _hx_goto_88;
            			}
            			if (  (_hx_switch_0==HX_("var",e7,de,59,00)) ){
HXLINE(1221)				::String name1 = this->getIdent();
HXLINE(1222)				::String get = null();
HXDLIN(1222)				::String set = null();
HXLINE(1223)				if (this->maybe(::hscript::Token_obj::TPOpen_dyn())) {
HXLINE(1224)					get = this->getIdent();
HXLINE(1225)					{
HXLINE(1225)						 ::hscript::Token t = this->token();
HXDLIN(1225)						if (::hx::IsPointerNotEq( t,::hscript::Token_obj::TComma_dyn() )) {
HXLINE(1225)							this->unexpected(t);
            						}
            					}
HXLINE(1226)					set = this->getIdent();
HXLINE(1227)					{
HXLINE(1227)						 ::hscript::Token t1 = this->token();
HXDLIN(1227)						if (::hx::IsPointerNotEq( t1,::hscript::Token_obj::TPClose_dyn() )) {
HXLINE(1227)							this->unexpected(t1);
            						}
            					}
            				}
HXLINE(1229)				 ::hscript::CType type;
HXDLIN(1229)				if (this->maybe(::hscript::Token_obj::TDoubleDot_dyn())) {
HXLINE(1229)					type = this->parseType();
            				}
            				else {
HXLINE(1229)					type = null();
            				}
HXLINE(1230)				 ::Dynamic expr;
HXDLIN(1230)				if (this->maybe(::hscript::Token_obj::TOp(HX_("=",3d,00,00,00)))) {
HXLINE(1230)					expr = this->parseExpr();
            				}
            				else {
HXLINE(1230)					expr = null();
            				}
HXLINE(1232)				if (::hx::IsNotNull( expr )) {
HXLINE(1233)					if (this->isBlock(expr)) {
HXLINE(1234)						this->maybe(::hscript::Token_obj::TSemicolon_dyn());
            					}
            					else {
HXLINE(1236)						 ::hscript::Token t2 = this->token();
HXDLIN(1236)						if (::hx::IsPointerNotEq( t2,::hscript::Token_obj::TSemicolon_dyn() )) {
HXLINE(1236)							this->unexpected(t2);
            						}
            					}
            				}
            				else {
HXLINE(1237)					bool _hx_tmp;
HXDLIN(1237)					if (::hx::IsNotNull( type )) {
HXLINE(1237)						if (::hx::IsNull( type )) {
HXLINE(1237)							_hx_tmp = false;
            						}
            						else {
HXLINE(1237)							if ((type->_hx_getIndex() == 2)) {
HXLINE(1237)								::Array< ::Dynamic> _g = type->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
HXDLIN(1237)								_hx_tmp = true;
            							}
            							else {
HXLINE(1237)								_hx_tmp = false;
            							}
            						}
            					}
            					else {
HXLINE(1237)						_hx_tmp = false;
            					}
HXDLIN(1237)					if (_hx_tmp) {
HXLINE(1238)						this->maybe(::hscript::Token_obj::TSemicolon_dyn());
            					}
            					else {
HXLINE(1240)						 ::hscript::Token t3 = this->token();
HXDLIN(1240)						if (::hx::IsPointerNotEq( t3,::hscript::Token_obj::TSemicolon_dyn() )) {
HXLINE(1240)							this->unexpected(t3);
            						}
            					}
            				}
HXLINE(1242)				return  ::Dynamic(::hx::Anon_obj::Create(4)
            					->setFixed(0,HX_("access",a4,95,06,0b),access)
            					->setFixed(1,HX_("kind",54,e1,09,47),::hscript::FieldKind_obj::KVar( ::Dynamic(::hx::Anon_obj::Create(4)
            						->setFixed(0,HX_("get",96,80,4e,00),get)
            						->setFixed(1,HX_("set",a2,9b,57,00),set)
            						->setFixed(2,HX_("expr",35,fd,1d,43),expr)
            						->setFixed(3,HX_("type",ba,f2,08,4d),type))))
            					->setFixed(2,HX_("meta",c5,4a,59,48),meta)
            					->setFixed(3,HX_("name",4b,72,ff,48),name1));
HXLINE(1220)				goto _hx_goto_88;
            			}
            			/* default */{
HXLINE(1254)				this->unexpected(::hscript::Token_obj::TId(id));
HXLINE(1255)				goto _hx_goto_87;
            			}
            			_hx_goto_88:;
            		}
            		_hx_goto_87:;
HXLINE(1258)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,parseField,return )

int Parser_obj::readChar(){
            	HX_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_1264_readChar)
HXDLIN(1264)		return this->input.cca(this->readPos++);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,readChar,return )

::String Parser_obj::readString(int until){
            	HX_GC_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_1267_readString)
HXLINE(1268)		int c = 0;
HXLINE(1269)		 ::StringBuf b =  ::StringBuf_obj::__alloc( HX_CTX );
HXLINE(1270)		bool esc = false;
HXLINE(1271)		int old = this->line;
HXLINE(1272)		::String s = this->input;
HXLINE(1274)		int p1 = ((this->readPos + this->offset) - 1);
HXLINE(1276)		while(true){
HXLINE(1277)			int c1 = this->input.cca(this->readPos++);
HXLINE(1278)			if ((c1 == 0)) {
HXLINE(1279)				this->line = old;
HXLINE(1280)				if (!(this->resumeErrors)) {
HXLINE(1280)					HX_STACK_DO_THROW( ::hscript::Error_obj::__alloc( HX_CTX ,::hscript::ErrorDef_obj::EUnterminatedString_dyn(),p1,p1,this->origin,this->line));
            				}
HXLINE(1281)				goto _hx_goto_91;
            			}
HXLINE(1283)			if (esc) {
HXLINE(1284)				esc = false;
HXLINE(1285)				switch((int)(c1)){
            					case (int)47: {
HXLINE(1290)						if (this->allowJSON) {
HXLINE(1290)							if ((c1 >= 127)) {
HXLINE(1290)								::String x = ::String::fromCharCode(c1);
HXDLIN(1290)								if (::hx::IsNotNull( b->charBuf )) {
HXLINE(1290)									b->flush();
            								}
HXDLIN(1290)								if (::hx::IsNull( b->b )) {
HXLINE(1290)									b->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x));
            								}
            								else {
HXLINE(1290)									::Array< ::String > b1 = b->b;
HXDLIN(1290)									b1->push(::Std_obj::string(x));
            								}
            							}
            							else {
HXLINE(1290)								if (::hx::IsNull( b->charBuf )) {
HXLINE(1290)									b->charBuf = ::Array_obj< char >::__new();
            								}
HXDLIN(1290)								b->charBuf->push(c1);
            							}
            						}
            						else {
HXLINE(1290)							this->invalidChar(c1);
            						}
            					}
            					break;
            					case (int)34: case (int)39: case (int)92: {
HXLINE(1289)						if ((c1 >= 127)) {
HXLINE(1289)							::String x1 = ::String::fromCharCode(c1);
HXDLIN(1289)							if (::hx::IsNotNull( b->charBuf )) {
HXLINE(1289)								b->flush();
            							}
HXDLIN(1289)							if (::hx::IsNull( b->b )) {
HXLINE(1289)								b->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x1));
            							}
            							else {
HXLINE(1289)								::Array< ::String > b2 = b->b;
HXDLIN(1289)								b2->push(::Std_obj::string(x1));
            							}
            						}
            						else {
HXLINE(1289)							if (::hx::IsNull( b->charBuf )) {
HXLINE(1289)								b->charBuf = ::Array_obj< char >::__new();
            							}
HXDLIN(1289)							b->charBuf->push(c1);
            						}
            					}
            					break;
            					case (int)110: {
HXLINE(1286)						if (::hx::IsNull( b->charBuf )) {
HXLINE(1286)							b->charBuf = ::Array_obj< char >::__new();
            						}
HXDLIN(1286)						b->charBuf->push(10);
            					}
            					break;
            					case (int)114: {
HXLINE(1287)						if (::hx::IsNull( b->charBuf )) {
HXLINE(1287)							b->charBuf = ::Array_obj< char >::__new();
            						}
HXDLIN(1287)						b->charBuf->push(13);
            					}
            					break;
            					case (int)116: {
HXLINE(1288)						if (::hx::IsNull( b->charBuf )) {
HXLINE(1288)							b->charBuf = ::Array_obj< char >::__new();
            						}
HXDLIN(1288)						b->charBuf->push(9);
            					}
            					break;
            					case (int)117: {
HXLINE(1292)						if (!(this->allowJSON)) {
HXLINE(1292)							this->invalidChar(c1);
            						}
HXLINE(1293)						int k = 0;
HXLINE(1294)						{
HXLINE(1294)							int _g = 0;
HXDLIN(1294)							while((_g < 4)){
HXLINE(1294)								_g = (_g + 1);
HXDLIN(1294)								int i = (_g - 1);
HXLINE(1295)								k = (k << 4);
HXLINE(1296)								int _hx_char = this->input.cca(this->readPos++);
HXLINE(1297)								switch((int)(_hx_char)){
            									case (int)48: case (int)49: case (int)50: case (int)51: case (int)52: case (int)53: case (int)54: case (int)55: case (int)56: case (int)57: {
HXLINE(1299)										k = (k + (_hx_char - 48));
            									}
            									break;
            									case (int)65: case (int)66: case (int)67: case (int)68: case (int)69: case (int)70: {
HXLINE(1301)										k = (k + (_hx_char - 55));
            									}
            									break;
            									case (int)97: case (int)98: case (int)99: case (int)100: case (int)101: case (int)102: {
HXLINE(1303)										k = (k + (_hx_char - 87));
            									}
            									break;
            									default:{
HXLINE(1305)										if ((_hx_char == 0)) {
HXLINE(1306)											this->line = old;
HXLINE(1307)											if (!(this->resumeErrors)) {
HXLINE(1307)												HX_STACK_DO_THROW( ::hscript::Error_obj::__alloc( HX_CTX ,::hscript::ErrorDef_obj::EUnterminatedString_dyn(),p1,p1,this->origin,this->line));
            											}
            										}
HXLINE(1309)										this->invalidChar(_hx_char);
            									}
            								}
            							}
            						}
HXLINE(1312)						if ((k >= 127)) {
HXLINE(1312)							::String x2 = ::String::fromCharCode(k);
HXDLIN(1312)							if (::hx::IsNotNull( b->charBuf )) {
HXLINE(1312)								b->flush();
            							}
HXDLIN(1312)							if (::hx::IsNull( b->b )) {
HXLINE(1312)								b->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x2));
            							}
            							else {
HXLINE(1312)								::Array< ::String > b3 = b->b;
HXDLIN(1312)								b3->push(::Std_obj::string(x2));
            							}
            						}
            						else {
HXLINE(1312)							if (::hx::IsNull( b->charBuf )) {
HXLINE(1312)								b->charBuf = ::Array_obj< char >::__new();
            							}
HXDLIN(1312)							b->charBuf->push(k);
            						}
            					}
            					break;
            					default:{
HXLINE(1313)						this->invalidChar(c1);
            					}
            				}
            			}
            			else {
HXLINE(1315)				if ((c1 == 92)) {
HXLINE(1316)					esc = true;
            				}
            				else {
HXLINE(1317)					if ((c1 == until)) {
HXLINE(1318)						goto _hx_goto_91;
            					}
            					else {
HXLINE(1320)						if ((c1 == 10)) {
HXLINE(1320)							this->line++;
            						}
HXLINE(1321)						if ((c1 >= 127)) {
HXLINE(1321)							::String x3 = ::String::fromCharCode(c1);
HXDLIN(1321)							if (::hx::IsNotNull( b->charBuf )) {
HXLINE(1321)								b->flush();
            							}
HXDLIN(1321)							if (::hx::IsNull( b->b )) {
HXLINE(1321)								b->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x3));
            							}
            							else {
HXLINE(1321)								::Array< ::String > b4 = b->b;
HXDLIN(1321)								b4->push(::Std_obj::string(x3));
            							}
            						}
            						else {
HXLINE(1321)							if (::hx::IsNull( b->charBuf )) {
HXLINE(1321)								b->charBuf = ::Array_obj< char >::__new();
            							}
HXDLIN(1321)							b->charBuf->push(c1);
            						}
            					}
            				}
            			}
            		}
            		_hx_goto_91:;
HXLINE(1324)		return b->toString();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,readString,return )

 ::hscript::Token Parser_obj::token(){
            	HX_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_1327_token)
HXLINE(1329)		 ::Dynamic t = this->tokens->pop();
HXLINE(1330)		if (::hx::IsNotNull( t )) {
HXLINE(1331)			this->tokenMin = ( (int)(t->__Field(HX_("min",92,11,53,00),::hx::paccDynamic)) );
HXLINE(1332)			this->tokenMax = ( (int)(t->__Field(HX_("max",a4,0a,53,00),::hx::paccDynamic)) );
HXLINE(1333)			return t->__Field(HX_("t",74,00,00,00),::hx::paccDynamic);
            		}
HXLINE(1335)		this->oldTokenMin = this->tokenMin;
HXLINE(1336)		this->oldTokenMax = this->tokenMax;
HXLINE(1337)		int _hx_tmp;
HXDLIN(1337)		if ((this->_hx_char < 0)) {
HXLINE(1337)			_hx_tmp = (this->readPos + this->offset);
            		}
            		else {
HXLINE(1337)			_hx_tmp = ((this->readPos + this->offset) - 1);
            		}
HXDLIN(1337)		this->tokenMin = _hx_tmp;
HXLINE(1338)		 ::hscript::Token t1 = this->_token();
HXLINE(1339)		int _hx_tmp1;
HXDLIN(1339)		if ((this->_hx_char < 0)) {
HXLINE(1339)			_hx_tmp1 = ((this->readPos + this->offset) - 1);
            		}
            		else {
HXLINE(1339)			_hx_tmp1 = ((this->readPos + this->offset) - 2);
            		}
HXDLIN(1339)		this->tokenMax = _hx_tmp1;
HXLINE(1340)		return t1;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,token,return )

 ::hscript::Token Parser_obj::_token(){
            	HX_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_1343__token)
HXLINE(1348)		int _hx_char;
HXLINE(1349)		if ((this->_hx_char < 0)) {
HXLINE(1350)			_hx_char = this->input.cca(this->readPos++);
            		}
            		else {
HXLINE(1352)			_hx_char = this->_hx_char;
HXLINE(1353)			this->_hx_char = -1;
            		}
HXLINE(1355)		while(true){
HXLINE(1356)			if ((_hx_char == 0)) {
HXLINE(1357)				this->_hx_char = _hx_char;
HXLINE(1358)				return ::hscript::Token_obj::TEof_dyn();
            			}
HXLINE(1360)			switch((int)(_hx_char)){
            				case (int)0: {
HXLINE(1362)					return ::hscript::Token_obj::TEof_dyn();
            				}
            				break;
            				case (int)10: {
HXLINE(1367)					this->line++;
HXLINE(1369)					this->tokenMin++;
            				}
            				break;
            				case (int)9: case (int)13: case (int)32: {
HXLINE(1365)					this->tokenMin++;
            				}
            				break;
            				case (int)34: case (int)39: {
HXLINE(1467)					return ::hscript::Token_obj::TConst(::hscript::Const_obj::CString(this->readString(_hx_char)));
            				}
            				break;
            				case (int)35: {
HXLINE(1498)					_hx_char = this->input.cca(this->readPos++);
HXLINE(1499)					if (this->idents->__get(_hx_char)) {
HXLINE(1500)						::String id = ::String::fromCharCode(_hx_char);
HXLINE(1501)						while(true){
HXLINE(1502)							_hx_char = this->input.cca(this->readPos++);
HXLINE(1503)							if (!(this->idents->__get(_hx_char))) {
HXLINE(1504)								this->_hx_char = _hx_char;
HXLINE(1505)								return this->preprocess(id);
            							}
HXLINE(1507)							id = (id + ::String::fromCharCode(_hx_char));
            						}
            					}
HXLINE(1510)					this->invalidChar(_hx_char);
            				}
            				break;
            				case (int)40: {
HXLINE(1434)					return ::hscript::Token_obj::TPOpen_dyn();
            				}
            				break;
            				case (int)41: {
HXLINE(1435)					return ::hscript::Token_obj::TPClose_dyn();
            				}
            				break;
            				case (int)44: {
HXLINE(1436)					return ::hscript::Token_obj::TComma_dyn();
            				}
            				break;
            				case (int)46: {
HXLINE(1438)					_hx_char = this->input.cca(this->readPos++);
HXLINE(1439)					switch((int)(_hx_char)){
            						case (int)46: {
HXLINE(1455)							_hx_char = this->input.cca(this->readPos++);
HXLINE(1456)							if ((_hx_char != 46)) {
HXLINE(1457)								this->invalidChar(_hx_char);
            							}
HXLINE(1458)							return ::hscript::Token_obj::TOp(HX_("...",ee,0f,23,00));
            						}
            						break;
            						case (int)48: case (int)49: case (int)50: case (int)51: case (int)52: case (int)53: case (int)54: case (int)55: case (int)56: case (int)57: {
HXLINE(1441)							int n = (_hx_char - 48);
HXLINE(1442)							int exp = 1;
HXLINE(1443)							while(true){
HXLINE(1444)								_hx_char = this->input.cca(this->readPos++);
HXLINE(1445)								exp = (exp * 10);
HXLINE(1446)								switch((int)(_hx_char)){
            									case (int)48: case (int)49: case (int)50: case (int)51: case (int)52: case (int)53: case (int)54: case (int)55: case (int)56: case (int)57: {
HXLINE(1448)										n = ((n * 10) + (_hx_char - 48));
            									}
            									break;
            									default:{
HXLINE(1450)										this->_hx_char = _hx_char;
HXLINE(1451)										return ::hscript::Token_obj::TConst(::hscript::Const_obj::CFloat((( (Float)(n) ) / ( (Float)(exp) ))));
            									}
            								}
            							}
            						}
            						break;
            						default:{
HXLINE(1460)							this->_hx_char = _hx_char;
HXLINE(1461)							return ::hscript::Token_obj::TDot_dyn();
            						}
            					}
            				}
            				break;
            				case (int)48: case (int)49: case (int)50: case (int)51: case (int)52: case (int)53: case (int)54: case (int)55: case (int)56: case (int)57: {
HXLINE(1372)					Float n1 = (( (Float)((_hx_char - 48)) ) * ((Float)1.0));
HXLINE(1373)					Float exp1 = ((Float)0.);
HXLINE(1374)					while(true){
HXLINE(1375)						_hx_char = this->input.cca(this->readPos++);
HXLINE(1376)						exp1 = (exp1 * ( (Float)(10) ));
HXLINE(1377)						switch((int)(_hx_char)){
            							case (int)46: {
HXLINE(1398)								if ((exp1 > 0)) {
HXLINE(1400)									bool _hx_tmp;
HXDLIN(1400)									if ((exp1 == 10)) {
HXLINE(1400)										_hx_tmp = (this->input.cca(this->readPos++) == 46);
            									}
            									else {
HXLINE(1400)										_hx_tmp = false;
            									}
HXDLIN(1400)									if (_hx_tmp) {
HXLINE(1401)										{
HXLINE(1401)											this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            												->setFixed(0,HX_("t",74,00,00,00),::hscript::Token_obj::TOp(HX_("...",ee,0f,23,00)))
            												->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            												->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN(1401)											this->tokenMin = this->oldTokenMin;
HXDLIN(1401)											this->tokenMax = this->oldTokenMax;
            										}
HXLINE(1402)										int i = ::Std_obj::_hx_int(n1);
HXLINE(1403)										 ::hscript::Const _hx_tmp1;
HXDLIN(1403)										if ((i == n1)) {
HXLINE(1403)											_hx_tmp1 = ::hscript::Const_obj::CInt(i);
            										}
            										else {
HXLINE(1403)											_hx_tmp1 = ::hscript::Const_obj::CFloat(n1);
            										}
HXDLIN(1403)										return ::hscript::Token_obj::TConst(_hx_tmp1);
            									}
HXLINE(1405)									this->invalidChar(_hx_char);
            								}
HXLINE(1407)								exp1 = ((Float)1.);
            							}
            							break;
            							case (int)48: case (int)49: case (int)50: case (int)51: case (int)52: case (int)53: case (int)54: case (int)55: case (int)56: case (int)57: {
HXLINE(1379)								n1 = ((n1 * ( (Float)(10) )) + (_hx_char - 48));
            							}
            							break;
            							case (int)69: case (int)101: {
HXLINE(1381)								 ::hscript::Token tk = this->token();
HXLINE(1382)								 ::Dynamic pow = null();
HXLINE(1383)								switch((int)(tk->_hx_getIndex())){
            									case (int)1: {
HXLINE(1384)										 ::hscript::Const _g = tk->_hx_getObject(0).StaticCast<  ::hscript::Const >();
HXDLIN(1384)										if ((_g->_hx_getIndex() == 0)) {
HXLINE(1384)											int e = _g->_hx_getInt(0);
HXDLIN(1384)											pow = e;
            										}
            										else {
HXLINE(1392)											this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            												->setFixed(0,HX_("t",74,00,00,00),tk)
            												->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            												->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN(1392)											this->tokenMin = this->oldTokenMin;
HXDLIN(1392)											this->tokenMax = this->oldTokenMax;
            										}
            									}
            									break;
            									case (int)3: {
HXLINE(1385)										if ((tk->_hx_getString(0) == HX_("-",2d,00,00,00))) {
HXLINE(1386)											tk = this->token();
HXLINE(1387)											if ((tk->_hx_getIndex() == 1)) {
HXLINE(1388)												 ::hscript::Const _g1 = tk->_hx_getObject(0).StaticCast<  ::hscript::Const >();
HXDLIN(1388)												if ((_g1->_hx_getIndex() == 0)) {
HXLINE(1388)													int e1 = _g1->_hx_getInt(0);
HXDLIN(1388)													pow = -(e1);
            												}
            												else {
HXLINE(1389)													this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            														->setFixed(0,HX_("t",74,00,00,00),tk)
            														->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            														->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN(1389)													this->tokenMin = this->oldTokenMin;
HXDLIN(1389)													this->tokenMax = this->oldTokenMax;
            												}
            											}
            											else {
HXLINE(1389)												this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            													->setFixed(0,HX_("t",74,00,00,00),tk)
            													->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            													->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN(1389)												this->tokenMin = this->oldTokenMin;
HXDLIN(1389)												this->tokenMax = this->oldTokenMax;
            											}
            										}
            										else {
HXLINE(1392)											this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            												->setFixed(0,HX_("t",74,00,00,00),tk)
            												->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            												->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN(1392)											this->tokenMin = this->oldTokenMin;
HXDLIN(1392)											this->tokenMax = this->oldTokenMax;
            										}
            									}
            									break;
            									default:{
HXLINE(1392)										this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            											->setFixed(0,HX_("t",74,00,00,00),tk)
            											->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            											->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN(1392)										this->tokenMin = this->oldTokenMin;
HXDLIN(1392)										this->tokenMax = this->oldTokenMax;
            									}
            								}
HXLINE(1394)								if (::hx::IsNull( pow )) {
HXLINE(1395)									this->invalidChar(_hx_char);
            								}
HXLINE(1396)								return ::hscript::Token_obj::TConst(::hscript::Const_obj::CFloat((((::Math_obj::pow(( (Float)(10) ),( (Float)(pow) )) / exp1) * n1) * ( (Float)(10) ))));
            							}
            							break;
            							case (int)120: {
HXLINE(1409)								bool _hx_tmp2;
HXDLIN(1409)								if (!((n1 > 0))) {
HXLINE(1409)									_hx_tmp2 = (exp1 > 0);
            								}
            								else {
HXLINE(1409)									_hx_tmp2 = true;
            								}
HXDLIN(1409)								if (_hx_tmp2) {
HXLINE(1410)									this->invalidChar(_hx_char);
            								}
HXLINE(1412)								int n2 = 0;
HXLINE(1413)								while(true){
HXLINE(1414)									_hx_char = this->input.cca(this->readPos++);
HXLINE(1415)									switch((int)(_hx_char)){
            										case (int)48: case (int)49: case (int)50: case (int)51: case (int)52: case (int)53: case (int)54: case (int)55: case (int)56: case (int)57: {
HXLINE(1417)											n2 = (((n2 << 4) + _hx_char) - 48);
            										}
            										break;
            										case (int)65: case (int)66: case (int)67: case (int)68: case (int)69: case (int)70: {
HXLINE(1419)											n2 = ((n2 << 4) + (_hx_char - 55));
            										}
            										break;
            										case (int)97: case (int)98: case (int)99: case (int)100: case (int)101: case (int)102: {
HXLINE(1421)											n2 = ((n2 << 4) + (_hx_char - 87));
            										}
            										break;
            										default:{
HXLINE(1423)											this->_hx_char = _hx_char;
HXLINE(1424)											return ::hscript::Token_obj::TConst(::hscript::Const_obj::CInt(n2));
            										}
            									}
            								}
            							}
            							break;
            							default:{
HXLINE(1428)								this->_hx_char = _hx_char;
HXLINE(1429)								int i1 = ::Std_obj::_hx_int(n1);
HXLINE(1430)								 ::hscript::Const _hx_tmp3;
HXDLIN(1430)								if ((exp1 > 0)) {
HXLINE(1430)									_hx_tmp3 = ::hscript::Const_obj::CFloat(((n1 * ( (Float)(10) )) / exp1));
            								}
            								else {
HXLINE(1430)									if ((i1 == n1)) {
HXLINE(1430)										_hx_tmp3 = ::hscript::Const_obj::CInt(i1);
            									}
            									else {
HXLINE(1430)										_hx_tmp3 = ::hscript::Const_obj::CFloat(n1);
            									}
            								}
HXDLIN(1430)								return ::hscript::Token_obj::TConst(_hx_tmp3);
            							}
            						}
            					}
            				}
            				break;
            				case (int)58: {
HXLINE(1474)					return ::hscript::Token_obj::TDoubleDot_dyn();
            				}
            				break;
            				case (int)59: {
HXLINE(1433)					return ::hscript::Token_obj::TSemicolon_dyn();
            				}
            				break;
            				case (int)61: {
HXLINE(1476)					_hx_char = this->input.cca(this->readPos++);
HXLINE(1477)					if ((_hx_char == 61)) {
HXLINE(1478)						return ::hscript::Token_obj::TOp(HX_("==",60,35,00,00));
            					}
            					else {
HXLINE(1479)						if ((_hx_char == 62)) {
HXLINE(1480)							return ::hscript::Token_obj::TOp(HX_("=>",61,35,00,00));
            						}
            					}
HXLINE(1481)					this->_hx_char = _hx_char;
HXLINE(1482)					return ::hscript::Token_obj::TOp(HX_("=",3d,00,00,00));
            				}
            				break;
            				case (int)63: {
HXLINE(1469)					_hx_char = this->input.cca(this->readPos++);
HXLINE(1470)					if ((_hx_char == 46)) {
HXLINE(1471)						return ::hscript::Token_obj::TQuestionDot_dyn();
            					}
HXLINE(1472)					this->_hx_char = _hx_char;
HXLINE(1473)					return ::hscript::Token_obj::TQuestion_dyn();
            				}
            				break;
            				case (int)64: {
HXLINE(1484)					_hx_char = this->input.cca(this->readPos++);
HXLINE(1485)					bool _hx_tmp4;
HXDLIN(1485)					if (!(this->idents->__get(_hx_char))) {
HXLINE(1485)						_hx_tmp4 = (_hx_char == 58);
            					}
            					else {
HXLINE(1485)						_hx_tmp4 = true;
            					}
HXDLIN(1485)					if (_hx_tmp4) {
HXLINE(1486)						::String id1 = ::String::fromCharCode(_hx_char);
HXLINE(1487)						while(true){
HXLINE(1488)							_hx_char = this->input.cca(this->readPos++);
HXLINE(1489)							if (!(this->idents->__get(_hx_char))) {
HXLINE(1490)								this->_hx_char = _hx_char;
HXLINE(1491)								return ::hscript::Token_obj::TMeta(id1);
            							}
HXLINE(1493)							id1 = (id1 + ::String::fromCharCode(_hx_char));
            						}
            					}
HXLINE(1496)					this->invalidChar(_hx_char);
            				}
            				break;
            				case (int)91: {
HXLINE(1465)					return ::hscript::Token_obj::TBkOpen_dyn();
            				}
            				break;
            				case (int)93: {
HXLINE(1466)					return ::hscript::Token_obj::TBkClose_dyn();
            				}
            				break;
            				case (int)123: {
HXLINE(1463)					return ::hscript::Token_obj::TBrOpen_dyn();
            				}
            				break;
            				case (int)125: {
HXLINE(1464)					return ::hscript::Token_obj::TBrClose_dyn();
            				}
            				break;
            				default:{
HXLINE(1512)					if (this->ops->__get(_hx_char)) {
HXLINE(1513)						::String op = ::String::fromCharCode(_hx_char);
HXLINE(1514)						while(true){
HXLINE(1515)							_hx_char = this->input.cca(this->readPos++);
HXLINE(1516)							if ((_hx_char == 0)) {
HXLINE(1516)								_hx_char = 0;
            							}
HXLINE(1517)							if (!(this->ops->__get(_hx_char))) {
HXLINE(1518)								this->_hx_char = _hx_char;
HXLINE(1519)								return ::hscript::Token_obj::TOp(op);
            							}
HXLINE(1521)							::String pop = op;
HXLINE(1522)							op = (op + ::String::fromCharCode(_hx_char));
HXLINE(1523)							bool _hx_tmp5;
HXDLIN(1523)							if (!(this->opPriority->exists(op))) {
HXLINE(1523)								_hx_tmp5 = this->opPriority->exists(pop);
            							}
            							else {
HXLINE(1523)								_hx_tmp5 = false;
            							}
HXDLIN(1523)							if (_hx_tmp5) {
HXLINE(1524)								bool _hx_tmp6;
HXDLIN(1524)								if ((op != HX_("//",20,29,00,00))) {
HXLINE(1524)									_hx_tmp6 = (op == HX_("/*",1b,29,00,00));
            								}
            								else {
HXLINE(1524)									_hx_tmp6 = true;
            								}
HXDLIN(1524)								if (_hx_tmp6) {
HXLINE(1525)									return this->tokenComment(op,_hx_char);
            								}
HXLINE(1526)								this->_hx_char = _hx_char;
HXLINE(1527)								return ::hscript::Token_obj::TOp(pop);
            							}
            						}
            					}
HXLINE(1531)					if (this->idents->__get(_hx_char)) {
HXLINE(1532)						::String id2 = ::String::fromCharCode(_hx_char);
HXLINE(1533)						while(true){
HXLINE(1534)							_hx_char = this->input.cca(this->readPos++);
HXLINE(1535)							if ((_hx_char == 0)) {
HXLINE(1535)								_hx_char = 0;
            							}
HXLINE(1536)							if (!(this->idents->__get(_hx_char))) {
HXLINE(1537)								this->_hx_char = _hx_char;
HXLINE(1538)								return ::hscript::Token_obj::TId(id2);
            							}
HXLINE(1540)							id2 = (id2 + ::String::fromCharCode(_hx_char));
            						}
            					}
HXLINE(1543)					this->invalidChar(_hx_char);
            				}
            			}
HXLINE(1545)			_hx_char = this->input.cca(this->readPos++);
            		}
HXLINE(1355)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,_token,return )

 ::Dynamic Parser_obj::preprocValue(::String id){
            	HX_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_1551_preprocValue)
HXDLIN(1551)		return this->preprocesorValues->get(id);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,preprocValue,return )

 ::Dynamic Parser_obj::parsePreproCond(){
            	HX_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_1556_parsePreproCond)
HXLINE(1557)		 ::hscript::Token tk = this->token();
HXLINE(1558)		switch((int)(tk->_hx_getIndex())){
            			case (int)2: {
HXLINE(1562)				::String id = tk->_hx_getString(0);
HXLINE(1563)				 ::hscript::ExprDef e = ::hscript::ExprDef_obj::EIdent(id);
HXDLIN(1563)				 ::Dynamic pmin = this->tokenMin;
HXDLIN(1563)				 ::Dynamic pmax = this->tokenMax;
HXDLIN(1563)				if (::hx::IsNull( e )) {
HXLINE(1563)					return null();
            				}
            				else {
HXLINE(1563)					if (::hx::IsNull( pmin )) {
HXLINE(1563)						pmin = this->tokenMin;
            					}
HXDLIN(1563)					if (::hx::IsNull( pmax )) {
HXLINE(1563)						pmax = this->tokenMax;
            					}
HXDLIN(1563)					return  ::Dynamic(::hx::Anon_obj::Create(5)
            						->setFixed(0,HX_("e",65,00,00,00),e)
            						->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            						->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax)
            						->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin)
            						->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            				}
            			}
            			break;
            			case (int)3: {
HXLINE(1564)				if ((tk->_hx_getString(0) == HX_("!",21,00,00,00))) {
HXLINE(1565)					 ::hscript::ExprDef e1 = ::hscript::ExprDef_obj::EUnop(HX_("!",21,00,00,00),true,this->parsePreproCond());
HXDLIN(1565)					 ::Dynamic pmin1 = this->tokenMin;
HXDLIN(1565)					 ::Dynamic pmax1 = this->tokenMax;
HXDLIN(1565)					if (::hx::IsNull( e1 )) {
HXLINE(1565)						return null();
            					}
            					else {
HXLINE(1565)						if (::hx::IsNull( pmin1 )) {
HXLINE(1565)							pmin1 = this->tokenMin;
            						}
HXDLIN(1565)						if (::hx::IsNull( pmax1 )) {
HXLINE(1565)							pmax1 = this->tokenMax;
            						}
HXDLIN(1565)						return  ::Dynamic(::hx::Anon_obj::Create(5)
            							->setFixed(0,HX_("e",65,00,00,00),e1)
            							->setFixed(1,HX_("line",f4,17,b3,47),this->line)
            							->setFixed(2,HX_("pmax",34,f0,5a,4a),pmax1)
            							->setFixed(3,HX_("pmin",22,f7,5a,4a),pmin1)
            							->setFixed(4,HX_("origin",e6,19,01,4b),this->origin));
            					}
            				}
            				else {
HXLINE(1567)					return this->unexpected(tk);
            				}
            			}
            			break;
            			case (int)4: {
HXLINE(1560)				{
HXLINE(1560)					this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            						->setFixed(0,HX_("t",74,00,00,00),::hscript::Token_obj::TPOpen_dyn())
            						->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            						->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN(1560)					this->tokenMin = this->oldTokenMin;
HXDLIN(1560)					this->tokenMax = this->oldTokenMax;
            				}
HXLINE(1561)				return this->parseExpr();
            			}
            			break;
            			default:{
HXLINE(1567)				return this->unexpected(tk);
            			}
            		}
HXLINE(1558)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,parsePreproCond,return )

bool Parser_obj::evalPreproCond( ::Dynamic e){
            	HX_GC_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_1572_evalPreproCond)
HXDLIN(1572)		 ::hscript::ExprDef _g = e->__Field(HX_("e",65,00,00,00),::hx::paccDynamic);
HXDLIN(1572)		switch((int)(_g->_hx_getIndex())){
            			case (int)1: {
HXLINE(1573)				::String id = _g->_hx_getString(0);
HXLINE(1574)				return ::hx::IsNotNull( this->preprocValue(id) );
            			}
            			break;
            			case (int)3: {
HXLINE(1577)				 ::Dynamic e1 = _g->_hx_getObject(0);
HXLINE(1578)				return this->evalPreproCond(e1);
            			}
            			break;
            			case (int)6: {
HXLINE(1581)				 ::Dynamic _g1 = _g->_hx_getObject(1);
HXDLIN(1581)				 ::Dynamic _g2 = _g->_hx_getObject(2);
HXDLIN(1581)				::String _hx_switch_0 = _g->_hx_getString(0);
            				if (  (_hx_switch_0==HX_("&&",40,21,00,00)) ){
HXLINE(1579)					 ::Dynamic e11 = _g1;
HXDLIN(1579)					 ::Dynamic e2 = _g2;
HXLINE(1580)					if (this->evalPreproCond(e11)) {
HXLINE(1580)						return this->evalPreproCond(e2);
            					}
            					else {
HXLINE(1580)						return false;
            					}
HXLINE(1579)					goto _hx_goto_106;
            				}
            				if (  (_hx_switch_0==HX_("||",80,6c,00,00)) ){
HXLINE(1581)					 ::Dynamic e12 = _g1;
HXDLIN(1581)					 ::Dynamic e21 = _g2;
HXLINE(1582)					if (!(this->evalPreproCond(e12))) {
HXLINE(1582)						return this->evalPreproCond(e21);
            					}
            					else {
HXLINE(1582)						return true;
            					}
HXLINE(1581)					goto _hx_goto_106;
            				}
            				/* default */{
HXLINE(1584)					{
HXLINE(1584)						 ::hscript::ErrorDef err = ::hscript::ErrorDef_obj::EInvalidPreprocessor((HX_("Can't eval ",01,17,bf,09) + ::Type_obj::enumConstructor(e->__Field(HX_("e",65,00,00,00),::hx::paccDynamic))));
HXDLIN(1584)						if (!(this->resumeErrors)) {
HXLINE(1584)							HX_STACK_DO_THROW( ::hscript::Error_obj::__alloc( HX_CTX ,err,(this->readPos + this->offset),(this->readPos + this->offset),this->origin,this->line));
            						}
            					}
HXLINE(1585)					return false;
            				}
            				_hx_goto_106:;
            			}
            			break;
            			case (int)7: {
HXLINE(1575)				bool _g3 = _g->_hx_getBool(1);
HXDLIN(1575)				if ((_g->_hx_getString(0) == HX_("!",21,00,00,00))) {
HXLINE(1575)					 ::Dynamic e3 = _g->_hx_getObject(2);
HXLINE(1576)					return !(this->evalPreproCond(e3));
            				}
            				else {
HXLINE(1584)					{
HXLINE(1584)						 ::hscript::ErrorDef err1 = ::hscript::ErrorDef_obj::EInvalidPreprocessor((HX_("Can't eval ",01,17,bf,09) + ::Type_obj::enumConstructor(e->__Field(HX_("e",65,00,00,00),::hx::paccDynamic))));
HXDLIN(1584)						if (!(this->resumeErrors)) {
HXLINE(1584)							HX_STACK_DO_THROW( ::hscript::Error_obj::__alloc( HX_CTX ,err1,(this->readPos + this->offset),(this->readPos + this->offset),this->origin,this->line));
            						}
            					}
HXLINE(1585)					return false;
            				}
            			}
            			break;
            			default:{
HXLINE(1584)				{
HXLINE(1584)					 ::hscript::ErrorDef err2 = ::hscript::ErrorDef_obj::EInvalidPreprocessor((HX_("Can't eval ",01,17,bf,09) + ::Type_obj::enumConstructor(e->__Field(HX_("e",65,00,00,00),::hx::paccDynamic))));
HXDLIN(1584)					if (!(this->resumeErrors)) {
HXLINE(1584)						HX_STACK_DO_THROW( ::hscript::Error_obj::__alloc( HX_CTX ,err2,(this->readPos + this->offset),(this->readPos + this->offset),this->origin,this->line));
            					}
            				}
HXLINE(1585)				return false;
            			}
            		}
HXLINE(1572)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,evalPreproCond,return )

 ::hscript::Token Parser_obj::preprocess(::String id){
            	HX_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_1590_preprocess)
HXDLIN(1590)		::String _hx_switch_0 = id;
            		if (  (_hx_switch_0==HX_("else",b9,e4,14,43)) ||  (_hx_switch_0==HX_("elseif",d6,a0,a2,dd)) ){
HXLINE(1600)			if ((this->preprocStack->length > 0)) {
HXLINE(1601)				if (( (bool)(this->preprocStack->__get((this->preprocStack->length - 1))->__Field(HX_("r",72,00,00,00),::hx::paccDynamic)) )) {
HXLINE(1602)					this->preprocStack->__get((this->preprocStack->length - 1))->__SetField(HX_("r",72,00,00,00),false,::hx::paccDynamic);
HXLINE(1603)					this->skipTokens();
HXLINE(1604)					return this->token();
            				}
            				else {
HXLINE(1605)					if ((id == HX_("else",b9,e4,14,43))) {
HXLINE(1606)						this->preprocStack->pop();
HXLINE(1607)						this->preprocStack->push( ::Dynamic(::hx::Anon_obj::Create(1)
            							->setFixed(0,HX_("r",72,00,00,00),true)));
HXLINE(1608)						return this->token();
            					}
            					else {
HXLINE(1611)						this->preprocStack->pop();
HXLINE(1612)						return this->preprocess(HX_("if",dd,5b,00,00));
            					}
            				}
            			}
            			else {
HXLINE(1618)				return ::hscript::Token_obj::TPrepro(id);
            			}
HXLINE(1600)			goto _hx_goto_108;
            		}
            		if (  (_hx_switch_0==HX_("end",db,03,4d,00)) ){
HXLINE(1614)			if ((this->preprocStack->length > 0)) {
HXLINE(1615)				this->preprocStack->pop();
HXLINE(1616)				return this->token();
            			}
            			else {
HXLINE(1618)				return ::hscript::Token_obj::TPrepro(id);
            			}
HXLINE(1614)			goto _hx_goto_108;
            		}
            		if (  (_hx_switch_0==HX_("if",dd,5b,00,00)) ){
HXLINE(1592)			 ::Dynamic e = this->parsePreproCond();
HXLINE(1593)			if (this->evalPreproCond(e)) {
HXLINE(1594)				this->preprocStack->push( ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("r",72,00,00,00),true)));
HXLINE(1595)				return this->token();
            			}
HXLINE(1597)			this->preprocStack->push( ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("r",72,00,00,00),false)));
HXLINE(1598)			this->skipTokens();
HXLINE(1599)			return this->token();
HXLINE(1591)			goto _hx_goto_108;
            		}
            		/* default */{
HXLINE(1618)			return ::hscript::Token_obj::TPrepro(id);
            		}
            		_hx_goto_108:;
HXLINE(1590)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,preprocess,return )

void Parser_obj::skipTokens(){
            	HX_GC_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_1622_skipTokens)
HXLINE(1623)		int spos = (this->preprocStack->length - 1);
HXLINE(1624)		 ::Dynamic obj = this->preprocStack->__get(spos);
HXLINE(1625)		int pos = (this->readPos + this->offset);
HXLINE(1626)		while(true){
HXLINE(1627)			 ::hscript::Token tk = this->token();
HXLINE(1628)			if (::hx::IsPointerEq( tk,::hscript::Token_obj::TEof_dyn() )) {
HXLINE(1629)				if (!(this->resumeErrors)) {
HXLINE(1629)					HX_STACK_DO_THROW( ::hscript::Error_obj::__alloc( HX_CTX ,::hscript::ErrorDef_obj::EInvalidPreprocessor(HX_("Unclosed",e5,94,4a,ea)),pos,pos,this->origin,this->line));
            				}
            			}
HXLINE(1630)			if (::hx::IsNotEq( this->preprocStack->__get(spos),obj )) {
HXLINE(1631)				{
HXLINE(1631)					this->tokens->push( ::Dynamic(::hx::Anon_obj::Create(3)
            						->setFixed(0,HX_("t",74,00,00,00),tk)
            						->setFixed(1,HX_("max",a4,0a,53,00),this->tokenMax)
            						->setFixed(2,HX_("min",92,11,53,00),this->tokenMin)));
HXDLIN(1631)					this->tokenMin = this->oldTokenMin;
HXDLIN(1631)					this->tokenMax = this->oldTokenMax;
            				}
HXLINE(1632)				goto _hx_goto_110;
            			}
            		}
            		_hx_goto_110:;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,skipTokens,(void))

 ::hscript::Token Parser_obj::tokenComment(::String op,int _hx_char){
            	HX_GC_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_1637_tokenComment)
HXLINE(1638)		 ::Dynamic c = op.charCodeAt(1);
HXLINE(1639)		::String s = this->input;
HXLINE(1640)		if (::hx::IsEq( c,47 )) {
HXLINE(1641)			do {
HXLINE(1641)				bool _hx_tmp;
HXDLIN(1641)				if ((_hx_char != 13)) {
HXLINE(1641)					_hx_tmp = (_hx_char != 10);
            				}
            				else {
HXLINE(1641)					_hx_tmp = false;
            				}
HXDLIN(1641)				if (!(_hx_tmp)) {
HXLINE(1641)					goto _hx_goto_112;
            				}
HXLINE(1642)				_hx_char = this->input.cca(this->readPos++);
            			} while((_hx_char != 0));
            			_hx_goto_112:;
HXLINE(1645)			this->_hx_char = _hx_char;
HXLINE(1646)			return this->token();
            		}
HXLINE(1648)		if (::hx::IsEq( c,42 )) {
HXLINE(1649)			int old = this->line;
HXLINE(1650)			if ((op == HX_("/**/",a0,0a,31,1f))) {
HXLINE(1651)				this->_hx_char = _hx_char;
HXLINE(1652)				return this->token();
            			}
HXLINE(1654)			do {
HXLINE(1655)				while((_hx_char != 42)){
HXLINE(1656)					if ((_hx_char == 10)) {
HXLINE(1656)						this->line++;
            					}
HXLINE(1657)					_hx_char = this->input.cca(this->readPos++);
HXLINE(1658)					if ((_hx_char == 0)) {
HXLINE(1659)						this->line = old;
HXLINE(1660)						if (!(this->resumeErrors)) {
HXLINE(1660)							HX_STACK_DO_THROW( ::hscript::Error_obj::__alloc( HX_CTX ,::hscript::ErrorDef_obj::EUnterminatedComment_dyn(),this->tokenMin,this->tokenMin,this->origin,this->line));
            						}
HXLINE(1661)						goto _hx_goto_114;
            					}
            				}
            				_hx_goto_114:;
HXLINE(1664)				_hx_char = this->input.cca(this->readPos++);
HXLINE(1665)				if ((_hx_char == 0)) {
HXLINE(1666)					this->line = old;
HXLINE(1667)					if (!(this->resumeErrors)) {
HXLINE(1667)						HX_STACK_DO_THROW( ::hscript::Error_obj::__alloc( HX_CTX ,::hscript::ErrorDef_obj::EUnterminatedComment_dyn(),this->tokenMin,this->tokenMin,this->origin,this->line));
            					}
HXLINE(1668)					goto _hx_goto_113;
            				}
            			} while((_hx_char != 47));
            			_hx_goto_113:;
HXLINE(1673)			return this->token();
            		}
HXLINE(1675)		this->_hx_char = _hx_char;
HXLINE(1676)		return ::hscript::Token_obj::TOp(op);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Parser_obj,tokenComment,return )

::String Parser_obj::constString( ::hscript::Const c){
            	HX_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_1680_constString)
HXDLIN(1680)		switch((int)(c->_hx_getIndex())){
            			case (int)0: {
HXLINE(1681)				int v = c->_hx_getInt(0);
HXDLIN(1681)				return ::Std_obj::string(v);
            			}
            			break;
            			case (int)1: {
HXLINE(1682)				Float f = c->_hx_getFloat(0);
HXDLIN(1682)				return ::Std_obj::string(f);
            			}
            			break;
            			case (int)2: {
HXLINE(1683)				::String s = c->_hx_getString(0);
HXDLIN(1683)				return s;
            			}
            			break;
            		}
HXLINE(1680)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,constString,return )

::String Parser_obj::tokenString( ::hscript::Token t){
            	HX_STACKFRAME(&_hx_pos_2fd3d36595bebf3d_1688_tokenString)
HXDLIN(1688)		switch((int)(t->_hx_getIndex())){
            			case (int)0: {
HXLINE(1689)				return HX_("<eof>",3e,ee,21,cf);
            			}
            			break;
            			case (int)1: {
HXLINE(1690)				 ::hscript::Const c = t->_hx_getObject(0).StaticCast<  ::hscript::Const >();
HXDLIN(1690)				return this->constString(c);
            			}
            			break;
            			case (int)2: {
HXLINE(1691)				::String s = t->_hx_getString(0);
HXDLIN(1691)				return s;
            			}
            			break;
            			case (int)3: {
HXLINE(1692)				::String s1 = t->_hx_getString(0);
HXDLIN(1692)				return s1;
            			}
            			break;
            			case (int)4: {
HXLINE(1693)				return HX_("(",28,00,00,00);
            			}
            			break;
            			case (int)5: {
HXLINE(1694)				return HX_(")",29,00,00,00);
            			}
            			break;
            			case (int)6: {
HXLINE(1695)				return HX_("{",7b,00,00,00);
            			}
            			break;
            			case (int)7: {
HXLINE(1696)				return HX_("}",7d,00,00,00);
            			}
            			break;
            			case (int)8: {
HXLINE(1697)				return HX_(".",2e,00,00,00);
            			}
            			break;
            			case (int)9: {
HXLINE(1698)				return HX_("?.",0f,37,00,00);
            			}
            			break;
            			case (int)10: {
HXLINE(1699)				return HX_(",",2c,00,00,00);
            			}
            			break;
            			case (int)11: {
HXLINE(1700)				return HX_(";",3b,00,00,00);
            			}
            			break;
            			case (int)12: {
HXLINE(1701)				return HX_("[",5b,00,00,00);
            			}
            			break;
            			case (int)13: {
HXLINE(1702)				return HX_("]",5d,00,00,00);
            			}
            			break;
            			case (int)14: {
HXLINE(1703)				return HX_("?",3f,00,00,00);
            			}
            			break;
            			case (int)15: {
HXLINE(1704)				return HX_(":",3a,00,00,00);
            			}
            			break;
            			case (int)16: {
HXLINE(1705)				::String id = t->_hx_getString(0);
HXDLIN(1705)				return (HX_("@",40,00,00,00) + id);
            			}
            			break;
            			case (int)17: {
HXLINE(1706)				::String id1 = t->_hx_getString(0);
HXDLIN(1706)				return (HX_("#",23,00,00,00) + id1);
            			}
            			break;
            		}
HXLINE(1688)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,tokenString,return )


::hx::ObjectPtr< Parser_obj > Parser_obj::__new() {
	::hx::ObjectPtr< Parser_obj > __this = new Parser_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< Parser_obj > Parser_obj::__alloc(::hx::Ctx *_hx_ctx) {
	Parser_obj *__this = (Parser_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Parser_obj), true, "hscript.Parser"));
	*(void **)__this = Parser_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

Parser_obj::Parser_obj()
{
}

void Parser_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Parser);
	HX_MARK_MEMBER_NAME(line,"line");
	HX_MARK_MEMBER_NAME(opChars,"opChars");
	HX_MARK_MEMBER_NAME(identChars,"identChars");
	HX_MARK_MEMBER_NAME(opPriority,"opPriority");
	HX_MARK_MEMBER_NAME(opRightAssoc,"opRightAssoc");
	HX_MARK_MEMBER_NAME(preprocesorValues,"preprocesorValues");
	HX_MARK_MEMBER_NAME(allowJSON,"allowJSON");
	HX_MARK_MEMBER_NAME(allowTypes,"allowTypes");
	HX_MARK_MEMBER_NAME(allowMetadata,"allowMetadata");
	HX_MARK_MEMBER_NAME(resumeErrors,"resumeErrors");
	HX_MARK_MEMBER_NAME(input,"input");
	HX_MARK_MEMBER_NAME(readPos,"readPos");
	HX_MARK_MEMBER_NAME(offset,"offset");
	HX_MARK_MEMBER_NAME(_hx_char,"char");
	HX_MARK_MEMBER_NAME(ops,"ops");
	HX_MARK_MEMBER_NAME(idents,"idents");
	HX_MARK_MEMBER_NAME(uid,"uid");
	HX_MARK_MEMBER_NAME(origin,"origin");
	HX_MARK_MEMBER_NAME(tokenMin,"tokenMin");
	HX_MARK_MEMBER_NAME(tokenMax,"tokenMax");
	HX_MARK_MEMBER_NAME(oldTokenMin,"oldTokenMin");
	HX_MARK_MEMBER_NAME(oldTokenMax,"oldTokenMax");
	HX_MARK_MEMBER_NAME(tokens,"tokens");
	HX_MARK_MEMBER_NAME(preprocStack,"preprocStack");
	HX_MARK_END_CLASS();
}

void Parser_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(line,"line");
	HX_VISIT_MEMBER_NAME(opChars,"opChars");
	HX_VISIT_MEMBER_NAME(identChars,"identChars");
	HX_VISIT_MEMBER_NAME(opPriority,"opPriority");
	HX_VISIT_MEMBER_NAME(opRightAssoc,"opRightAssoc");
	HX_VISIT_MEMBER_NAME(preprocesorValues,"preprocesorValues");
	HX_VISIT_MEMBER_NAME(allowJSON,"allowJSON");
	HX_VISIT_MEMBER_NAME(allowTypes,"allowTypes");
	HX_VISIT_MEMBER_NAME(allowMetadata,"allowMetadata");
	HX_VISIT_MEMBER_NAME(resumeErrors,"resumeErrors");
	HX_VISIT_MEMBER_NAME(input,"input");
	HX_VISIT_MEMBER_NAME(readPos,"readPos");
	HX_VISIT_MEMBER_NAME(offset,"offset");
	HX_VISIT_MEMBER_NAME(_hx_char,"char");
	HX_VISIT_MEMBER_NAME(ops,"ops");
	HX_VISIT_MEMBER_NAME(idents,"idents");
	HX_VISIT_MEMBER_NAME(uid,"uid");
	HX_VISIT_MEMBER_NAME(origin,"origin");
	HX_VISIT_MEMBER_NAME(tokenMin,"tokenMin");
	HX_VISIT_MEMBER_NAME(tokenMax,"tokenMax");
	HX_VISIT_MEMBER_NAME(oldTokenMin,"oldTokenMin");
	HX_VISIT_MEMBER_NAME(oldTokenMax,"oldTokenMax");
	HX_VISIT_MEMBER_NAME(tokens,"tokens");
	HX_VISIT_MEMBER_NAME(preprocStack,"preprocStack");
}

::hx::Val Parser_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"mk") ) { return ::hx::Val( mk_dyn() ); }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"ops") ) { return ::hx::Val( ops ); }
		if (HX_FIELD_EQ(inName,"uid") ) { return ::hx::Val( uid ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"line") ) { return ::hx::Val( line ); }
		if (HX_FIELD_EQ(inName,"char") ) { return ::hx::Val( _hx_char ); }
		if (HX_FIELD_EQ(inName,"push") ) { return ::hx::Val( push_dyn() ); }
		if (HX_FIELD_EQ(inName,"expr") ) { return ::hx::Val( expr_dyn() ); }
		if (HX_FIELD_EQ(inName,"pmin") ) { return ::hx::Val( pmin_dyn() ); }
		if (HX_FIELD_EQ(inName,"pmax") ) { return ::hx::Val( pmax_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"input") ) { return ::hx::Val( input ); }
		if (HX_FIELD_EQ(inName,"error") ) { return ::hx::Val( error_dyn() ); }
		if (HX_FIELD_EQ(inName,"maybe") ) { return ::hx::Val( maybe_dyn() ); }
		if (HX_FIELD_EQ(inName,"token") ) { return ::hx::Val( token_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"offset") ) { return ::hx::Val( offset ); }
		if (HX_FIELD_EQ(inName,"idents") ) { return ::hx::Val( idents ); }
		if (HX_FIELD_EQ(inName,"origin") ) { return ::hx::Val( origin ); }
		if (HX_FIELD_EQ(inName,"tokens") ) { return ::hx::Val( tokens ); }
		if (HX_FIELD_EQ(inName,"ensure") ) { return ::hx::Val( ensure_dyn() ); }
		if (HX_FIELD_EQ(inName,"_token") ) { return ::hx::Val( _token_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"opChars") ) { return ::hx::Val( opChars ); }
		if (HX_FIELD_EQ(inName,"readPos") ) { return ::hx::Val( readPos ); }
		if (HX_FIELD_EQ(inName,"isBlock") ) { return ::hx::Val( isBlock_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"tokenMin") ) { return ::hx::Val( tokenMin ); }
		if (HX_FIELD_EQ(inName,"tokenMax") ) { return ::hx::Val( tokenMax ); }
		if (HX_FIELD_EQ(inName,"getIdent") ) { return ::hx::Val( getIdent_dyn() ); }
		if (HX_FIELD_EQ(inName,"mapCompr") ) { return ::hx::Val( mapCompr_dyn() ); }
		if (HX_FIELD_EQ(inName,"makeUnop") ) { return ::hx::Val( makeUnop_dyn() ); }
		if (HX_FIELD_EQ(inName,"readChar") ) { return ::hx::Val( readChar_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"allowJSON") ) { return ::hx::Val( allowJSON ); }
		if (HX_FIELD_EQ(inName,"parseExpr") ) { return ::hx::Val( parseExpr_dyn() ); }
		if (HX_FIELD_EQ(inName,"makeBinop") ) { return ::hx::Val( makeBinop_dyn() ); }
		if (HX_FIELD_EQ(inName,"parsePath") ) { return ::hx::Val( parsePath_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseType") ) { return ::hx::Val( parseType_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"identChars") ) { return ::hx::Val( identChars ); }
		if (HX_FIELD_EQ(inName,"opPriority") ) { return ::hx::Val( opPriority ); }
		if (HX_FIELD_EQ(inName,"allowTypes") ) { return ::hx::Val( allowTypes ); }
		if (HX_FIELD_EQ(inName,"currentPos") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_currentPos() ); }
		if (HX_FIELD_EQ(inName,"initParser") ) { return ::hx::Val( initParser_dyn() ); }
		if (HX_FIELD_EQ(inName,"unexpected") ) { return ::hx::Val( unexpected_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseField") ) { return ::hx::Val( parseField_dyn() ); }
		if (HX_FIELD_EQ(inName,"readString") ) { return ::hx::Val( readString_dyn() ); }
		if (HX_FIELD_EQ(inName,"preprocess") ) { return ::hx::Val( preprocess_dyn() ); }
		if (HX_FIELD_EQ(inName,"skipTokens") ) { return ::hx::Val( skipTokens_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"oldTokenMin") ) { return ::hx::Val( oldTokenMin ); }
		if (HX_FIELD_EQ(inName,"oldTokenMax") ) { return ::hx::Val( oldTokenMax ); }
		if (HX_FIELD_EQ(inName,"invalidChar") ) { return ::hx::Val( invalidChar_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseString") ) { return ::hx::Val( parseString_dyn() ); }
		if (HX_FIELD_EQ(inName,"ensureToken") ) { return ::hx::Val( ensureToken_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseObject") ) { return ::hx::Val( parseObject_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseLambda") ) { return ::hx::Val( parseLambda_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseModule") ) { return ::hx::Val( parseModule_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseParams") ) { return ::hx::Val( parseParams_dyn() ); }
		if (HX_FIELD_EQ(inName,"constString") ) { return ::hx::Val( constString_dyn() ); }
		if (HX_FIELD_EQ(inName,"tokenString") ) { return ::hx::Val( tokenString_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"opRightAssoc") ) { return ::hx::Val( opRightAssoc ); }
		if (HX_FIELD_EQ(inName,"resumeErrors") ) { return ::hx::Val( resumeErrors ); }
		if (HX_FIELD_EQ(inName,"preprocValue") ) { return ::hx::Val( preprocValue_dyn() ); }
		if (HX_FIELD_EQ(inName,"preprocStack") ) { return ::hx::Val( preprocStack ); }
		if (HX_FIELD_EQ(inName,"tokenComment") ) { return ::hx::Val( tokenComment_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"allowMetadata") ) { return ::hx::Val( allowMetadata ); }
		if (HX_FIELD_EQ(inName,"parseFullExpr") ) { return ::hx::Val( parseFullExpr_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseMetaArgs") ) { return ::hx::Val( parseMetaArgs_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseExprNext") ) { return ::hx::Val( parseExprNext_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseTypeNext") ) { return ::hx::Val( parseTypeNext_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseExprList") ) { return ::hx::Val( parseExprList_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseMetadata") ) { return ::hx::Val( parseMetadata_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"get_currentPos") ) { return ::hx::Val( get_currentPos_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseStructure") ) { return ::hx::Val( parseStructure_dyn() ); }
		if (HX_FIELD_EQ(inName,"evalPreproCond") ) { return ::hx::Val( evalPreproCond_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"parseModuleDecl") ) { return ::hx::Val( parseModuleDecl_dyn() ); }
		if (HX_FIELD_EQ(inName,"parsePreproCond") ) { return ::hx::Val( parsePreproCond_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"preprocesorValues") ) { return ::hx::Val( preprocesorValues ); }
		if (HX_FIELD_EQ(inName,"parseFunctionArgs") ) { return ::hx::Val( parseFunctionArgs_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseFunctionDecl") ) { return ::hx::Val( parseFunctionDecl_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val Parser_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"ops") ) { ops=inValue.Cast< ::Array< bool > >(); return inValue; }
		if (HX_FIELD_EQ(inName,"uid") ) { uid=inValue.Cast< int >(); return inValue; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"line") ) { line=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"char") ) { _hx_char=inValue.Cast< int >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"input") ) { input=inValue.Cast< ::String >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"offset") ) { offset=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"idents") ) { idents=inValue.Cast< ::Array< bool > >(); return inValue; }
		if (HX_FIELD_EQ(inName,"origin") ) { origin=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"tokens") ) { tokens=inValue.Cast<  ::haxe::ds::List >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"opChars") ) { opChars=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"readPos") ) { readPos=inValue.Cast< int >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"tokenMin") ) { tokenMin=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"tokenMax") ) { tokenMax=inValue.Cast< int >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"allowJSON") ) { allowJSON=inValue.Cast< bool >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"identChars") ) { identChars=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"opPriority") ) { opPriority=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
		if (HX_FIELD_EQ(inName,"allowTypes") ) { allowTypes=inValue.Cast< bool >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"oldTokenMin") ) { oldTokenMin=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"oldTokenMax") ) { oldTokenMax=inValue.Cast< int >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"opRightAssoc") ) { opRightAssoc=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
		if (HX_FIELD_EQ(inName,"resumeErrors") ) { resumeErrors=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"preprocStack") ) { preprocStack=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"allowMetadata") ) { allowMetadata=inValue.Cast< bool >(); return inValue; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"preprocesorValues") ) { preprocesorValues=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Parser_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("line",f4,17,b3,47));
	outFields->push(HX_("opChars",fc,f3,a7,a8));
	outFields->push(HX_("identChars",cd,23,3f,ee));
	outFields->push(HX_("opPriority",a5,21,d8,3e));
	outFields->push(HX_("opRightAssoc",9a,d1,fe,02));
	outFields->push(HX_("preprocesorValues",4c,e2,81,ce));
	outFields->push(HX_("allowJSON",31,27,44,b1));
	outFields->push(HX_("allowTypes",30,2b,97,45));
	outFields->push(HX_("allowMetadata",18,79,d4,10));
	outFields->push(HX_("resumeErrors",38,61,37,31));
	outFields->push(HX_("input",0a,c4,1d,be));
	outFields->push(HX_("readPos",de,03,cf,02));
	outFields->push(HX_("offset",93,97,3f,60));
	outFields->push(HX_("currentPos",db,22,30,c7));
	outFields->push(HX_("char",d6,5e,bf,41));
	outFields->push(HX_("ops",32,9c,54,00));
	outFields->push(HX_("idents",83,4f,a1,d2));
	outFields->push(HX_("uid",90,23,59,00));
	outFields->push(HX_("origin",e6,19,01,4b));
	outFields->push(HX_("tokenMin",19,a8,42,2b));
	outFields->push(HX_("tokenMax",2b,a1,42,2b));
	outFields->push(HX_("oldTokenMin",e0,7b,1c,6b));
	outFields->push(HX_("oldTokenMax",f2,74,1c,6b));
	outFields->push(HX_("tokens",5a,17,e7,91));
	outFields->push(HX_("preprocStack",4f,d3,9d,7a));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo Parser_obj_sMemberStorageInfo[] = {
	{::hx::fsInt,(int)offsetof(Parser_obj,line),HX_("line",f4,17,b3,47)},
	{::hx::fsString,(int)offsetof(Parser_obj,opChars),HX_("opChars",fc,f3,a7,a8)},
	{::hx::fsString,(int)offsetof(Parser_obj,identChars),HX_("identChars",cd,23,3f,ee)},
	{::hx::fsObject /*  ::haxe::ds::StringMap */ ,(int)offsetof(Parser_obj,opPriority),HX_("opPriority",a5,21,d8,3e)},
	{::hx::fsObject /*  ::haxe::ds::StringMap */ ,(int)offsetof(Parser_obj,opRightAssoc),HX_("opRightAssoc",9a,d1,fe,02)},
	{::hx::fsObject /*  ::haxe::ds::StringMap */ ,(int)offsetof(Parser_obj,preprocesorValues),HX_("preprocesorValues",4c,e2,81,ce)},
	{::hx::fsBool,(int)offsetof(Parser_obj,allowJSON),HX_("allowJSON",31,27,44,b1)},
	{::hx::fsBool,(int)offsetof(Parser_obj,allowTypes),HX_("allowTypes",30,2b,97,45)},
	{::hx::fsBool,(int)offsetof(Parser_obj,allowMetadata),HX_("allowMetadata",18,79,d4,10)},
	{::hx::fsBool,(int)offsetof(Parser_obj,resumeErrors),HX_("resumeErrors",38,61,37,31)},
	{::hx::fsString,(int)offsetof(Parser_obj,input),HX_("input",0a,c4,1d,be)},
	{::hx::fsInt,(int)offsetof(Parser_obj,readPos),HX_("readPos",de,03,cf,02)},
	{::hx::fsInt,(int)offsetof(Parser_obj,offset),HX_("offset",93,97,3f,60)},
	{::hx::fsInt,(int)offsetof(Parser_obj,_hx_char),HX_("char",d6,5e,bf,41)},
	{::hx::fsObject /* ::Array< bool > */ ,(int)offsetof(Parser_obj,ops),HX_("ops",32,9c,54,00)},
	{::hx::fsObject /* ::Array< bool > */ ,(int)offsetof(Parser_obj,idents),HX_("idents",83,4f,a1,d2)},
	{::hx::fsInt,(int)offsetof(Parser_obj,uid),HX_("uid",90,23,59,00)},
	{::hx::fsString,(int)offsetof(Parser_obj,origin),HX_("origin",e6,19,01,4b)},
	{::hx::fsInt,(int)offsetof(Parser_obj,tokenMin),HX_("tokenMin",19,a8,42,2b)},
	{::hx::fsInt,(int)offsetof(Parser_obj,tokenMax),HX_("tokenMax",2b,a1,42,2b)},
	{::hx::fsInt,(int)offsetof(Parser_obj,oldTokenMin),HX_("oldTokenMin",e0,7b,1c,6b)},
	{::hx::fsInt,(int)offsetof(Parser_obj,oldTokenMax),HX_("oldTokenMax",f2,74,1c,6b)},
	{::hx::fsObject /*  ::haxe::ds::List */ ,(int)offsetof(Parser_obj,tokens),HX_("tokens",5a,17,e7,91)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(Parser_obj,preprocStack),HX_("preprocStack",4f,d3,9d,7a)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *Parser_obj_sStaticStorageInfo = 0;
#endif

static ::String Parser_obj_sMemberFields[] = {
	HX_("line",f4,17,b3,47),
	HX_("opChars",fc,f3,a7,a8),
	HX_("identChars",cd,23,3f,ee),
	HX_("opPriority",a5,21,d8,3e),
	HX_("opRightAssoc",9a,d1,fe,02),
	HX_("preprocesorValues",4c,e2,81,ce),
	HX_("allowJSON",31,27,44,b1),
	HX_("allowTypes",30,2b,97,45),
	HX_("allowMetadata",18,79,d4,10),
	HX_("resumeErrors",38,61,37,31),
	HX_("input",0a,c4,1d,be),
	HX_("readPos",de,03,cf,02),
	HX_("offset",93,97,3f,60),
	HX_("char",d6,5e,bf,41),
	HX_("ops",32,9c,54,00),
	HX_("idents",83,4f,a1,d2),
	HX_("uid",90,23,59,00),
	HX_("origin",e6,19,01,4b),
	HX_("tokenMin",19,a8,42,2b),
	HX_("tokenMax",2b,a1,42,2b),
	HX_("oldTokenMin",e0,7b,1c,6b),
	HX_("oldTokenMax",f2,74,1c,6b),
	HX_("tokens",5a,17,e7,91),
	HX_("get_currentPos",24,ab,25,3d),
	HX_("error",c8,cb,29,73),
	HX_("invalidChar",6d,ad,ce,a9),
	HX_("initParser",0f,f8,cd,f1),
	HX_("parseString",64,d5,6c,8c),
	HX_("unexpected",d1,15,f4,c5),
	HX_("push",da,11,61,4a),
	HX_("ensure",be,f5,7b,04),
	HX_("ensureToken",5b,6c,33,ec),
	HX_("maybe",a8,13,27,03),
	HX_("getIdent",7a,52,50,17),
	HX_("expr",35,fd,1d,43),
	HX_("pmin",22,f7,5a,4a),
	HX_("pmax",34,f0,5a,4a),
	HX_("mk",5e,5f,00,00),
	HX_("isBlock",03,19,82,51),
	HX_("parseFullExpr",b7,bd,60,9c),
	HX_("parseObject",52,2b,7c,90),
	HX_("parseExpr",08,4f,c4,ca),
	HX_("parseLambda",9a,df,fc,cb),
	HX_("parseMetaArgs",15,82,33,6e),
	HX_("mapCompr",47,a4,9f,c1),
	HX_("makeUnop",c8,c4,47,44),
	HX_("makeBinop",da,90,98,86),
	HX_("parseStructure",80,85,70,8b),
	HX_("parseExprNext",1b,24,a8,f3),
	HX_("parseFunctionArgs",68,ad,48,04),
	HX_("parseFunctionDecl",75,70,3a,06),
	HX_("parsePath",78,37,f8,d1),
	HX_("parseType",8d,44,af,d4),
	HX_("parseTypeNext",20,c0,fc,fa),
	HX_("parseExprList",86,bb,58,f2),
	HX_("parseModule",3f,e1,0f,3c),
	HX_("parseMetadata",c2,1e,49,85),
	HX_("parseParams",d9,a7,b7,68),
	HX_("parseModuleDecl",49,69,92,8b),
	HX_("parseField",87,db,74,2a),
	HX_("readChar",4c,39,b7,69),
	HX_("readString",c7,0c,ac,0a),
	HX_("token",f9,82,2b,14),
	HX_("_token",3a,ca,12,10),
	HX_("preprocValue",78,eb,4a,28),
	HX_("preprocStack",4f,d3,9d,7a),
	HX_("parsePreproCond",ff,8c,11,d6),
	HX_("evalPreproCond",a8,25,52,b0),
	HX_("preprocess",ac,dc,46,92),
	HX_("skipTokens",39,0b,eb,f9),
	HX_("tokenComment",66,60,fb,25),
	HX_("constString",94,42,30,a9),
	HX_("tokenString",aa,20,de,a4),
	::String(null()) };

::hx::Class Parser_obj::__mClass;

void Parser_obj::__register()
{
	Parser_obj _hx_dummy;
	Parser_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("hscript.Parser",9a,9f,f2,e9);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Parser_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Parser_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Parser_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Parser_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace hscript

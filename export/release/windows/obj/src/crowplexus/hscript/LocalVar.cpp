// Generated by Haxe 4.3.4
#include <hxcpp.h>

#ifndef INCLUDED_crowplexus_hscript_LocalVar
#include <crowplexus/hscript/LocalVar.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_31fff5ab54a2c1a2_41_new,"crowplexus.hscript.LocalVar","new",0xf5ffcc73,"crowplexus.hscript.LocalVar.new","crowplexus/hscript/Interp.hx",41,0x864063c3)
namespace crowplexus{
namespace hscript{

void LocalVar_obj::__construct( ::Dynamic r,bool _hx_const){
            	HX_STACKFRAME(&_hx_pos_31fff5ab54a2c1a2_41_new)
HXDLIN(  41)		this->r = r;
HXDLIN(  41)		this->_hx_const = _hx_const;
            	}

Dynamic LocalVar_obj::__CreateEmpty() { return new LocalVar_obj; }

void *LocalVar_obj::_hx_vtable = 0;

Dynamic LocalVar_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< LocalVar_obj > _hx_result = new LocalVar_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool LocalVar_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x7f175eaf;
}


LocalVar_obj::LocalVar_obj()
{
}

void LocalVar_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(LocalVar);
	HX_MARK_MEMBER_NAME(r,"r");
	HX_MARK_MEMBER_NAME(_hx_const,"const");
	HX_MARK_END_CLASS();
}

void LocalVar_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(r,"r");
	HX_VISIT_MEMBER_NAME(_hx_const,"const");
}

::hx::Val LocalVar_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"r") ) { return ::hx::Val( r ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"const") ) { return ::hx::Val( _hx_const ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val LocalVar_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"r") ) { r=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"const") ) { _hx_const=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void LocalVar_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("r",72,00,00,00));
	outFields->push(HX_("const",63,f9,5d,4a));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo LocalVar_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(LocalVar_obj,r),HX_("r",72,00,00,00)},
	{::hx::fsBool,(int)offsetof(LocalVar_obj,_hx_const),HX_("const",63,f9,5d,4a)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *LocalVar_obj_sStaticStorageInfo = 0;
#endif

static ::String LocalVar_obj_sMemberFields[] = {
	HX_("r",72,00,00,00),
	HX_("const",63,f9,5d,4a),
	::String(null()) };

::hx::Class LocalVar_obj::__mClass;

void LocalVar_obj::__register()
{
	LocalVar_obj _hx_dummy;
	LocalVar_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("crowplexus.hscript.LocalVar",01,17,86,d1);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(LocalVar_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< LocalVar_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = LocalVar_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = LocalVar_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace crowplexus
} // end namespace hscript

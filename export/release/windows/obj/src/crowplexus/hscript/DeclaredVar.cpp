// Generated by Haxe 4.3.4
#include <hxcpp.h>

#ifndef INCLUDED_crowplexus_hscript_DeclaredVar
#include <crowplexus/hscript/DeclaredVar.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_LocalVar
#include <crowplexus/hscript/LocalVar.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_693684c71293979c_47_new,"crowplexus.hscript.DeclaredVar","new",0x8a1c3f5a,"crowplexus.hscript.DeclaredVar.new","crowplexus/hscript/Interp.hx",47,0x864063c3)
namespace crowplexus{
namespace hscript{

void DeclaredVar_obj::__construct(::String n, ::crowplexus::hscript::LocalVar old){
            	HX_STACKFRAME(&_hx_pos_693684c71293979c_47_new)
HXDLIN(  47)		this->n = n;
HXDLIN(  47)		this->old = old;
            	}

Dynamic DeclaredVar_obj::__CreateEmpty() { return new DeclaredVar_obj; }

void *DeclaredVar_obj::_hx_vtable = 0;

Dynamic DeclaredVar_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< DeclaredVar_obj > _hx_result = new DeclaredVar_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool DeclaredVar_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x0513cc86;
}


::hx::ObjectPtr< DeclaredVar_obj > DeclaredVar_obj::__new(::String n, ::crowplexus::hscript::LocalVar old) {
	::hx::ObjectPtr< DeclaredVar_obj > __this = new DeclaredVar_obj();
	__this->__construct(n,old);
	return __this;
}

::hx::ObjectPtr< DeclaredVar_obj > DeclaredVar_obj::__alloc(::hx::Ctx *_hx_ctx,::String n, ::crowplexus::hscript::LocalVar old) {
	DeclaredVar_obj *__this = (DeclaredVar_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(DeclaredVar_obj), true, "crowplexus.hscript.DeclaredVar"));
	*(void **)__this = DeclaredVar_obj::_hx_vtable;
	__this->__construct(n,old);
	return __this;
}

DeclaredVar_obj::DeclaredVar_obj()
{
}

void DeclaredVar_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(DeclaredVar);
	HX_MARK_MEMBER_NAME(n,"n");
	HX_MARK_MEMBER_NAME(old,"old");
	HX_MARK_END_CLASS();
}

void DeclaredVar_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(n,"n");
	HX_VISIT_MEMBER_NAME(old,"old");
}

::hx::Val DeclaredVar_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"n") ) { return ::hx::Val( n ); }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"old") ) { return ::hx::Val( old ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val DeclaredVar_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"n") ) { n=inValue.Cast< ::String >(); return inValue; }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"old") ) { old=inValue.Cast<  ::crowplexus::hscript::LocalVar >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void DeclaredVar_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("n",6e,00,00,00));
	outFields->push(HX_("old",a7,98,54,00));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo DeclaredVar_obj_sMemberStorageInfo[] = {
	{::hx::fsString,(int)offsetof(DeclaredVar_obj,n),HX_("n",6e,00,00,00)},
	{::hx::fsObject /*  ::crowplexus::hscript::LocalVar */ ,(int)offsetof(DeclaredVar_obj,old),HX_("old",a7,98,54,00)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *DeclaredVar_obj_sStaticStorageInfo = 0;
#endif

static ::String DeclaredVar_obj_sMemberFields[] = {
	HX_("n",6e,00,00,00),
	HX_("old",a7,98,54,00),
	::String(null()) };

::hx::Class DeclaredVar_obj::__mClass;

void DeclaredVar_obj::__register()
{
	DeclaredVar_obj _hx_dummy;
	DeclaredVar_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("crowplexus.hscript.DeclaredVar",68,4a,47,33);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(DeclaredVar_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< DeclaredVar_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = DeclaredVar_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = DeclaredVar_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace crowplexus
} // end namespace hscript

// Generated by Haxe 4.3.4
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_Expr
#include <crowplexus/hscript/Expr.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_ObjectDecl
#include <crowplexus/hscript/ObjectDecl.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_19835fc9225b7516_112_new,"crowplexus.hscript.ObjectDecl","new",0x1ff336c0,"crowplexus.hscript.ObjectDecl.new","crowplexus/hscript/Expr.hx",112,0x8be9fac2)
HX_LOCAL_STACK_FRAME(_hx_pos_19835fc9225b7516_117_toString,"crowplexus.hscript.ObjectDecl","toString",0xe1804e4c,"crowplexus.hscript.ObjectDecl.toString","crowplexus/hscript/Expr.hx",117,0x8be9fac2)
namespace crowplexus{
namespace hscript{

void ObjectDecl_obj::__construct(::String name, ::crowplexus::hscript::Expr e){
            	HX_STACKFRAME(&_hx_pos_19835fc9225b7516_112_new)
HXDLIN( 112)		this->name = name;
HXDLIN( 112)		this->e = e;
            	}

Dynamic ObjectDecl_obj::__CreateEmpty() { return new ObjectDecl_obj; }

void *ObjectDecl_obj::_hx_vtable = 0;

Dynamic ObjectDecl_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ObjectDecl_obj > _hx_result = new ObjectDecl_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool ObjectDecl_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x6b0e3438;
}

::String ObjectDecl_obj::toString(){
            	HX_STACKFRAME(&_hx_pos_19835fc9225b7516_117_toString)
HXDLIN( 117)		return ::Std_obj::string( ::Dynamic(::hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("e",65,00,00,00),this->e)
            			->setFixed(1,HX_("name",4b,72,ff,48),this->name)));
            	}


HX_DEFINE_DYNAMIC_FUNC0(ObjectDecl_obj,toString,return )


::hx::ObjectPtr< ObjectDecl_obj > ObjectDecl_obj::__new(::String name, ::crowplexus::hscript::Expr e) {
	::hx::ObjectPtr< ObjectDecl_obj > __this = new ObjectDecl_obj();
	__this->__construct(name,e);
	return __this;
}

::hx::ObjectPtr< ObjectDecl_obj > ObjectDecl_obj::__alloc(::hx::Ctx *_hx_ctx,::String name, ::crowplexus::hscript::Expr e) {
	ObjectDecl_obj *__this = (ObjectDecl_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ObjectDecl_obj), true, "crowplexus.hscript.ObjectDecl"));
	*(void **)__this = ObjectDecl_obj::_hx_vtable;
	__this->__construct(name,e);
	return __this;
}

ObjectDecl_obj::ObjectDecl_obj()
{
}

void ObjectDecl_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ObjectDecl);
	HX_MARK_MEMBER_NAME(name,"name");
	HX_MARK_MEMBER_NAME(e,"e");
	HX_MARK_END_CLASS();
}

void ObjectDecl_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(name,"name");
	HX_VISIT_MEMBER_NAME(e,"e");
}

::hx::Val ObjectDecl_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"e") ) { return ::hx::Val( e ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"name") ) { return ::hx::Val( name ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"toString") ) { return ::hx::Val( toString_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val ObjectDecl_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"e") ) { e=inValue.Cast<  ::crowplexus::hscript::Expr >(); return inValue; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"name") ) { name=inValue.Cast< ::String >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ObjectDecl_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("name",4b,72,ff,48));
	outFields->push(HX_("e",65,00,00,00));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo ObjectDecl_obj_sMemberStorageInfo[] = {
	{::hx::fsString,(int)offsetof(ObjectDecl_obj,name),HX_("name",4b,72,ff,48)},
	{::hx::fsObject /*  ::crowplexus::hscript::Expr */ ,(int)offsetof(ObjectDecl_obj,e),HX_("e",65,00,00,00)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *ObjectDecl_obj_sStaticStorageInfo = 0;
#endif

static ::String ObjectDecl_obj_sMemberFields[] = {
	HX_("name",4b,72,ff,48),
	HX_("e",65,00,00,00),
	HX_("toString",ac,d0,6e,38),
	::String(null()) };

::hx::Class ObjectDecl_obj::__mClass;

void ObjectDecl_obj::__register()
{
	ObjectDecl_obj _hx_dummy;
	ObjectDecl_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("crowplexus.hscript.ObjectDecl",ce,16,69,2b);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(ObjectDecl_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< ObjectDecl_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ObjectDecl_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ObjectDecl_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace crowplexus
} // end namespace hscript

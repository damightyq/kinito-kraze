// Generated by Haxe 4.3.4
#include <hxcpp.h>

#ifndef INCLUDED_Reflect
#include <Reflect.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_StringTools
#include <StringTools.h>
#endif
#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED_ValueType
#include <ValueType.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_CType
#include <crowplexus/hscript/CType.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_Const
#include <crowplexus/hscript/Const.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_DeclaredVar
#include <crowplexus/hscript/DeclaredVar.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_EnumType
#include <crowplexus/hscript/EnumType.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_EnumValue
#include <crowplexus/hscript/EnumValue.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_Error
#include <crowplexus/hscript/Error.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_ErrorDef
#include <crowplexus/hscript/ErrorDef.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_Expr
#include <crowplexus/hscript/Expr.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_ExprDef
#include <crowplexus/hscript/ExprDef.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_Interp
#include <crowplexus/hscript/Interp.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_InterpIterator
#include <crowplexus/hscript/InterpIterator.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_LocalVar
#include <crowplexus/hscript/LocalVar.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_ObjectDecl
#include <crowplexus/hscript/ObjectDecl.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_Printer
#include <crowplexus/hscript/Printer.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_SwitchCase
#include <crowplexus/hscript/SwitchCase.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_Tools
#include <crowplexus/hscript/Tools.h>
#endif
#ifndef INCLUDED_crowplexus_hscript__Interp_Stop
#include <crowplexus/hscript/_Interp/Stop.h>
#endif
#ifndef INCLUDED_crowplexus_iris_Iris
#include <crowplexus/iris/Iris.h>
#endif
#ifndef INCLUDED_crowplexus_iris_utils_UsingEntry
#include <crowplexus/iris/utils/UsingEntry.h>
#endif
#ifndef INCLUDED_haxe_Exception
#include <haxe/Exception.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_haxe_ValueException
#include <haxe/ValueException.h>
#endif
#ifndef INCLUDED_haxe_ds_BalancedTree
#include <haxe/ds/BalancedTree.h>
#endif
#ifndef INCLUDED_haxe_ds_EnumValueMap
#include <haxe/ds/EnumValueMap.h>
#endif
#ifndef INCLUDED_haxe_ds_IntMap
#include <haxe/ds/IntMap.h>
#endif
#ifndef INCLUDED_haxe_ds_ObjectMap
#include <haxe/ds/ObjectMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_fc3952b268c01112_52_new,"crowplexus.hscript.Interp","new",0x6c2fe4cb,"crowplexus.hscript.Interp.new","crowplexus/hscript/Interp.hx",52,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_89_resetVariables,"crowplexus.hscript.Interp","resetVariables",0xf60a845d,"crowplexus.hscript.Interp.resetVariables","crowplexus/hscript/Interp.hx",89,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_101_resetVariables,"crowplexus.hscript.Interp","resetVariables",0xf60a845d,"crowplexus.hscript.Interp.resetVariables","crowplexus/hscript/Interp.hx",101,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_110_posInfos,"crowplexus.hscript.Interp","posInfos",0x5c3989c6,"crowplexus.hscript.Interp.posInfos","crowplexus/hscript/Interp.hx",110,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_125_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",125,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_126_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",126,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_127_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",127,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_128_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",128,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_129_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",129,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_130_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",130,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_131_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",131,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_132_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",132,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_133_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",133,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_134_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",134,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_135_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",135,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_136_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",136,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_137_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",137,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_138_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",138,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_139_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",139,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_140_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",140,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_141_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",141,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_142_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",142,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_143_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",143,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_145_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",145,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_149_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",149,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_150_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",150,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_151_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",151,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_152_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",152,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_153_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",153,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_154_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",154,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_155_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",155,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_156_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",156,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_157_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",157,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_158_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",158,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_159_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",159,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_160_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",160,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_161_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",161,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_118_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",118,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_165_setVar,"crowplexus.hscript.Interp","setVar",0x5413acda,"crowplexus.hscript.Interp.setVar","crowplexus/hscript/Interp.hx",165,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_168_assign,"crowplexus.hscript.Interp","assign",0x30a886a4,"crowplexus.hscript.Interp.assign","crowplexus/hscript/Interp.hx",168,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_206_assignOp,"crowplexus.hscript.Interp","assignOp",0x10d2bce5,"crowplexus.hscript.Interp.assignOp","crowplexus/hscript/Interp.hx",206,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_204_assignOp,"crowplexus.hscript.Interp","assignOp",0x10d2bce5,"crowplexus.hscript.Interp.assignOp","crowplexus/hscript/Interp.hx",204,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_209_evalAssignOp,"crowplexus.hscript.Interp","evalAssignOp",0x82b65f21,"crowplexus.hscript.Interp.evalAssignOp","crowplexus/hscript/Interp.hx",209,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_248_increment,"crowplexus.hscript.Interp","increment",0xf99abcda,"crowplexus.hscript.Interp.increment","crowplexus/hscript/Interp.hx",248,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_258_increment,"crowplexus.hscript.Interp","increment",0xf99abcda,"crowplexus.hscript.Interp.increment","crowplexus/hscript/Interp.hx",258,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_315_execute,"crowplexus.hscript.Interp","execute",0xf5633020,"crowplexus.hscript.Interp.execute","crowplexus/hscript/Interp.hx",315,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_327_exprReturn,"crowplexus.hscript.Interp","exprReturn",0x67918aba,"crowplexus.hscript.Interp.exprReturn","crowplexus/hscript/Interp.hx",327,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_344_duplicate,"crowplexus.hscript.Interp","duplicate",0x68b2d836,"crowplexus.hscript.Interp.duplicate","crowplexus/hscript/Interp.hx",344,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_356_restore,"crowplexus.hscript.Interp","restore",0x94068d39,"crowplexus.hscript.Interp.restore","crowplexus/hscript/Interp.hx",356,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_362_error,"crowplexus.hscript.Interp","error",0x9d8410f3,"crowplexus.hscript.Interp.error","crowplexus/hscript/Interp.hx",362,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_371_warn,"crowplexus.hscript.Interp","warn",0x43a82b7b,"crowplexus.hscript.Interp.warn","crowplexus/hscript/Interp.hx",371,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_381_rethrow,"crowplexus.hscript.Interp","rethrow",0x1f80d67e,"crowplexus.hscript.Interp.rethrow","crowplexus/hscript/Interp.hx",381,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_385_resolve,"crowplexus.hscript.Interp","resolve",0x90b638d7,"crowplexus.hscript.Interp.resolve","crowplexus/hscript/Interp.hx",385,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_406_getOrImportClass,"crowplexus.hscript.Interp","getOrImportClass",0xaa88da6f,"crowplexus.hscript.Interp.getOrImportClass","crowplexus/hscript/Interp.hx",406,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_412_expr,"crowplexus.hscript.Interp","expr",0x37d3c66a,"crowplexus.hscript.Interp.expr","crowplexus/hscript/Interp.hx",412,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_540_expr,"crowplexus.hscript.Interp","expr",0x37d3c66a,"crowplexus.hscript.Interp.expr","crowplexus/hscript/Interp.hx",540,0x864063c3)
static const int _hx_array_data_c5fd2359_74[] = {
	(int)0,
};
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_728_expr,"crowplexus.hscript.Interp","expr",0x37d3c66a,"crowplexus.hscript.Interp.expr","crowplexus/hscript/Interp.hx",728,0x864063c3)
static const int _hx_array_data_c5fd2359_76[] = {
	(int)0,
};
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_768_doWhileLoop,"crowplexus.hscript.Interp","doWhileLoop",0xe98df915,"crowplexus.hscript.Interp.doWhileLoop","crowplexus/hscript/Interp.hx",768,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_786_whileLoop,"crowplexus.hscript.Interp","whileLoop",0xa933f960,"crowplexus.hscript.Interp.whileLoop","crowplexus/hscript/Interp.hx",786,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_804_makeIterator,"crowplexus.hscript.Interp","makeIterator",0x41946431,"crowplexus.hscript.Interp.makeIterator","crowplexus/hscript/Interp.hx",804,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_818_forLoop,"crowplexus.hscript.Interp","forLoop",0xf2bf77f8,"crowplexus.hscript.Interp.forLoop","crowplexus/hscript/Interp.hx",818,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_842_isMap,"crowplexus.hscript.Interp","isMap",0xebab79fd,"crowplexus.hscript.Interp.isMap","crowplexus/hscript/Interp.hx",842,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_846_getMapValue,"crowplexus.hscript.Interp","getMapValue",0x7de5a956,"crowplexus.hscript.Interp.getMapValue","crowplexus/hscript/Interp.hx",846,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_850_setMapValue,"crowplexus.hscript.Interp","setMapValue",0x8852b062,"crowplexus.hscript.Interp.setMapValue","crowplexus/hscript/Interp.hx",850,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_853_get,"crowplexus.hscript.Interp","get",0x6c2a9501,"crowplexus.hscript.Interp.get","crowplexus/hscript/Interp.hx",853,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_870_set,"crowplexus.hscript.Interp","set",0x6c33b00d,"crowplexus.hscript.Interp.set","crowplexus/hscript/Interp.hx",870,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_880_registerUsingLocal,"crowplexus.hscript.Interp","registerUsingLocal",0xf6e06dbf,"crowplexus.hscript.Interp.registerUsingLocal","crowplexus/hscript/Interp.hx",880,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_886_useUsing,"crowplexus.hscript.Interp","useUsing",0x73abdf32,"crowplexus.hscript.Interp.useUsing","crowplexus/hscript/Interp.hx",886,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_937_useUsing,"crowplexus.hscript.Interp","useUsing",0x73abdf32,"crowplexus.hscript.Interp.useUsing","crowplexus/hscript/Interp.hx",937,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_903_useUsing,"crowplexus.hscript.Interp","useUsing",0x73abdf32,"crowplexus.hscript.Interp.useUsing","crowplexus/hscript/Interp.hx",903,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_979_fcall,"crowplexus.hscript.Interp","fcall",0x26f3892f,"crowplexus.hscript.Interp.fcall","crowplexus/hscript/Interp.hx",979,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_989_call,"crowplexus.hscript.Interp","call",0x366fe1d3,"crowplexus.hscript.Interp.call","crowplexus/hscript/Interp.hx",989,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_992_cnew,"crowplexus.hscript.Interp","cnew",0x3679b912,"crowplexus.hscript.Interp.cnew","crowplexus/hscript/Interp.hx",992,0x864063c3)
namespace crowplexus{
namespace hscript{

void Interp_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_52_new)
HXLINE( 977)		this->usings = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(  76)		this->showPosOnLog = true;
HXLINE(  80)		this->locals =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE(  84)		this->declared = ::Array_obj< ::Dynamic>::__new();
HXLINE(  85)		this->resetVariables();
HXLINE(  86)		this->initOps();
            	}

Dynamic Interp_obj::__CreateEmpty() { return new Interp_obj; }

void *Interp_obj::_hx_vtable = 0;

Dynamic Interp_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Interp_obj > _hx_result = new Interp_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Interp_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x177bd5fb;
}

void Interp_obj::resetVariables(){
            	HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_89_resetVariables)
HXDLIN(  89)		 ::crowplexus::hscript::Interp _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE(  91)		this->variables =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE(  92)		this->imports =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE(  98)		this->variables->set(HX_("null",87,9e,0e,49),null());
HXLINE(  99)		this->variables->set(HX_("true",4e,a7,03,4d),true);
HXLINE( 100)		this->variables->set(HX_("false",a3,35,4f,fb),false);
HXLINE( 101)		{
            			HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::crowplexus::hscript::Interp,_gthis) HXARGC(1)
            			void _hx_run(::cpp::VirtualArray el){
            				HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_101_resetVariables)
HXLINE( 102)				 ::Dynamic inf = _gthis->posInfos();
HXLINE( 103)				 ::Dynamic v = el->shift();
HXLINE( 104)				if ((el->get_length() > 0)) {
HXLINE( 105)					inf->__SetField(HX_("customParams",d7,51,18,ed),el,::hx::paccDynamic);
            				}
HXLINE( 106)				 ::Dynamic value = ::haxe::Log_obj::trace;
HXDLIN( 106)				value(::Std_obj::string(v),inf);
            			}
            			HX_END_LOCAL_FUNC1((void))

HXLINE( 101)			::Dynamic this1 = this->variables;
HXDLIN( 101)			( ( ::haxe::ds::StringMap)(this1) )->set(HX_("trace",85,8e,1f,16),::Reflect_obj::makeVarArgs( ::Dynamic(new _hx_Closure_0(_gthis))));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(Interp_obj,resetVariables,(void))

 ::Dynamic Interp_obj::posInfos(){
            	HX_STACKFRAME(&_hx_pos_fc3952b268c01112_110_posInfos)
HXLINE( 112)		if (::hx::IsNotNull( this->curExpr )) {
HXLINE( 113)			return  ::Dynamic(::hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("fileName",e7,5a,43,62),this->curExpr->origin)
            				->setFixed(1,HX_("lineNumber",dd,81,22,76),this->curExpr->line));
            		}
HXLINE( 115)		return  ::Dynamic(::hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("fileName",e7,5a,43,62),HX_("hscript",73,8c,18,2c))
            			->setFixed(1,HX_("lineNumber",dd,81,22,76),0));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Interp_obj,posInfos,return )

void Interp_obj::initOps(){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		 ::Dynamic _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_125_initOps)
HXLINE( 125)			 ::Dynamic _hx_tmp = me->expr(e1);
HXDLIN( 125)			return (_hx_tmp + me->expr(e2));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_1, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		Float _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_126_initOps)
HXLINE( 126)			 ::Dynamic _hx_tmp = me->expr(e1);
HXDLIN( 126)			return (( (Float)(_hx_tmp) ) - ( (Float)(me->expr(e2)) ));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_2, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		Float _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_127_initOps)
HXLINE( 127)			 ::Dynamic _hx_tmp = me->expr(e1);
HXDLIN( 127)			return (( (Float)(_hx_tmp) ) * ( (Float)(me->expr(e2)) ));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_3, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		Float _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_128_initOps)
HXLINE( 128)			 ::Dynamic _hx_tmp = me->expr(e1);
HXDLIN( 128)			return (( (Float)(_hx_tmp) ) / ( (Float)(me->expr(e2)) ));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_4, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		Float _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_129_initOps)
HXLINE( 129)			 ::Dynamic _hx_tmp = me->expr(e1);
HXDLIN( 129)			return ::hx::Mod(_hx_tmp,me->expr(e2));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_5, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		int _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_130_initOps)
HXLINE( 130)			 ::Dynamic _hx_tmp = me->expr(e1);
HXDLIN( 130)			return (( (int)(_hx_tmp) ) & ( (int)(me->expr(e2)) ));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_6, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		int _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_131_initOps)
HXLINE( 131)			 ::Dynamic _hx_tmp = me->expr(e1);
HXDLIN( 131)			return (( (int)(_hx_tmp) ) | ( (int)(me->expr(e2)) ));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_7, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		int _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_132_initOps)
HXLINE( 132)			 ::Dynamic _hx_tmp = me->expr(e1);
HXDLIN( 132)			return (( (int)(_hx_tmp) ) ^ ( (int)(me->expr(e2)) ));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_8, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		int _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_133_initOps)
HXLINE( 133)			 ::Dynamic _hx_tmp = me->expr(e1);
HXDLIN( 133)			return (( (int)(_hx_tmp) ) << ( (int)(me->expr(e2)) ));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_9, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		int _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_134_initOps)
HXLINE( 134)			 ::Dynamic _hx_tmp = me->expr(e1);
HXDLIN( 134)			return (( (int)(_hx_tmp) ) >> ( (int)(me->expr(e2)) ));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_10, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		int _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_135_initOps)
HXLINE( 135)			 ::Dynamic _hx_tmp = me->expr(e1);
HXDLIN( 135)			return ::hx::UShr(( (int)(_hx_tmp) ),( (int)(me->expr(e2)) ));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_11, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		bool _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_136_initOps)
HXLINE( 136)			 ::Dynamic _hx_tmp = me->expr(e1);
HXDLIN( 136)			return ::hx::IsEq( _hx_tmp,me->expr(e2) );
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_12, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		bool _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_137_initOps)
HXLINE( 137)			 ::Dynamic _hx_tmp = me->expr(e1);
HXDLIN( 137)			return ::hx::IsNotEq( _hx_tmp,me->expr(e2) );
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_13, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		bool _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_138_initOps)
HXLINE( 138)			 ::Dynamic _hx_tmp = me->expr(e1);
HXDLIN( 138)			return ::hx::IsGreaterEq( _hx_tmp,me->expr(e2) );
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_14, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		bool _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_139_initOps)
HXLINE( 139)			 ::Dynamic _hx_tmp = me->expr(e1);
HXDLIN( 139)			return ::hx::IsLessEq( _hx_tmp,me->expr(e2) );
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_15, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		bool _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_140_initOps)
HXLINE( 140)			 ::Dynamic _hx_tmp = me->expr(e1);
HXDLIN( 140)			return ::hx::IsGreater( _hx_tmp,me->expr(e2) );
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_16, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		bool _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_141_initOps)
HXLINE( 141)			 ::Dynamic _hx_tmp = me->expr(e1);
HXDLIN( 141)			return ::hx::IsLess( _hx_tmp,me->expr(e2) );
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_17, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		bool _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_142_initOps)
HXLINE( 142)			if (::hx::IsNotEq( me->expr(e1),true )) {
HXLINE( 142)				return ::hx::IsEq( me->expr(e2),true );
            			}
            			else {
HXLINE( 142)				return true;
            			}
HXDLIN( 142)			return false;
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_18, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		bool _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_143_initOps)
HXLINE( 143)			if (::hx::IsEq( me->expr(e1),true )) {
HXLINE( 143)				return ::hx::IsEq( me->expr(e2),true );
            			}
            			else {
HXLINE( 143)				return false;
            			}
HXDLIN( 143)			return false;
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_19, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		 ::Dynamic _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_145_initOps)
HXLINE( 146)			 ::Dynamic expr1 = me->expr(e1);
HXLINE( 147)			if (::hx::IsNull( expr1 )) {
HXLINE( 147)				return me->expr(e2);
            			}
            			else {
HXLINE( 147)				return expr1;
            			}
HXDLIN( 147)			return null();
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_20, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		 ::crowplexus::hscript::InterpIterator _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_149_initOps)
HXLINE( 149)			return  ::crowplexus::hscript::InterpIterator_obj::__alloc( HX_CTX ,me,e1,e2);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_21) HXARGC(2)
            		 ::Dynamic _hx_run( ::Dynamic v1, ::Dynamic v2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_150_initOps)
HXLINE( 150)			return (v1 + v2);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_22) HXARGC(2)
            		Float _hx_run(Float v1,Float v2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_151_initOps)
HXLINE( 151)			return (v1 - v2);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_23) HXARGC(2)
            		Float _hx_run(Float v1,Float v2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_152_initOps)
HXLINE( 152)			return (v1 * v2);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_24) HXARGC(2)
            		Float _hx_run(Float v1,Float v2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_153_initOps)
HXLINE( 153)			return (v1 / v2);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_25) HXARGC(2)
            		Float _hx_run(Float v1,Float v2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_154_initOps)
HXLINE( 154)			return ::hx::Mod(v1,v2);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_26) HXARGC(2)
            		int _hx_run(int v1,int v2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_155_initOps)
HXLINE( 155)			return (v1 & v2);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_27) HXARGC(2)
            		int _hx_run(int v1,int v2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_156_initOps)
HXLINE( 156)			return (v1 | v2);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_28) HXARGC(2)
            		int _hx_run(int v1,int v2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_157_initOps)
HXLINE( 157)			return (v1 ^ v2);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_29) HXARGC(2)
            		int _hx_run(int v1,int v2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_158_initOps)
HXLINE( 158)			return (v1 << v2);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_30) HXARGC(2)
            		int _hx_run(int v1,int v2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_159_initOps)
HXLINE( 159)			return (v1 >> v2);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_31) HXARGC(2)
            		int _hx_run(int v1,int v2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_160_initOps)
HXLINE( 160)			return ::hx::UShr(v1,v2);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_32) HXARGC(2)
            		 ::Dynamic _hx_run( ::Dynamic v1, ::Dynamic v2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_161_initOps)
HXLINE( 161)			if (::hx::IsNull( v1 )) {
HXLINE( 161)				return v2;
            			}
            			else {
HXLINE( 161)				return v1;
            			}
HXDLIN( 161)			return null();
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_118_initOps)
HXLINE( 119)		 ::crowplexus::hscript::Interp me = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 121)		this->binops =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE( 125)		this->binops->set(HX_("+",2b,00,00,00), ::Dynamic(new _hx_Closure_0(me)));
HXLINE( 126)		this->binops->set(HX_("-",2d,00,00,00), ::Dynamic(new _hx_Closure_1(me)));
HXLINE( 127)		this->binops->set(HX_("*",2a,00,00,00), ::Dynamic(new _hx_Closure_2(me)));
HXLINE( 128)		this->binops->set(HX_("/",2f,00,00,00), ::Dynamic(new _hx_Closure_3(me)));
HXLINE( 129)		this->binops->set(HX_("%",25,00,00,00), ::Dynamic(new _hx_Closure_4(me)));
HXLINE( 130)		this->binops->set(HX_("&",26,00,00,00), ::Dynamic(new _hx_Closure_5(me)));
HXLINE( 131)		this->binops->set(HX_("|",7c,00,00,00), ::Dynamic(new _hx_Closure_6(me)));
HXLINE( 132)		this->binops->set(HX_("^",5e,00,00,00), ::Dynamic(new _hx_Closure_7(me)));
HXLINE( 133)		this->binops->set(HX_("<<",80,34,00,00), ::Dynamic(new _hx_Closure_8(me)));
HXLINE( 134)		this->binops->set(HX_(">>",40,36,00,00), ::Dynamic(new _hx_Closure_9(me)));
HXLINE( 135)		this->binops->set(HX_(">>>",fe,41,2f,00), ::Dynamic(new _hx_Closure_10(me)));
HXLINE( 136)		this->binops->set(HX_("==",60,35,00,00), ::Dynamic(new _hx_Closure_11(me)));
HXLINE( 137)		this->binops->set(HX_("!=",fc,1c,00,00), ::Dynamic(new _hx_Closure_12(me)));
HXLINE( 138)		this->binops->set(HX_(">=",3f,36,00,00), ::Dynamic(new _hx_Closure_13(me)));
HXLINE( 139)		this->binops->set(HX_("<=",81,34,00,00), ::Dynamic(new _hx_Closure_14(me)));
HXLINE( 140)		this->binops->set(HX_(">",3e,00,00,00), ::Dynamic(new _hx_Closure_15(me)));
HXLINE( 141)		this->binops->set(HX_("<",3c,00,00,00), ::Dynamic(new _hx_Closure_16(me)));
HXLINE( 142)		this->binops->set(HX_("||",80,6c,00,00), ::Dynamic(new _hx_Closure_17(me)));
HXLINE( 143)		this->binops->set(HX_("&&",40,21,00,00), ::Dynamic(new _hx_Closure_18(me)));
HXLINE( 144)		this->binops->set(HX_("=",3d,00,00,00),this->assign_dyn());
HXLINE( 145)		this->binops->set(HX_("??",20,37,00,00), ::Dynamic(new _hx_Closure_19(me)));
HXLINE( 149)		this->binops->set(HX_("...",ee,0f,23,00), ::Dynamic(new _hx_Closure_20(me)));
HXLINE( 150)		this->assignOp(HX_("+=",b2,25,00,00), ::Dynamic(new _hx_Closure_21()));
HXLINE( 151)		this->assignOp(HX_("-=",70,27,00,00), ::Dynamic(new _hx_Closure_22()));
HXLINE( 152)		this->assignOp(HX_("*=",d3,24,00,00), ::Dynamic(new _hx_Closure_23()));
HXLINE( 153)		this->assignOp(HX_("/=",2e,29,00,00), ::Dynamic(new _hx_Closure_24()));
HXLINE( 154)		this->assignOp(HX_("%=",78,20,00,00), ::Dynamic(new _hx_Closure_25()));
HXLINE( 155)		this->assignOp(HX_("&=",57,21,00,00), ::Dynamic(new _hx_Closure_26()));
HXLINE( 156)		this->assignOp(HX_("|=",41,6c,00,00), ::Dynamic(new _hx_Closure_27()));
HXLINE( 157)		this->assignOp(HX_("^=",1f,52,00,00), ::Dynamic(new _hx_Closure_28()));
HXLINE( 158)		this->assignOp(HX_("<<=",bd,bb,2d,00), ::Dynamic(new _hx_Closure_29()));
HXLINE( 159)		this->assignOp(HX_(">>=",fd,41,2f,00), ::Dynamic(new _hx_Closure_30()));
HXLINE( 160)		this->assignOp(HX_(">>>=",7f,7c,2a,29), ::Dynamic(new _hx_Closure_31()));
HXLINE( 161)		this->assignOp((HX_("??",20,37,00,00) + HX_("=",3d,00,00,00)), ::Dynamic(new _hx_Closure_32()));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Interp_obj,initOps,(void))

void Interp_obj::setVar(::String name, ::Dynamic v){
            	HX_STACKFRAME(&_hx_pos_fc3952b268c01112_165_setVar)
HXDLIN( 165)		this->variables->set(name,v);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Interp_obj,setVar,(void))

 ::Dynamic Interp_obj::assign( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            	HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_168_assign)
HXLINE( 169)		 ::Dynamic v = this->expr(e2);
HXLINE( 170)		{
HXLINE( 170)			 ::crowplexus::hscript::ExprDef _g = e1->e;
HXDLIN( 170)			switch((int)(_g->_hx_getIndex())){
            				case (int)2: {
HXLINE( 171)					::String id = _g->_hx_getString(0);
HXDLIN( 171)					{
HXLINE( 172)						 ::crowplexus::hscript::LocalVar l = ( ( ::crowplexus::hscript::LocalVar)(this->locals->get(id)) );
HXLINE( 173)						if (::hx::IsNull( l )) {
HXLINE( 174)							this->variables->set(id,v);
            						}
            						else {
HXLINE( 176)							if ((l->_hx_const != true)) {
HXLINE( 177)								l->r = v;
            							}
            							else {
HXLINE( 179)								 ::crowplexus::hscript::Error e =  ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::ECustom((HX_("Cannot reassign final, for constant expression -> ",c3,4d,da,1b) + id)),this->curExpr->pmin,this->curExpr->pmax,this->curExpr->origin,this->curExpr->line);
HXDLIN( 179)								 ::Dynamic _hx_tmp = ::crowplexus::iris::Iris_obj::warn;
HXDLIN( 179)								::String _hx_tmp1 = ::crowplexus::hscript::Printer_obj::errorToString(e,this->showPosOnLog);
HXDLIN( 179)								_hx_tmp(_hx_tmp1,this->posInfos());
            							}
            						}
            					}
            				}
            				break;
            				case (int)7: {
HXLINE( 181)					 ::crowplexus::hscript::Expr e3 = _g->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 181)					::String f = _g->_hx_getString(1);
HXDLIN( 181)					bool s = _g->_hx_getBool(2);
HXDLIN( 181)					{
HXLINE( 182)						 ::Dynamic e4 = this->expr(e3);
HXLINE( 183)						if (::hx::IsNull( e4 )) {
HXLINE( 184)							if (!(s)) {
HXLINE( 185)								 ::crowplexus::hscript::Error e5 =  ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::EInvalidAccess(f),this->curExpr->pmin,this->curExpr->pmax,this->curExpr->origin,this->curExpr->line);
HXDLIN( 185)								HX_STACK_DO_THROW(e5);
            							}
            							else {
HXLINE( 187)								return null();
            							}
            						}
HXLINE( 188)						v = this->set(e4,f,v);
            					}
            				}
            				break;
            				case (int)18: {
HXLINE( 189)					 ::crowplexus::hscript::Expr e6 = _g->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 189)					 ::crowplexus::hscript::Expr index = _g->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 189)					{
HXLINE( 190)						 ::Dynamic arr = this->expr(e6);
HXLINE( 191)						 ::Dynamic index1 = this->expr(index);
HXLINE( 192)						if (::Std_obj::isOfType(arr,::hx::ClassOf< ::haxe::IMap >())) {
HXLINE( 193)							::haxe::IMap_obj::set( ::hx::interface_check(arr,0x09c2bd39),index1,v);
            						}
            						else {
HXLINE( 195)							arr->__SetItem(( (int)(index1) ),v);
            						}
            					}
            				}
            				break;
            				default:{
HXLINE( 199)					 ::crowplexus::hscript::Error e7 =  ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::EInvalidOp(HX_("=",3d,00,00,00)),this->curExpr->pmin,this->curExpr->pmax,this->curExpr->origin,this->curExpr->line);
HXDLIN( 199)					HX_STACK_DO_THROW(e7);
            				}
            			}
            		}
HXLINE( 201)		return v;
            	}


HX_DEFINE_DYNAMIC_FUNC2(Interp_obj,assign,return )

void Interp_obj::assignOp(::String op, ::Dynamic fop){
            		HX_BEGIN_LOCAL_FUNC_S3(::hx::LocalFunc,_hx_Closure_0,::String,op, ::crowplexus::hscript::Interp,me, ::Dynamic,fop) HXARGC(2)
            		 ::Dynamic _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_STACKFRAME(&_hx_pos_fc3952b268c01112_206_assignOp)
HXLINE( 206)			return me->evalAssignOp(op,fop,e1,e2);
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACKFRAME(&_hx_pos_fc3952b268c01112_204_assignOp)
HXLINE( 205)		 ::crowplexus::hscript::Interp me = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 206)		this->binops->set(op, ::Dynamic(new _hx_Closure_0(op,me,fop)));
            	}


HX_DEFINE_DYNAMIC_FUNC2(Interp_obj,assignOp,(void))

 ::Dynamic Interp_obj::evalAssignOp(::String op, ::Dynamic fop, ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            	HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_209_evalAssignOp)
HXLINE( 210)		 ::Dynamic v;
HXLINE( 211)		{
HXLINE( 211)			 ::crowplexus::hscript::ExprDef _g = e1->e;
HXDLIN( 211)			switch((int)(_g->_hx_getIndex())){
            				case (int)2: {
HXLINE( 212)					::String id = _g->_hx_getString(0);
HXDLIN( 212)					{
HXLINE( 213)						 ::crowplexus::hscript::LocalVar l = ( ( ::crowplexus::hscript::LocalVar)(this->locals->get(id)) );
HXLINE( 214)						 ::Dynamic v1 = this->expr(e1);
HXDLIN( 214)						v = fop(v1,this->expr(e2));
HXLINE( 215)						if (::hx::IsNull( l )) {
HXLINE( 216)							this->variables->set(id,v);
            						}
            						else {
HXLINE( 218)							if ((l->_hx_const != true)) {
HXLINE( 219)								l->r = v;
            							}
            							else {
HXLINE( 221)								 ::crowplexus::hscript::Error e =  ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::ECustom((HX_("Cannot reassign final, for constant expression -> ",c3,4d,da,1b) + id)),this->curExpr->pmin,this->curExpr->pmax,this->curExpr->origin,this->curExpr->line);
HXDLIN( 221)								 ::Dynamic _hx_tmp = ::crowplexus::iris::Iris_obj::warn;
HXDLIN( 221)								::String _hx_tmp1 = ::crowplexus::hscript::Printer_obj::errorToString(e,this->showPosOnLog);
HXDLIN( 221)								_hx_tmp(_hx_tmp1,this->posInfos());
            							}
            						}
            					}
            				}
            				break;
            				case (int)7: {
HXLINE( 223)					 ::crowplexus::hscript::Expr e3 = _g->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 223)					::String f = _g->_hx_getString(1);
HXDLIN( 223)					bool s = _g->_hx_getBool(2);
HXDLIN( 223)					{
HXLINE( 224)						 ::Dynamic obj = this->expr(e3);
HXLINE( 225)						if (::hx::IsNull( obj )) {
HXLINE( 226)							if (!(s)) {
HXLINE( 227)								 ::crowplexus::hscript::Error e4 =  ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::EInvalidAccess(f),this->curExpr->pmin,this->curExpr->pmax,this->curExpr->origin,this->curExpr->line);
HXDLIN( 227)								HX_STACK_DO_THROW(e4);
            							}
            							else {
HXLINE( 229)								return null();
            							}
            						}
HXLINE( 230)						 ::Dynamic v2 = this->get(obj,f);
HXDLIN( 230)						v = fop(v2,this->expr(e2));
HXLINE( 231)						v = this->set(obj,f,v);
            					}
            				}
            				break;
            				case (int)18: {
HXLINE( 232)					 ::crowplexus::hscript::Expr e5 = _g->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 232)					 ::crowplexus::hscript::Expr index = _g->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 232)					{
HXLINE( 233)						 ::Dynamic arr = this->expr(e5);
HXLINE( 234)						 ::Dynamic index1 = this->expr(index);
HXLINE( 235)						if (::Std_obj::isOfType(arr,::hx::ClassOf< ::haxe::IMap >())) {
HXLINE( 236)							 ::Dynamic v3 = ::haxe::IMap_obj::get( ::hx::interface_check(arr,0x09c2bd39),index1);
HXDLIN( 236)							v = fop(v3,this->expr(e2));
HXLINE( 237)							::haxe::IMap_obj::set( ::hx::interface_check(arr,0x09c2bd39),index1,v);
            						}
            						else {
HXLINE( 239)							 ::Dynamic arr1 = arr->__GetItem(( (int)(index1) ));
HXDLIN( 239)							v = fop(arr1,this->expr(e2));
HXLINE( 240)							arr->__SetItem(( (int)(index1) ),v);
            						}
            					}
            				}
            				break;
            				default:{
HXLINE( 243)					 ::crowplexus::hscript::Error e6 =  ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::EInvalidOp(op),this->curExpr->pmin,this->curExpr->pmax,this->curExpr->origin,this->curExpr->line);
HXDLIN( 243)					HX_STACK_DO_THROW(e6);
            				}
            			}
            		}
HXLINE( 245)		return v;
            	}


HX_DEFINE_DYNAMIC_FUNC4(Interp_obj,evalAssignOp,return )

 ::Dynamic Interp_obj::increment( ::crowplexus::hscript::Expr e,bool prefix,int delta){
            	HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_248_increment)
HXDLIN( 248)		 ::crowplexus::hscript::Interp _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 250)		this->curExpr = e;
HXLINE( 251)		 ::crowplexus::hscript::ExprDef e1 = e->e;
HXLINE( 253)		switch((int)(e1->_hx_getIndex())){
            			case (int)2: {
            				HX_BEGIN_LOCAL_FUNC_S3(::hx::LocalFunc,_hx_Closure_0,::String,id, ::crowplexus::hscript::Interp,_gthis, ::crowplexus::hscript::LocalVar,l) HXARGC(1)
            				void _hx_run( ::Dynamic a){
            					HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_258_increment)
HXLINE( 258)					if (::hx::IsNull( l )) {
HXLINE( 259)						_gthis->variables->set(id,a);
            					}
            					else {
HXLINE( 261)						if ((l->_hx_const != true)) {
HXLINE( 262)							l->r = a;
            						}
            						else {
HXLINE( 264)							 ::crowplexus::hscript::Error e =  ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::ECustom((HX_("Cannot reassign final, for constant expression -> ",c3,4d,da,1b) + id)),_gthis->curExpr->pmin,_gthis->curExpr->pmax,_gthis->curExpr->origin,_gthis->curExpr->line);
HXDLIN( 264)							HX_STACK_DO_THROW(e);
            						}
            					}
            				}
            				HX_END_LOCAL_FUNC1((void))

HXLINE( 254)				::String id = e1->_hx_getString(0);
HXLINE( 255)				 ::crowplexus::hscript::LocalVar l = ( ( ::crowplexus::hscript::LocalVar)(this->locals->get(id)) );
HXLINE( 256)				 ::Dynamic v;
HXDLIN( 256)				if (::hx::IsNull( l )) {
HXLINE( 256)					v = this->resolve(id);
            				}
            				else {
HXLINE( 256)					v = l->r;
            				}
HXLINE( 257)				 ::Dynamic setTo =  ::Dynamic(new _hx_Closure_0(id,_gthis,l));
HXLINE( 267)				if (::hx::IsNull( l )) {
HXLINE( 268)					if (prefix) {
HXLINE( 269)						v = (v + delta);
HXLINE( 270)						setTo(v);
            					}
            					else {
HXLINE( 272)						setTo((v + delta));
            					}
            				}
HXLINE( 274)				return v;
            			}
            			break;
            			case (int)7: {
HXLINE( 275)				 ::crowplexus::hscript::Expr e2 = e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 275)				::String f = e1->_hx_getString(1);
HXDLIN( 275)				bool s = e1->_hx_getBool(2);
HXLINE( 276)				 ::Dynamic obj = this->expr(e2);
HXLINE( 277)				if (::hx::IsNull( obj )) {
HXLINE( 278)					if (!(s)) {
HXLINE( 279)						 ::crowplexus::hscript::Error e3 =  ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::EInvalidAccess(f),this->curExpr->pmin,this->curExpr->pmax,this->curExpr->origin,this->curExpr->line);
HXDLIN( 279)						HX_STACK_DO_THROW(e3);
            					}
            					else {
HXLINE( 281)						return null();
            					}
            				}
HXLINE( 282)				 ::Dynamic v1 = this->get(obj,f);
HXLINE( 283)				if (prefix) {
HXLINE( 284)					v1 = (v1 + delta);
HXLINE( 285)					this->set(obj,f,v1);
            				}
            				else {
HXLINE( 287)					this->set(obj,f,(v1 + delta));
            				}
HXLINE( 288)				return v1;
            			}
            			break;
            			case (int)18: {
HXLINE( 289)				 ::crowplexus::hscript::Expr e4 = e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 289)				 ::crowplexus::hscript::Expr index = e1->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >();
HXLINE( 290)				 ::Dynamic arr = this->expr(e4);
HXLINE( 291)				 ::Dynamic index1 = this->expr(index);
HXLINE( 292)				if (::Std_obj::isOfType(arr,::hx::ClassOf< ::haxe::IMap >())) {
HXLINE( 293)					int v2 = ( (int)(::haxe::IMap_obj::get( ::hx::interface_check(arr,0x09c2bd39),index1)) );
HXLINE( 294)					if (prefix) {
HXLINE( 295)						v2 = (v2 + delta);
HXLINE( 296)						::haxe::IMap_obj::set( ::hx::interface_check(arr,0x09c2bd39),index1,v2);
            					}
            					else {
HXLINE( 298)						::haxe::IMap_obj::set( ::hx::interface_check(arr,0x09c2bd39),index1,(v2 + delta));
            					}
HXLINE( 300)					return v2;
            				}
            				else {
HXLINE( 302)					int v3 = ( (int)(arr->__GetItem(( (int)(index1) ))) );
HXLINE( 303)					if (prefix) {
HXLINE( 304)						v3 = (v3 + delta);
HXLINE( 305)						arr->__SetItem(( (int)(index1) ),v3);
            					}
            					else {
HXLINE( 307)						arr->__SetItem(( (int)(index1) ),(v3 + delta));
            					}
HXLINE( 308)					return v3;
            				}
            			}
            			break;
            			default:{
HXLINE( 311)				::String e5;
HXDLIN( 311)				if ((delta > 0)) {
HXLINE( 311)					e5 = HX_("++",a0,25,00,00);
            				}
            				else {
HXLINE( 311)					e5 = HX_("--",60,27,00,00);
            				}
HXDLIN( 311)				 ::crowplexus::hscript::Error e6 =  ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::EInvalidOp(e5),this->curExpr->pmin,this->curExpr->pmax,this->curExpr->origin,this->curExpr->line);
HXDLIN( 311)				HX_STACK_DO_THROW(e6);
            			}
            		}
HXLINE( 253)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC3(Interp_obj,increment,return )

 ::Dynamic Interp_obj::execute( ::crowplexus::hscript::Expr expr){
            	HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_315_execute)
HXLINE( 316)		this->depth = 0;
HXLINE( 318)		this->locals =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE( 322)		this->declared = ::Array_obj< ::Dynamic>::__new();
HXLINE( 323)		return this->exprReturn(expr);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interp_obj,execute,return )

 ::Dynamic Interp_obj::exprReturn( ::crowplexus::hscript::Expr e){
            	HX_STACKFRAME(&_hx_pos_fc3952b268c01112_327_exprReturn)
HXDLIN( 327)		try {
            			HX_STACK_CATCHABLE( ::crowplexus::hscript::_Interp::Stop, 0);
            			HX_STACK_CATCHABLE( ::haxe::ValueException, 1);
HXLINE( 328)			return this->expr(e);
            		} catch( ::Dynamic _hx_e) {
            			if (_hx_e.IsClass<  ::crowplexus::hscript::_Interp::Stop >() ){
            				HX_STACK_BEGIN_CATCH
            				 ::crowplexus::hscript::_Interp::Stop e11 = _hx_e;
HXLINE( 330)				switch((int)(e11->_hx_getIndex())){
            					case (int)0: {
HXLINE( 332)						HX_STACK_DO_THROW(HX_("Invalid break",b6,ee,24,9d));
            					}
            					break;
            					case (int)1: {
HXLINE( 334)						HX_STACK_DO_THROW(HX_("Invalid continue",d0,6a,b7,3f));
            					}
            					break;
            					case (int)2: {
HXLINE( 336)						 ::Dynamic v1 = this->returnValue;
HXLINE( 337)						this->returnValue = null();
HXLINE( 338)						return v1;
            					}
            					break;
            				}
            			}
            			else if (_hx_e.IsClass<  ::haxe::ValueException >() ){
            				HX_STACK_BEGIN_CATCH
            				 ::haxe::ValueException _g = _hx_e;
HXLINE( 329)				{
HXLINE( 329)					null();
            				}
HXLINE( 327)				if (::Std_obj::isOfType(_g->value,::hx::ClassOf< ::crowplexus::hscript::_Interp::Stop >())) {
HXLINE( 329)					 ::crowplexus::hscript::_Interp::Stop e11 = _g->value;
HXLINE( 330)					switch((int)(e11->_hx_getIndex())){
            						case (int)0: {
HXLINE( 332)							HX_STACK_DO_THROW(HX_("Invalid break",b6,ee,24,9d));
            						}
            						break;
            						case (int)1: {
HXLINE( 334)							HX_STACK_DO_THROW(HX_("Invalid continue",d0,6a,b7,3f));
            						}
            						break;
            						case (int)2: {
HXLINE( 336)							 ::Dynamic v1 = this->returnValue;
HXLINE( 337)							this->returnValue = null();
HXLINE( 338)							return v1;
            						}
            						break;
            					}
            				}
            				else {
HXDLIN( 327)					HX_STACK_DO_THROW(_g);
            				}
            			}
            			else {
            				HX_STACK_DO_THROW(_hx_e);
            			}
            		}
HXDLIN( 327)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interp_obj,exprReturn,return )

 ::haxe::ds::StringMap Interp_obj::duplicate( ::haxe::ds::StringMap h){
            	HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_344_duplicate)
HXLINE( 346)		 ::haxe::ds::StringMap h2 =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE( 350)		{
HXLINE( 350)			 ::Dynamic k = h->keys();
HXDLIN( 350)			while(( (bool)(k->__Field(HX_("hasNext",6d,a5,46,18),::hx::paccDynamic)()) )){
HXLINE( 350)				::String k1 = ( (::String)(k->__Field(HX_("next",f3,84,02,49),::hx::paccDynamic)()) );
HXLINE( 351)				h2->set(k1,h->get(k1));
            			}
            		}
HXLINE( 352)		return h2;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interp_obj,duplicate,return )

void Interp_obj::restore(int old){
            	HX_STACKFRAME(&_hx_pos_fc3952b268c01112_356_restore)
HXDLIN( 356)		while((this->declared->length > old)){
HXLINE( 357)			 ::crowplexus::hscript::DeclaredVar d = this->declared->pop().StaticCast<  ::crowplexus::hscript::DeclaredVar >();
HXLINE( 358)			this->locals->set(d->n,d->old);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interp_obj,restore,(void))

 ::Dynamic Interp_obj::error( ::crowplexus::hscript::ErrorDef e,::hx::Null< bool >  __o_rethrow){
            		bool rethrow = __o_rethrow.Default(false);
            	HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_362_error)
HXLINE( 363)		 ::crowplexus::hscript::Error e1 =  ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,e,this->curExpr->pmin,this->curExpr->pmax,this->curExpr->origin,this->curExpr->line);
HXLINE( 364)		if (rethrow) {
HXLINE( 365)			HX_STACK_DO_THROW(e1);
            		}
            		else {
HXLINE( 367)			HX_STACK_DO_THROW(e1);
            		}
HXLINE( 364)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC2(Interp_obj,error,return )

 ::Dynamic Interp_obj::warn( ::crowplexus::hscript::ErrorDef e){
            	HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_371_warn)
HXLINE( 372)		 ::crowplexus::hscript::Error e1 =  ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,e,this->curExpr->pmin,this->curExpr->pmax,this->curExpr->origin,this->curExpr->line);
HXLINE( 373)		 ::Dynamic _hx_tmp = ::crowplexus::iris::Iris_obj::warn;
HXDLIN( 373)		::String _hx_tmp1 = ::crowplexus::hscript::Printer_obj::errorToString(e1,this->showPosOnLog);
HXDLIN( 373)		_hx_tmp(_hx_tmp1,this->posInfos());
HXLINE( 374)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interp_obj,warn,return )

void Interp_obj::rethrow( ::Dynamic e){
            	HX_STACKFRAME(&_hx_pos_fc3952b268c01112_381_rethrow)
HXDLIN( 381)		HX_STACK_DO_THROW(e);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interp_obj,rethrow,(void))

 ::Dynamic Interp_obj::resolve(::String id){
            	HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_385_resolve)
HXLINE( 386)		if (this->locals->exists(id)) {
HXLINE( 387)			 ::crowplexus::hscript::LocalVar l = ( ( ::crowplexus::hscript::LocalVar)(this->locals->get(id)) );
HXLINE( 388)			return l->r;
            		}
HXLINE( 391)		if (this->variables->exists(id)) {
HXLINE( 392)			 ::Dynamic v = this->variables->get(id);
HXLINE( 393)			return v;
            		}
HXLINE( 396)		if (this->imports->exists(id)) {
HXLINE( 397)			 ::Dynamic v1 = this->imports->get(id);
HXLINE( 398)			return v1;
            		}
HXLINE( 401)		 ::crowplexus::hscript::Error e =  ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::EUnknownVariable(id),this->curExpr->pmin,this->curExpr->pmax,this->curExpr->origin,this->curExpr->line);
HXDLIN( 401)		HX_STACK_DO_THROW(e);
HXDLIN( 401)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interp_obj,resolve,return )

 ::Dynamic Interp_obj::getOrImportClass(::String name){
            	HX_STACKFRAME(&_hx_pos_fc3952b268c01112_406_getOrImportClass)
HXLINE( 407)		if (::crowplexus::iris::Iris_obj::proxyImports->exists(name)) {
HXLINE( 408)			return ::crowplexus::iris::Iris_obj::proxyImports->get(name);
            		}
HXLINE( 409)		return ::crowplexus::hscript::Tools_obj::getClass(name);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interp_obj,getOrImportClass,return )

 ::Dynamic Interp_obj::expr( ::crowplexus::hscript::Expr e){
            	HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_412_expr)
HXDLIN( 412)		 ::crowplexus::hscript::Interp _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 414)		this->curExpr = e;
HXLINE( 415)		 ::crowplexus::hscript::ExprDef e1 = e->e;
HXLINE( 417)		switch((int)(e1->_hx_getIndex())){
            			case (int)0: {
HXLINE( 418)				bool _g = e1->_hx_getBool(0);
            			}
            			break;
            			case (int)1: {
HXLINE( 419)				 ::crowplexus::hscript::Const c = e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Const >();
HXLINE( 420)				switch((int)(c->_hx_getIndex())){
            					case (int)0: {
HXLINE( 421)						int v = c->_hx_getInt(0);
HXDLIN( 421)						return v;
            					}
            					break;
            					case (int)1: {
HXLINE( 422)						Float f = c->_hx_getFloat(0);
HXDLIN( 422)						return f;
            					}
            					break;
            					case (int)2: {
HXLINE( 423)						::String s = c->_hx_getString(0);
HXDLIN( 423)						return s;
            					}
            					break;
            				}
            			}
            			break;
            			case (int)2: {
HXLINE( 428)				::String id = e1->_hx_getString(0);
HXLINE( 429)				return this->resolve(id);
            			}
            			break;
            			case (int)3: {
HXLINE( 508)				::String v1 = e1->_hx_getString(0);
HXDLIN( 508)				::String as = e1->_hx_getString(1);
HXLINE( 509)				::String aliasStr;
HXDLIN( 509)				if (::hx::IsNotNull( as )) {
HXLINE( 509)					aliasStr = (HX_(" named ",67,0a,28,50) + as);
            				}
            				else {
HXLINE( 509)					aliasStr = HX_("",00,00,00,00);
            				}
HXLINE( 510)				if (::crowplexus::iris::Iris_obj::blocklistImports->contains(v1)) {
HXLINE( 511)					 ::crowplexus::hscript::Error e2 =  ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::ECustom(((HX_("You cannot add a blacklisted import, for class ",f6,ff,f5,d7) + v1) + aliasStr)),this->curExpr->pmin,this->curExpr->pmax,this->curExpr->origin,this->curExpr->line);
HXDLIN( 511)					HX_STACK_DO_THROW(e2);
            				}
HXLINE( 515)				::Array< ::String > arr = v1.split(HX_(".",2e,00,00,00));
HXDLIN( 515)				::String n = arr->__get((arr->length - 1));
HXLINE( 516)				if (this->imports->exists(n)) {
HXLINE( 517)					return this->imports->get(n);
            				}
HXLINE( 519)				 ::Dynamic c1 = this->getOrImportClass(v1);
HXLINE( 520)				if (::hx::IsNull( c1 )) {
HXLINE( 521)					 ::crowplexus::hscript::Error e3 =  ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::ECustom(((((HX_("Import",85,15,17,3d) + aliasStr) + HX_(" of class ",b1,8c,d4,81)) + v1) + HX_(" could not be added",ef,5f,82,02))),this->curExpr->pmin,this->curExpr->pmax,this->curExpr->origin,this->curExpr->line);
HXDLIN( 521)					 ::Dynamic _hx_tmp = ::crowplexus::iris::Iris_obj::warn;
HXDLIN( 521)					::String _hx_tmp1 = ::crowplexus::hscript::Printer_obj::errorToString(e3,this->showPosOnLog);
HXDLIN( 521)					_hx_tmp(_hx_tmp1,this->posInfos());
HXDLIN( 521)					return null();
            				}
            				else {
HXLINE( 523)					this->imports->set(n,c1);
HXLINE( 524)					if (::hx::IsNotNull( as )) {
HXLINE( 525)						this->imports->set(as,c1);
            					}
            				}
HXLINE( 529)				return null();
            			}
            			break;
            			case (int)4: {
HXLINE( 430)				 ::crowplexus::hscript::CType _g1 = e1->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::CType >();
HXDLIN( 430)				::String n1 = e1->_hx_getString(0);
HXDLIN( 430)				 ::crowplexus::hscript::Expr v2 = e1->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 430)				 ::Dynamic isConst = e1->_hx_getObject(3);
HXLINE( 431)				::Array< ::Dynamic> _hx_tmp2 = this->declared;
HXDLIN( 431)				_hx_tmp2->push( ::crowplexus::hscript::DeclaredVar_obj::__alloc( HX_CTX ,n1,( ( ::crowplexus::hscript::LocalVar)(this->locals->get(n1)) )));
HXLINE( 432)				{
HXLINE( 432)					::Dynamic this1 = this->locals;
HXDLIN( 432)					 ::Dynamic value;
HXDLIN( 432)					if (::hx::IsNull( v2 )) {
HXLINE( 432)						value = null();
            					}
            					else {
HXLINE( 432)						value = this->expr(v2);
            					}
HXDLIN( 432)					( ( ::haxe::ds::StringMap)(this1) )->set(n1, ::crowplexus::hscript::LocalVar_obj::__alloc( HX_CTX ,value,( (bool)(isConst) )));
            				}
HXLINE( 433)				return null();
            			}
            			break;
            			case (int)5: {
HXLINE( 434)				 ::crowplexus::hscript::Expr e4 = e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXLINE( 435)				return this->expr(e4);
            			}
            			break;
            			case (int)6: {
HXLINE( 436)				::Array< ::Dynamic> exprs = e1->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
HXLINE( 437)				int old = this->declared->length;
HXLINE( 438)				 ::Dynamic v3 = null();
HXLINE( 439)				{
HXLINE( 439)					int _g2 = 0;
HXDLIN( 439)					while((_g2 < exprs->length)){
HXLINE( 439)						 ::crowplexus::hscript::Expr e5 = exprs->__get(_g2).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 439)						_g2 = (_g2 + 1);
HXLINE( 440)						v3 = this->expr(e5);
            					}
            				}
HXLINE( 441)				this->restore(old);
HXLINE( 442)				return v3;
            			}
            			break;
            			case (int)7: {
HXLINE( 448)				 ::crowplexus::hscript::Expr _g3 = e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 448)				::String _g4 = e1->_hx_getString(1);
HXDLIN( 448)				if (e1->_hx_getBool(2)) {
HXLINE( 443)					::String f1 = _g4;
HXDLIN( 443)					 ::crowplexus::hscript::Expr e6 = _g3;
HXLINE( 444)					 ::Dynamic e7 = this->expr(e6);
HXLINE( 445)					if (::hx::IsNull( e7 )) {
HXLINE( 446)						return null();
            					}
HXLINE( 447)					return this->get(e7,f1);
            				}
            				else {
HXLINE( 448)					::String f2 = _g4;
HXDLIN( 448)					 ::crowplexus::hscript::Expr e8 = _g3;
HXLINE( 449)					return this->get(this->expr(e8),f2);
            				}
            			}
            			break;
            			case (int)8: {
HXLINE( 450)				::String op = e1->_hx_getString(0);
HXDLIN( 450)				 ::crowplexus::hscript::Expr e11 = e1->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 450)				 ::crowplexus::hscript::Expr e21 = e1->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >();
HXLINE( 451)				 ::Dynamic fop = this->binops->get(op);
HXLINE( 452)				if (::hx::IsNull( fop )) {
HXLINE( 453)					 ::crowplexus::hscript::Error e9 =  ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::EInvalidOp(op),this->curExpr->pmin,this->curExpr->pmax,this->curExpr->origin,this->curExpr->line);
HXDLIN( 453)					HX_STACK_DO_THROW(e9);
            				}
HXLINE( 454)				return fop(e11,e21);
            			}
            			break;
            			case (int)9: {
HXLINE( 455)				::String op1 = e1->_hx_getString(0);
HXDLIN( 455)				bool prefix = e1->_hx_getBool(1);
HXDLIN( 455)				 ::crowplexus::hscript::Expr e10 = e1->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >();
HXLINE( 456)				::String _hx_switch_0 = op1;
            				if (  (_hx_switch_0==HX_("!",21,00,00,00)) ){
HXLINE( 458)					return ::hx::IsNotEq( this->expr(e10),true );
HXDLIN( 458)					goto _hx_goto_57;
            				}
            				if (  (_hx_switch_0==HX_("++",a0,25,00,00)) ){
HXLINE( 462)					return this->increment(e10,prefix,1);
HXDLIN( 462)					goto _hx_goto_57;
            				}
            				if (  (_hx_switch_0==HX_("-",2d,00,00,00)) ){
HXLINE( 460)					return -(this->expr(e10));
HXDLIN( 460)					goto _hx_goto_57;
            				}
            				if (  (_hx_switch_0==HX_("--",60,27,00,00)) ){
HXLINE( 464)					return this->increment(e10,prefix,-1);
HXDLIN( 464)					goto _hx_goto_57;
            				}
            				if (  (_hx_switch_0==HX_("~",7e,00,00,00)) ){
HXLINE( 469)					return ~(( (int)(this->expr(e10)) ));
HXDLIN( 469)					goto _hx_goto_57;
            				}
            				/* default */{
HXLINE( 472)					 ::crowplexus::hscript::Error e12 =  ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::EInvalidOp(op1),this->curExpr->pmin,this->curExpr->pmax,this->curExpr->origin,this->curExpr->line);
HXDLIN( 472)					HX_STACK_DO_THROW(e12);
            				}
            				_hx_goto_57:;
            			}
            			break;
            			case (int)10: {
HXLINE( 475)				 ::crowplexus::hscript::Expr e13 = e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 475)				::Array< ::Dynamic> params = e1->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
HXLINE( 476)				::cpp::VirtualArray args = ::cpp::VirtualArray_obj::__new();
HXLINE( 477)				{
HXLINE( 477)					int _g5 = 0;
HXDLIN( 477)					while((_g5 < params->length)){
HXLINE( 477)						 ::crowplexus::hscript::Expr p = params->__get(_g5).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 477)						_g5 = (_g5 + 1);
HXLINE( 478)						args->push(this->expr(p));
            					}
            				}
HXLINE( 480)				 ::crowplexus::hscript::ExprDef _g6 = e13->e;
HXDLIN( 480)				if ((_g6->_hx_getIndex() == 7)) {
HXLINE( 481)					 ::crowplexus::hscript::Expr e14 = _g6->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 481)					::String f3 = _g6->_hx_getString(1);
HXDLIN( 481)					bool s1 = _g6->_hx_getBool(2);
HXLINE( 482)					 ::Dynamic obj = this->expr(e14);
HXLINE( 483)					if (::hx::IsNull( obj )) {
HXLINE( 484)						if (!(s1)) {
HXLINE( 485)							 ::crowplexus::hscript::Error e15 =  ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::EInvalidAccess(f3),this->curExpr->pmin,this->curExpr->pmax,this->curExpr->origin,this->curExpr->line);
HXDLIN( 485)							HX_STACK_DO_THROW(e15);
            						}
            					}
HXLINE( 486)					return this->fcall(obj,f3,args);
            				}
            				else {
HXLINE( 488)					return this->call(null(),this->expr(e13),args);
            				}
            			}
            			break;
            			case (int)11: {
HXLINE( 490)				 ::crowplexus::hscript::Expr econd = e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 490)				 ::crowplexus::hscript::Expr e16 = e1->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 490)				 ::crowplexus::hscript::Expr e22 = e1->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >();
HXLINE( 491)				if (::hx::IsEq( this->expr(econd),true )) {
HXLINE( 491)					return this->expr(e16);
            				}
            				else {
HXLINE( 491)					if (::hx::IsNull( e22 )) {
HXLINE( 491)						return null();
            					}
            					else {
HXLINE( 491)						return this->expr(e22);
            					}
            				}
            			}
            			break;
            			case (int)12: {
HXLINE( 492)				 ::crowplexus::hscript::Expr econd1 = e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 492)				 ::crowplexus::hscript::Expr e17 = e1->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >();
HXLINE( 493)				this->whileLoop(econd1,e17);
HXLINE( 494)				return null();
            			}
            			break;
            			case (int)13: {
HXLINE( 498)				::String v4 = e1->_hx_getString(0);
HXDLIN( 498)				 ::crowplexus::hscript::Expr it = e1->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 498)				 ::crowplexus::hscript::Expr e18 = e1->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >();
HXLINE( 499)				this->forLoop(v4,it,e18);
HXLINE( 500)				return null();
            			}
            			break;
            			case (int)14: {
HXLINE( 502)				HX_STACK_DO_THROW(::crowplexus::hscript::_Interp::Stop_obj::SBreak_dyn());
            			}
            			break;
            			case (int)15: {
HXLINE( 504)				HX_STACK_DO_THROW(::crowplexus::hscript::_Interp::Stop_obj::SContinue_dyn());
            			}
            			break;
            			case (int)16: {
            				HX_BEGIN_LOCAL_FUNC_S7(::hx::LocalFunc,_hx_Closure_0,::String,name, ::crowplexus::hscript::Expr,fexpr, ::crowplexus::hscript::Interp,_gthis,::Array< int >,minParams, ::crowplexus::hscript::Interp,me, ::haxe::ds::StringMap,capturedLocals,::Array< ::Dynamic>,params1) HXARGC(1)
            				 ::Dynamic _hx_run(::cpp::VirtualArray args){
            					HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_540_expr)
HXLINE( 541)					int f;
HXDLIN( 541)					if (::hx::IsNull( args )) {
HXLINE( 541)						f = 0;
            					}
            					else {
HXLINE( 541)						f = args->get_length();
            					}
HXDLIN( 541)					if ((f != params1->length)) {
HXLINE( 542)						if ((args->get_length() < minParams->__get(0))) {
HXLINE( 543)							::String str = (((HX_("Invalid number of parameters. Got ",cb,2b,d9,b1) + args->get_length()) + HX_(", required ",ed,0c,66,93)) + minParams->__get(0));
HXLINE( 544)							if (::hx::IsNotNull( name )) {
HXLINE( 545)								str = (str + ((HX_(" for function '",f6,90,ab,a0) + name) + HX_("'",27,00,00,00)));
            							}
HXLINE( 546)							 ::crowplexus::hscript::Error e =  ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::ECustom(str),_gthis->curExpr->pmin,_gthis->curExpr->pmax,_gthis->curExpr->origin,_gthis->curExpr->line);
HXDLIN( 546)							HX_STACK_DO_THROW(e);
            						}
HXLINE( 549)						::cpp::VirtualArray args2 = ::cpp::VirtualArray_obj::__new(0);
HXLINE( 550)						int extraParams = (args->get_length() - minParams->__get(0));
HXLINE( 551)						int pos = 0;
HXLINE( 552)						{
HXLINE( 552)							int _g = 0;
HXDLIN( 552)							while((_g < params1->length)){
HXLINE( 552)								 ::Dynamic p = params1->__get(_g);
HXDLIN( 552)								_g = (_g + 1);
HXLINE( 553)								if (( (bool)(p->__Field(HX_("opt",33,9c,54,00),::hx::paccDynamic)) )) {
HXLINE( 554)									if ((extraParams > 0)) {
HXLINE( 555)										pos = (pos + 1);
HXDLIN( 555)										args2->push(args->__get((pos - 1)));
HXLINE( 556)										extraParams = (extraParams - 1);
            									}
            									else {
HXLINE( 558)										args2->push(null());
            									}
            								}
            								else {
HXLINE( 560)									pos = (pos + 1);
HXDLIN( 560)									args2->push(args->__get((pos - 1)));
            								}
            							}
            						}
HXLINE( 561)						args = args2;
            					}
HXLINE( 563)					 ::haxe::ds::StringMap old = me->locals;
HXDLIN( 563)					int depth = me->depth;
HXLINE( 564)					me->depth++;
HXLINE( 565)					me->locals = me->duplicate(capturedLocals);
HXLINE( 566)					{
HXLINE( 566)						int _g1 = 0;
HXDLIN( 566)						int _g2 = params1->length;
HXDLIN( 566)						while((_g1 < _g2)){
HXLINE( 566)							_g1 = (_g1 + 1);
HXDLIN( 566)							int i = (_g1 - 1);
HXLINE( 567)							{
HXLINE( 567)								::Dynamic this1 = me->locals;
HXDLIN( 567)								::String key = ( (::String)(params1->__get(i)->__Field(HX_("name",4b,72,ff,48),::hx::paccDynamic)) );
HXDLIN( 567)								( ( ::haxe::ds::StringMap)(this1) )->set(key, ::crowplexus::hscript::LocalVar_obj::__alloc( HX_CTX ,args->__get(i),false));
            							}
            						}
            					}
HXLINE( 568)					 ::Dynamic r = null();
HXLINE( 569)					int oldDecl = _gthis->declared->length;
HXLINE( 570)					if (_gthis->inTry) {
HXLINE( 571)						try {
            							HX_STACK_CATCHABLE( ::Dynamic, 0);
HXLINE( 572)							r = me->exprReturn(fexpr);
            						} catch( ::Dynamic _hx_e) {
            							if (_hx_e.IsClass<  ::Dynamic >() ){
            								HX_STACK_BEGIN_CATCH
            								 ::Dynamic _g3 = _hx_e;
HXLINE( 573)								{
HXLINE( 573)									null();
            								}
HXDLIN( 573)								 ::Dynamic e1 = _g3;
HXLINE( 574)								me->locals = old;
HXLINE( 575)								me->depth = depth;
HXLINE( 579)								HX_STACK_DO_THROW(e1);
            							}
            							else {
            								HX_STACK_DO_THROW(_hx_e);
            							}
            						}
            					}
            					else {
HXLINE( 583)						r = me->exprReturn(fexpr);
            					}
HXLINE( 584)					_gthis->restore(oldDecl);
HXLINE( 585)					me->locals = old;
HXLINE( 586)					me->depth = depth;
HXLINE( 587)					return r;
            				}
            				HX_END_LOCAL_FUNC1(return)

HXLINE( 531)				 ::crowplexus::hscript::CType _g7 = e1->_hx_getObject(3).StaticCast<  ::crowplexus::hscript::CType >();
HXDLIN( 531)				::Array< ::Dynamic> params1 = e1->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 531)				 ::crowplexus::hscript::Expr fexpr = e1->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 531)				::String name = e1->_hx_getString(2);
HXLINE( 532)				 ::haxe::ds::StringMap capturedLocals = this->duplicate(this->locals);
HXLINE( 533)				 ::crowplexus::hscript::Interp me = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 534)				bool hasOpt = false;
HXDLIN( 534)				::Array< int > minParams = ::Array_obj< int >::fromData( _hx_array_data_c5fd2359_74,1);
HXLINE( 535)				{
HXLINE( 535)					int _g8 = 0;
HXDLIN( 535)					while((_g8 < params1->length)){
HXLINE( 535)						 ::Dynamic p1 = params1->__get(_g8);
HXDLIN( 535)						_g8 = (_g8 + 1);
HXLINE( 536)						if (( (bool)(p1->__Field(HX_("opt",33,9c,54,00),::hx::paccDynamic)) )) {
HXLINE( 537)							hasOpt = true;
            						}
            						else {
HXLINE( 539)							minParams[0]++;
            						}
            					}
            				}
HXLINE( 540)				 ::Dynamic f4 =  ::Dynamic(new _hx_Closure_0(name,fexpr,_gthis,minParams,me,capturedLocals,params1));
HXLINE( 589)				 ::Dynamic f5 = ::Reflect_obj::makeVarArgs(f4);
HXLINE( 590)				if (::hx::IsNotNull( name )) {
HXLINE( 591)					if ((this->depth == 0)) {
HXLINE( 593)						this->variables->set(name,f5);
            					}
            					else {
HXLINE( 596)						::Array< ::Dynamic> _hx_tmp3 = this->declared;
HXDLIN( 596)						::String _g9 = name;
HXDLIN( 596)						_hx_tmp3->push( ::crowplexus::hscript::DeclaredVar_obj::__alloc( HX_CTX ,_g9,( ( ::crowplexus::hscript::LocalVar)(this->locals->get(name)) )));
HXLINE( 597)						 ::crowplexus::hscript::LocalVar ref =  ::crowplexus::hscript::LocalVar_obj::__alloc( HX_CTX ,f5,false);
HXLINE( 598)						this->locals->set(name,ref);
HXLINE( 599)						capturedLocals->set(name,ref);
            					}
            				}
HXLINE( 602)				return f5;
            			}
            			break;
            			case (int)17: {
HXLINE( 505)				 ::crowplexus::hscript::Expr e19 = e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXLINE( 506)				 ::Dynamic _hx_tmp4;
HXDLIN( 506)				if (::hx::IsNull( e19 )) {
HXLINE( 506)					_hx_tmp4 = null();
            				}
            				else {
HXLINE( 506)					_hx_tmp4 = this->expr(e19);
            				}
HXDLIN( 506)				this->returnValue = _hx_tmp4;
HXLINE( 507)				HX_STACK_DO_THROW(::crowplexus::hscript::_Interp::Stop_obj::SReturn_dyn());
            			}
            			break;
            			case (int)18: {
HXLINE( 649)				 ::crowplexus::hscript::Expr e20 = e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 649)				 ::crowplexus::hscript::Expr index = e1->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >();
HXLINE( 650)				 ::Dynamic arr1 = this->expr(e20);
HXLINE( 651)				 ::Dynamic index1 = this->expr(index);
HXLINE( 652)				if (::Std_obj::isOfType(arr1,::hx::ClassOf< ::haxe::IMap >())) {
HXLINE( 653)					return ::haxe::IMap_obj::get( ::hx::interface_check(arr1,0x09c2bd39),index1);
            				}
            				else {
HXLINE( 655)					return arr1->__GetItem(( (int)(index1) ));
            				}
            			}
            			break;
            			case (int)19: {
HXLINE( 603)				::Array< ::Dynamic> arr2 = e1->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
HXLINE( 604)				bool _hx_tmp5;
HXDLIN( 604)				if ((arr2->length > 0)) {
HXLINE( 604)					 ::crowplexus::hscript::ExprDef _g10 = arr2->__get(0).StaticCast<  ::crowplexus::hscript::Expr >()->e;
HXDLIN( 604)					if ((_g10->_hx_getIndex() == 8)) {
HXLINE( 604)						 ::crowplexus::hscript::Expr _g11 = _g10->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 604)						 ::crowplexus::hscript::Expr _g12 = _g10->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 604)						if ((_g10->_hx_getString(0) == HX_("=>",61,35,00,00))) {
HXLINE( 604)							_hx_tmp5 = true;
            						}
            						else {
HXLINE( 604)							_hx_tmp5 = false;
            						}
            					}
            					else {
HXLINE( 604)						_hx_tmp5 = false;
            					}
            				}
            				else {
HXLINE( 604)					_hx_tmp5 = false;
            				}
HXDLIN( 604)				if (_hx_tmp5) {
HXLINE( 605)					bool isAllString = true;
HXLINE( 606)					bool isAllInt = true;
HXLINE( 607)					bool isAllObject = true;
HXLINE( 608)					bool isAllEnum = true;
HXLINE( 609)					::cpp::VirtualArray keys = ::cpp::VirtualArray_obj::__new(0);
HXLINE( 610)					::cpp::VirtualArray values = ::cpp::VirtualArray_obj::__new(0);
HXLINE( 611)					{
HXLINE( 611)						int _g13 = 0;
HXDLIN( 611)						while((_g13 < arr2->length)){
HXLINE( 611)							 ::crowplexus::hscript::Expr e23 = arr2->__get(_g13).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 611)							_g13 = (_g13 + 1);
HXLINE( 612)							{
HXLINE( 612)								 ::crowplexus::hscript::ExprDef _g14 = e23->e;
HXDLIN( 612)								if ((_g14->_hx_getIndex() == 8)) {
HXLINE( 613)									if ((_g14->_hx_getString(0) == HX_("=>",61,35,00,00))) {
HXLINE( 613)										 ::crowplexus::hscript::Expr eKey = _g14->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 613)										 ::crowplexus::hscript::Expr eValue = _g14->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 613)										{
HXLINE( 614)											 ::Dynamic key = this->expr(eKey);
HXLINE( 615)											 ::Dynamic value1 = this->expr(eValue);
HXLINE( 616)											if (isAllString) {
HXLINE( 616)												isAllString = ::Std_obj::isOfType(key,::hx::ClassOf< ::String >());
            											}
            											else {
HXLINE( 616)												isAllString = false;
            											}
HXLINE( 617)											if (isAllInt) {
HXLINE( 617)												isAllInt = ::Std_obj::isOfType(key,::hx::ClassOf< int >());
            											}
            											else {
HXLINE( 617)												isAllInt = false;
            											}
HXLINE( 618)											if (isAllObject) {
HXLINE( 618)												isAllObject = ::Reflect_obj::isObject(key);
            											}
            											else {
HXLINE( 618)												isAllObject = false;
            											}
HXLINE( 619)											if (isAllEnum) {
HXLINE( 619)												isAllEnum = ::Reflect_obj::isEnumValue(key);
            											}
            											else {
HXLINE( 619)												isAllEnum = false;
            											}
HXLINE( 620)											keys->push(key);
HXLINE( 621)											values->push(value1);
            										}
            									}
            									else {
HXLINE( 623)										HX_STACK_DO_THROW(HX_("=> expected",17,e5,65,e5));
            									}
            								}
            								else {
HXLINE( 623)									HX_STACK_DO_THROW(HX_("=> expected",17,e5,65,e5));
            								}
            							}
            						}
            					}
HXLINE( 626)					 ::Dynamic map;
HXLINE( 627)					if (isAllInt) {
HXLINE( 626)						map =  ::haxe::ds::IntMap_obj::__alloc( HX_CTX );
            					}
            					else {
HXLINE( 629)						if (isAllString) {
HXLINE( 626)							map =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
            						}
            						else {
HXLINE( 631)							if (isAllEnum) {
HXLINE( 626)								map =  ::haxe::ds::EnumValueMap_obj::__alloc( HX_CTX );
            							}
            							else {
HXLINE( 633)								if (isAllObject) {
HXLINE( 626)									map =  ::haxe::ds::ObjectMap_obj::__alloc( HX_CTX );
            								}
            								else {
HXLINE( 636)									HX_STACK_DO_THROW(HX_("Inconsistent key types",af,4f,50,a9));
            								}
            							}
            						}
            					}
HXLINE( 638)					{
HXLINE( 638)						int _g15 = 0;
HXDLIN( 638)						int _g16 = keys->get_length();
HXDLIN( 638)						while((_g15 < _g16)){
HXLINE( 638)							_g15 = (_g15 + 1);
HXDLIN( 638)							int n2 = (_g15 - 1);
HXLINE( 639)							::haxe::IMap_obj::set( ::hx::interface_check(map,0x09c2bd39),keys->__get(n2),values->__get(n2));
            						}
            					}
HXLINE( 641)					return map;
            				}
            				else {
HXLINE( 643)					::cpp::VirtualArray a = ::cpp::VirtualArray_obj::__new();
HXLINE( 644)					{
HXLINE( 644)						int _g17 = 0;
HXDLIN( 644)						while((_g17 < arr2->length)){
HXLINE( 644)							 ::crowplexus::hscript::Expr e24 = arr2->__get(_g17).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 644)							_g17 = (_g17 + 1);
HXLINE( 645)							a->push(this->expr(e24));
            						}
            					}
HXLINE( 647)					return a;
            				}
            			}
            			break;
            			case (int)20: {
HXLINE( 657)				::String cl = e1->_hx_getString(0);
HXDLIN( 657)				::Array< ::Dynamic> params2 = e1->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
HXLINE( 658)				::cpp::VirtualArray a1 = ::cpp::VirtualArray_obj::__new();
HXLINE( 659)				{
HXLINE( 659)					int _g18 = 0;
HXDLIN( 659)					while((_g18 < params2->length)){
HXLINE( 659)						 ::crowplexus::hscript::Expr e25 = params2->__get(_g18).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 659)						_g18 = (_g18 + 1);
HXLINE( 660)						a1->push(this->expr(e25));
            					}
            				}
HXLINE( 661)				return this->cnew(cl,a1);
            			}
            			break;
            			case (int)21: {
HXLINE( 662)				 ::crowplexus::hscript::Expr e26 = e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXLINE( 663)				HX_STACK_DO_THROW(this->expr(e26));
            			}
            			break;
            			case (int)22: {
HXLINE( 664)				 ::crowplexus::hscript::CType _g19 = e1->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::CType >();
HXDLIN( 664)				 ::crowplexus::hscript::Expr e27 = e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 664)				::String n3 = e1->_hx_getString(1);
HXDLIN( 664)				 ::crowplexus::hscript::Expr ecatch = e1->_hx_getObject(3).StaticCast<  ::crowplexus::hscript::Expr >();
HXLINE( 665)				int old1 = this->declared->length;
HXLINE( 666)				bool oldTry = this->inTry;
HXLINE( 667)				try {
            					HX_STACK_CATCHABLE( ::crowplexus::hscript::_Interp::Stop, 0);
            					HX_STACK_CATCHABLE( ::haxe::ValueException, 1);
            					HX_STACK_CATCHABLE( ::Dynamic, 2);
HXLINE( 668)					this->inTry = true;
HXLINE( 669)					 ::Dynamic v5 = this->expr(e27);
HXLINE( 670)					this->restore(old1);
HXLINE( 671)					this->inTry = oldTry;
HXLINE( 672)					return v5;
            				} catch( ::Dynamic _hx_e) {
            					if (_hx_e.IsClass<  ::crowplexus::hscript::_Interp::Stop >() ){
            						HX_STACK_BEGIN_CATCH
            						 ::crowplexus::hscript::_Interp::Stop err1 = _hx_e;
HXLINE( 674)						this->inTry = oldTry;
HXLINE( 675)						HX_STACK_DO_THROW(err1);
            					}
            					else if (_hx_e.IsClass<  ::haxe::ValueException >() ){
            						HX_STACK_BEGIN_CATCH
            						 ::haxe::ValueException _g20 = _hx_e;
HXLINE( 673)						{
HXLINE( 673)							null();
            						}
HXLINE( 667)						if (::Std_obj::isOfType(_g20->value,::hx::ClassOf< ::crowplexus::hscript::_Interp::Stop >())) {
HXLINE( 673)							 ::crowplexus::hscript::_Interp::Stop err1 = _g20->value;
HXLINE( 674)							this->inTry = oldTry;
HXLINE( 675)							HX_STACK_DO_THROW(err1);
            						}
            						else {
HXLINE( 667)							HX_STACK_DO_THROW(_g20);
            						}
            					}
            					else if (_hx_e.IsClass<  ::Dynamic >() ){
            						HX_STACK_BEGIN_CATCH
            						 ::Dynamic _g21 = _hx_e;
HXLINE( 676)						{
HXLINE( 676)							null();
            						}
HXDLIN( 676)						 ::Dynamic err2 = _g21;
HXLINE( 678)						this->restore(old1);
HXLINE( 679)						this->inTry = oldTry;
HXLINE( 681)						::Array< ::Dynamic> _hx_tmp6 = this->declared;
HXDLIN( 681)						_hx_tmp6->push( ::crowplexus::hscript::DeclaredVar_obj::__alloc( HX_CTX ,n3,( ( ::crowplexus::hscript::LocalVar)(this->locals->get(n3)) )));
HXLINE( 682)						{
HXLINE( 682)							::Dynamic this2 = this->locals;
HXDLIN( 682)							( ( ::haxe::ds::StringMap)(this2) )->set(n3, ::crowplexus::hscript::LocalVar_obj::__alloc( HX_CTX ,err2,false));
            						}
HXLINE( 683)						 ::Dynamic v6 = this->expr(ecatch);
HXLINE( 684)						this->restore(old1);
HXLINE( 685)						return v6;
            					}
            					else {
            						HX_STACK_DO_THROW(_hx_e);
            					}
            				}
            			}
            			break;
            			case (int)23: {
HXLINE( 687)				::Array< ::Dynamic> fl = e1->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
HXLINE( 688)				 ::Dynamic o =  ::Dynamic(::hx::Anon_obj::Create(0));
HXLINE( 689)				{
HXLINE( 689)					int _g22 = 0;
HXDLIN( 689)					while((_g22 < fl->length)){
HXLINE( 689)						 ::crowplexus::hscript::ObjectDecl f6 = fl->__get(_g22).StaticCast<  ::crowplexus::hscript::ObjectDecl >();
HXDLIN( 689)						_g22 = (_g22 + 1);
HXLINE( 690)						::String f7 = f6->name;
HXDLIN( 690)						this->set(o,f7,this->expr(f6->e));
            					}
            				}
HXLINE( 691)				return o;
            			}
            			break;
            			case (int)24: {
HXLINE( 692)				 ::crowplexus::hscript::Expr econd2 = e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 692)				 ::crowplexus::hscript::Expr e110 = e1->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 692)				 ::crowplexus::hscript::Expr e28 = e1->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >();
HXLINE( 693)				if (::hx::IsEq( this->expr(econd2),true )) {
HXLINE( 693)					return this->expr(e110);
            				}
            				else {
HXLINE( 693)					return this->expr(e28);
            				}
            			}
            			break;
            			case (int)25: {
HXLINE( 694)				 ::crowplexus::hscript::Expr e29 = e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 694)				::Array< ::Dynamic> cases = e1->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 694)				 ::crowplexus::hscript::Expr def = e1->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >();
HXLINE( 695)				 ::Dynamic val = this->expr(e29);
HXLINE( 696)				bool match = false;
HXLINE( 697)				{
HXLINE( 697)					int _g23 = 0;
HXDLIN( 697)					while((_g23 < cases->length)){
HXLINE( 697)						 ::crowplexus::hscript::SwitchCase c2 = cases->__get(_g23).StaticCast<  ::crowplexus::hscript::SwitchCase >();
HXDLIN( 697)						_g23 = (_g23 + 1);
HXLINE( 698)						{
HXLINE( 698)							int _g24 = 0;
HXDLIN( 698)							::Array< ::Dynamic> _g25 = c2->values;
HXDLIN( 698)							while((_g24 < _g25->length)){
HXLINE( 698)								 ::crowplexus::hscript::Expr v7 = _g25->__get(_g24).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 698)								_g24 = (_g24 + 1);
HXLINE( 699)								bool _hx_tmp7;
HXDLIN( 699)								bool _hx_tmp8;
HXDLIN( 699)								if (!(__hxcpp_enum_eq(v7->e,::crowplexus::hscript::ExprDef_obj::EIdent(HX_("_",5f,00,00,00))))) {
HXLINE( 699)									_hx_tmp8 = ::hx::IsEq( this->expr(v7),val );
            								}
            								else {
HXLINE( 699)									_hx_tmp8 = false;
            								}
HXDLIN( 699)								if (_hx_tmp8) {
HXLINE( 699)									if (::hx::IsNotNull( c2->ifExpr )) {
HXLINE( 699)										_hx_tmp7 = ::hx::IsEq( this->expr(c2->ifExpr),true );
            									}
            									else {
HXLINE( 699)										_hx_tmp7 = true;
            									}
            								}
            								else {
HXLINE( 699)									_hx_tmp7 = false;
            								}
HXDLIN( 699)								if (_hx_tmp7) {
HXLINE( 700)									match = true;
HXLINE( 701)									goto _hx_goto_68;
            								}
            							}
            							_hx_goto_68:;
            						}
HXLINE( 703)						if (match) {
HXLINE( 704)							val = this->expr(c2->expr);
HXLINE( 705)							goto _hx_goto_67;
            						}
            					}
            					_hx_goto_67:;
            				}
HXLINE( 708)				if (!(match)) {
HXLINE( 709)					if (::hx::IsNull( def )) {
HXLINE( 709)						val = null();
            					}
            					else {
HXLINE( 709)						val = this->expr(def);
            					}
            				}
HXLINE( 710)				return val;
            			}
            			break;
            			case (int)26: {
HXLINE( 495)				 ::crowplexus::hscript::Expr econd3 = e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 495)				 ::crowplexus::hscript::Expr e30 = e1->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >();
HXLINE( 496)				this->doWhileLoop(econd3,e30);
HXLINE( 497)				return null();
            			}
            			break;
            			case (int)27: {
HXLINE( 711)				::String _g26 = e1->_hx_getString(0);
HXDLIN( 711)				::Array< ::Dynamic> _g27 = e1->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 711)				 ::crowplexus::hscript::Expr e31 = e1->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >();
HXLINE( 712)				return this->expr(e31);
            			}
            			break;
            			case (int)28: {
HXLINE( 713)				 ::crowplexus::hscript::CType _g28 = e1->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::CType >();
HXDLIN( 713)				 ::crowplexus::hscript::Expr e32 = e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXLINE( 714)				return this->expr(e32);
            			}
            			break;
            			case (int)29: {
HXLINE( 715)				::String enumName = e1->_hx_getString(0);
HXDLIN( 715)				::Array< ::Dynamic> fields = e1->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 715)				{
HXLINE( 716)					 ::Dynamic obj1 =  ::Dynamic(::hx::Anon_obj::Create(0));
HXLINE( 717)					{
HXLINE( 717)						int _g_current = 0;
HXDLIN( 717)						::Array< ::Dynamic> _g_array = fields;
HXDLIN( 717)						while((_g_current < _g_array->length)){
HXLINE( 717)							 ::crowplexus::hscript::EnumType _g_value = _g_array->__get(_g_current).StaticCast<  ::crowplexus::hscript::EnumType >();
HXDLIN( 717)							_g_current = (_g_current + 1);
HXDLIN( 717)							int _g_key = (_g_current - 1);
HXDLIN( 717)							int index2 = _g_key;
HXDLIN( 717)							 ::crowplexus::hscript::EnumType field = _g_value;
HXLINE( 718)							switch((int)(field->_hx_getIndex())){
            								case (int)0: {
HXLINE( 719)									::String name1 = field->_hx_getString(0);
HXLINE( 720)									::Reflect_obj::setField(obj1,name1, ::crowplexus::hscript::EnumValue_obj::__alloc( HX_CTX ,enumName,name1,index2,null()));
            								}
            								break;
            								case (int)1: {
HXLINE( 721)									::String name2 = field->_hx_getString(0);
HXDLIN( 721)									::Array< ::Dynamic> params3 = field->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 721)									{
            										HX_BEGIN_LOCAL_FUNC_S6(::hx::LocalFunc,_hx_Closure_1, ::crowplexus::hscript::Interp,_gthis,::String,name2,::String,enumName,int,index2,::Array< ::Dynamic>,params3,::Array< int >,minParams1) HXARGC(1)
            										 ::crowplexus::hscript::EnumValue _hx_run(::cpp::VirtualArray args){
            											HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_728_expr)
HXLINE( 729)											int f;
HXDLIN( 729)											if (::hx::IsNull( args )) {
HXLINE( 729)												f = 0;
            											}
            											else {
HXLINE( 729)												f = args->get_length();
            											}
HXDLIN( 729)											if ((f != params3->length)) {
HXLINE( 730)												if ((args->get_length() < minParams1->__get(0))) {
HXLINE( 731)													::String str = (((HX_("Invalid number of parameters. Got ",cb,2b,d9,b1) + args->get_length()) + HX_(", required ",ed,0c,66,93)) + minParams1->__get(0));
HXLINE( 732)													if (::hx::IsNotNull( enumName )) {
HXLINE( 733)														str = (str + ((HX_(" for enum '",9f,65,13,e1) + enumName) + HX_("'",27,00,00,00)));
            													}
HXLINE( 734)													 ::crowplexus::hscript::Error e =  ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::ECustom(str),_gthis->curExpr->pmin,_gthis->curExpr->pmax,_gthis->curExpr->origin,_gthis->curExpr->line);
HXDLIN( 734)													HX_STACK_DO_THROW(e);
            												}
HXLINE( 737)												::cpp::VirtualArray args2 = ::cpp::VirtualArray_obj::__new(0);
HXLINE( 738)												int extraParams = (args->get_length() - minParams1->__get(0));
HXLINE( 739)												int pos = 0;
HXLINE( 740)												{
HXLINE( 740)													int _g = 0;
HXDLIN( 740)													while((_g < params3->length)){
HXLINE( 740)														 ::Dynamic p = params3->__get(_g);
HXDLIN( 740)														_g = (_g + 1);
HXLINE( 741)														if (( (bool)(p->__Field(HX_("opt",33,9c,54,00),::hx::paccDynamic)) )) {
HXLINE( 742)															if ((extraParams > 0)) {
HXLINE( 743)																pos = (pos + 1);
HXDLIN( 743)																args2->push(args->__get((pos - 1)));
HXLINE( 744)																extraParams = (extraParams - 1);
            															}
            															else {
HXLINE( 746)																args2->push(null());
            															}
            														}
            														else {
HXLINE( 748)															pos = (pos + 1);
HXDLIN( 748)															args2->push(args->__get((pos - 1)));
            														}
            													}
            												}
HXLINE( 749)												args = args2;
            											}
HXLINE( 751)											return  ::crowplexus::hscript::EnumValue_obj::__alloc( HX_CTX ,enumName,name2,index2,args);
            										}
            										HX_END_LOCAL_FUNC1(return)

HXLINE( 722)										bool hasOpt1 = false;
HXDLIN( 722)										::Array< int > minParams1 = ::Array_obj< int >::fromData( _hx_array_data_c5fd2359_76,1);
HXLINE( 723)										{
HXLINE( 723)											int _g29 = 0;
HXDLIN( 723)											while((_g29 < params3->length)){
HXLINE( 723)												 ::Dynamic p2 = params3->__get(_g29);
HXDLIN( 723)												_g29 = (_g29 + 1);
HXLINE( 724)												if (( (bool)(p2->__Field(HX_("opt",33,9c,54,00),::hx::paccDynamic)) )) {
HXLINE( 725)													hasOpt1 = true;
            												}
            												else {
HXLINE( 727)													minParams1[0]++;
            												}
            											}
            										}
HXLINE( 728)										 ::Dynamic f8 =  ::Dynamic(new _hx_Closure_1(_gthis,name2,enumName,index2,params3,minParams1));
HXLINE( 753)										 ::Dynamic f9 = ::Reflect_obj::makeVarArgs(f8);
HXLINE( 755)										::Reflect_obj::setField(obj1,name2,f9);
            									}
            								}
            								break;
            							}
            						}
            					}
HXLINE( 759)					this->variables->set(enumName,obj1);
            				}
            			}
            			break;
            			case (int)30: {
HXLINE( 760)				 ::Dynamic value2 = e1->_hx_getObject(0);
HXLINE( 761)				return value2;
            			}
            			break;
            			case (int)31: {
HXLINE( 762)				::String name3 = e1->_hx_getString(0);
HXLINE( 763)				this->useUsing(name3);
            			}
            			break;
            		}
HXLINE( 765)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interp_obj,expr,return )

void Interp_obj::doWhileLoop( ::crowplexus::hscript::Expr econd, ::crowplexus::hscript::Expr e){
            	HX_STACKFRAME(&_hx_pos_fc3952b268c01112_768_doWhileLoop)
HXLINE( 769)		int old = this->declared->length;
HXLINE( 770)		do {
HXLINE( 771)			try {
            				HX_STACK_CATCHABLE( ::crowplexus::hscript::_Interp::Stop, 0);
            				HX_STACK_CATCHABLE( ::haxe::ValueException, 1);
HXLINE( 772)				this->expr(e);
            			} catch( ::Dynamic _hx_e) {
            				if (_hx_e.IsClass<  ::crowplexus::hscript::_Interp::Stop >() ){
            					HX_STACK_BEGIN_CATCH
            					 ::crowplexus::hscript::_Interp::Stop err1 = _hx_e;
HXLINE( 774)					switch((int)(err1->_hx_getIndex())){
            						case (int)0: {
HXLINE( 777)							goto _hx_goto_77;
            						}
            						break;
            						case (int)1: {
            						}
            						break;
            						case (int)2: {
HXLINE( 779)							HX_STACK_DO_THROW(err1);
            						}
            						break;
            					}
            				}
            				else if (_hx_e.IsClass<  ::haxe::ValueException >() ){
            					HX_STACK_BEGIN_CATCH
            					 ::haxe::ValueException _g = _hx_e;
HXLINE( 773)					{
HXLINE( 773)						null();
            					}
HXLINE( 771)					if (::Std_obj::isOfType(_g->value,::hx::ClassOf< ::crowplexus::hscript::_Interp::Stop >())) {
HXLINE( 773)						 ::crowplexus::hscript::_Interp::Stop err1 = _g->value;
HXLINE( 774)						switch((int)(err1->_hx_getIndex())){
            							case (int)0: {
HXLINE( 777)								goto _hx_goto_77;
            							}
            							break;
            							case (int)1: {
            							}
            							break;
            							case (int)2: {
HXLINE( 779)								HX_STACK_DO_THROW(err1);
            							}
            							break;
            						}
            					}
            					else {
HXLINE( 771)						HX_STACK_DO_THROW(_g);
            					}
            				}
            				else {
            					HX_STACK_DO_THROW(_hx_e);
            				}
            			}
            		} while(::hx::IsEq( this->expr(econd),true ));
            		_hx_goto_77:;
HXLINE( 783)		this->restore(old);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Interp_obj,doWhileLoop,(void))

void Interp_obj::whileLoop( ::crowplexus::hscript::Expr econd, ::crowplexus::hscript::Expr e){
            	HX_STACKFRAME(&_hx_pos_fc3952b268c01112_786_whileLoop)
HXLINE( 787)		int old = this->declared->length;
HXLINE( 788)		while(::hx::IsEq( this->expr(econd),true )){
HXLINE( 789)			try {
            				HX_STACK_CATCHABLE( ::crowplexus::hscript::_Interp::Stop, 0);
            				HX_STACK_CATCHABLE( ::haxe::ValueException, 1);
HXLINE( 790)				this->expr(e);
            			} catch( ::Dynamic _hx_e) {
            				if (_hx_e.IsClass<  ::crowplexus::hscript::_Interp::Stop >() ){
            					HX_STACK_BEGIN_CATCH
            					 ::crowplexus::hscript::_Interp::Stop err1 = _hx_e;
HXLINE( 792)					switch((int)(err1->_hx_getIndex())){
            						case (int)0: {
HXLINE( 795)							goto _hx_goto_79;
            						}
            						break;
            						case (int)1: {
            						}
            						break;
            						case (int)2: {
HXLINE( 797)							HX_STACK_DO_THROW(err1);
            						}
            						break;
            					}
            				}
            				else if (_hx_e.IsClass<  ::haxe::ValueException >() ){
            					HX_STACK_BEGIN_CATCH
            					 ::haxe::ValueException _g = _hx_e;
HXLINE( 791)					{
HXLINE( 791)						null();
            					}
HXLINE( 789)					if (::Std_obj::isOfType(_g->value,::hx::ClassOf< ::crowplexus::hscript::_Interp::Stop >())) {
HXLINE( 791)						 ::crowplexus::hscript::_Interp::Stop err1 = _g->value;
HXLINE( 792)						switch((int)(err1->_hx_getIndex())){
            							case (int)0: {
HXLINE( 795)								goto _hx_goto_79;
            							}
            							break;
            							case (int)1: {
            							}
            							break;
            							case (int)2: {
HXLINE( 797)								HX_STACK_DO_THROW(err1);
            							}
            							break;
            						}
            					}
            					else {
HXLINE( 789)						HX_STACK_DO_THROW(_g);
            					}
            				}
            				else {
            					HX_STACK_DO_THROW(_hx_e);
            				}
            			}
            		}
            		_hx_goto_79:;
HXLINE( 801)		this->restore(old);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Interp_obj,whileLoop,(void))

 ::Dynamic Interp_obj::makeIterator( ::Dynamic v){
            	HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_804_makeIterator)
HXLINE( 809)		try {
            			HX_STACK_CATCHABLE( ::Dynamic, 0);
HXLINE( 810)			v = v->__Field(HX_("iterator",ee,49,9a,93),::hx::paccDynamic)();
            		} catch( ::Dynamic _hx_e) {
            			if (_hx_e.IsClass<  ::Dynamic >() ){
            				HX_STACK_BEGIN_CATCH
            				 ::Dynamic _g = _hx_e;
HXLINE( 811)				{
HXLINE( 811)					null();
            				}
            			}
            			else {
            				HX_STACK_DO_THROW(_hx_e);
            			}
            		}
HXLINE( 813)		bool _hx_tmp;
HXDLIN( 813)		if (::hx::IsNotNull( v->__Field(HX_("hasNext",6d,a5,46,18),::hx::paccDynamic) )) {
HXLINE( 813)			_hx_tmp = ::hx::IsNull( v->__Field(HX_("next",f3,84,02,49),::hx::paccDynamic) );
            		}
            		else {
HXLINE( 813)			_hx_tmp = true;
            		}
HXDLIN( 813)		if (_hx_tmp) {
HXLINE( 814)			 ::crowplexus::hscript::Error e =  ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::EInvalidIterator(v),this->curExpr->pmin,this->curExpr->pmax,this->curExpr->origin,this->curExpr->line);
HXDLIN( 814)			HX_STACK_DO_THROW(e);
            		}
HXLINE( 815)		return v;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interp_obj,makeIterator,return )

void Interp_obj::forLoop(::String n, ::crowplexus::hscript::Expr it, ::crowplexus::hscript::Expr e){
            	HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_818_forLoop)
HXLINE( 819)		int old = this->declared->length;
HXLINE( 820)		::Array< ::Dynamic> _hx_tmp = this->declared;
HXDLIN( 820)		_hx_tmp->push( ::crowplexus::hscript::DeclaredVar_obj::__alloc( HX_CTX ,n,( ( ::crowplexus::hscript::LocalVar)(this->locals->get(n)) )));
HXLINE( 821)		 ::Dynamic it1 = this->makeIterator(this->expr(it));
HXLINE( 822)		 ::Dynamic _itHasNext = it1->__Field(HX_("hasNext",6d,a5,46,18),::hx::paccDynamic);
HXLINE( 823)		 ::Dynamic _itNext = it1->__Field(HX_("next",f3,84,02,49),::hx::paccDynamic);
HXLINE( 824)		while(( (bool)(_itHasNext()) )){
HXLINE( 825)			{
HXLINE( 825)				::Dynamic this1 = this->locals;
HXDLIN( 825)				( ( ::haxe::ds::StringMap)(this1) )->set(n, ::crowplexus::hscript::LocalVar_obj::__alloc( HX_CTX ,_itNext(),false));
            			}
HXLINE( 826)			try {
            				HX_STACK_CATCHABLE( ::crowplexus::hscript::_Interp::Stop, 0);
            				HX_STACK_CATCHABLE( ::haxe::ValueException, 1);
HXLINE( 827)				this->expr(e);
            			} catch( ::Dynamic _hx_e) {
            				if (_hx_e.IsClass<  ::crowplexus::hscript::_Interp::Stop >() ){
            					HX_STACK_BEGIN_CATCH
            					 ::crowplexus::hscript::_Interp::Stop err1 = _hx_e;
HXLINE( 829)					switch((int)(err1->_hx_getIndex())){
            						case (int)0: {
HXLINE( 832)							goto _hx_goto_82;
            						}
            						break;
            						case (int)1: {
            						}
            						break;
            						case (int)2: {
HXLINE( 834)							HX_STACK_DO_THROW(err1);
            						}
            						break;
            					}
            				}
            				else if (_hx_e.IsClass<  ::haxe::ValueException >() ){
            					HX_STACK_BEGIN_CATCH
            					 ::haxe::ValueException _g = _hx_e;
HXLINE( 828)					{
HXLINE( 828)						null();
            					}
HXLINE( 826)					if (::Std_obj::isOfType(_g->value,::hx::ClassOf< ::crowplexus::hscript::_Interp::Stop >())) {
HXLINE( 828)						 ::crowplexus::hscript::_Interp::Stop err1 = _g->value;
HXLINE( 829)						switch((int)(err1->_hx_getIndex())){
            							case (int)0: {
HXLINE( 832)								goto _hx_goto_82;
            							}
            							break;
            							case (int)1: {
            							}
            							break;
            							case (int)2: {
HXLINE( 834)								HX_STACK_DO_THROW(err1);
            							}
            							break;
            						}
            					}
            					else {
HXLINE( 826)						HX_STACK_DO_THROW(_g);
            					}
            				}
            				else {
            					HX_STACK_DO_THROW(_hx_e);
            				}
            			}
            		}
            		_hx_goto_82:;
HXLINE( 838)		this->restore(old);
            	}


HX_DEFINE_DYNAMIC_FUNC3(Interp_obj,forLoop,(void))

bool Interp_obj::isMap( ::Dynamic o){
            	HX_STACKFRAME(&_hx_pos_fc3952b268c01112_842_isMap)
HXDLIN( 842)		return ::Std_obj::isOfType(o,::hx::ClassOf< ::haxe::IMap >());
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interp_obj,isMap,return )

 ::Dynamic Interp_obj::getMapValue( ::Dynamic map, ::Dynamic key){
            	HX_STACKFRAME(&_hx_pos_fc3952b268c01112_846_getMapValue)
HXDLIN( 846)		return ::haxe::IMap_obj::get( ::hx::interface_check(map,0x09c2bd39),key);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Interp_obj,getMapValue,return )

void Interp_obj::setMapValue( ::Dynamic map, ::Dynamic key, ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_fc3952b268c01112_850_setMapValue)
HXDLIN( 850)		::haxe::IMap_obj::set( ::hx::interface_check(map,0x09c2bd39),key,value);
            	}


HX_DEFINE_DYNAMIC_FUNC3(Interp_obj,setMapValue,(void))

 ::Dynamic Interp_obj::get( ::Dynamic o,::String f){
            	HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_853_get)
HXLINE( 854)		if (::hx::IsNull( o )) {
HXLINE( 855)			 ::crowplexus::hscript::Error e =  ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::EInvalidAccess(f),this->curExpr->pmin,this->curExpr->pmax,this->curExpr->origin,this->curExpr->line);
HXDLIN( 855)			HX_STACK_DO_THROW(e);
            		}
HXLINE( 856)		return ::Reflect_obj::getProperty(o,f);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Interp_obj,get,return )

 ::Dynamic Interp_obj::set( ::Dynamic o,::String f, ::Dynamic v){
            	HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_870_set)
HXLINE( 871)		if (::hx::IsNull( o )) {
HXLINE( 872)			 ::crowplexus::hscript::Error e =  ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::EInvalidAccess(f),this->curExpr->pmin,this->curExpr->pmax,this->curExpr->origin,this->curExpr->line);
HXDLIN( 872)			HX_STACK_DO_THROW(e);
            		}
HXLINE( 873)		::Reflect_obj::setProperty(o,f,v);
HXLINE( 874)		return v;
            	}


HX_DEFINE_DYNAMIC_FUNC3(Interp_obj,set,return )

 ::crowplexus::iris::utils::UsingEntry Interp_obj::registerUsingLocal(::String name, ::Dynamic call){
            	HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_880_registerUsingLocal)
HXLINE( 881)		 ::crowplexus::iris::utils::UsingEntry entry =  ::crowplexus::iris::utils::UsingEntry_obj::__alloc( HX_CTX ,name,call);
HXLINE( 882)		this->usings->push(entry);
HXLINE( 883)		return entry;
            	}


HX_DEFINE_DYNAMIC_FUNC2(Interp_obj,registerUsingLocal,return )

void Interp_obj::useUsing(::String name){
            	HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_886_useUsing)
HXLINE( 887)		{
HXLINE( 887)			int _g = 0;
HXDLIN( 887)			::Array< ::Dynamic> _g1 = ::crowplexus::iris::Iris_obj::registeredUsingEntries;
HXDLIN( 887)			while((_g < _g1->length)){
HXLINE( 887)				 ::crowplexus::iris::utils::UsingEntry us = _g1->__get(_g).StaticCast<  ::crowplexus::iris::utils::UsingEntry >();
HXDLIN( 887)				_g = (_g + 1);
HXLINE( 888)				if ((us->name == name)) {
HXLINE( 889)					if ((this->usings->indexOf(us,null()) == -1)) {
HXLINE( 890)						this->usings->push(us);
            					}
HXLINE( 891)					return;
            				}
            			}
            		}
HXLINE( 895)		 ::Dynamic cls = ::crowplexus::hscript::Tools_obj::getClass(name);
HXLINE( 896)		if (::hx::IsNotNull( cls )) {
            			HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_1, ::Dynamic,cls) HXARGC(3)
            			 ::Dynamic _hx_run( ::Dynamic o,::String f,::cpp::VirtualArray args){
            				HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_937_useUsing)
HXLINE( 938)				if (!(::Reflect_obj::hasField(cls,f))) {
HXLINE( 939)					return null();
            				}
HXLINE( 940)				 ::Dynamic field = ::Reflect_obj::field(cls,f);
HXLINE( 941)				if (!(::Reflect_obj::isFunction(field))) {
HXLINE( 942)					return null();
            				}
HXLINE( 945)				int totalArgs = ::crowplexus::hscript::Tools_obj::argCount(field);
HXLINE( 946)				if ((totalArgs == 0)) {
HXLINE( 947)					return null();
            				}
HXLINE( 951)				 ::Dynamic cls1 = cls;
HXDLIN( 951)				return ::Reflect_obj::callMethod(cls1,field,::cpp::VirtualArray_obj::__new(1)->init(0,o)->concat(args));
            			}
            			HX_END_LOCAL_FUNC3(return)

HXLINE( 897)			::String fieldName = (HX_("__irisUsing_",2e,2a,9a,a3) + ::StringTools_obj::replace(name,HX_(".",2e,00,00,00),HX_("_",5f,00,00,00)));
HXLINE( 898)			if (::Reflect_obj::hasField(cls,fieldName)) {
            				HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_0, ::Dynamic,fields, ::Dynamic,cls) HXARGC(3)
            				 ::Dynamic _hx_run( ::Dynamic o,::String f,::cpp::VirtualArray args){
            					HX_STACKFRAME(&_hx_pos_fc3952b268c01112_903_useUsing)
HXLINE( 904)					if (!(( (bool)(fields->__Field(HX_("exists",dc,1d,e0,bf),::hx::paccDynamic)(f)) ))) {
HXLINE( 905)						return null();
            					}
HXLINE( 906)					 ::ValueType type = ::Type_obj::_hx_typeof(o);
HXLINE( 907)					 ::ValueType valueType = fields->__Field(HX_("get",96,80,4e,00),::hx::paccDynamic)(f);
HXLINE( 913)					bool canCall;
HXDLIN( 913)					if (::hx::IsNull( valueType )) {
HXLINE( 913)						canCall = true;
            					}
            					else {
HXLINE( 913)						switch((int)(valueType->_hx_getIndex())){
            							case (int)6: {
HXLINE( 918)								::hx::Class _g = valueType->_hx_getObject(0).StaticCast< ::hx::Class >();
HXLINE( 916)								if (::hx::IsNull( _g )) {
HXLINE( 917)									if ((type->_hx_getIndex() == 6)) {
HXLINE( 917)										::hx::Class _g1 = type->_hx_getObject(0).StaticCast< ::hx::Class >();
HXLINE( 913)										canCall = true;
            									}
            									else {
HXLINE( 913)										canCall = false;
            									}
            								}
            								else {
HXLINE( 918)									if (::hx::IsPointerEq( _g,::hx::ClassOf< ::haxe::IMap >() )) {
HXLINE( 919)										if ((type->_hx_getIndex() == 6)) {
HXLINE( 919)											::hx::Class _hx_switch_0 = type->_hx_getObject(0).StaticCast< ::hx::Class >();
            											if (  (_hx_switch_0==::hx::ClassOf< ::haxe::IMap >()) ||  (_hx_switch_0==::hx::ClassOf< ::haxe::ds::EnumValueMap >()) ||  (_hx_switch_0==::hx::ClassOf< ::haxe::ds::IntMap >()) ||  (_hx_switch_0==::hx::ClassOf< ::haxe::ds::ObjectMap >()) ||  (_hx_switch_0==::hx::ClassOf< ::haxe::ds::StringMap >()) ){
HXLINE( 913)												canCall = true;
HXDLIN( 913)												goto _hx_goto_91;
            											}
            											/* default */{
HXLINE( 913)												canCall = false;
            											}
            											_hx_goto_91:;
            										}
            										else {
HXLINE( 913)											canCall = false;
            										}
            									}
            									else {
HXLINE( 913)										canCall = __hxcpp_enum_eq(type,valueType);
            									}
            								}
            							}
            							break;
            							case (int)7: {
HXLINE( 914)								if (::hx::IsNull( valueType->_hx_getObject(0).StaticCast< ::hx::Class >() )) {
HXLINE( 915)									if ((type->_hx_getIndex() == 7)) {
HXLINE( 915)										::hx::Class _g2 = type->_hx_getObject(0).StaticCast< ::hx::Class >();
HXLINE( 913)										canCall = true;
            									}
            									else {
HXLINE( 913)										canCall = false;
            									}
            								}
            								else {
HXLINE( 913)									canCall = __hxcpp_enum_eq(type,valueType);
            								}
            							}
            							break;
            							default:{
HXLINE( 913)								canCall = __hxcpp_enum_eq(type,valueType);
            							}
            						}
            					}
HXLINE( 924)					if (canCall) {
HXLINE( 924)						 ::Dynamic cls1 = cls;
HXDLIN( 924)						 ::Dynamic entry = ::Reflect_obj::field(cls,f);
HXDLIN( 924)						return ::Reflect_obj::callMethod(cls1,entry,::cpp::VirtualArray_obj::__new(1)->init(0,o)->concat(args));
            					}
            					else {
HXLINE( 924)						return null();
            					}
HXDLIN( 924)					return null();
            				}
            				HX_END_LOCAL_FUNC3(return)

HXLINE( 899)				 ::Dynamic fields = ::Reflect_obj::field(cls,fieldName);
HXLINE( 900)				if (::hx::IsNull( fields )) {
HXLINE( 901)					return;
            				}
HXLINE( 903)				 ::crowplexus::iris::utils::UsingEntry entry =  ::crowplexus::iris::utils::UsingEntry_obj::__alloc( HX_CTX ,name, ::Dynamic(new _hx_Closure_0(fields,cls)));
HXLINE( 928)				::haxe::Log_obj::trace((HX_("Registered macro based using entry for ",20,d3,26,53) + name),::hx::SourceInfo(HX_("crowplexus/hscript/Interp.hx",c3,63,40,86),928,HX_("crowplexus.hscript.Interp",59,23,fd,c5),HX_("useUsing",7d,d7,a0,71)));
HXLINE( 931)				::crowplexus::iris::Iris_obj::registeredUsingEntries->push(entry);
HXLINE( 932)				this->usings->push(entry);
HXLINE( 933)				return;
            			}
HXLINE( 937)			 ::crowplexus::iris::utils::UsingEntry entry1 =  ::crowplexus::iris::utils::UsingEntry_obj::__alloc( HX_CTX ,name, ::Dynamic(new _hx_Closure_1(cls)));
HXLINE( 955)			::haxe::Log_obj::trace((HX_("Registered reflection based using entry for ",25,2e,b8,84) + name),::hx::SourceInfo(HX_("crowplexus/hscript/Interp.hx",c3,63,40,86),955,HX_("crowplexus.hscript.Interp",59,23,fd,c5),HX_("useUsing",7d,d7,a0,71)));
HXLINE( 958)			::crowplexus::iris::Iris_obj::registeredUsingEntries->push(entry1);
HXLINE( 959)			this->usings->push(entry1);
HXLINE( 960)			return;
            		}
HXLINE( 962)		{
HXLINE( 962)			 ::crowplexus::hscript::Error e =  ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::ECustom((HX_("Unknown using class ",ba,16,ae,ca) + name)),this->curExpr->pmin,this->curExpr->pmax,this->curExpr->origin,this->curExpr->line);
HXDLIN( 962)			 ::Dynamic _hx_tmp = ::crowplexus::iris::Iris_obj::warn;
HXDLIN( 962)			::String _hx_tmp1 = ::crowplexus::hscript::Printer_obj::errorToString(e,this->showPosOnLog);
HXDLIN( 962)			_hx_tmp(_hx_tmp1,this->posInfos());
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interp_obj,useUsing,(void))

 ::Dynamic Interp_obj::fcall( ::Dynamic o,::String f,::cpp::VirtualArray args){
            	HX_STACKFRAME(&_hx_pos_fc3952b268c01112_979_fcall)
HXLINE( 980)		{
HXLINE( 980)			int _g = 0;
HXDLIN( 980)			::Array< ::Dynamic> _g1 = this->usings;
HXDLIN( 980)			while((_g < _g1->length)){
HXLINE( 980)				 ::crowplexus::iris::utils::UsingEntry _using = _g1->__get(_g).StaticCast<  ::crowplexus::iris::utils::UsingEntry >();
HXDLIN( 980)				_g = (_g + 1);
HXLINE( 981)				 ::Dynamic v = _using->call(o,f,args);
HXLINE( 982)				if (::hx::IsNotNull( v )) {
HXLINE( 983)					return v;
            				}
            			}
            		}
HXLINE( 985)		return this->call(o,this->get(o,f),args);
            	}


HX_DEFINE_DYNAMIC_FUNC3(Interp_obj,fcall,return )

 ::Dynamic Interp_obj::call( ::Dynamic o, ::Dynamic f,::cpp::VirtualArray args){
            	HX_STACKFRAME(&_hx_pos_fc3952b268c01112_989_call)
HXDLIN( 989)		return ::Reflect_obj::callMethod(o,f,args);
            	}


HX_DEFINE_DYNAMIC_FUNC3(Interp_obj,call,return )

 ::Dynamic Interp_obj::cnew(::String cl,::cpp::VirtualArray args){
            	HX_STACKFRAME(&_hx_pos_fc3952b268c01112_992_cnew)
HXLINE( 993)		::hx::Class c = ::Type_obj::resolveClass(cl);
HXLINE( 994)		if (::hx::IsNull( c )) {
HXLINE( 995)			c = this->resolve(cl);
            		}
HXLINE( 996)		return ::Type_obj::createInstance(c,args);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Interp_obj,cnew,return )


::hx::ObjectPtr< Interp_obj > Interp_obj::__new() {
	::hx::ObjectPtr< Interp_obj > __this = new Interp_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< Interp_obj > Interp_obj::__alloc(::hx::Ctx *_hx_ctx) {
	Interp_obj *__this = (Interp_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Interp_obj), true, "crowplexus.hscript.Interp"));
	*(void **)__this = Interp_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

Interp_obj::Interp_obj()
{
}

void Interp_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Interp);
	HX_MARK_MEMBER_NAME(variables,"variables");
	HX_MARK_MEMBER_NAME(imports,"imports");
	HX_MARK_MEMBER_NAME(locals,"locals");
	HX_MARK_MEMBER_NAME(binops,"binops");
	HX_MARK_MEMBER_NAME(depth,"depth");
	HX_MARK_MEMBER_NAME(inTry,"inTry");
	HX_MARK_MEMBER_NAME(declared,"declared");
	HX_MARK_MEMBER_NAME(returnValue,"returnValue");
	HX_MARK_MEMBER_NAME(curExpr,"curExpr");
	HX_MARK_MEMBER_NAME(showPosOnLog,"showPosOnLog");
	HX_MARK_MEMBER_NAME(usings,"usings");
	HX_MARK_END_CLASS();
}

void Interp_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(variables,"variables");
	HX_VISIT_MEMBER_NAME(imports,"imports");
	HX_VISIT_MEMBER_NAME(locals,"locals");
	HX_VISIT_MEMBER_NAME(binops,"binops");
	HX_VISIT_MEMBER_NAME(depth,"depth");
	HX_VISIT_MEMBER_NAME(inTry,"inTry");
	HX_VISIT_MEMBER_NAME(declared,"declared");
	HX_VISIT_MEMBER_NAME(returnValue,"returnValue");
	HX_VISIT_MEMBER_NAME(curExpr,"curExpr");
	HX_VISIT_MEMBER_NAME(showPosOnLog,"showPosOnLog");
	HX_VISIT_MEMBER_NAME(usings,"usings");
}

::hx::Val Interp_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"get") ) { return ::hx::Val( get_dyn() ); }
		if (HX_FIELD_EQ(inName,"set") ) { return ::hx::Val( set_dyn() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"warn") ) { return ::hx::Val( warn_dyn() ); }
		if (HX_FIELD_EQ(inName,"expr") ) { return ::hx::Val( expr_dyn() ); }
		if (HX_FIELD_EQ(inName,"call") ) { return ::hx::Val( call_dyn() ); }
		if (HX_FIELD_EQ(inName,"cnew") ) { return ::hx::Val( cnew_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"depth") ) { return ::hx::Val( depth ); }
		if (HX_FIELD_EQ(inName,"inTry") ) { return ::hx::Val( inTry ); }
		if (HX_FIELD_EQ(inName,"error") ) { return ::hx::Val( error_dyn() ); }
		if (HX_FIELD_EQ(inName,"isMap") ) { return ::hx::Val( isMap_dyn() ); }
		if (HX_FIELD_EQ(inName,"fcall") ) { return ::hx::Val( fcall_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"locals") ) { return ::hx::Val( locals ); }
		if (HX_FIELD_EQ(inName,"binops") ) { return ::hx::Val( binops ); }
		if (HX_FIELD_EQ(inName,"setVar") ) { return ::hx::Val( setVar_dyn() ); }
		if (HX_FIELD_EQ(inName,"assign") ) { return ::hx::Val( assign_dyn() ); }
		if (HX_FIELD_EQ(inName,"usings") ) { return ::hx::Val( usings ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"imports") ) { return ::hx::Val( imports ); }
		if (HX_FIELD_EQ(inName,"curExpr") ) { return ::hx::Val( curExpr ); }
		if (HX_FIELD_EQ(inName,"initOps") ) { return ::hx::Val( initOps_dyn() ); }
		if (HX_FIELD_EQ(inName,"execute") ) { return ::hx::Val( execute_dyn() ); }
		if (HX_FIELD_EQ(inName,"restore") ) { return ::hx::Val( restore_dyn() ); }
		if (HX_FIELD_EQ(inName,"rethrow") ) { return ::hx::Val( rethrow_dyn() ); }
		if (HX_FIELD_EQ(inName,"resolve") ) { return ::hx::Val( resolve_dyn() ); }
		if (HX_FIELD_EQ(inName,"forLoop") ) { return ::hx::Val( forLoop_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"declared") ) { return ::hx::Val( declared ); }
		if (HX_FIELD_EQ(inName,"posInfos") ) { return ::hx::Val( posInfos_dyn() ); }
		if (HX_FIELD_EQ(inName,"assignOp") ) { return ::hx::Val( assignOp_dyn() ); }
		if (HX_FIELD_EQ(inName,"useUsing") ) { return ::hx::Val( useUsing_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"variables") ) { return ::hx::Val( variables ); }
		if (HX_FIELD_EQ(inName,"increment") ) { return ::hx::Val( increment_dyn() ); }
		if (HX_FIELD_EQ(inName,"duplicate") ) { return ::hx::Val( duplicate_dyn() ); }
		if (HX_FIELD_EQ(inName,"whileLoop") ) { return ::hx::Val( whileLoop_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"exprReturn") ) { return ::hx::Val( exprReturn_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"returnValue") ) { return ::hx::Val( returnValue ); }
		if (HX_FIELD_EQ(inName,"doWhileLoop") ) { return ::hx::Val( doWhileLoop_dyn() ); }
		if (HX_FIELD_EQ(inName,"getMapValue") ) { return ::hx::Val( getMapValue_dyn() ); }
		if (HX_FIELD_EQ(inName,"setMapValue") ) { return ::hx::Val( setMapValue_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"showPosOnLog") ) { return ::hx::Val( showPosOnLog ); }
		if (HX_FIELD_EQ(inName,"evalAssignOp") ) { return ::hx::Val( evalAssignOp_dyn() ); }
		if (HX_FIELD_EQ(inName,"makeIterator") ) { return ::hx::Val( makeIterator_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"resetVariables") ) { return ::hx::Val( resetVariables_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"getOrImportClass") ) { return ::hx::Val( getOrImportClass_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"registerUsingLocal") ) { return ::hx::Val( registerUsingLocal_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val Interp_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"depth") ) { depth=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"inTry") ) { inTry=inValue.Cast< bool >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"locals") ) { locals=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
		if (HX_FIELD_EQ(inName,"binops") ) { binops=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
		if (HX_FIELD_EQ(inName,"usings") ) { usings=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"imports") ) { imports=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
		if (HX_FIELD_EQ(inName,"curExpr") ) { curExpr=inValue.Cast<  ::crowplexus::hscript::Expr >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"declared") ) { declared=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"variables") ) { variables=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"returnValue") ) { returnValue=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"showPosOnLog") ) { showPosOnLog=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Interp_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("variables",b7,e2,62,82));
	outFields->push(HX_("imports",6e,97,ca,69));
	outFields->push(HX_("locals",a8,74,bf,59));
	outFields->push(HX_("binops",cb,59,16,ed));
	outFields->push(HX_("depth",03,f1,29,d7));
	outFields->push(HX_("inTry",56,82,08,be));
	outFields->push(HX_("declared",fa,58,bc,c4));
	outFields->push(HX_("returnValue",a1,4c,95,3e));
	outFields->push(HX_("curExpr",d5,6e,33,ae));
	outFields->push(HX_("showPosOnLog",8e,98,0f,fa));
	outFields->push(HX_("usings",af,26,91,44));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo Interp_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::haxe::ds::StringMap */ ,(int)offsetof(Interp_obj,variables),HX_("variables",b7,e2,62,82)},
	{::hx::fsObject /*  ::haxe::ds::StringMap */ ,(int)offsetof(Interp_obj,imports),HX_("imports",6e,97,ca,69)},
	{::hx::fsObject /*  ::haxe::ds::StringMap */ ,(int)offsetof(Interp_obj,locals),HX_("locals",a8,74,bf,59)},
	{::hx::fsObject /*  ::haxe::ds::StringMap */ ,(int)offsetof(Interp_obj,binops),HX_("binops",cb,59,16,ed)},
	{::hx::fsInt,(int)offsetof(Interp_obj,depth),HX_("depth",03,f1,29,d7)},
	{::hx::fsBool,(int)offsetof(Interp_obj,inTry),HX_("inTry",56,82,08,be)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(Interp_obj,declared),HX_("declared",fa,58,bc,c4)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(Interp_obj,returnValue),HX_("returnValue",a1,4c,95,3e)},
	{::hx::fsObject /*  ::crowplexus::hscript::Expr */ ,(int)offsetof(Interp_obj,curExpr),HX_("curExpr",d5,6e,33,ae)},
	{::hx::fsBool,(int)offsetof(Interp_obj,showPosOnLog),HX_("showPosOnLog",8e,98,0f,fa)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(Interp_obj,usings),HX_("usings",af,26,91,44)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *Interp_obj_sStaticStorageInfo = 0;
#endif

static ::String Interp_obj_sMemberFields[] = {
	HX_("variables",b7,e2,62,82),
	HX_("imports",6e,97,ca,69),
	HX_("locals",a8,74,bf,59),
	HX_("binops",cb,59,16,ed),
	HX_("depth",03,f1,29,d7),
	HX_("inTry",56,82,08,be),
	HX_("declared",fa,58,bc,c4),
	HX_("returnValue",a1,4c,95,3e),
	HX_("curExpr",d5,6e,33,ae),
	HX_("showPosOnLog",8e,98,0f,fa),
	HX_("resetVariables",e8,46,d3,dc),
	HX_("posInfos",11,82,2e,5a),
	HX_("initOps",02,63,8b,cb),
	HX_("setVar",65,6c,71,6f),
	HX_("assign",2f,46,06,4c),
	HX_("assignOp",30,b5,c7,0e),
	HX_("evalAssignOp",ec,d8,94,19),
	HX_("increment",2f,06,ff,31),
	HX_("execute",35,0a,0d,cc),
	HX_("exprReturn",c5,6b,ed,86),
	HX_("duplicate",8b,21,17,a1),
	HX_("restore",4e,67,b0,6a),
	HX_("error",c8,cb,29,73),
	HX_("warn",46,62,f2,4e),
	HX_("rethrow",93,b0,2a,f6),
	HX_("resolve",ec,12,60,67),
	HX_("getOrImportClass",ba,95,ef,66),
	HX_("expr",35,fd,1d,43),
	HX_("doWhileLoop",aa,01,97,3a),
	HX_("whileLoop",b5,42,98,e1),
	HX_("makeIterator",fc,dd,72,d8),
	HX_("forLoop",0d,52,69,c9),
	HX_("isMap",d2,34,51,c1),
	HX_("getMapValue",eb,b1,ee,ce),
	HX_("setMapValue",f7,b8,5b,d9),
	HX_("get",96,80,4e,00),
	HX_("set",a2,9b,57,00),
	HX_("registerUsingLocal",ca,d1,e4,a6),
	HX_("useUsing",7d,d7,a0,71),
	HX_("usings",af,26,91,44),
	HX_("fcall",04,44,99,fc),
	HX_("call",9e,18,ba,41),
	HX_("cnew",dd,ef,c3,41),
	::String(null()) };

::hx::Class Interp_obj::__mClass;

void Interp_obj::__register()
{
	Interp_obj _hx_dummy;
	Interp_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("crowplexus.hscript.Interp",59,23,fd,c5);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Interp_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Interp_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Interp_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Interp_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace crowplexus
} // end namespace hscript

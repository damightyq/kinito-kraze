// Generated by Haxe 4.3.4
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_StringBuf
#include <StringBuf.h>
#endif
#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_CType
#include <crowplexus/hscript/CType.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_Const
#include <crowplexus/hscript/Const.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_EnumType
#include <crowplexus/hscript/EnumType.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_Error
#include <crowplexus/hscript/Error.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_ErrorDef
#include <crowplexus/hscript/ErrorDef.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_Expr
#include <crowplexus/hscript/Expr.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_ExprDef
#include <crowplexus/hscript/ExprDef.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_FieldKind
#include <crowplexus/hscript/FieldKind.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_ModuleDecl
#include <crowplexus/hscript/ModuleDecl.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_ObjectDecl
#include <crowplexus/hscript/ObjectDecl.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_Parser
#include <crowplexus/hscript/Parser.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_PreprocessStackValue
#include <crowplexus/hscript/PreprocessStackValue.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_SwitchCase
#include <crowplexus/hscript/SwitchCase.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_Token
#include <crowplexus/hscript/Token.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_TokenPos
#include <crowplexus/hscript/TokenPos.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_Tools
#include <crowplexus/hscript/Tools.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_haxe_ds_List
#include <haxe/ds/List.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_65_new,"crowplexus.hscript.Parser","new",0xbfe7e956,"crowplexus.hscript.Parser.new","crowplexus/hscript/Parser.hx",65,0x2e3b7998)
static const ::String _hx_array_data_14ff4664_3[] = {
	HX_("%",25,00,00,00),
};
static const ::String _hx_array_data_14ff4664_4[] = {
	HX_("*",2a,00,00,00),HX_("/",2f,00,00,00),
};
static const ::String _hx_array_data_14ff4664_5[] = {
	HX_("+",2b,00,00,00),HX_("-",2d,00,00,00),
};
static const ::String _hx_array_data_14ff4664_6[] = {
	HX_("<<",80,34,00,00),HX_(">>",40,36,00,00),HX_(">>>",fe,41,2f,00),
};
static const ::String _hx_array_data_14ff4664_7[] = {
	HX_("|",7c,00,00,00),HX_("&",26,00,00,00),HX_("^",5e,00,00,00),
};
static const ::String _hx_array_data_14ff4664_8[] = {
	HX_("==",60,35,00,00),HX_("!=",fc,1c,00,00),HX_(">",3e,00,00,00),HX_("<",3c,00,00,00),HX_(">=",3f,36,00,00),HX_("<=",81,34,00,00),
};
static const ::String _hx_array_data_14ff4664_9[] = {
	HX_("...",ee,0f,23,00),
};
static const ::String _hx_array_data_14ff4664_10[] = {
	HX_("&&",40,21,00,00),
};
static const ::String _hx_array_data_14ff4664_11[] = {
	HX_("||",80,6c,00,00),
};
static const ::String _hx_array_data_14ff4664_12[] = {
	HX_("->",71,27,00,00),
};
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_185_error,"crowplexus.hscript.Parser","error",0x52ae8e3e,"crowplexus.hscript.Parser.error","crowplexus/hscript/Parser.hx",185,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_194_invalidChar,"crowplexus.hscript.Parser","invalidChar",0x7335ac63,"crowplexus.hscript.Parser.invalidChar","crowplexus/hscript/Parser.hx",194,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_197_initParser,"crowplexus.hscript.Parser","initParser",0xbde689d9,"crowplexus.hscript.Parser.initParser","crowplexus/hscript/Parser.hx",197,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_221_parseString,"crowplexus.hscript.Parser","parseString",0x55d3d45a,"crowplexus.hscript.Parser.parseString","crowplexus/hscript/Parser.hx",221,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_236_unexpected,"crowplexus.hscript.Parser","unexpected",0x920ca79b,"crowplexus.hscript.Parser.unexpected","crowplexus/hscript/Parser.hx",236,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_241_push,"crowplexus.hscript.Parser","push",0x2c62d024,"crowplexus.hscript.Parser.push","crowplexus/hscript/Parser.hx",241,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_251_ensure,"crowplexus.hscript.Parser","ensure",0xb9215a88,"crowplexus.hscript.Parser.ensure","crowplexus/hscript/Parser.hx",251,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_257_ensureToken,"crowplexus.hscript.Parser","ensureToken",0xb59a6b51,"crowplexus.hscript.Parser.ensureToken","crowplexus/hscript/Parser.hx",257,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_263_maybe,"crowplexus.hscript.Parser","maybe",0xe2abd61e,"crowplexus.hscript.Parser.maybe","crowplexus/hscript/Parser.hx",263,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_271_getIdent,"crowplexus.hscript.Parser","getIdent",0x4baffdc4,"crowplexus.hscript.Parser.getIdent","crowplexus/hscript/Parser.hx",271,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_277_extractIdent,"crowplexus.hscript.Parser","extractIdent",0x47b66a39,"crowplexus.hscript.Parser.extractIdent","crowplexus/hscript/Parser.hx",277,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_288_expr,"crowplexus.hscript.Parser","expr",0x251fbb7f,"crowplexus.hscript.Parser.expr","crowplexus/hscript/Parser.hx",288,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_296_pmin,"crowplexus.hscript.Parser","pmin",0x2c5cb56c,"crowplexus.hscript.Parser.pmin","crowplexus/hscript/Parser.hx",296,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_304_pmax,"crowplexus.hscript.Parser","pmax",0x2c5cae7e,"crowplexus.hscript.Parser.pmax","crowplexus/hscript/Parser.hx",304,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_310_mk,"crowplexus.hscript.Parser","mk",0x5b8d1728,"crowplexus.hscript.Parser.mk","crowplexus/hscript/Parser.hx",310,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_330_isBlock,"crowplexus.hscript.Parser","isBlock",0xad94e4f9,"crowplexus.hscript.Parser.isBlock","crowplexus/hscript/Parser.hx",330,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_351_parseFullExpr,"crowplexus.hscript.Parser","parseFullExpr",0xccbde62d,"crowplexus.hscript.Parser.parseFullExpr","crowplexus/hscript/Parser.hx",351,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_373_parseObject,"crowplexus.hscript.Parser","parseObject",0x59e32a48,"crowplexus.hscript.Parser.parseObject","crowplexus/hscript/Parser.hx",373,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_409_parseExpr,"crowplexus.hscript.Parser","parseExpr",0x6a1a847e,"crowplexus.hscript.Parser.parseExpr","crowplexus/hscript/Parser.hx",409,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_547_parseLambda,"crowplexus.hscript.Parser","parseLambda",0x9563de90,"crowplexus.hscript.Parser.parseLambda","crowplexus/hscript/Parser.hx",547,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_567_parseMetaArgs,"crowplexus.hscript.Parser","parseMetaArgs",0x9e90aa8b,"crowplexus.hscript.Parser.parseMetaArgs","crowplexus/hscript/Parser.hx",567,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_591_mapCompr,"crowplexus.hscript.Parser","mapCompr",0xf5ff4f91,"crowplexus.hscript.Parser.mapCompr","crowplexus/hscript/Parser.hx",591,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_613_makeUnop,"crowplexus.hscript.Parser","makeUnop",0x78a77012,"crowplexus.hscript.Parser.makeUnop","crowplexus/hscript/Parser.hx",613,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_623_makeBinop,"crowplexus.hscript.Parser","makeBinop",0x25eec650,"crowplexus.hscript.Parser.makeBinop","crowplexus/hscript/Parser.hx",623,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_637_parseStructure,"crowplexus.hscript.Parser","parseStructure",0xac96c44a,"crowplexus.hscript.Parser.parseStructure","crowplexus/hscript/Parser.hx",637,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_991_parseExprNext,"crowplexus.hscript.Parser","parseExprNext",0x24054c91,"crowplexus.hscript.Parser.parseExprNext","crowplexus/hscript/Parser.hx",991,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1040_parseFunctionArgs,"crowplexus.hscript.Parser","parseFunctionArgs",0x1fa248de,"crowplexus.hscript.Parser.parseFunctionArgs","crowplexus/hscript/Parser.hx",1040,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1084_parseFunctionDecl,"crowplexus.hscript.Parser","parseFunctionDecl",0x21940beb,"crowplexus.hscript.Parser.parseFunctionDecl","crowplexus/hscript/Parser.hx",1084,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1098_parsePath,"crowplexus.hscript.Parser","parsePath",0x714e6cee,"crowplexus.hscript.Parser.parsePath","crowplexus/hscript/Parser.hx",1098,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1111_parseType,"crowplexus.hscript.Parser","parseType",0x74057a03,"crowplexus.hscript.Parser.parseType","crowplexus/hscript/Parser.hx",1111,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1161_parseType,"crowplexus.hscript.Parser","parseType",0x74057a03,"crowplexus.hscript.Parser.parseType","crowplexus/hscript/Parser.hx",1161,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1258_parseTypeNext,"crowplexus.hscript.Parser","parseTypeNext",0x2b59e896,"crowplexus.hscript.Parser.parseTypeNext","crowplexus/hscript/Parser.hx",1258,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1284_parseExprList,"crowplexus.hscript.Parser","parseExprList",0x22b5e3fc,"crowplexus.hscript.Parser.parseExprList","crowplexus/hscript/Parser.hx",1284,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1307_parseModule,"crowplexus.hscript.Parser","parseModule",0x0576e035,"crowplexus.hscript.Parser.parseModule","crowplexus/hscript/Parser.hx",1307,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1324_parseMetadata,"crowplexus.hscript.Parser","parseMetadata",0xb5a64738,"crowplexus.hscript.Parser.parseMetadata","crowplexus/hscript/Parser.hx",1324,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1339_parseParams,"crowplexus.hscript.Parser","parseParams",0x321ea6cf,"crowplexus.hscript.Parser.parseParams","crowplexus/hscript/Parser.hx",1339,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1345_parseModuleDecl,"crowplexus.hscript.Parser","parseModuleDecl",0x6be31b3f,"crowplexus.hscript.Parser.parseModuleDecl","crowplexus/hscript/Parser.hx",1345,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1439_parseField,"crowplexus.hscript.Parser","parseField",0xf68d6d51,"crowplexus.hscript.Parser.parseField","crowplexus/hscript/Parser.hx",1439,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1514_readChar,"crowplexus.hscript.Parser","readChar",0x9e16e496,"crowplexus.hscript.Parser.readChar","crowplexus/hscript/Parser.hx",1514,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1517_readString,"crowplexus.hscript.Parser","readString",0xd6c49e91,"crowplexus.hscript.Parser.readString","crowplexus/hscript/Parser.hx",1517,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1588_token,"crowplexus.hscript.Parser","token",0xf3b0456f,"crowplexus.hscript.Parser.token","crowplexus/hscript/Parser.hx",1588,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1602__token,"crowplexus.hscript.Parser","_token",0xc4b82f04,"crowplexus.hscript.Parser._token","crowplexus/hscript/Parser.hx",1602,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1889_preprocValue,"crowplexus.hscript.Parser","preprocValue",0x990303c2,"crowplexus.hscript.Parser.preprocValue","crowplexus/hscript/Parser.hx",1889,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1894_parsePreproCond,"crowplexus.hscript.Parser","parsePreproCond",0xb6623ef5,"crowplexus.hscript.Parser.parsePreproCond","crowplexus/hscript/Parser.hx",1894,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1910_evalPreproCond,"crowplexus.hscript.Parser","evalPreproCond",0xd1786472,"crowplexus.hscript.Parser.evalPreproCond","crowplexus/hscript/Parser.hx",1910,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1928_preprocess,"crowplexus.hscript.Parser","preprocess",0x5e5f6e76,"crowplexus.hscript.Parser.preprocess","crowplexus/hscript/Parser.hx",1928,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1960_skipTokens,"crowplexus.hscript.Parser","skipTokens",0xc6039d03,"crowplexus.hscript.Parser.skipTokens","crowplexus/hscript/Parser.hx",1960,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1982_tokenComment,"crowplexus.hscript.Parser","tokenComment",0x96b378b0,"crowplexus.hscript.Parser.tokenComment","crowplexus/hscript/Parser.hx",1982,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_2027_constString,"crowplexus.hscript.Parser","constString",0x7297418a,"crowplexus.hscript.Parser.constString","crowplexus/hscript/Parser.hx",2027,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_2038_tokenString,"crowplexus.hscript.Parser","tokenString",0x6e451fa0,"crowplexus.hscript.Parser.tokenString","crowplexus/hscript/Parser.hx",2038,0x2e3b7998)
namespace crowplexus{
namespace hscript{

void Parser_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_65_new)
HXLINE( 115)		this->uid = 0;
HXLINE( 106)		this->packageName = null();
HXLINE(  81)		this->preprocesorValues =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE( 136)		this->line = 1;
HXLINE( 137)		this->opChars = HX_("+*/-=!><&|^%~",e2,ec,c4,dc);
HXLINE( 138)		this->identChars = HX_("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_",e0,b5,3b,15);
HXLINE( 139)		::Array< ::Dynamic> priorities = ::Array_obj< ::Dynamic>::__new(11)->init(0,::Array_obj< ::String >::fromData( _hx_array_data_14ff4664_3,1))->init(1,::Array_obj< ::String >::fromData( _hx_array_data_14ff4664_4,2))->init(2,::Array_obj< ::String >::fromData( _hx_array_data_14ff4664_5,2))->init(3,::Array_obj< ::String >::fromData( _hx_array_data_14ff4664_6,3))->init(4,::Array_obj< ::String >::fromData( _hx_array_data_14ff4664_7,3))->init(5,::Array_obj< ::String >::fromData( _hx_array_data_14ff4664_8,6))->init(6,::Array_obj< ::String >::fromData( _hx_array_data_14ff4664_9,1))->init(7,::Array_obj< ::String >::fromData( _hx_array_data_14ff4664_10,1))->init(8,::Array_obj< ::String >::fromData( _hx_array_data_14ff4664_11,1))->init(9,::Array_obj< ::String >::__new(14)->init(0,HX_("=",3d,00,00,00))->init(1,HX_("+=",b2,25,00,00))->init(2,HX_("-=",70,27,00,00))->init(3,HX_("*=",d3,24,00,00))->init(4,HX_("/=",2e,29,00,00))->init(5,HX_("%=",78,20,00,00))->init(6,(HX_("??",20,37,00,00) + HX_("=",3d,00,00,00)))->init(7,HX_("<<=",bd,bb,2d,00))->init(8,HX_(">>=",fd,41,2f,00))->init(9,HX_(">>>=",7f,7c,2a,29))->init(10,HX_("|=",41,6c,00,00))->init(11,HX_("&=",57,21,00,00))->init(12,HX_("^=",1f,52,00,00))->init(13,HX_("=>",61,35,00,00)))->init(10,::Array_obj< ::String >::fromData( _hx_array_data_14ff4664_12,1));
HXLINE( 168)		this->opPriority =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE( 169)		this->opRightAssoc =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE( 174)		{
HXLINE( 174)			int _g = 0;
HXDLIN( 174)			int _g1 = priorities->length;
HXDLIN( 174)			while((_g < _g1)){
HXLINE( 174)				_g = (_g + 1);
HXDLIN( 174)				int i = (_g - 1);
HXLINE( 175)				{
HXLINE( 175)					int _g2 = 0;
HXDLIN( 175)					::Array< ::String > _g3 = priorities->__get(i).StaticCast< ::Array< ::String > >();
HXDLIN( 175)					while((_g2 < _g3->length)){
HXLINE( 175)						::String x = _g3->__get(_g2);
HXDLIN( 175)						_g2 = (_g2 + 1);
HXLINE( 176)						this->opPriority->set(x,i);
HXLINE( 177)						if ((i == 9)) {
HXLINE( 178)							this->opRightAssoc->set(x,true);
            						}
            					}
            				}
            			}
            		}
HXLINE( 180)		{
HXLINE( 180)			{
HXLINE( 180)				::String x1 = HX_("!",21,00,00,00);
HXLINE( 181)				{
HXLINE( 181)					int _hx_tmp;
HXDLIN( 181)					bool _hx_tmp1;
HXDLIN( 181)					if ((x1 != HX_("++",a0,25,00,00))) {
HXLINE( 181)						_hx_tmp1 = (x1 == HX_("--",60,27,00,00));
            					}
            					else {
HXLINE( 181)						_hx_tmp1 = true;
            					}
HXDLIN( 181)					if (_hx_tmp1) {
HXLINE( 181)						_hx_tmp = -1;
            					}
            					else {
HXLINE( 181)						_hx_tmp = -2;
            					}
HXDLIN( 181)					this->opPriority->set(x1,_hx_tmp);
            				}
            			}
HXLINE( 180)			{
HXLINE( 180)				::String x2 = HX_("++",a0,25,00,00);
HXLINE( 181)				{
HXLINE( 181)					int _hx_tmp2;
HXDLIN( 181)					bool _hx_tmp3;
HXDLIN( 181)					if ((x2 != HX_("++",a0,25,00,00))) {
HXLINE( 181)						_hx_tmp3 = (x2 == HX_("--",60,27,00,00));
            					}
            					else {
HXLINE( 181)						_hx_tmp3 = true;
            					}
HXDLIN( 181)					if (_hx_tmp3) {
HXLINE( 181)						_hx_tmp2 = -1;
            					}
            					else {
HXLINE( 181)						_hx_tmp2 = -2;
            					}
HXDLIN( 181)					this->opPriority->set(x2,_hx_tmp2);
            				}
            			}
HXLINE( 180)			{
HXLINE( 180)				::String x3 = HX_("--",60,27,00,00);
HXLINE( 181)				{
HXLINE( 181)					int _hx_tmp4;
HXDLIN( 181)					bool _hx_tmp5;
HXDLIN( 181)					if ((x3 != HX_("++",a0,25,00,00))) {
HXLINE( 181)						_hx_tmp5 = (x3 == HX_("--",60,27,00,00));
            					}
            					else {
HXLINE( 181)						_hx_tmp5 = true;
            					}
HXDLIN( 181)					if (_hx_tmp5) {
HXLINE( 181)						_hx_tmp4 = -1;
            					}
            					else {
HXLINE( 181)						_hx_tmp4 = -2;
            					}
HXDLIN( 181)					this->opPriority->set(x3,_hx_tmp4);
            				}
            			}
HXLINE( 180)			{
HXLINE( 180)				::String x4 = HX_("~",7e,00,00,00);
HXLINE( 181)				{
HXLINE( 181)					int _hx_tmp6;
HXDLIN( 181)					bool _hx_tmp7;
HXDLIN( 181)					if ((x4 != HX_("++",a0,25,00,00))) {
HXLINE( 181)						_hx_tmp7 = (x4 == HX_("--",60,27,00,00));
            					}
            					else {
HXLINE( 181)						_hx_tmp7 = true;
            					}
HXDLIN( 181)					if (_hx_tmp7) {
HXLINE( 181)						_hx_tmp6 = -1;
            					}
            					else {
HXLINE( 181)						_hx_tmp6 = -2;
            					}
HXDLIN( 181)					this->opPriority->set(x4,_hx_tmp6);
            				}
            			}
            		}
            	}

Dynamic Parser_obj::__CreateEmpty() { return new Parser_obj; }

void *Parser_obj::_hx_vtable = 0;

Dynamic Parser_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Parser_obj > _hx_result = new Parser_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Parser_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x25dae6ce;
}

void Parser_obj::error( ::crowplexus::hscript::ErrorDef err,int pmin,int pmax){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_185_error)
HXDLIN( 185)		if (!(this->resumeErrors)) {
HXLINE( 187)			HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,err,pmin,pmax,this->origin,this->line));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC3(Parser_obj,error,(void))

void Parser_obj::invalidChar(int c){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_194_invalidChar)
HXDLIN( 194)		if (!(this->resumeErrors)) {
HXDLIN( 194)			HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::EInvalidChar(c),(this->readPos - 1),(this->readPos - 1),this->origin,this->line));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,invalidChar,(void))

void Parser_obj::initParser(::String origin){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_197_initParser)
HXLINE( 199)		this->preprocStack = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 201)		this->origin = origin;
HXLINE( 202)		this->readPos = 0;
HXLINE( 203)		this->tokenMin = (this->oldTokenMin = 0);
HXLINE( 204)		this->tokenMax = (this->oldTokenMax = 0);
HXLINE( 205)		this->tokens =  ::haxe::ds::List_obj::__alloc( HX_CTX );
HXLINE( 211)		this->_hx_char = -1;
HXLINE( 212)		this->ops = ::Array_obj< bool >::__new();
HXLINE( 213)		this->idents = ::Array_obj< bool >::__new();
HXLINE( 214)		this->uid = 0;
HXLINE( 215)		{
HXLINE( 215)			int _g = 0;
HXDLIN( 215)			int _g1 = this->opChars.length;
HXDLIN( 215)			while((_g < _g1)){
HXLINE( 215)				_g = (_g + 1);
HXDLIN( 215)				int i = (_g - 1);
HXLINE( 216)				this->ops[( (int)(this->opChars.charCodeAt(i)) )] = true;
            			}
            		}
HXLINE( 217)		{
HXLINE( 217)			int _g2 = 0;
HXDLIN( 217)			int _g3 = this->identChars.length;
HXDLIN( 217)			while((_g2 < _g3)){
HXLINE( 217)				_g2 = (_g2 + 1);
HXDLIN( 217)				int i1 = (_g2 - 1);
HXLINE( 218)				this->idents[( (int)(this->identChars.charCodeAt(i1)) )] = true;
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,initParser,(void))

 ::crowplexus::hscript::Expr Parser_obj::parseString(::String s,::String __o_origin){
            		::String origin = __o_origin;
            		if (::hx::IsNull(__o_origin)) origin = HX_("hscript",73,8c,18,2c);
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_221_parseString)
HXLINE( 222)		this->initParser(origin);
HXLINE( 223)		this->input = s;
HXLINE( 224)		this->readPos = 0;
HXLINE( 225)		::Array< ::Dynamic> a = ::Array_obj< ::Dynamic>::__new();
HXLINE( 226)		while(true){
HXLINE( 227)			 ::crowplexus::hscript::Token tk = this->token();
HXLINE( 228)			if (::hx::IsPointerEq( tk,::crowplexus::hscript::Token_obj::TEof_dyn() )) {
HXLINE( 229)				goto _hx_goto_18;
            			}
HXLINE( 230)			{
HXLINE( 230)				 ::haxe::ds::List _hx_tmp = this->tokens;
HXDLIN( 230)				_hx_tmp->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN( 230)				this->tokenMin = this->oldTokenMin;
HXDLIN( 230)				this->tokenMax = this->oldTokenMax;
            			}
HXLINE( 231)			this->parseFullExpr(a);
            		}
            		_hx_goto_18:;
HXLINE( 233)		if ((a->length == 1)) {
HXLINE( 233)			return a->__get(0).StaticCast<  ::crowplexus::hscript::Expr >();
            		}
            		else {
HXLINE( 233)			 ::crowplexus::hscript::ExprDef e = ::crowplexus::hscript::ExprDef_obj::EBlock(a);
HXDLIN( 233)			 ::Dynamic pmin = 0;
HXDLIN( 233)			 ::Dynamic pmax = null();
HXDLIN( 233)			if (::hx::IsNull( e )) {
HXLINE( 233)				return null();
            			}
            			else {
HXLINE( 233)				if (::hx::IsNull( pmin )) {
HXLINE( 233)					pmin = this->tokenMin;
            				}
HXDLIN( 233)				if (::hx::IsNull( pmax )) {
HXLINE( 233)					pmax = this->tokenMax;
            				}
HXDLIN( 233)				return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e,( (int)(pmin) ),( (int)(pmax) ),this->origin,this->line);
            			}
            		}
HXDLIN( 233)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC2(Parser_obj,parseString,return )

 ::Dynamic Parser_obj::unexpected( ::crowplexus::hscript::Token tk){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_236_unexpected)
HXLINE( 237)		{
HXLINE( 237)			 ::crowplexus::hscript::ErrorDef err = ::crowplexus::hscript::ErrorDef_obj::EUnexpected(this->tokenString(tk));
HXDLIN( 237)			if (!(this->resumeErrors)) {
HXLINE( 237)				HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,err,this->tokenMin,this->tokenMax,this->origin,this->line));
            			}
            		}
HXLINE( 238)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,unexpected,return )

void Parser_obj::push( ::crowplexus::hscript::Token tk){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_241_push)
HXLINE( 243)		 ::haxe::ds::List _hx_tmp = this->tokens;
HXDLIN( 243)		_hx_tmp->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXLINE( 244)		this->tokenMin = this->oldTokenMin;
HXLINE( 245)		this->tokenMax = this->oldTokenMax;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,push,(void))

void Parser_obj::ensure( ::crowplexus::hscript::Token tk){
            	HX_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_251_ensure)
HXLINE( 252)		 ::crowplexus::hscript::Token t = this->token();
HXLINE( 253)		if (::hx::IsPointerNotEq( t,tk )) {
HXLINE( 254)			this->unexpected(t);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,ensure,(void))

void Parser_obj::ensureToken( ::crowplexus::hscript::Token tk){
            	HX_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_257_ensureToken)
HXLINE( 258)		 ::crowplexus::hscript::Token t = this->token();
HXLINE( 259)		if (!(__hxcpp_enum_eq(t,tk))) {
HXLINE( 260)			this->unexpected(t);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,ensureToken,(void))

bool Parser_obj::maybe( ::crowplexus::hscript::Token tk){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_263_maybe)
HXLINE( 264)		 ::crowplexus::hscript::Token t = this->token();
HXLINE( 265)		if (__hxcpp_enum_eq(t,tk)) {
HXLINE( 266)			return true;
            		}
HXLINE( 267)		{
HXLINE( 267)			 ::haxe::ds::List _hx_tmp = this->tokens;
HXDLIN( 267)			_hx_tmp->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,t,this->tokenMin,this->tokenMax));
HXDLIN( 267)			this->tokenMin = this->oldTokenMin;
HXDLIN( 267)			this->tokenMax = this->oldTokenMax;
            		}
HXLINE( 268)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,maybe,return )

::String Parser_obj::getIdent(){
            	HX_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_271_getIdent)
HXLINE( 272)		 ::crowplexus::hscript::Token tk = this->token();
HXLINE( 273)		return this->extractIdent(tk);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,getIdent,return )

::String Parser_obj::extractIdent( ::crowplexus::hscript::Token tk){
            	HX_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_277_extractIdent)
HXDLIN( 277)		if ((tk->_hx_getIndex() == 2)) {
HXLINE( 278)			::String id = tk->_hx_getString(0);
HXLINE( 279)			return id;
            		}
            		else {
HXLINE( 281)			this->unexpected(tk);
HXLINE( 282)			return null();
            		}
HXLINE( 277)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,extractIdent,return )

 ::crowplexus::hscript::ExprDef Parser_obj::expr( ::crowplexus::hscript::Expr e){
            	HX_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_288_expr)
HXDLIN( 288)		return e->e;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,expr,return )

int Parser_obj::pmin( ::crowplexus::hscript::Expr e){
            	HX_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_296_pmin)
HXDLIN( 296)		if (::hx::IsNull( e )) {
HXDLIN( 296)			return 0;
            		}
            		else {
HXDLIN( 296)			return e->pmin;
            		}
HXDLIN( 296)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,pmin,return )

int Parser_obj::pmax( ::crowplexus::hscript::Expr e){
            	HX_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_304_pmax)
HXDLIN( 304)		if (::hx::IsNull( e )) {
HXDLIN( 304)			return 0;
            		}
            		else {
HXDLIN( 304)			return e->pmax;
            		}
HXDLIN( 304)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,pmax,return )

 ::crowplexus::hscript::Expr Parser_obj::mk( ::crowplexus::hscript::ExprDef e, ::Dynamic pmin, ::Dynamic pmax){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_310_mk)
HXLINE( 312)		if (::hx::IsNull( e )) {
HXLINE( 313)			return null();
            		}
HXLINE( 314)		if (::hx::IsNull( pmin )) {
HXLINE( 315)			pmin = this->tokenMin;
            		}
HXLINE( 316)		if (::hx::IsNull( pmax )) {
HXLINE( 317)			pmax = this->tokenMax;
            		}
HXLINE( 318)		return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e,( (int)(pmin) ),( (int)(pmax) ),this->origin,this->line);
            	}


HX_DEFINE_DYNAMIC_FUNC3(Parser_obj,mk,return )

bool Parser_obj::isBlock( ::crowplexus::hscript::Expr e){
            	HX_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_330_isBlock)
HXLINE( 331)		if (::hx::IsNull( e )) {
HXLINE( 332)			return false;
            		}
HXLINE( 333)		 ::crowplexus::hscript::ExprDef _g = e->e;
HXDLIN( 333)		switch((int)(_g->_hx_getIndex())){
            			case (int)0: {
HXLINE( 346)				bool skipSemicolon = _g->_hx_getBool(0);
HXDLIN( 346)				return skipSemicolon;
            			}
            			break;
            			case (int)4: {
HXLINE( 336)				::String _g1 = _g->_hx_getString(0);
HXDLIN( 336)				 ::Dynamic _g2 = _g->_hx_getObject(3);
HXDLIN( 336)				 ::crowplexus::hscript::CType t = _g->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::CType >();
HXDLIN( 336)				 ::crowplexus::hscript::Expr e1 = _g->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 336)				if (::hx::IsNotNull( e1 )) {
HXLINE( 336)					return this->isBlock(e1);
            				}
            				else {
HXLINE( 336)					if (::hx::IsNotNull( t )) {
HXLINE( 336)						if (::hx::IsNull( t )) {
HXLINE( 336)							return false;
            						}
            						else {
HXLINE( 336)							if ((t->_hx_getIndex() == 2)) {
HXLINE( 336)								::Array< ::Dynamic> _g3 = t->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 336)								return true;
            							}
            							else {
HXLINE( 336)								return false;
            							}
            						}
            					}
            					else {
HXLINE( 336)						return false;
            					}
            				}
            			}
            			break;
            			case (int)6: {
HXLINE( 334)				::Array< ::Dynamic> _g4 = _g->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 334)				return true;
            			}
            			break;
            			case (int)8: {
HXLINE( 338)				::String _g5 = _g->_hx_getString(0);
HXDLIN( 338)				 ::crowplexus::hscript::Expr _g6 = _g->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 338)				 ::crowplexus::hscript::Expr e2 = _g->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 338)				return this->isBlock(e2);
            			}
            			break;
            			case (int)9: {
HXLINE( 339)				::String _g7 = _g->_hx_getString(0);
HXDLIN( 339)				bool prefix = _g->_hx_getBool(1);
HXDLIN( 339)				 ::crowplexus::hscript::Expr e3 = _g->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 339)				if (!(prefix)) {
HXLINE( 339)					return this->isBlock(e3);
            				}
            				else {
HXLINE( 339)					return false;
            				}
            			}
            			break;
            			case (int)11: {
HXLINE( 337)				 ::crowplexus::hscript::Expr _g8 = _g->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 337)				 ::crowplexus::hscript::Expr e11 = _g->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 337)				 ::crowplexus::hscript::Expr e21 = _g->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 337)				if (::hx::IsNotNull( e21 )) {
HXLINE( 337)					return this->isBlock(e21);
            				}
            				else {
HXLINE( 337)					return this->isBlock(e11);
            				}
            			}
            			break;
            			case (int)12: {
HXLINE( 340)				 ::crowplexus::hscript::Expr _g9 = _g->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 340)				 ::crowplexus::hscript::Expr e4 = _g->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 340)				return this->isBlock(e4);
            			}
            			break;
            			case (int)13: {
HXLINE( 342)				::String _g10 = _g->_hx_getString(0);
HXDLIN( 342)				 ::crowplexus::hscript::Expr _g11 = _g->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 342)				 ::crowplexus::hscript::Expr e5 = _g->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 342)				return this->isBlock(e5);
            			}
            			break;
            			case (int)16: {
HXLINE( 335)				::Array< ::Dynamic> _g12 = _g->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 335)				::String _g13 = _g->_hx_getString(2);
HXDLIN( 335)				 ::crowplexus::hscript::CType _g14 = _g->_hx_getObject(3).StaticCast<  ::crowplexus::hscript::CType >();
HXDLIN( 335)				 ::crowplexus::hscript::Expr e6 = _g->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 335)				return this->isBlock(e6);
            			}
            			break;
            			case (int)17: {
HXLINE( 343)				 ::crowplexus::hscript::Expr e7 = _g->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 343)				if (::hx::IsNotNull( e7 )) {
HXLINE( 343)					return this->isBlock(e7);
            				}
            				else {
HXLINE( 343)					return false;
            				}
            			}
            			break;
            			case (int)22: {
HXLINE( 344)				 ::crowplexus::hscript::Expr _g15 = _g->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 344)				::String _g16 = _g->_hx_getString(1);
HXDLIN( 344)				 ::crowplexus::hscript::CType _g17 = _g->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::CType >();
HXDLIN( 344)				 ::crowplexus::hscript::Expr e8 = _g->_hx_getObject(3).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 344)				return this->isBlock(e8);
            			}
            			break;
            			case (int)23: {
HXLINE( 334)				::Array< ::Dynamic> _g18 = _g->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 334)				return true;
            			}
            			break;
            			case (int)25: {
HXLINE( 334)				 ::crowplexus::hscript::Expr _g19 = _g->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 334)				::Array< ::Dynamic> _g20 = _g->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 334)				 ::crowplexus::hscript::Expr _g21 = _g->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 334)				return true;
            			}
            			break;
            			case (int)26: {
HXLINE( 341)				 ::crowplexus::hscript::Expr _g22 = _g->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 341)				 ::crowplexus::hscript::Expr e9 = _g->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 341)				return this->isBlock(e9);
            			}
            			break;
            			case (int)27: {
HXLINE( 345)				::String _g23 = _g->_hx_getString(0);
HXDLIN( 345)				::Array< ::Dynamic> _g24 = _g->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 345)				 ::crowplexus::hscript::Expr e10 = _g->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 345)				return this->isBlock(e10);
            			}
            			break;
            			case (int)29: {
HXLINE( 334)				::String _g25 = _g->_hx_getString(0);
HXDLIN( 334)				::Array< ::Dynamic> _g26 = _g->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 334)				return true;
            			}
            			break;
            			default:{
HXLINE( 347)				return false;
            			}
            		}
HXLINE( 333)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,isBlock,return )

void Parser_obj::parseFullExpr(::Array< ::Dynamic> exprs){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_351_parseFullExpr)
HXLINE( 352)		 ::crowplexus::hscript::Expr e = this->parseExpr();
HXLINE( 353)		 ::crowplexus::hscript::ExprDef _g = e->e;
HXDLIN( 353)		bool _hx_tmp;
HXDLIN( 353)		if ((_g->_hx_getIndex() == 0)) {
HXLINE( 353)			bool _g1 = _g->_hx_getBool(0);
HXDLIN( 353)			_hx_tmp = true;
            		}
            		else {
HXLINE( 353)			_hx_tmp = false;
            		}
HXDLIN( 353)		if (!(_hx_tmp)) {
HXLINE( 354)			exprs->push(e);
            		}
HXLINE( 356)		 ::crowplexus::hscript::Token tk = this->token();
HXLINE( 358)		while(true){
HXLINE( 358)			bool _hx_tmp1;
HXDLIN( 358)			bool _hx_tmp2;
HXDLIN( 358)			if (::hx::IsPointerEq( tk,::crowplexus::hscript::Token_obj::TComma_dyn() )) {
HXLINE( 358)				_hx_tmp2 = ::hx::IsNotNull( e );
            			}
            			else {
HXLINE( 358)				_hx_tmp2 = false;
            			}
HXDLIN( 358)			if (_hx_tmp2) {
HXLINE( 358)				 ::crowplexus::hscript::ExprDef _g2 = e->e;
HXDLIN( 358)				if ((_g2->_hx_getIndex() == 4)) {
HXLINE( 358)					::String _g3 = _g2->_hx_getString(0);
HXDLIN( 358)					 ::crowplexus::hscript::CType _g4 = _g2->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::CType >();
HXDLIN( 358)					 ::crowplexus::hscript::Expr _g5 = _g2->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 358)					 ::Dynamic _g6 = _g2->_hx_getObject(3);
HXDLIN( 358)					_hx_tmp1 = true;
            				}
            				else {
HXLINE( 358)					_hx_tmp1 = false;
            				}
            			}
            			else {
HXLINE( 358)				_hx_tmp1 = false;
            			}
HXDLIN( 358)			if (!(_hx_tmp1)) {
HXLINE( 358)				goto _hx_goto_32;
            			}
HXLINE( 359)			e = this->parseStructure(HX_("var",e7,de,59,00));
HXLINE( 360)			 ::crowplexus::hscript::ExprDef _g7 = e->e;
HXDLIN( 360)			bool _hx_tmp3;
HXDLIN( 360)			if ((_g7->_hx_getIndex() == 0)) {
HXLINE( 360)				bool _g8 = _g7->_hx_getBool(0);
HXDLIN( 360)				_hx_tmp3 = true;
            			}
            			else {
HXLINE( 360)				_hx_tmp3 = false;
            			}
HXDLIN( 360)			if (!(_hx_tmp3)) {
HXLINE( 361)				exprs->push(e);
            			}
HXLINE( 362)			tk = this->token();
            		}
            		_hx_goto_32:;
HXLINE( 365)		bool _hx_tmp4;
HXDLIN( 365)		if (::hx::IsPointerNotEq( tk,::crowplexus::hscript::Token_obj::TSemicolon_dyn() )) {
HXLINE( 365)			_hx_tmp4 = ::hx::IsPointerNotEq( tk,::crowplexus::hscript::Token_obj::TEof_dyn() );
            		}
            		else {
HXLINE( 365)			_hx_tmp4 = false;
            		}
HXDLIN( 365)		if (_hx_tmp4) {
HXLINE( 366)			if (this->isBlock(e)) {
HXLINE( 367)				 ::haxe::ds::List _hx_tmp5 = this->tokens;
HXDLIN( 367)				_hx_tmp5->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN( 367)				this->tokenMin = this->oldTokenMin;
HXDLIN( 367)				this->tokenMax = this->oldTokenMax;
            			}
            			else {
HXLINE( 369)				this->unexpected(tk);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,parseFullExpr,(void))

 ::crowplexus::hscript::Expr Parser_obj::parseObject( ::Dynamic p1){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_373_parseObject)
HXLINE( 375)		::Array< ::Dynamic> fl = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 376)		while(true){
HXLINE( 377)			 ::crowplexus::hscript::Token tk = this->token();
HXLINE( 378)			::String id = null();
HXLINE( 379)			switch((int)(tk->_hx_getIndex())){
            				case (int)1: {
HXLINE( 382)					 ::crowplexus::hscript::Const c = tk->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Const >();
HXDLIN( 382)					{
HXLINE( 383)						if (!(this->allowJSON)) {
HXLINE( 384)							this->unexpected(tk);
            						}
HXLINE( 385)						if ((c->_hx_getIndex() == 2)) {
HXLINE( 386)							::String s = c->_hx_getString(0);
HXDLIN( 386)							id = s;
            						}
            						else {
HXLINE( 387)							this->unexpected(tk);
            						}
            					}
            				}
            				break;
            				case (int)2: {
HXLINE( 380)					::String i = tk->_hx_getString(0);
HXLINE( 381)					id = i;
            				}
            				break;
            				case (int)7: {
HXLINE( 390)					goto _hx_goto_34;
            				}
            				break;
            				default:{
HXLINE( 392)					this->unexpected(tk);
HXLINE( 393)					goto _hx_goto_34;
            				}
            			}
HXLINE( 395)			{
HXLINE( 395)				 ::crowplexus::hscript::Token t = this->token();
HXDLIN( 395)				if (::hx::IsPointerNotEq( t,::crowplexus::hscript::Token_obj::TDoubleDot_dyn() )) {
HXLINE( 395)					this->unexpected(t);
            				}
            			}
HXLINE( 396)			fl->push( ::crowplexus::hscript::ObjectDecl_obj::__alloc( HX_CTX ,id,this->parseExpr()));
HXLINE( 397)			tk = this->token();
HXLINE( 398)			switch((int)(tk->_hx_getIndex())){
            				case (int)7: {
HXLINE( 400)					goto _hx_goto_34;
            				}
            				break;
            				case (int)9: {
            				}
            				break;
            				default:{
HXLINE( 403)					this->unexpected(tk);
            				}
            			}
            		}
            		_hx_goto_34:;
HXLINE( 406)		 ::crowplexus::hscript::ExprDef e = ::crowplexus::hscript::ExprDef_obj::EObject(fl);
HXDLIN( 406)		 ::Dynamic pmin = p1;
HXDLIN( 406)		 ::Dynamic pmax = null();
HXDLIN( 406)		 ::crowplexus::hscript::Expr _hx_tmp;
HXDLIN( 406)		if (::hx::IsNull( e )) {
HXLINE( 406)			_hx_tmp = null();
            		}
            		else {
HXLINE( 406)			if (::hx::IsNull( pmin )) {
HXLINE( 406)				pmin = this->tokenMin;
            			}
HXDLIN( 406)			if (::hx::IsNull( pmax )) {
HXLINE( 406)				pmax = this->tokenMax;
            			}
HXDLIN( 406)			_hx_tmp =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e,( (int)(pmin) ),( (int)(pmax) ),this->origin,this->line);
            		}
HXDLIN( 406)		return this->parseExprNext(_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,parseObject,return )

 ::crowplexus::hscript::Expr Parser_obj::parseExpr(){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_409_parseExpr)
HXLINE( 410)		 ::crowplexus::hscript::Token tk = this->token();
HXLINE( 412)		int p1 = this->tokenMin;
HXLINE( 414)		switch((int)(tk->_hx_getIndex())){
            			case (int)1: {
HXLINE( 420)				 ::crowplexus::hscript::Const c = tk->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Const >();
HXLINE( 421)				 ::crowplexus::hscript::ExprDef e = ::crowplexus::hscript::ExprDef_obj::EConst(c);
HXDLIN( 421)				 ::Dynamic pmin = null();
HXDLIN( 421)				 ::Dynamic pmax = null();
HXDLIN( 421)				 ::crowplexus::hscript::Expr _hx_tmp;
HXDLIN( 421)				if (::hx::IsNull( e )) {
HXLINE( 421)					_hx_tmp = null();
            				}
            				else {
HXLINE( 421)					if (::hx::IsNull( pmin )) {
HXLINE( 421)						pmin = this->tokenMin;
            					}
HXDLIN( 421)					if (::hx::IsNull( pmax )) {
HXLINE( 421)						pmax = this->tokenMax;
            					}
HXDLIN( 421)					_hx_tmp =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e,( (int)(pmin) ),( (int)(pmax) ),this->origin,this->line);
            				}
HXDLIN( 421)				return this->parseExprNext(_hx_tmp);
            			}
            			break;
            			case (int)2: {
HXLINE( 415)				::String id = tk->_hx_getString(0);
HXLINE( 416)				 ::crowplexus::hscript::Expr e1 = this->parseStructure(id);
HXLINE( 417)				if (::hx::IsNull( e1 )) {
HXLINE( 418)					 ::crowplexus::hscript::ExprDef e2 = ::crowplexus::hscript::ExprDef_obj::EIdent(id);
HXDLIN( 418)					 ::Dynamic pmin1 = null();
HXDLIN( 418)					 ::Dynamic pmax1 = null();
HXDLIN( 418)					if (::hx::IsNull( e2 )) {
HXLINE( 418)						e1 = null();
            					}
            					else {
HXLINE( 418)						if (::hx::IsNull( pmin1 )) {
HXLINE( 418)							pmin1 = this->tokenMin;
            						}
HXDLIN( 418)						if (::hx::IsNull( pmax1 )) {
HXLINE( 418)							pmax1 = this->tokenMax;
            						}
HXDLIN( 418)						e1 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e2,( (int)(pmin1) ),( (int)(pmax1) ),this->origin,this->line);
            					}
            				}
HXLINE( 419)				return this->parseExprNext(e1);
            			}
            			break;
            			case (int)3: {
HXLINE( 498)				::String op = tk->_hx_getString(0);
HXLINE( 499)				if ((op == HX_("-",2d,00,00,00))) {
HXLINE( 500)					int start = this->tokenMin;
HXLINE( 501)					 ::crowplexus::hscript::Expr e3 = this->parseExpr();
HXLINE( 502)					if (::hx::IsNull( e3 )) {
HXLINE( 503)						return this->makeUnop(op,e3);
            					}
HXLINE( 504)					 ::crowplexus::hscript::ExprDef _g = e3->e;
HXDLIN( 504)					if ((_g->_hx_getIndex() == 1)) {
HXLINE( 507)						 ::crowplexus::hscript::Const _g1 = _g->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Const >();
HXDLIN( 507)						switch((int)(_g1->_hx_getIndex())){
            							case (int)0: {
HXLINE( 505)								int i = _g1->_hx_getInt(0);
HXLINE( 506)								 ::crowplexus::hscript::ExprDef e4 = ::crowplexus::hscript::ExprDef_obj::EConst(::crowplexus::hscript::Const_obj::CInt(-(i)));
HXDLIN( 506)								 ::Dynamic pmin2 = start;
HXDLIN( 506)								 ::Dynamic pmax2;
HXDLIN( 506)								if (::hx::IsNull( e3 )) {
HXLINE( 506)									pmax2 = 0;
            								}
            								else {
HXLINE( 506)									pmax2 = e3->pmax;
            								}
HXDLIN( 506)								if (::hx::IsNull( e4 )) {
HXLINE( 506)									return null();
            								}
            								else {
HXLINE( 506)									if (::hx::IsNull( pmin2 )) {
HXLINE( 506)										pmin2 = this->tokenMin;
            									}
HXDLIN( 506)									if (::hx::IsNull( pmax2 )) {
HXLINE( 506)										pmax2 = this->tokenMax;
            									}
HXDLIN( 506)									return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e4,( (int)(pmin2) ),( (int)(pmax2) ),this->origin,this->line);
            								}
            							}
            							break;
            							case (int)1: {
HXLINE( 507)								Float f = _g1->_hx_getFloat(0);
HXLINE( 508)								 ::crowplexus::hscript::ExprDef e5 = ::crowplexus::hscript::ExprDef_obj::EConst(::crowplexus::hscript::Const_obj::CFloat(-(f)));
HXDLIN( 508)								 ::Dynamic pmin3 = start;
HXDLIN( 508)								 ::Dynamic pmax3;
HXDLIN( 508)								if (::hx::IsNull( e3 )) {
HXLINE( 508)									pmax3 = 0;
            								}
            								else {
HXLINE( 508)									pmax3 = e3->pmax;
            								}
HXDLIN( 508)								if (::hx::IsNull( e5 )) {
HXLINE( 508)									return null();
            								}
            								else {
HXLINE( 508)									if (::hx::IsNull( pmin3 )) {
HXLINE( 508)										pmin3 = this->tokenMin;
            									}
HXDLIN( 508)									if (::hx::IsNull( pmax3 )) {
HXLINE( 508)										pmax3 = this->tokenMax;
            									}
HXDLIN( 508)									return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e5,( (int)(pmin3) ),( (int)(pmax3) ),this->origin,this->line);
            								}
            							}
            							break;
            							default:{
HXLINE( 510)								return this->makeUnop(op,e3);
            							}
            						}
            					}
            					else {
HXLINE( 510)						return this->makeUnop(op,e3);
            					}
            				}
HXLINE( 513)				if (::hx::IsLess( this->opPriority->get(op),0 )) {
HXLINE( 514)					return this->makeUnop(op,this->parseExpr());
            				}
HXLINE( 515)				return ( ( ::crowplexus::hscript::Expr)(this->unexpected(tk)) );
            			}
            			break;
            			case (int)4: {
HXLINE( 423)				tk = this->token();
HXLINE( 424)				if (::hx::IsPointerEq( tk,::crowplexus::hscript::Token_obj::TPClose_dyn() )) {
HXLINE( 425)					{
HXLINE( 425)						 ::crowplexus::hscript::Token t = this->token();
HXDLIN( 425)						if (!(__hxcpp_enum_eq(t,::crowplexus::hscript::Token_obj::TOp(HX_("->",71,27,00,00))))) {
HXLINE( 425)							this->unexpected(t);
            						}
            					}
HXLINE( 426)					 ::crowplexus::hscript::Expr eret = this->parseExpr();
HXLINE( 427)					 ::crowplexus::hscript::ExprDef e6 = ::crowplexus::hscript::ExprDef_obj::EReturn(eret);
HXDLIN( 427)					 ::Dynamic pmin4 = p1;
HXDLIN( 427)					 ::Dynamic pmax4 = null();
HXDLIN( 427)					 ::crowplexus::hscript::Expr e7;
HXDLIN( 427)					if (::hx::IsNull( e6 )) {
HXLINE( 427)						e7 = null();
            					}
            					else {
HXLINE( 427)						if (::hx::IsNull( pmin4 )) {
HXLINE( 427)							pmin4 = this->tokenMin;
            						}
HXDLIN( 427)						if (::hx::IsNull( pmax4 )) {
HXLINE( 427)							pmax4 = this->tokenMax;
            						}
HXDLIN( 427)						e7 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e6,( (int)(pmin4) ),( (int)(pmax4) ),this->origin,this->line);
            					}
HXDLIN( 427)					 ::crowplexus::hscript::ExprDef e8 = ::crowplexus::hscript::ExprDef_obj::EFunction(::Array_obj< ::Dynamic>::__new(0),e7,null(),null());
HXDLIN( 427)					 ::Dynamic pmin5 = p1;
HXDLIN( 427)					 ::Dynamic pmax5 = null();
HXDLIN( 427)					if (::hx::IsNull( e8 )) {
HXLINE( 427)						return null();
            					}
            					else {
HXLINE( 427)						if (::hx::IsNull( pmin5 )) {
HXLINE( 427)							pmin5 = this->tokenMin;
            						}
HXDLIN( 427)						if (::hx::IsNull( pmax5 )) {
HXLINE( 427)							pmax5 = this->tokenMax;
            						}
HXDLIN( 427)						return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e8,( (int)(pmin5) ),( (int)(pmax5) ),this->origin,this->line);
            					}
            				}
HXLINE( 429)				{
HXLINE( 429)					 ::haxe::ds::List _hx_tmp1 = this->tokens;
HXDLIN( 429)					_hx_tmp1->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN( 429)					this->tokenMin = this->oldTokenMin;
HXDLIN( 429)					this->tokenMax = this->oldTokenMax;
            				}
HXLINE( 430)				 ::crowplexus::hscript::Expr e9 = this->parseExpr();
HXLINE( 431)				tk = this->token();
HXLINE( 432)				switch((int)(tk->_hx_getIndex())){
            					case (int)5: {
HXLINE( 434)						 ::crowplexus::hscript::ExprDef e10 = ::crowplexus::hscript::ExprDef_obj::EParent(e9);
HXDLIN( 434)						 ::Dynamic pmin6 = p1;
HXDLIN( 434)						 ::Dynamic pmax6 = this->tokenMax;
HXDLIN( 434)						 ::crowplexus::hscript::Expr _hx_tmp2;
HXDLIN( 434)						if (::hx::IsNull( e10 )) {
HXLINE( 434)							_hx_tmp2 = null();
            						}
            						else {
HXLINE( 434)							if (::hx::IsNull( pmin6 )) {
HXLINE( 434)								pmin6 = this->tokenMin;
            							}
HXDLIN( 434)							if (::hx::IsNull( pmax6 )) {
HXLINE( 434)								pmax6 = this->tokenMax;
            							}
HXDLIN( 434)							_hx_tmp2 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e10,( (int)(pmin6) ),( (int)(pmax6) ),this->origin,this->line);
            						}
HXDLIN( 434)						return this->parseExprNext(_hx_tmp2);
            					}
            					break;
            					case (int)9: {
HXLINE( 449)						 ::crowplexus::hscript::ExprDef _g2 = e9->e;
HXDLIN( 449)						if ((_g2->_hx_getIndex() == 2)) {
HXLINE( 450)							::String v = _g2->_hx_getString(0);
HXDLIN( 450)							int _hx_tmp3;
HXDLIN( 450)							if (::hx::IsNull( e9 )) {
HXLINE( 450)								_hx_tmp3 = 0;
            							}
            							else {
HXLINE( 450)								_hx_tmp3 = e9->pmin;
            							}
HXDLIN( 450)							return this->parseLambda(::Array_obj< ::Dynamic>::__new(1)->init(0, ::Dynamic(::hx::Anon_obj::Create(1)
            								->setFixed(0,HX_("name",4b,72,ff,48),v))),_hx_tmp3);
            						}
            					}
            					break;
            					case (int)14: {
HXLINE( 436)						 ::crowplexus::hscript::CType t1 = this->parseType();
HXLINE( 437)						tk = this->token();
HXLINE( 438)						switch((int)(tk->_hx_getIndex())){
            							case (int)5: {
HXLINE( 440)								 ::crowplexus::hscript::ExprDef e11 = ::crowplexus::hscript::ExprDef_obj::ECheckType(e9,t1);
HXDLIN( 440)								 ::Dynamic pmin7 = p1;
HXDLIN( 440)								 ::Dynamic pmax7 = this->tokenMax;
HXDLIN( 440)								 ::crowplexus::hscript::Expr _hx_tmp4;
HXDLIN( 440)								if (::hx::IsNull( e11 )) {
HXLINE( 440)									_hx_tmp4 = null();
            								}
            								else {
HXLINE( 440)									if (::hx::IsNull( pmin7 )) {
HXLINE( 440)										pmin7 = this->tokenMin;
            									}
HXDLIN( 440)									if (::hx::IsNull( pmax7 )) {
HXLINE( 440)										pmax7 = this->tokenMax;
            									}
HXDLIN( 440)									_hx_tmp4 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e11,( (int)(pmin7) ),( (int)(pmax7) ),this->origin,this->line);
            								}
HXDLIN( 440)								return this->parseExprNext(_hx_tmp4);
            							}
            							break;
            							case (int)9: {
HXLINE( 442)								 ::crowplexus::hscript::ExprDef _g3 = e9->e;
HXDLIN( 442)								if ((_g3->_hx_getIndex() == 2)) {
HXLINE( 443)									::String v1 = _g3->_hx_getString(0);
HXDLIN( 443)									int _hx_tmp5;
HXDLIN( 443)									if (::hx::IsNull( e9 )) {
HXLINE( 443)										_hx_tmp5 = 0;
            									}
            									else {
HXLINE( 443)										_hx_tmp5 = e9->pmin;
            									}
HXDLIN( 443)									return this->parseLambda(::Array_obj< ::Dynamic>::__new(1)->init(0, ::Dynamic(::hx::Anon_obj::Create(2)
            										->setFixed(0,HX_("t",74,00,00,00),t1)
            										->setFixed(1,HX_("name",4b,72,ff,48),v1))),_hx_tmp5);
            								}
            							}
            							break;
            							default:{
            							}
            						}
            					}
            					break;
            					default:{
            					}
            				}
HXLINE( 455)				return ( ( ::crowplexus::hscript::Expr)(this->unexpected(tk)) );
            			}
            			break;
            			case (int)6: {
HXLINE( 457)				tk = this->token();
HXLINE( 458)				switch((int)(tk->_hx_getIndex())){
            					case (int)1: {
HXLINE( 470)						 ::crowplexus::hscript::Const c1 = tk->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Const >();
HXLINE( 471)						if (this->allowJSON) {
HXLINE( 472)							if ((c1->_hx_getIndex() == 2)) {
HXLINE( 473)								::String _g4 = c1->_hx_getString(0);
HXDLIN( 473)								{
HXLINE( 474)									 ::crowplexus::hscript::Token tk2 = this->token();
HXLINE( 475)									{
HXLINE( 475)										 ::haxe::ds::List _hx_tmp6 = this->tokens;
HXDLIN( 475)										_hx_tmp6->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk2,this->tokenMin,this->tokenMax));
HXDLIN( 475)										this->tokenMin = this->oldTokenMin;
HXDLIN( 475)										this->tokenMax = this->oldTokenMax;
            									}
HXLINE( 476)									{
HXLINE( 476)										 ::haxe::ds::List _hx_tmp7 = this->tokens;
HXDLIN( 476)										_hx_tmp7->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN( 476)										this->tokenMin = this->oldTokenMin;
HXDLIN( 476)										this->tokenMax = this->oldTokenMax;
            									}
HXLINE( 477)									if ((tk2->_hx_getIndex() == 14)) {
HXLINE( 479)										return this->parseExprNext(this->parseObject(p1));
            									}
            								}
            							}
            							else {
HXLINE( 483)								 ::haxe::ds::List _hx_tmp8 = this->tokens;
HXDLIN( 483)								_hx_tmp8->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN( 483)								this->tokenMin = this->oldTokenMin;
HXDLIN( 483)								this->tokenMax = this->oldTokenMax;
            							}
            						}
            						else {
HXLINE( 485)							 ::haxe::ds::List _hx_tmp9 = this->tokens;
HXDLIN( 485)							_hx_tmp9->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN( 485)							this->tokenMin = this->oldTokenMin;
HXDLIN( 485)							this->tokenMax = this->oldTokenMax;
            						}
            					}
            					break;
            					case (int)2: {
HXLINE( 461)						::String _g5 = tk->_hx_getString(0);
HXDLIN( 461)						{
HXLINE( 462)							 ::crowplexus::hscript::Token tk21 = this->token();
HXLINE( 463)							{
HXLINE( 463)								 ::haxe::ds::List _hx_tmp10 = this->tokens;
HXDLIN( 463)								_hx_tmp10->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk21,this->tokenMin,this->tokenMax));
HXDLIN( 463)								this->tokenMin = this->oldTokenMin;
HXDLIN( 463)								this->tokenMax = this->oldTokenMax;
            							}
HXLINE( 464)							{
HXLINE( 464)								 ::haxe::ds::List _hx_tmp11 = this->tokens;
HXDLIN( 464)								_hx_tmp11->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN( 464)								this->tokenMin = this->oldTokenMin;
HXDLIN( 464)								this->tokenMax = this->oldTokenMax;
            							}
HXLINE( 465)							if ((tk21->_hx_getIndex() == 14)) {
HXLINE( 467)								return this->parseExprNext(this->parseObject(p1));
            							}
            						}
            					}
            					break;
            					case (int)7: {
HXLINE( 460)						 ::crowplexus::hscript::ExprDef e12 = ::crowplexus::hscript::ExprDef_obj::EObject(::Array_obj< ::Dynamic>::__new(0));
HXDLIN( 460)						 ::Dynamic pmin8 = p1;
HXDLIN( 460)						 ::Dynamic pmax8 = null();
HXDLIN( 460)						 ::crowplexus::hscript::Expr _hx_tmp12;
HXDLIN( 460)						if (::hx::IsNull( e12 )) {
HXLINE( 460)							_hx_tmp12 = null();
            						}
            						else {
HXLINE( 460)							if (::hx::IsNull( pmin8 )) {
HXLINE( 460)								pmin8 = this->tokenMin;
            							}
HXDLIN( 460)							if (::hx::IsNull( pmax8 )) {
HXLINE( 460)								pmax8 = this->tokenMax;
            							}
HXDLIN( 460)							_hx_tmp12 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e12,( (int)(pmin8) ),( (int)(pmax8) ),this->origin,this->line);
            						}
HXDLIN( 460)						return this->parseExprNext(_hx_tmp12);
            					}
            					break;
            					default:{
HXLINE( 487)						 ::haxe::ds::List _hx_tmp13 = this->tokens;
HXDLIN( 487)						_hx_tmp13->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN( 487)						this->tokenMin = this->oldTokenMin;
HXDLIN( 487)						this->tokenMax = this->oldTokenMax;
            					}
            				}
HXLINE( 489)				::Array< ::Dynamic> a = ::Array_obj< ::Dynamic>::__new();
HXLINE( 490)				while(true){
HXLINE( 491)					this->parseFullExpr(a);
HXLINE( 492)					tk = this->token();
HXLINE( 493)					bool _hx_tmp14;
HXDLIN( 493)					if (::hx::IsPointerNotEq( tk,::crowplexus::hscript::Token_obj::TBrClose_dyn() )) {
HXLINE( 493)						if (this->resumeErrors) {
HXLINE( 493)							_hx_tmp14 = ::hx::IsPointerEq( tk,::crowplexus::hscript::Token_obj::TEof_dyn() );
            						}
            						else {
HXLINE( 493)							_hx_tmp14 = false;
            						}
            					}
            					else {
HXLINE( 493)						_hx_tmp14 = true;
            					}
HXDLIN( 493)					if (_hx_tmp14) {
HXLINE( 494)						goto _hx_goto_36;
            					}
HXLINE( 495)					{
HXLINE( 495)						 ::haxe::ds::List _hx_tmp15 = this->tokens;
HXDLIN( 495)						_hx_tmp15->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN( 495)						this->tokenMin = this->oldTokenMin;
HXDLIN( 495)						this->tokenMax = this->oldTokenMax;
            					}
            				}
            				_hx_goto_36:;
HXLINE( 497)				 ::crowplexus::hscript::ExprDef e13 = ::crowplexus::hscript::ExprDef_obj::EBlock(a);
HXDLIN( 497)				 ::Dynamic pmin9 = p1;
HXDLIN( 497)				 ::Dynamic pmax9 = null();
HXDLIN( 497)				if (::hx::IsNull( e13 )) {
HXLINE( 497)					return null();
            				}
            				else {
HXLINE( 497)					if (::hx::IsNull( pmin9 )) {
HXLINE( 497)						pmin9 = this->tokenMin;
            					}
HXDLIN( 497)					if (::hx::IsNull( pmax9 )) {
HXLINE( 497)						pmax9 = this->tokenMax;
            					}
HXDLIN( 497)					return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e13,( (int)(pmin9) ),( (int)(pmax9) ),this->origin,this->line);
            				}
            			}
            			break;
            			case (int)11: {
HXLINE( 517)				::Array< ::Dynamic> a1 = ::Array_obj< ::Dynamic>::__new();
HXLINE( 518)				tk = this->token();
HXLINE( 519)				while(true){
HXLINE( 519)					bool _hx_tmp16;
HXDLIN( 519)					if (::hx::IsPointerNotEq( tk,::crowplexus::hscript::Token_obj::TBkClose_dyn() )) {
HXLINE( 519)						if (this->resumeErrors) {
HXLINE( 519)							_hx_tmp16 = ::hx::IsPointerNotEq( tk,::crowplexus::hscript::Token_obj::TEof_dyn() );
            						}
            						else {
HXLINE( 519)							_hx_tmp16 = true;
            						}
            					}
            					else {
HXLINE( 519)						_hx_tmp16 = false;
            					}
HXDLIN( 519)					if (!(_hx_tmp16)) {
HXLINE( 519)						goto _hx_goto_37;
            					}
HXLINE( 520)					{
HXLINE( 520)						 ::haxe::ds::List _hx_tmp17 = this->tokens;
HXDLIN( 520)						_hx_tmp17->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN( 520)						this->tokenMin = this->oldTokenMin;
HXDLIN( 520)						this->tokenMax = this->oldTokenMax;
            					}
HXLINE( 521)					a1->push(this->parseExpr());
HXLINE( 522)					tk = this->token();
HXLINE( 523)					if (::hx::IsPointerEq( tk,::crowplexus::hscript::Token_obj::TComma_dyn() )) {
HXLINE( 524)						tk = this->token();
            					}
            				}
            				_hx_goto_37:;
HXLINE( 526)				bool _hx_tmp18;
HXDLIN( 526)				if ((a1->length == 1)) {
HXLINE( 526)					_hx_tmp18 = ::hx::IsNotNull( a1->__get(0).StaticCast<  ::crowplexus::hscript::Expr >() );
            				}
            				else {
HXLINE( 526)					_hx_tmp18 = false;
            				}
HXDLIN( 526)				if (_hx_tmp18) {
HXLINE( 527)					 ::crowplexus::hscript::ExprDef _g6 = a1->__get(0).StaticCast<  ::crowplexus::hscript::Expr >()->e;
HXDLIN( 527)					switch((int)(_g6->_hx_getIndex())){
            						case (int)12: {
HXLINE( 528)							 ::crowplexus::hscript::Expr _g7 = _g6->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 528)							 ::crowplexus::hscript::Expr _g8 = _g6->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >();
HXLINE( 529)							::String tmp = (HX_("__a_",fe,af,13,3f) + this->uid++);
HXLINE( 531)							 ::crowplexus::hscript::ExprDef e14 = ::crowplexus::hscript::ExprDef_obj::EArrayDecl(::Array_obj< ::Dynamic>::__new(0));
HXDLIN( 531)							 ::Dynamic pmin10 = p1;
HXDLIN( 531)							 ::Dynamic pmax10 = null();
HXDLIN( 531)							 ::crowplexus::hscript::Expr e15;
HXDLIN( 531)							if (::hx::IsNull( e14 )) {
HXLINE( 531)								e15 = null();
            							}
            							else {
HXLINE( 531)								if (::hx::IsNull( pmin10 )) {
HXLINE( 531)									pmin10 = this->tokenMin;
            								}
HXDLIN( 531)								if (::hx::IsNull( pmax10 )) {
HXLINE( 531)									pmax10 = this->tokenMax;
            								}
HXDLIN( 531)								e15 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e14,( (int)(pmin10) ),( (int)(pmax10) ),this->origin,this->line);
            							}
HXDLIN( 531)							 ::crowplexus::hscript::ExprDef e16 = ::crowplexus::hscript::ExprDef_obj::EVar(tmp,null(),e15,null());
HXDLIN( 531)							 ::Dynamic pmin11 = p1;
HXDLIN( 531)							 ::Dynamic pmax11 = null();
HXDLIN( 531)							 ::crowplexus::hscript::Expr e17;
HXDLIN( 531)							if (::hx::IsNull( e16 )) {
HXLINE( 531)								e17 = null();
            							}
            							else {
HXLINE( 531)								if (::hx::IsNull( pmin11 )) {
HXLINE( 531)									pmin11 = this->tokenMin;
            								}
HXDLIN( 531)								if (::hx::IsNull( pmax11 )) {
HXLINE( 531)									pmax11 = this->tokenMax;
            								}
HXDLIN( 531)								e17 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e16,( (int)(pmin11) ),( (int)(pmax11) ),this->origin,this->line);
            							}
HXLINE( 532)							 ::crowplexus::hscript::Expr e18 = this->mapCompr(tmp,a1->__get(0).StaticCast<  ::crowplexus::hscript::Expr >());
HXLINE( 533)							 ::crowplexus::hscript::ExprDef e19 = ::crowplexus::hscript::ExprDef_obj::EIdent(tmp);
HXDLIN( 533)							 ::Dynamic pmin12 = p1;
HXDLIN( 533)							 ::Dynamic pmax12 = null();
HXDLIN( 533)							 ::crowplexus::hscript::Expr e20;
HXDLIN( 533)							if (::hx::IsNull( e19 )) {
HXLINE( 533)								e20 = null();
            							}
            							else {
HXLINE( 533)								if (::hx::IsNull( pmin12 )) {
HXLINE( 533)									pmin12 = this->tokenMin;
            								}
HXDLIN( 533)								if (::hx::IsNull( pmax12 )) {
HXLINE( 533)									pmax12 = this->tokenMax;
            								}
HXDLIN( 533)								e20 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e19,( (int)(pmin12) ),( (int)(pmax12) ),this->origin,this->line);
            							}
HXLINE( 530)							 ::crowplexus::hscript::ExprDef e21 = ::crowplexus::hscript::ExprDef_obj::EBlock(::Array_obj< ::Dynamic>::__new(3)->init(0,e17)->init(1,e18)->init(2,e20));
HXDLIN( 530)							 ::Dynamic pmin13 = p1;
HXDLIN( 530)							 ::Dynamic pmax13 = null();
HXDLIN( 530)							 ::crowplexus::hscript::Expr e22;
HXDLIN( 530)							if (::hx::IsNull( e21 )) {
HXLINE( 530)								e22 = null();
            							}
            							else {
HXLINE( 530)								if (::hx::IsNull( pmin13 )) {
HXLINE( 530)									pmin13 = this->tokenMin;
            								}
HXDLIN( 530)								if (::hx::IsNull( pmax13 )) {
HXLINE( 530)									pmax13 = this->tokenMax;
            								}
HXDLIN( 530)								e22 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e21,( (int)(pmin13) ),( (int)(pmax13) ),this->origin,this->line);
            							}
HXLINE( 535)							return this->parseExprNext(e22);
            						}
            						break;
            						case (int)13: {
HXLINE( 528)							::String _g9 = _g6->_hx_getString(0);
HXDLIN( 528)							 ::crowplexus::hscript::Expr _g10 = _g6->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 528)							 ::crowplexus::hscript::Expr _g11 = _g6->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >();
HXLINE( 529)							::String tmp1 = (HX_("__a_",fe,af,13,3f) + this->uid++);
HXLINE( 531)							 ::crowplexus::hscript::ExprDef e23 = ::crowplexus::hscript::ExprDef_obj::EArrayDecl(::Array_obj< ::Dynamic>::__new(0));
HXDLIN( 531)							 ::Dynamic pmin14 = p1;
HXDLIN( 531)							 ::Dynamic pmax14 = null();
HXDLIN( 531)							 ::crowplexus::hscript::Expr e24;
HXDLIN( 531)							if (::hx::IsNull( e23 )) {
HXLINE( 531)								e24 = null();
            							}
            							else {
HXLINE( 531)								if (::hx::IsNull( pmin14 )) {
HXLINE( 531)									pmin14 = this->tokenMin;
            								}
HXDLIN( 531)								if (::hx::IsNull( pmax14 )) {
HXLINE( 531)									pmax14 = this->tokenMax;
            								}
HXDLIN( 531)								e24 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e23,( (int)(pmin14) ),( (int)(pmax14) ),this->origin,this->line);
            							}
HXDLIN( 531)							 ::crowplexus::hscript::ExprDef e25 = ::crowplexus::hscript::ExprDef_obj::EVar(tmp1,null(),e24,null());
HXDLIN( 531)							 ::Dynamic pmin15 = p1;
HXDLIN( 531)							 ::Dynamic pmax15 = null();
HXDLIN( 531)							 ::crowplexus::hscript::Expr e26;
HXDLIN( 531)							if (::hx::IsNull( e25 )) {
HXLINE( 531)								e26 = null();
            							}
            							else {
HXLINE( 531)								if (::hx::IsNull( pmin15 )) {
HXLINE( 531)									pmin15 = this->tokenMin;
            								}
HXDLIN( 531)								if (::hx::IsNull( pmax15 )) {
HXLINE( 531)									pmax15 = this->tokenMax;
            								}
HXDLIN( 531)								e26 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e25,( (int)(pmin15) ),( (int)(pmax15) ),this->origin,this->line);
            							}
HXLINE( 532)							 ::crowplexus::hscript::Expr e27 = this->mapCompr(tmp1,a1->__get(0).StaticCast<  ::crowplexus::hscript::Expr >());
HXLINE( 533)							 ::crowplexus::hscript::ExprDef e28 = ::crowplexus::hscript::ExprDef_obj::EIdent(tmp1);
HXDLIN( 533)							 ::Dynamic pmin16 = p1;
HXDLIN( 533)							 ::Dynamic pmax16 = null();
HXDLIN( 533)							 ::crowplexus::hscript::Expr e29;
HXDLIN( 533)							if (::hx::IsNull( e28 )) {
HXLINE( 533)								e29 = null();
            							}
            							else {
HXLINE( 533)								if (::hx::IsNull( pmin16 )) {
HXLINE( 533)									pmin16 = this->tokenMin;
            								}
HXDLIN( 533)								if (::hx::IsNull( pmax16 )) {
HXLINE( 533)									pmax16 = this->tokenMax;
            								}
HXDLIN( 533)								e29 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e28,( (int)(pmin16) ),( (int)(pmax16) ),this->origin,this->line);
            							}
HXLINE( 530)							 ::crowplexus::hscript::ExprDef e30 = ::crowplexus::hscript::ExprDef_obj::EBlock(::Array_obj< ::Dynamic>::__new(3)->init(0,e26)->init(1,e27)->init(2,e29));
HXDLIN( 530)							 ::Dynamic pmin17 = p1;
HXDLIN( 530)							 ::Dynamic pmax17 = null();
HXDLIN( 530)							 ::crowplexus::hscript::Expr e31;
HXDLIN( 530)							if (::hx::IsNull( e30 )) {
HXLINE( 530)								e31 = null();
            							}
            							else {
HXLINE( 530)								if (::hx::IsNull( pmin17 )) {
HXLINE( 530)									pmin17 = this->tokenMin;
            								}
HXDLIN( 530)								if (::hx::IsNull( pmax17 )) {
HXLINE( 530)									pmax17 = this->tokenMax;
            								}
HXDLIN( 530)								e31 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e30,( (int)(pmin17) ),( (int)(pmax17) ),this->origin,this->line);
            							}
HXLINE( 535)							return this->parseExprNext(e31);
            						}
            						break;
            						case (int)26: {
HXLINE( 528)							 ::crowplexus::hscript::Expr _g12 = _g6->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 528)							 ::crowplexus::hscript::Expr _g13 = _g6->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >();
HXLINE( 529)							::String tmp2 = (HX_("__a_",fe,af,13,3f) + this->uid++);
HXLINE( 531)							 ::crowplexus::hscript::ExprDef e32 = ::crowplexus::hscript::ExprDef_obj::EArrayDecl(::Array_obj< ::Dynamic>::__new(0));
HXDLIN( 531)							 ::Dynamic pmin18 = p1;
HXDLIN( 531)							 ::Dynamic pmax18 = null();
HXDLIN( 531)							 ::crowplexus::hscript::Expr e33;
HXDLIN( 531)							if (::hx::IsNull( e32 )) {
HXLINE( 531)								e33 = null();
            							}
            							else {
HXLINE( 531)								if (::hx::IsNull( pmin18 )) {
HXLINE( 531)									pmin18 = this->tokenMin;
            								}
HXDLIN( 531)								if (::hx::IsNull( pmax18 )) {
HXLINE( 531)									pmax18 = this->tokenMax;
            								}
HXDLIN( 531)								e33 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e32,( (int)(pmin18) ),( (int)(pmax18) ),this->origin,this->line);
            							}
HXDLIN( 531)							 ::crowplexus::hscript::ExprDef e34 = ::crowplexus::hscript::ExprDef_obj::EVar(tmp2,null(),e33,null());
HXDLIN( 531)							 ::Dynamic pmin19 = p1;
HXDLIN( 531)							 ::Dynamic pmax19 = null();
HXDLIN( 531)							 ::crowplexus::hscript::Expr e35;
HXDLIN( 531)							if (::hx::IsNull( e34 )) {
HXLINE( 531)								e35 = null();
            							}
            							else {
HXLINE( 531)								if (::hx::IsNull( pmin19 )) {
HXLINE( 531)									pmin19 = this->tokenMin;
            								}
HXDLIN( 531)								if (::hx::IsNull( pmax19 )) {
HXLINE( 531)									pmax19 = this->tokenMax;
            								}
HXDLIN( 531)								e35 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e34,( (int)(pmin19) ),( (int)(pmax19) ),this->origin,this->line);
            							}
HXLINE( 532)							 ::crowplexus::hscript::Expr e36 = this->mapCompr(tmp2,a1->__get(0).StaticCast<  ::crowplexus::hscript::Expr >());
HXLINE( 533)							 ::crowplexus::hscript::ExprDef e37 = ::crowplexus::hscript::ExprDef_obj::EIdent(tmp2);
HXDLIN( 533)							 ::Dynamic pmin20 = p1;
HXDLIN( 533)							 ::Dynamic pmax20 = null();
HXDLIN( 533)							 ::crowplexus::hscript::Expr e38;
HXDLIN( 533)							if (::hx::IsNull( e37 )) {
HXLINE( 533)								e38 = null();
            							}
            							else {
HXLINE( 533)								if (::hx::IsNull( pmin20 )) {
HXLINE( 533)									pmin20 = this->tokenMin;
            								}
HXDLIN( 533)								if (::hx::IsNull( pmax20 )) {
HXLINE( 533)									pmax20 = this->tokenMax;
            								}
HXDLIN( 533)								e38 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e37,( (int)(pmin20) ),( (int)(pmax20) ),this->origin,this->line);
            							}
HXLINE( 530)							 ::crowplexus::hscript::ExprDef e39 = ::crowplexus::hscript::ExprDef_obj::EBlock(::Array_obj< ::Dynamic>::__new(3)->init(0,e35)->init(1,e36)->init(2,e38));
HXDLIN( 530)							 ::Dynamic pmin21 = p1;
HXDLIN( 530)							 ::Dynamic pmax21 = null();
HXDLIN( 530)							 ::crowplexus::hscript::Expr e40;
HXDLIN( 530)							if (::hx::IsNull( e39 )) {
HXLINE( 530)								e40 = null();
            							}
            							else {
HXLINE( 530)								if (::hx::IsNull( pmin21 )) {
HXLINE( 530)									pmin21 = this->tokenMin;
            								}
HXDLIN( 530)								if (::hx::IsNull( pmax21 )) {
HXLINE( 530)									pmax21 = this->tokenMax;
            								}
HXDLIN( 530)								e40 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e39,( (int)(pmin21) ),( (int)(pmax21) ),this->origin,this->line);
            							}
HXLINE( 535)							return this->parseExprNext(e40);
            						}
            						break;
            						default:{
            						}
            					}
            				}
HXLINE( 538)				 ::crowplexus::hscript::ExprDef e41 = ::crowplexus::hscript::ExprDef_obj::EArrayDecl(a1);
HXDLIN( 538)				 ::Dynamic pmin22 = p1;
HXDLIN( 538)				 ::Dynamic pmax22 = null();
HXDLIN( 538)				 ::crowplexus::hscript::Expr _hx_tmp19;
HXDLIN( 538)				if (::hx::IsNull( e41 )) {
HXLINE( 538)					_hx_tmp19 = null();
            				}
            				else {
HXLINE( 538)					if (::hx::IsNull( pmin22 )) {
HXLINE( 538)						pmin22 = this->tokenMin;
            					}
HXDLIN( 538)					if (::hx::IsNull( pmax22 )) {
HXLINE( 538)						pmax22 = this->tokenMax;
            					}
HXDLIN( 538)					_hx_tmp19 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e41,( (int)(pmin22) ),( (int)(pmax22) ),this->origin,this->line);
            				}
HXDLIN( 538)				return this->parseExprNext(_hx_tmp19);
            			}
            			break;
            			case (int)15: {
HXLINE( 539)				::String id1 = tk->_hx_getString(0);
HXDLIN( 539)				if (this->allowMetadata) {
HXLINE( 540)					::Array< ::Dynamic> args = this->parseMetaArgs();
HXLINE( 541)					 ::crowplexus::hscript::ExprDef e42 = ::crowplexus::hscript::ExprDef_obj::EMeta(id1,args,this->parseExpr());
HXDLIN( 541)					 ::Dynamic pmin23 = p1;
HXDLIN( 541)					 ::Dynamic pmax23 = null();
HXDLIN( 541)					if (::hx::IsNull( e42 )) {
HXLINE( 541)						return null();
            					}
            					else {
HXLINE( 541)						if (::hx::IsNull( pmin23 )) {
HXLINE( 541)							pmin23 = this->tokenMin;
            						}
HXDLIN( 541)						if (::hx::IsNull( pmax23 )) {
HXLINE( 541)							pmax23 = this->tokenMax;
            						}
HXDLIN( 541)						return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e42,( (int)(pmin23) ),( (int)(pmax23) ),this->origin,this->line);
            					}
            				}
            				else {
HXLINE( 543)					return ( ( ::crowplexus::hscript::Expr)(this->unexpected(tk)) );
            				}
            			}
            			break;
            			default:{
HXLINE( 543)				return ( ( ::crowplexus::hscript::Expr)(this->unexpected(tk)) );
            			}
            		}
HXLINE( 414)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,parseExpr,return )

 ::crowplexus::hscript::Expr Parser_obj::parseLambda(::Array< ::Dynamic> args, ::Dynamic pmin){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_547_parseLambda)
HXLINE( 548)		while(true){
HXLINE( 549)			::String id = this->getIdent();
HXLINE( 550)			 ::crowplexus::hscript::CType t;
HXDLIN( 550)			if (this->maybe(::crowplexus::hscript::Token_obj::TDoubleDot_dyn())) {
HXLINE( 550)				t = this->parseType();
            			}
            			else {
HXLINE( 550)				t = null();
            			}
HXLINE( 551)			args->push( ::Dynamic(::hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("t",74,00,00,00),t)
            				->setFixed(1,HX_("name",4b,72,ff,48),id)));
HXLINE( 552)			 ::crowplexus::hscript::Token tk = this->token();
HXLINE( 553)			switch((int)(tk->_hx_getIndex())){
            				case (int)5: {
HXLINE( 556)					goto _hx_goto_39;
            				}
            				break;
            				case (int)9: {
            				}
            				break;
            				default:{
HXLINE( 558)					this->unexpected(tk);
HXLINE( 559)					goto _hx_goto_39;
            				}
            			}
            		}
            		_hx_goto_39:;
HXLINE( 562)		{
HXLINE( 562)			 ::crowplexus::hscript::Token t1 = this->token();
HXDLIN( 562)			if (!(__hxcpp_enum_eq(t1,::crowplexus::hscript::Token_obj::TOp(HX_("->",71,27,00,00))))) {
HXLINE( 562)				this->unexpected(t1);
            			}
            		}
HXLINE( 563)		 ::crowplexus::hscript::Expr eret = this->parseExpr();
HXLINE( 564)		 ::crowplexus::hscript::ExprDef e = ::crowplexus::hscript::ExprDef_obj::EReturn(eret);
HXDLIN( 564)		 ::Dynamic pmin1 = pmin;
HXDLIN( 564)		 ::Dynamic pmax = null();
HXDLIN( 564)		 ::crowplexus::hscript::Expr e1;
HXDLIN( 564)		if (::hx::IsNull( e )) {
HXLINE( 564)			e1 = null();
            		}
            		else {
HXLINE( 564)			if (::hx::IsNull( pmin1 )) {
HXLINE( 564)				pmin1 = this->tokenMin;
            			}
HXDLIN( 564)			if (::hx::IsNull( pmax )) {
HXLINE( 564)				pmax = this->tokenMax;
            			}
HXDLIN( 564)			e1 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e,( (int)(pmin1) ),( (int)(pmax) ),this->origin,this->line);
            		}
HXDLIN( 564)		 ::crowplexus::hscript::ExprDef e2 = ::crowplexus::hscript::ExprDef_obj::EFunction(args,e1,null(),null());
HXDLIN( 564)		 ::Dynamic pmin2 = pmin;
HXDLIN( 564)		 ::Dynamic pmax1 = null();
HXDLIN( 564)		if (::hx::IsNull( e2 )) {
HXLINE( 564)			return null();
            		}
            		else {
HXLINE( 564)			if (::hx::IsNull( pmin2 )) {
HXLINE( 564)				pmin2 = this->tokenMin;
            			}
HXDLIN( 564)			if (::hx::IsNull( pmax1 )) {
HXLINE( 564)				pmax1 = this->tokenMax;
            			}
HXDLIN( 564)			return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e2,( (int)(pmin2) ),( (int)(pmax1) ),this->origin,this->line);
            		}
HXDLIN( 564)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC2(Parser_obj,parseLambda,return )

::Array< ::Dynamic> Parser_obj::parseMetaArgs(){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_567_parseMetaArgs)
HXLINE( 568)		 ::crowplexus::hscript::Token tk = this->token();
HXLINE( 569)		if (::hx::IsPointerNotEq( tk,::crowplexus::hscript::Token_obj::TPOpen_dyn() )) {
HXLINE( 570)			{
HXLINE( 570)				 ::haxe::ds::List _hx_tmp = this->tokens;
HXDLIN( 570)				_hx_tmp->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN( 570)				this->tokenMin = this->oldTokenMin;
HXDLIN( 570)				this->tokenMax = this->oldTokenMax;
            			}
HXLINE( 571)			return null();
            		}
HXLINE( 573)		::Array< ::Dynamic> args = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 574)		tk = this->token();
HXLINE( 575)		if (::hx::IsPointerNotEq( tk,::crowplexus::hscript::Token_obj::TPClose_dyn() )) {
HXLINE( 576)			{
HXLINE( 576)				 ::haxe::ds::List _hx_tmp1 = this->tokens;
HXDLIN( 576)				_hx_tmp1->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN( 576)				this->tokenMin = this->oldTokenMin;
HXDLIN( 576)				this->tokenMax = this->oldTokenMax;
            			}
HXLINE( 577)			while(true){
HXLINE( 578)				args->push(this->parseExpr());
HXLINE( 579)				{
HXLINE( 579)					 ::crowplexus::hscript::Token _g = this->token();
HXDLIN( 579)					switch((int)(_g->_hx_getIndex())){
            						case (int)5: {
HXLINE( 582)							goto _hx_goto_41;
            						}
            						break;
            						case (int)9: {
            						}
            						break;
            						default:{
HXLINE( 583)							 ::crowplexus::hscript::Token tk1 = _g;
HXLINE( 584)							this->unexpected(tk1);
            						}
            					}
            				}
            			}
            			_hx_goto_41:;
            		}
HXLINE( 588)		return args;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,parseMetaArgs,return )

 ::crowplexus::hscript::Expr Parser_obj::mapCompr(::String tmp, ::crowplexus::hscript::Expr e){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_591_mapCompr)
HXLINE( 592)		if (::hx::IsNull( e )) {
HXLINE( 593)			return null();
            		}
HXLINE( 594)		 ::crowplexus::hscript::ExprDef edef;
HXDLIN( 594)		 ::crowplexus::hscript::ExprDef _g = e->e;
HXDLIN( 594)		switch((int)(_g->_hx_getIndex())){
            			case (int)5: {
HXLINE( 605)				 ::crowplexus::hscript::Expr e2 = _g->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXLINE( 594)				edef = ::crowplexus::hscript::ExprDef_obj::EParent(this->mapCompr(tmp,e2));
            			}
            			break;
            			case (int)6: {
HXLINE( 603)				::Array< ::Dynamic> _g1 = _g->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 603)				if ((_g1->length == 1)) {
HXLINE( 603)					 ::crowplexus::hscript::Expr e1 = _g1->__get(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXLINE( 594)					edef = ::crowplexus::hscript::ExprDef_obj::EBlock(::Array_obj< ::Dynamic>::__new(1)->init(0,this->mapCompr(tmp,e1)));
            				}
            				else {
HXLINE( 608)					 ::crowplexus::hscript::ExprDef e3 = ::crowplexus::hscript::ExprDef_obj::EIdent(tmp);
HXDLIN( 608)					 ::Dynamic pmin;
HXDLIN( 608)					if (::hx::IsNull( e )) {
HXLINE( 608)						pmin = 0;
            					}
            					else {
HXLINE( 608)						pmin = e->pmin;
            					}
HXDLIN( 608)					 ::Dynamic pmax;
HXDLIN( 608)					if (::hx::IsNull( e )) {
HXLINE( 608)						pmax = 0;
            					}
            					else {
HXLINE( 608)						pmax = e->pmax;
            					}
HXDLIN( 608)					 ::crowplexus::hscript::Expr e4;
HXDLIN( 608)					if (::hx::IsNull( e3 )) {
HXLINE( 608)						e4 = null();
            					}
            					else {
HXLINE( 608)						if (::hx::IsNull( pmin )) {
HXLINE( 608)							pmin = this->tokenMin;
            						}
HXDLIN( 608)						if (::hx::IsNull( pmax )) {
HXLINE( 608)							pmax = this->tokenMax;
            						}
HXDLIN( 608)						e4 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e3,( (int)(pmin) ),( (int)(pmax) ),this->origin,this->line);
            					}
HXDLIN( 608)					 ::crowplexus::hscript::ExprDef e5 = ::crowplexus::hscript::ExprDef_obj::EField(e4,HX_("push",da,11,61,4a),false);
HXDLIN( 608)					 ::Dynamic pmin1;
HXDLIN( 608)					if (::hx::IsNull( e )) {
HXLINE( 608)						pmin1 = 0;
            					}
            					else {
HXLINE( 608)						pmin1 = e->pmin;
            					}
HXDLIN( 608)					 ::Dynamic pmax1;
HXDLIN( 608)					if (::hx::IsNull( e )) {
HXLINE( 608)						pmax1 = 0;
            					}
            					else {
HXLINE( 608)						pmax1 = e->pmax;
            					}
HXDLIN( 608)					 ::crowplexus::hscript::Expr edef1;
HXDLIN( 608)					if (::hx::IsNull( e5 )) {
HXLINE( 608)						edef1 = null();
            					}
            					else {
HXLINE( 608)						if (::hx::IsNull( pmin1 )) {
HXLINE( 608)							pmin1 = this->tokenMin;
            						}
HXDLIN( 608)						if (::hx::IsNull( pmax1 )) {
HXLINE( 608)							pmax1 = this->tokenMax;
            						}
HXDLIN( 608)						edef1 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e5,( (int)(pmin1) ),( (int)(pmax1) ),this->origin,this->line);
            					}
HXLINE( 594)					edef = ::crowplexus::hscript::ExprDef_obj::ECall(edef1,::Array_obj< ::Dynamic>::__new(1)->init(0,e));
            				}
            			}
            			break;
            			case (int)11: {
HXLINE( 601)				 ::crowplexus::hscript::Expr cond = _g->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 601)				 ::crowplexus::hscript::Expr e11 = _g->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 601)				 ::crowplexus::hscript::Expr e21 = _g->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 601)				if (::hx::IsNull( e21 )) {
HXLINE( 594)					edef = ::crowplexus::hscript::ExprDef_obj::EIf(cond,this->mapCompr(tmp,e11),null());
            				}
            				else {
HXLINE( 608)					 ::crowplexus::hscript::ExprDef e6 = ::crowplexus::hscript::ExprDef_obj::EIdent(tmp);
HXDLIN( 608)					 ::Dynamic pmin2;
HXDLIN( 608)					if (::hx::IsNull( e )) {
HXLINE( 608)						pmin2 = 0;
            					}
            					else {
HXLINE( 608)						pmin2 = e->pmin;
            					}
HXDLIN( 608)					 ::Dynamic pmax2;
HXDLIN( 608)					if (::hx::IsNull( e )) {
HXLINE( 608)						pmax2 = 0;
            					}
            					else {
HXLINE( 608)						pmax2 = e->pmax;
            					}
HXDLIN( 608)					 ::crowplexus::hscript::Expr e7;
HXDLIN( 608)					if (::hx::IsNull( e6 )) {
HXLINE( 608)						e7 = null();
            					}
            					else {
HXLINE( 608)						if (::hx::IsNull( pmin2 )) {
HXLINE( 608)							pmin2 = this->tokenMin;
            						}
HXDLIN( 608)						if (::hx::IsNull( pmax2 )) {
HXLINE( 608)							pmax2 = this->tokenMax;
            						}
HXDLIN( 608)						e7 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e6,( (int)(pmin2) ),( (int)(pmax2) ),this->origin,this->line);
            					}
HXDLIN( 608)					 ::crowplexus::hscript::ExprDef e8 = ::crowplexus::hscript::ExprDef_obj::EField(e7,HX_("push",da,11,61,4a),false);
HXDLIN( 608)					 ::Dynamic pmin3;
HXDLIN( 608)					if (::hx::IsNull( e )) {
HXLINE( 608)						pmin3 = 0;
            					}
            					else {
HXLINE( 608)						pmin3 = e->pmin;
            					}
HXDLIN( 608)					 ::Dynamic pmax3;
HXDLIN( 608)					if (::hx::IsNull( e )) {
HXLINE( 608)						pmax3 = 0;
            					}
            					else {
HXLINE( 608)						pmax3 = e->pmax;
            					}
HXDLIN( 608)					 ::crowplexus::hscript::Expr edef2;
HXDLIN( 608)					if (::hx::IsNull( e8 )) {
HXLINE( 608)						edef2 = null();
            					}
            					else {
HXLINE( 608)						if (::hx::IsNull( pmin3 )) {
HXLINE( 608)							pmin3 = this->tokenMin;
            						}
HXDLIN( 608)						if (::hx::IsNull( pmax3 )) {
HXLINE( 608)							pmax3 = this->tokenMax;
            						}
HXDLIN( 608)						edef2 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e8,( (int)(pmin3) ),( (int)(pmax3) ),this->origin,this->line);
            					}
HXLINE( 594)					edef = ::crowplexus::hscript::ExprDef_obj::ECall(edef2,::Array_obj< ::Dynamic>::__new(1)->init(0,e));
            				}
            			}
            			break;
            			case (int)12: {
HXLINE( 597)				 ::crowplexus::hscript::Expr cond1 = _g->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 597)				 ::crowplexus::hscript::Expr e22 = _g->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >();
HXLINE( 594)				edef = ::crowplexus::hscript::ExprDef_obj::EWhile(cond1,this->mapCompr(tmp,e22));
            			}
            			break;
            			case (int)13: {
HXLINE( 595)				::String v = _g->_hx_getString(0);
HXDLIN( 595)				 ::crowplexus::hscript::Expr it = _g->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 595)				 ::crowplexus::hscript::Expr e23 = _g->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >();
HXLINE( 594)				edef = ::crowplexus::hscript::ExprDef_obj::EFor(v,it,this->mapCompr(tmp,e23));
            			}
            			break;
            			case (int)26: {
HXLINE( 599)				 ::crowplexus::hscript::Expr cond2 = _g->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 599)				 ::crowplexus::hscript::Expr e24 = _g->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >();
HXLINE( 594)				edef = ::crowplexus::hscript::ExprDef_obj::EDoWhile(cond2,this->mapCompr(tmp,e24));
            			}
            			break;
            			default:{
HXLINE( 608)				 ::crowplexus::hscript::ExprDef e9 = ::crowplexus::hscript::ExprDef_obj::EIdent(tmp);
HXDLIN( 608)				 ::Dynamic pmin4;
HXDLIN( 608)				if (::hx::IsNull( e )) {
HXLINE( 608)					pmin4 = 0;
            				}
            				else {
HXLINE( 608)					pmin4 = e->pmin;
            				}
HXDLIN( 608)				 ::Dynamic pmax4;
HXDLIN( 608)				if (::hx::IsNull( e )) {
HXLINE( 608)					pmax4 = 0;
            				}
            				else {
HXLINE( 608)					pmax4 = e->pmax;
            				}
HXDLIN( 608)				 ::crowplexus::hscript::Expr e10;
HXDLIN( 608)				if (::hx::IsNull( e9 )) {
HXLINE( 608)					e10 = null();
            				}
            				else {
HXLINE( 608)					if (::hx::IsNull( pmin4 )) {
HXLINE( 608)						pmin4 = this->tokenMin;
            					}
HXDLIN( 608)					if (::hx::IsNull( pmax4 )) {
HXLINE( 608)						pmax4 = this->tokenMax;
            					}
HXDLIN( 608)					e10 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e9,( (int)(pmin4) ),( (int)(pmax4) ),this->origin,this->line);
            				}
HXDLIN( 608)				 ::crowplexus::hscript::ExprDef e12 = ::crowplexus::hscript::ExprDef_obj::EField(e10,HX_("push",da,11,61,4a),false);
HXDLIN( 608)				 ::Dynamic pmin5;
HXDLIN( 608)				if (::hx::IsNull( e )) {
HXLINE( 608)					pmin5 = 0;
            				}
            				else {
HXLINE( 608)					pmin5 = e->pmin;
            				}
HXDLIN( 608)				 ::Dynamic pmax5;
HXDLIN( 608)				if (::hx::IsNull( e )) {
HXLINE( 608)					pmax5 = 0;
            				}
            				else {
HXLINE( 608)					pmax5 = e->pmax;
            				}
HXDLIN( 608)				 ::crowplexus::hscript::Expr edef3;
HXDLIN( 608)				if (::hx::IsNull( e12 )) {
HXLINE( 608)					edef3 = null();
            				}
            				else {
HXLINE( 608)					if (::hx::IsNull( pmin5 )) {
HXLINE( 608)						pmin5 = this->tokenMin;
            					}
HXDLIN( 608)					if (::hx::IsNull( pmax5 )) {
HXLINE( 608)						pmax5 = this->tokenMax;
            					}
HXDLIN( 608)					edef3 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e12,( (int)(pmin5) ),( (int)(pmax5) ),this->origin,this->line);
            				}
HXLINE( 594)				edef = ::crowplexus::hscript::ExprDef_obj::ECall(edef3,::Array_obj< ::Dynamic>::__new(1)->init(0,e));
            			}
            		}
HXLINE( 610)		 ::Dynamic pmin6;
HXDLIN( 610)		if (::hx::IsNull( e )) {
HXLINE( 610)			pmin6 = 0;
            		}
            		else {
HXLINE( 610)			pmin6 = e->pmin;
            		}
HXDLIN( 610)		 ::Dynamic pmax6;
HXDLIN( 610)		if (::hx::IsNull( e )) {
HXLINE( 610)			pmax6 = 0;
            		}
            		else {
HXLINE( 610)			pmax6 = e->pmax;
            		}
HXDLIN( 610)		if (::hx::IsNull( edef )) {
HXLINE( 610)			return null();
            		}
            		else {
HXLINE( 610)			if (::hx::IsNull( pmin6 )) {
HXLINE( 610)				pmin6 = this->tokenMin;
            			}
HXDLIN( 610)			if (::hx::IsNull( pmax6 )) {
HXLINE( 610)				pmax6 = this->tokenMax;
            			}
HXDLIN( 610)			return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,edef,( (int)(pmin6) ),( (int)(pmax6) ),this->origin,this->line);
            		}
HXDLIN( 610)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC2(Parser_obj,mapCompr,return )

 ::crowplexus::hscript::Expr Parser_obj::makeUnop(::String op, ::crowplexus::hscript::Expr e){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_613_makeUnop)
HXLINE( 614)		bool _hx_tmp;
HXDLIN( 614)		if (::hx::IsNull( e )) {
HXLINE( 614)			_hx_tmp = this->resumeErrors;
            		}
            		else {
HXLINE( 614)			_hx_tmp = false;
            		}
HXDLIN( 614)		if (_hx_tmp) {
HXLINE( 615)			return null();
            		}
HXLINE( 616)		 ::crowplexus::hscript::ExprDef _g = e->e;
HXDLIN( 616)		switch((int)(_g->_hx_getIndex())){
            			case (int)8: {
HXLINE( 617)				::String bop = _g->_hx_getString(0);
HXDLIN( 617)				 ::crowplexus::hscript::Expr e1 = _g->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 617)				 ::crowplexus::hscript::Expr e2 = _g->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 617)				 ::crowplexus::hscript::ExprDef e3 = ::crowplexus::hscript::ExprDef_obj::EBinop(bop,this->makeUnop(op,e1),e2);
HXDLIN( 617)				 ::Dynamic pmin;
HXDLIN( 617)				if (::hx::IsNull( e1 )) {
HXLINE( 617)					pmin = 0;
            				}
            				else {
HXLINE( 617)					pmin = e1->pmin;
            				}
HXDLIN( 617)				 ::Dynamic pmax;
HXDLIN( 617)				if (::hx::IsNull( e2 )) {
HXLINE( 617)					pmax = 0;
            				}
            				else {
HXLINE( 617)					pmax = e2->pmax;
            				}
HXDLIN( 617)				if (::hx::IsNull( e3 )) {
HXLINE( 617)					return null();
            				}
            				else {
HXLINE( 617)					if (::hx::IsNull( pmin )) {
HXLINE( 617)						pmin = this->tokenMin;
            					}
HXDLIN( 617)					if (::hx::IsNull( pmax )) {
HXLINE( 617)						pmax = this->tokenMax;
            					}
HXDLIN( 617)					return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e3,( (int)(pmin) ),( (int)(pmax) ),this->origin,this->line);
            				}
            			}
            			break;
            			case (int)24: {
HXLINE( 618)				 ::crowplexus::hscript::Expr e11 = _g->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 618)				 ::crowplexus::hscript::Expr e21 = _g->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 618)				 ::crowplexus::hscript::Expr e31 = _g->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 618)				 ::crowplexus::hscript::ExprDef e4 = ::crowplexus::hscript::ExprDef_obj::ETernary(this->makeUnop(op,e11),e21,e31);
HXDLIN( 618)				 ::Dynamic pmin1;
HXDLIN( 618)				if (::hx::IsNull( e11 )) {
HXLINE( 618)					pmin1 = 0;
            				}
            				else {
HXLINE( 618)					pmin1 = e11->pmin;
            				}
HXDLIN( 618)				 ::Dynamic pmax1;
HXDLIN( 618)				if (::hx::IsNull( e31 )) {
HXLINE( 618)					pmax1 = 0;
            				}
            				else {
HXLINE( 618)					pmax1 = e31->pmax;
            				}
HXDLIN( 618)				if (::hx::IsNull( e4 )) {
HXLINE( 618)					return null();
            				}
            				else {
HXLINE( 618)					if (::hx::IsNull( pmin1 )) {
HXLINE( 618)						pmin1 = this->tokenMin;
            					}
HXDLIN( 618)					if (::hx::IsNull( pmax1 )) {
HXLINE( 618)						pmax1 = this->tokenMax;
            					}
HXDLIN( 618)					return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e4,( (int)(pmin1) ),( (int)(pmax1) ),this->origin,this->line);
            				}
            			}
            			break;
            			default:{
HXLINE( 619)				 ::crowplexus::hscript::ExprDef e5 = ::crowplexus::hscript::ExprDef_obj::EUnop(op,true,e);
HXDLIN( 619)				 ::Dynamic pmin2;
HXDLIN( 619)				if (::hx::IsNull( e )) {
HXLINE( 619)					pmin2 = 0;
            				}
            				else {
HXLINE( 619)					pmin2 = e->pmin;
            				}
HXDLIN( 619)				 ::Dynamic pmax2;
HXDLIN( 619)				if (::hx::IsNull( e )) {
HXLINE( 619)					pmax2 = 0;
            				}
            				else {
HXLINE( 619)					pmax2 = e->pmax;
            				}
HXDLIN( 619)				if (::hx::IsNull( e5 )) {
HXLINE( 619)					return null();
            				}
            				else {
HXLINE( 619)					if (::hx::IsNull( pmin2 )) {
HXLINE( 619)						pmin2 = this->tokenMin;
            					}
HXDLIN( 619)					if (::hx::IsNull( pmax2 )) {
HXLINE( 619)						pmax2 = this->tokenMax;
            					}
HXDLIN( 619)					return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e5,( (int)(pmin2) ),( (int)(pmax2) ),this->origin,this->line);
            				}
            			}
            		}
HXLINE( 616)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC2(Parser_obj,makeUnop,return )

 ::crowplexus::hscript::Expr Parser_obj::makeBinop(::String op, ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_623_makeBinop)
HXLINE( 624)		bool _hx_tmp;
HXDLIN( 624)		if (::hx::IsNull( e )) {
HXLINE( 624)			_hx_tmp = this->resumeErrors;
            		}
            		else {
HXLINE( 624)			_hx_tmp = false;
            		}
HXDLIN( 624)		if (_hx_tmp) {
HXLINE( 625)			 ::crowplexus::hscript::ExprDef e2 = ::crowplexus::hscript::ExprDef_obj::EBinop(op,e1,e);
HXDLIN( 625)			 ::Dynamic pmin;
HXDLIN( 625)			if (::hx::IsNull( e1 )) {
HXLINE( 625)				pmin = 0;
            			}
            			else {
HXLINE( 625)				pmin = e1->pmin;
            			}
HXDLIN( 625)			 ::Dynamic pmax;
HXDLIN( 625)			if (::hx::IsNull( e1 )) {
HXLINE( 625)				pmax = 0;
            			}
            			else {
HXLINE( 625)				pmax = e1->pmax;
            			}
HXDLIN( 625)			if (::hx::IsNull( e2 )) {
HXLINE( 625)				return null();
            			}
            			else {
HXLINE( 625)				if (::hx::IsNull( pmin )) {
HXLINE( 625)					pmin = this->tokenMin;
            				}
HXDLIN( 625)				if (::hx::IsNull( pmax )) {
HXLINE( 625)					pmax = this->tokenMax;
            				}
HXDLIN( 625)				return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e2,( (int)(pmin) ),( (int)(pmax) ),this->origin,this->line);
            			}
            		}
HXLINE( 626)		 ::crowplexus::hscript::ExprDef _g = e->e;
HXDLIN( 626)		switch((int)(_g->_hx_getIndex())){
            			case (int)8: {
HXLINE( 627)				::String op2 = _g->_hx_getString(0);
HXDLIN( 627)				 ::crowplexus::hscript::Expr e21 = _g->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 627)				 ::crowplexus::hscript::Expr e3 = _g->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >();
HXLINE( 628)				bool _hx_tmp1;
HXDLIN( 628)				 ::Dynamic _hx_tmp2 = this->opPriority->get(op);
HXDLIN( 628)				if (::hx::IsLessEq( _hx_tmp2,this->opPriority->get(op2) )) {
HXLINE( 628)					_hx_tmp1 = !(this->opRightAssoc->exists(op));
            				}
            				else {
HXLINE( 628)					_hx_tmp1 = false;
            				}
HXDLIN( 628)				if (_hx_tmp1) {
HXLINE( 629)					 ::crowplexus::hscript::ExprDef e4 = ::crowplexus::hscript::ExprDef_obj::EBinop(op2,this->makeBinop(op,e1,e21),e3);
HXDLIN( 629)					 ::Dynamic pmin1;
HXDLIN( 629)					if (::hx::IsNull( e1 )) {
HXLINE( 629)						pmin1 = 0;
            					}
            					else {
HXLINE( 629)						pmin1 = e1->pmin;
            					}
HXDLIN( 629)					 ::Dynamic pmax1;
HXDLIN( 629)					if (::hx::IsNull( e3 )) {
HXLINE( 629)						pmax1 = 0;
            					}
            					else {
HXLINE( 629)						pmax1 = e3->pmax;
            					}
HXDLIN( 629)					if (::hx::IsNull( e4 )) {
HXLINE( 629)						return null();
            					}
            					else {
HXLINE( 629)						if (::hx::IsNull( pmin1 )) {
HXLINE( 629)							pmin1 = this->tokenMin;
            						}
HXDLIN( 629)						if (::hx::IsNull( pmax1 )) {
HXLINE( 629)							pmax1 = this->tokenMax;
            						}
HXDLIN( 629)						return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e4,( (int)(pmin1) ),( (int)(pmax1) ),this->origin,this->line);
            					}
            				}
            				else {
HXLINE( 629)					 ::crowplexus::hscript::ExprDef e5 = ::crowplexus::hscript::ExprDef_obj::EBinop(op,e1,e);
HXDLIN( 629)					 ::Dynamic pmin2;
HXDLIN( 629)					if (::hx::IsNull( e1 )) {
HXLINE( 629)						pmin2 = 0;
            					}
            					else {
HXLINE( 629)						pmin2 = e1->pmin;
            					}
HXDLIN( 629)					 ::Dynamic pmax2;
HXDLIN( 629)					if (::hx::IsNull( e )) {
HXLINE( 629)						pmax2 = 0;
            					}
            					else {
HXLINE( 629)						pmax2 = e->pmax;
            					}
HXDLIN( 629)					if (::hx::IsNull( e5 )) {
HXLINE( 629)						return null();
            					}
            					else {
HXLINE( 629)						if (::hx::IsNull( pmin2 )) {
HXLINE( 629)							pmin2 = this->tokenMin;
            						}
HXDLIN( 629)						if (::hx::IsNull( pmax2 )) {
HXLINE( 629)							pmax2 = this->tokenMax;
            						}
HXDLIN( 629)						return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e5,( (int)(pmin2) ),( (int)(pmax2) ),this->origin,this->line);
            					}
            				}
            			}
            			break;
            			case (int)24: {
HXLINE( 630)				 ::crowplexus::hscript::Expr e22 = _g->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 630)				 ::crowplexus::hscript::Expr e31 = _g->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 630)				 ::crowplexus::hscript::Expr e41 = _g->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >();
HXLINE( 631)				if (this->opRightAssoc->exists(op)) {
HXLINE( 631)					 ::crowplexus::hscript::ExprDef e6 = ::crowplexus::hscript::ExprDef_obj::EBinop(op,e1,e);
HXDLIN( 631)					 ::Dynamic pmin3;
HXDLIN( 631)					if (::hx::IsNull( e1 )) {
HXLINE( 631)						pmin3 = 0;
            					}
            					else {
HXLINE( 631)						pmin3 = e1->pmin;
            					}
HXDLIN( 631)					 ::Dynamic pmax3;
HXDLIN( 631)					if (::hx::IsNull( e )) {
HXLINE( 631)						pmax3 = 0;
            					}
            					else {
HXLINE( 631)						pmax3 = e->pmax;
            					}
HXDLIN( 631)					if (::hx::IsNull( e6 )) {
HXLINE( 631)						return null();
            					}
            					else {
HXLINE( 631)						if (::hx::IsNull( pmin3 )) {
HXLINE( 631)							pmin3 = this->tokenMin;
            						}
HXDLIN( 631)						if (::hx::IsNull( pmax3 )) {
HXLINE( 631)							pmax3 = this->tokenMax;
            						}
HXDLIN( 631)						return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e6,( (int)(pmin3) ),( (int)(pmax3) ),this->origin,this->line);
            					}
            				}
            				else {
HXLINE( 631)					 ::crowplexus::hscript::ExprDef e7 = ::crowplexus::hscript::ExprDef_obj::ETernary(this->makeBinop(op,e1,e22),e31,e41);
HXDLIN( 631)					 ::Dynamic pmin4;
HXDLIN( 631)					if (::hx::IsNull( e1 )) {
HXLINE( 631)						pmin4 = 0;
            					}
            					else {
HXLINE( 631)						pmin4 = e1->pmin;
            					}
HXDLIN( 631)					 ::Dynamic pmax4;
HXDLIN( 631)					if (::hx::IsNull( e )) {
HXLINE( 631)						pmax4 = 0;
            					}
            					else {
HXLINE( 631)						pmax4 = e->pmax;
            					}
HXDLIN( 631)					if (::hx::IsNull( e7 )) {
HXLINE( 631)						return null();
            					}
            					else {
HXLINE( 631)						if (::hx::IsNull( pmin4 )) {
HXLINE( 631)							pmin4 = this->tokenMin;
            						}
HXDLIN( 631)						if (::hx::IsNull( pmax4 )) {
HXLINE( 631)							pmax4 = this->tokenMax;
            						}
HXDLIN( 631)						return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e7,( (int)(pmin4) ),( (int)(pmax4) ),this->origin,this->line);
            					}
            				}
            			}
            			break;
            			default:{
HXLINE( 633)				 ::crowplexus::hscript::ExprDef e8 = ::crowplexus::hscript::ExprDef_obj::EBinop(op,e1,e);
HXDLIN( 633)				 ::Dynamic pmin5;
HXDLIN( 633)				if (::hx::IsNull( e1 )) {
HXLINE( 633)					pmin5 = 0;
            				}
            				else {
HXLINE( 633)					pmin5 = e1->pmin;
            				}
HXDLIN( 633)				 ::Dynamic pmax5;
HXDLIN( 633)				if (::hx::IsNull( e )) {
HXLINE( 633)					pmax5 = 0;
            				}
            				else {
HXLINE( 633)					pmax5 = e->pmax;
            				}
HXDLIN( 633)				if (::hx::IsNull( e8 )) {
HXLINE( 633)					return null();
            				}
            				else {
HXLINE( 633)					if (::hx::IsNull( pmin5 )) {
HXLINE( 633)						pmin5 = this->tokenMin;
            					}
HXDLIN( 633)					if (::hx::IsNull( pmax5 )) {
HXLINE( 633)						pmax5 = this->tokenMax;
            					}
HXDLIN( 633)					return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e8,( (int)(pmin5) ),( (int)(pmax5) ),this->origin,this->line);
            				}
            			}
            		}
HXLINE( 626)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC3(Parser_obj,makeBinop,return )

 ::crowplexus::hscript::Expr Parser_obj::parseStructure(::String id){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_637_parseStructure)
HXLINE( 639)		int p1 = this->tokenMin;
HXLINE( 641)		::String _hx_switch_0 = id;
            		if (  (_hx_switch_0==HX_("break",bf,24,ec,b8)) ){
HXLINE( 697)			 ::crowplexus::hscript::ExprDef e = ::crowplexus::hscript::ExprDef_obj::EBreak_dyn();
HXDLIN( 697)			 ::Dynamic pmin = null();
HXDLIN( 697)			 ::Dynamic pmax = null();
HXDLIN( 697)			if (::hx::IsNull( e )) {
HXLINE( 697)				return null();
            			}
            			else {
HXLINE( 697)				if (::hx::IsNull( pmin )) {
HXLINE( 697)					pmin = this->tokenMin;
            				}
HXDLIN( 697)				if (::hx::IsNull( pmax )) {
HXLINE( 697)					pmax = this->tokenMax;
            				}
HXDLIN( 697)				return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e,( (int)(pmin) ),( (int)(pmax) ),this->origin,this->line);
            			}
HXDLIN( 697)			goto _hx_goto_46;
            		}
            		if (  (_hx_switch_0==HX_("continue",67,e0,c8,31)) ){
HXLINE( 698)			 ::crowplexus::hscript::ExprDef e1 = ::crowplexus::hscript::ExprDef_obj::EContinue_dyn();
HXDLIN( 698)			 ::Dynamic pmin1 = null();
HXDLIN( 698)			 ::Dynamic pmax1 = null();
HXDLIN( 698)			if (::hx::IsNull( e1 )) {
HXLINE( 698)				return null();
            			}
            			else {
HXLINE( 698)				if (::hx::IsNull( pmin1 )) {
HXLINE( 698)					pmin1 = this->tokenMin;
            				}
HXDLIN( 698)				if (::hx::IsNull( pmax1 )) {
HXLINE( 698)					pmax1 = this->tokenMax;
            				}
HXDLIN( 698)				return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e1,( (int)(pmin1) ),( (int)(pmax1) ),this->origin,this->line);
            			}
HXDLIN( 698)			goto _hx_goto_46;
            		}
            		if (  (_hx_switch_0==HX_("do",8b,57,00,00)) ){
HXLINE( 681)			 ::crowplexus::hscript::Expr e2 = this->parseExpr();
HXLINE( 682)			 ::crowplexus::hscript::Token tk = this->token();
HXLINE( 683)			if ((tk->_hx_getIndex() == 2)) {
HXLINE( 684)				if ((tk->_hx_getString(0) != HX_("while",b1,43,bd,c9))) {
HXLINE( 685)					this->unexpected(tk);
            				}
            			}
            			else {
HXLINE( 685)				this->unexpected(tk);
            			}
HXLINE( 687)			 ::crowplexus::hscript::Expr econd = this->parseExpr();
HXLINE( 688)			 ::crowplexus::hscript::ExprDef e3 = ::crowplexus::hscript::ExprDef_obj::EDoWhile(econd,e2);
HXDLIN( 688)			 ::Dynamic pmin2 = p1;
HXDLIN( 688)			 ::Dynamic pmax2;
HXDLIN( 688)			if (::hx::IsNull( econd )) {
HXLINE( 688)				pmax2 = 0;
            			}
            			else {
HXLINE( 688)				pmax2 = econd->pmax;
            			}
HXDLIN( 688)			if (::hx::IsNull( e3 )) {
HXLINE( 688)				return null();
            			}
            			else {
HXLINE( 688)				if (::hx::IsNull( pmin2 )) {
HXLINE( 688)					pmin2 = this->tokenMin;
            				}
HXDLIN( 688)				if (::hx::IsNull( pmax2 )) {
HXLINE( 688)					pmax2 = this->tokenMax;
            				}
HXDLIN( 688)				return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e3,( (int)(pmin2) ),( (int)(pmax2) ),this->origin,this->line);
            			}
HXLINE( 680)			goto _hx_goto_46;
            		}
            		if (  (_hx_switch_0==HX_("else",b9,e4,14,43)) ){
HXLINE( 699)			return ( ( ::crowplexus::hscript::Expr)(this->unexpected(::crowplexus::hscript::Token_obj::TId(id))) );
HXDLIN( 699)			goto _hx_goto_46;
            		}
            		if (  (_hx_switch_0==HX_("enum",01,6b,16,43)) ){
HXLINE( 878)			::String name = this->getIdent();
HXLINE( 880)			{
HXLINE( 880)				 ::crowplexus::hscript::Token t = this->token();
HXDLIN( 880)				if (::hx::IsPointerNotEq( t,::crowplexus::hscript::Token_obj::TBrOpen_dyn() )) {
HXLINE( 880)					this->unexpected(t);
            				}
            			}
HXLINE( 882)			::Array< ::Dynamic> fields = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 884)			::String currentName = HX_("",00,00,00,00);
HXLINE( 885)			::Array< ::Dynamic> currentArgs = null();
HXLINE( 887)			while(true){
HXLINE( 888)				 ::crowplexus::hscript::Token tk1 = this->token();
HXLINE( 889)				switch((int)(tk1->_hx_getIndex())){
            					case (int)4: {
HXLINE( 904)						if (::hx::IsNotNull( currentArgs )) {
HXLINE( 905)							if (!(this->resumeErrors)) {
HXLINE( 905)								HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::ECustom(HX_("Cannot have multiple argument lists in one enum constructor",37,b9,8a,85)),this->tokenMin,this->tokenMax,this->origin,this->line));
            							}
HXLINE( 906)							goto _hx_goto_47;
            						}
HXLINE( 908)						currentArgs = this->parseFunctionArgs();
            					}
            					break;
            					case (int)7: {
HXLINE( 891)						goto _hx_goto_47;
            					}
            					break;
            					case (int)9: case (int)10: {
HXLINE( 893)						if ((currentName == HX_("",00,00,00,00))) {
HXLINE( 894)							continue;
            						}
HXLINE( 896)						bool _hx_tmp;
HXDLIN( 896)						if (::hx::IsNotNull( currentArgs )) {
HXLINE( 896)							_hx_tmp = (currentArgs->length > 0);
            						}
            						else {
HXLINE( 896)							_hx_tmp = false;
            						}
HXDLIN( 896)						if (_hx_tmp) {
HXLINE( 897)							fields->push(::crowplexus::hscript::EnumType_obj::EConstructor(currentName,currentArgs));
HXLINE( 898)							currentArgs = null();
            						}
            						else {
HXLINE( 900)							fields->push(::crowplexus::hscript::EnumType_obj::ESimple(currentName));
            						}
HXLINE( 902)						currentName = HX_("",00,00,00,00);
            					}
            					break;
            					default:{
HXLINE( 910)						if ((currentName != HX_("",00,00,00,00))) {
HXLINE( 911)							if (!(this->resumeErrors)) {
HXLINE( 911)								HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::ECustom(HX_("Expected comma or semicolon",a7,36,88,7d)),this->tokenMin,this->tokenMax,this->origin,this->line));
            							}
HXLINE( 912)							goto _hx_goto_47;
            						}
HXLINE( 914)						::String name1 = this->extractIdent(tk1);
HXLINE( 915)						currentName = name1;
            					}
            				}
            			}
            			_hx_goto_47:;
HXLINE( 919)			 ::crowplexus::hscript::ExprDef e4 = ::crowplexus::hscript::ExprDef_obj::EEnum(name,fields);
HXDLIN( 919)			 ::Dynamic pmin3 = null();
HXDLIN( 919)			 ::Dynamic pmax3 = null();
HXDLIN( 919)			if (::hx::IsNull( e4 )) {
HXLINE( 919)				return null();
            			}
            			else {
HXLINE( 919)				if (::hx::IsNull( pmin3 )) {
HXLINE( 919)					pmin3 = this->tokenMin;
            				}
HXDLIN( 919)				if (::hx::IsNull( pmax3 )) {
HXLINE( 919)					pmax3 = this->tokenMax;
            				}
HXDLIN( 919)				return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e4,( (int)(pmin3) ),( (int)(pmax3) ),this->origin,this->line);
            			}
HXLINE( 877)			goto _hx_goto_46;
            		}
            		if (  (_hx_switch_0==HX_("final",76,5f,9a,00)) ||  (_hx_switch_0==HX_("var",e7,de,59,00)) ){
HXLINE( 663)			::String ident = this->getIdent();
HXLINE( 664)			 ::crowplexus::hscript::Token tk2 = this->token();
HXLINE( 665)			 ::crowplexus::hscript::CType t1 = null();
HXLINE( 666)			bool _hx_tmp1;
HXDLIN( 666)			if (::hx::IsPointerEq( tk2,::crowplexus::hscript::Token_obj::TDoubleDot_dyn() )) {
HXLINE( 666)				_hx_tmp1 = this->allowTypes;
            			}
            			else {
HXLINE( 666)				_hx_tmp1 = false;
            			}
HXDLIN( 666)			if (_hx_tmp1) {
HXLINE( 667)				t1 = this->parseType();
HXLINE( 668)				tk2 = this->token();
            			}
HXLINE( 670)			 ::crowplexus::hscript::Expr e5 = null();
HXLINE( 671)			if (__hxcpp_enum_eq(tk2,::crowplexus::hscript::Token_obj::TOp(HX_("=",3d,00,00,00)))) {
HXLINE( 672)				e5 = this->parseExpr();
            			}
            			else {
HXLINE( 674)				 ::haxe::ds::List _hx_tmp2 = this->tokens;
HXDLIN( 674)				_hx_tmp2->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk2,this->tokenMin,this->tokenMax));
HXDLIN( 674)				this->tokenMin = this->oldTokenMin;
HXDLIN( 674)				this->tokenMax = this->oldTokenMax;
            			}
HXLINE( 675)			 ::crowplexus::hscript::ExprDef e6 = ::crowplexus::hscript::ExprDef_obj::EVar(ident,t1,e5,(id == HX_("final",76,5f,9a,00)));
HXDLIN( 675)			 ::Dynamic pmin4 = p1;
HXDLIN( 675)			 ::Dynamic pmax4;
HXDLIN( 675)			if (::hx::IsNull( e5 )) {
HXLINE( 675)				pmax4 = this->tokenMax;
            			}
            			else {
HXLINE( 675)				if (::hx::IsNull( e5 )) {
HXLINE( 675)					pmax4 = 0;
            				}
            				else {
HXLINE( 675)					pmax4 = e5->pmax;
            				}
            			}
HXDLIN( 675)			if (::hx::IsNull( e6 )) {
HXLINE( 675)				return null();
            			}
            			else {
HXLINE( 675)				if (::hx::IsNull( pmin4 )) {
HXLINE( 675)					pmin4 = this->tokenMin;
            				}
HXDLIN( 675)				if (::hx::IsNull( pmax4 )) {
HXLINE( 675)					pmax4 = this->tokenMax;
            				}
HXDLIN( 675)				return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e6,( (int)(pmin4) ),( (int)(pmax4) ),this->origin,this->line);
            			}
HXLINE( 662)			goto _hx_goto_46;
            		}
            		if (  (_hx_switch_0==HX_("for",09,c7,4d,00)) ){
HXLINE( 690)			{
HXLINE( 690)				 ::crowplexus::hscript::Token t2 = this->token();
HXDLIN( 690)				if (::hx::IsPointerNotEq( t2,::crowplexus::hscript::Token_obj::TPOpen_dyn() )) {
HXLINE( 690)					this->unexpected(t2);
            				}
            			}
HXLINE( 691)			::String vname = this->getIdent();
HXLINE( 692)			{
HXLINE( 692)				 ::crowplexus::hscript::Token t3 = this->token();
HXDLIN( 692)				if (!(__hxcpp_enum_eq(t3,::crowplexus::hscript::Token_obj::TId(HX_("in",e5,5b,00,00))))) {
HXLINE( 692)					this->unexpected(t3);
            				}
            			}
HXLINE( 693)			 ::crowplexus::hscript::Expr eiter = this->parseExpr();
HXLINE( 694)			{
HXLINE( 694)				 ::crowplexus::hscript::Token t4 = this->token();
HXDLIN( 694)				if (::hx::IsPointerNotEq( t4,::crowplexus::hscript::Token_obj::TPClose_dyn() )) {
HXLINE( 694)					this->unexpected(t4);
            				}
            			}
HXLINE( 695)			 ::crowplexus::hscript::Expr e7 = this->parseExpr();
HXLINE( 696)			 ::crowplexus::hscript::ExprDef e8 = ::crowplexus::hscript::ExprDef_obj::EFor(vname,eiter,e7);
HXDLIN( 696)			 ::Dynamic pmin5 = p1;
HXDLIN( 696)			 ::Dynamic pmax5;
HXDLIN( 696)			if (::hx::IsNull( e7 )) {
HXLINE( 696)				pmax5 = 0;
            			}
            			else {
HXLINE( 696)				pmax5 = e7->pmax;
            			}
HXDLIN( 696)			if (::hx::IsNull( e8 )) {
HXLINE( 696)				return null();
            			}
            			else {
HXLINE( 696)				if (::hx::IsNull( pmin5 )) {
HXLINE( 696)					pmin5 = this->tokenMin;
            				}
HXDLIN( 696)				if (::hx::IsNull( pmax5 )) {
HXLINE( 696)					pmax5 = this->tokenMax;
            				}
HXDLIN( 696)				return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e8,( (int)(pmin5) ),( (int)(pmax5) ),this->origin,this->line);
            			}
HXLINE( 689)			goto _hx_goto_46;
            		}
            		if (  (_hx_switch_0==HX_("function",18,ab,52,14)) ){
HXLINE( 705)			 ::crowplexus::hscript::Token tk3 = this->token();
HXLINE( 706)			::String name2 = null();
HXLINE( 707)			if ((tk3->_hx_getIndex() == 2)) {
HXLINE( 708)				::String id1 = tk3->_hx_getString(0);
HXDLIN( 708)				name2 = id1;
            			}
            			else {
HXLINE( 709)				 ::haxe::ds::List _hx_tmp3 = this->tokens;
HXDLIN( 709)				_hx_tmp3->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk3,this->tokenMin,this->tokenMax));
HXDLIN( 709)				this->tokenMin = this->oldTokenMin;
HXDLIN( 709)				this->tokenMax = this->oldTokenMax;
            			}
HXLINE( 711)			 ::Dynamic inf = this->parseFunctionDecl();
HXLINE( 712)			 ::crowplexus::hscript::ExprDef e9 = ::crowplexus::hscript::ExprDef_obj::EFunction( ::Dynamic(inf->__Field(HX_("args",5d,8d,74,40),::hx::paccDynamic)), ::Dynamic(inf->__Field(HX_("body",a2,7a,1b,41),::hx::paccDynamic)),name2, ::Dynamic(inf->__Field(HX_("ret",61,d9,56,00),::hx::paccDynamic)));
HXDLIN( 712)			 ::Dynamic pmin6 = p1;
HXDLIN( 712)			 ::crowplexus::hscript::Expr e10 = ( ( ::crowplexus::hscript::Expr)(inf->__Field(HX_("body",a2,7a,1b,41),::hx::paccDynamic)) );
HXDLIN( 712)			 ::Dynamic pmax6;
HXDLIN( 712)			if (::hx::IsNull( e10 )) {
HXLINE( 712)				pmax6 = 0;
            			}
            			else {
HXLINE( 712)				pmax6 = e10->pmax;
            			}
HXDLIN( 712)			if (::hx::IsNull( e9 )) {
HXLINE( 712)				return null();
            			}
            			else {
HXLINE( 712)				if (::hx::IsNull( pmin6 )) {
HXLINE( 712)					pmin6 = this->tokenMin;
            				}
HXDLIN( 712)				if (::hx::IsNull( pmax6 )) {
HXLINE( 712)					pmax6 = this->tokenMax;
            				}
HXDLIN( 712)				return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e9,( (int)(pmin6) ),( (int)(pmax6) ),this->origin,this->line);
            			}
HXLINE( 704)			goto _hx_goto_46;
            		}
            		if (  (_hx_switch_0==HX_("if",dd,5b,00,00)) ){
HXLINE( 643)			{
HXLINE( 643)				 ::crowplexus::hscript::Token t5 = this->token();
HXDLIN( 643)				if (::hx::IsPointerNotEq( t5,::crowplexus::hscript::Token_obj::TPOpen_dyn() )) {
HXLINE( 643)					this->unexpected(t5);
            				}
            			}
HXLINE( 644)			 ::crowplexus::hscript::Expr cond = this->parseExpr();
HXLINE( 645)			{
HXLINE( 645)				 ::crowplexus::hscript::Token t6 = this->token();
HXDLIN( 645)				if (::hx::IsPointerNotEq( t6,::crowplexus::hscript::Token_obj::TPClose_dyn() )) {
HXLINE( 645)					this->unexpected(t6);
            				}
            			}
HXLINE( 646)			 ::crowplexus::hscript::Expr e11 = this->parseExpr();
HXLINE( 647)			 ::crowplexus::hscript::Expr e21 = null();
HXLINE( 648)			bool semic = false;
HXLINE( 649)			 ::crowplexus::hscript::Token tk4 = this->token();
HXLINE( 650)			if (::hx::IsPointerEq( tk4,::crowplexus::hscript::Token_obj::TSemicolon_dyn() )) {
HXLINE( 651)				semic = true;
HXLINE( 652)				tk4 = this->token();
            			}
HXLINE( 654)			if (__hxcpp_enum_eq(tk4,::crowplexus::hscript::Token_obj::TId(HX_("else",b9,e4,14,43)))) {
HXLINE( 655)				e21 = this->parseExpr();
            			}
            			else {
HXLINE( 657)				{
HXLINE( 657)					 ::haxe::ds::List _hx_tmp4 = this->tokens;
HXDLIN( 657)					_hx_tmp4->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk4,this->tokenMin,this->tokenMax));
HXDLIN( 657)					this->tokenMin = this->oldTokenMin;
HXDLIN( 657)					this->tokenMax = this->oldTokenMax;
            				}
HXLINE( 658)				if (semic) {
HXLINE( 659)					 ::haxe::ds::List _hx_tmp5 = this->tokens;
HXDLIN( 659)					_hx_tmp5->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,::crowplexus::hscript::Token_obj::TSemicolon_dyn(),this->tokenMin,this->tokenMax));
HXDLIN( 659)					this->tokenMin = this->oldTokenMin;
HXDLIN( 659)					this->tokenMax = this->oldTokenMax;
            				}
            			}
HXLINE( 661)			 ::crowplexus::hscript::ExprDef e12 = ::crowplexus::hscript::ExprDef_obj::EIf(cond,e11,e21);
HXDLIN( 661)			 ::Dynamic pmin7 = p1;
HXDLIN( 661)			 ::Dynamic pmax7;
HXDLIN( 661)			if (::hx::IsNull( e21 )) {
HXLINE( 661)				pmax7 = this->tokenMax;
            			}
            			else {
HXLINE( 661)				if (::hx::IsNull( e21 )) {
HXLINE( 661)					pmax7 = 0;
            				}
            				else {
HXLINE( 661)					pmax7 = e21->pmax;
            				}
            			}
HXDLIN( 661)			if (::hx::IsNull( e12 )) {
HXLINE( 661)				return null();
            			}
            			else {
HXLINE( 661)				if (::hx::IsNull( pmin7 )) {
HXLINE( 661)					pmin7 = this->tokenMin;
            				}
HXDLIN( 661)				if (::hx::IsNull( pmax7 )) {
HXLINE( 661)					pmax7 = this->tokenMax;
            				}
HXDLIN( 661)				return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e12,( (int)(pmin7) ),( (int)(pmax7) ),this->origin,this->line);
            			}
HXLINE( 642)			goto _hx_goto_46;
            		}
            		if (  (_hx_switch_0==HX_("import",65,a1,82,08)) ){
HXLINE( 840)			::Array< ::String > path = ::Array_obj< ::String >::__new(1)->init(0,this->getIdent());
HXLINE( 841)			::String asStr = null();
HXLINE( 842)			bool star = false;
HXLINE( 844)			while(true){
HXLINE( 845)				 ::crowplexus::hscript::Token t7 = this->token();
HXLINE( 846)				if (::hx::IsPointerNotEq( t7,::crowplexus::hscript::Token_obj::TDot_dyn() )) {
HXLINE( 847)					{
HXLINE( 847)						 ::haxe::ds::List _hx_tmp6 = this->tokens;
HXDLIN( 847)						_hx_tmp6->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,t7,this->tokenMin,this->tokenMax));
HXDLIN( 847)						this->tokenMin = this->oldTokenMin;
HXDLIN( 847)						this->tokenMax = this->oldTokenMax;
            					}
HXLINE( 848)					goto _hx_goto_48;
            				}
HXLINE( 850)				t7 = this->token();
HXLINE( 851)				switch((int)(t7->_hx_getIndex())){
            					case (int)2: {
HXLINE( 853)						::String id2 = t7->_hx_getString(0);
HXDLIN( 853)						path->push(id2);
            					}
            					break;
            					case (int)3: {
HXLINE( 852)						if ((t7->_hx_getString(0) == HX_("*",2a,00,00,00))) {
HXLINE( 852)							star = true;
            						}
            						else {
HXLINE( 854)							this->unexpected(t7);
            						}
            					}
            					break;
            					default:{
HXLINE( 854)						this->unexpected(t7);
            					}
            				}
            			}
            			_hx_goto_48:;
HXLINE( 858)			::String asErr = (((HX_(" -> ",6f,2f,49,15) + path->join(HX_(".",2e,00,00,00))) + HX_(" as ",ce,d2,70,15)) + asStr);
HXLINE( 860)			if (this->maybe(::crowplexus::hscript::Token_obj::TId(HX_("as",f2,54,00,00)))) {
HXLINE( 861)				asStr = this->getIdent();
HXLINE( 862)				::String uppercased = asStr.charAt(0);
HXDLIN( 862)				bool uppercased1 = (uppercased == asStr.charAt(0).toUpperCase());
HXLINE( 863)				bool _hx_tmp7;
HXDLIN( 863)				bool _hx_tmp8;
HXDLIN( 863)				if (::hx::IsNotNull( asStr )) {
HXLINE( 863)					_hx_tmp8 = (asStr == HX_("null",87,9e,0e,49));
            				}
            				else {
HXLINE( 863)					_hx_tmp8 = true;
            				}
HXDLIN( 863)				if (!(_hx_tmp8)) {
HXLINE( 863)					_hx_tmp7 = (asStr == HX_("",00,00,00,00));
            				}
            				else {
HXLINE( 863)					_hx_tmp7 = true;
            				}
HXDLIN( 863)				if (_hx_tmp7) {
HXLINE( 864)					this->unexpected(::crowplexus::hscript::Token_obj::TId(HX_("as",f2,54,00,00)));
            				}
HXLINE( 865)				if (!(uppercased1)) {
HXLINE( 866)					if (!(this->resumeErrors)) {
HXLINE( 866)						HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::ECustom((HX_("Import aliases must begin with an uppercase letter.",f0,ef,d9,b9) + asErr)),this->readPos,this->readPos,this->origin,this->line));
            					}
            				}
            			}
HXLINE( 875)			 ::crowplexus::hscript::ExprDef e13 = ::crowplexus::hscript::ExprDef_obj::EImport(path->join(HX_(".",2e,00,00,00)),asStr);
HXDLIN( 875)			 ::Dynamic pmin8 = null();
HXDLIN( 875)			 ::Dynamic pmax8 = null();
HXDLIN( 875)			if (::hx::IsNull( e13 )) {
HXLINE( 875)				return null();
            			}
            			else {
HXLINE( 875)				if (::hx::IsNull( pmin8 )) {
HXLINE( 875)					pmin8 = this->tokenMin;
            				}
HXDLIN( 875)				if (::hx::IsNull( pmax8 )) {
HXLINE( 875)					pmax8 = this->tokenMax;
            				}
HXDLIN( 875)				return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e13,( (int)(pmin8) ),( (int)(pmax8) ),this->origin,this->line);
            			}
HXLINE( 839)			goto _hx_goto_46;
            		}
            		if (  (_hx_switch_0==HX_("inline",59,ca,3f,99)) ){
HXLINE( 701)			if (!(this->maybe(::crowplexus::hscript::Token_obj::TId(HX_("function",18,ab,52,14))))) {
HXLINE( 702)				this->unexpected(::crowplexus::hscript::Token_obj::TId(HX_("inline",59,ca,3f,99)));
            			}
HXLINE( 703)			return this->parseStructure(HX_("function",18,ab,52,14));
HXLINE( 700)			goto _hx_goto_46;
            		}
            		if (  (_hx_switch_0==HX_("new",60,d0,53,00)) ){
HXLINE( 719)			::Array< ::String > a = ::Array_obj< ::String >::__new();
HXLINE( 720)			a->push(this->getIdent());
HXLINE( 721)			while(true){
HXLINE( 722)				 ::crowplexus::hscript::Token tk5 = this->token();
HXLINE( 723)				switch((int)(tk5->_hx_getIndex())){
            					case (int)4: {
HXLINE( 727)						goto _hx_goto_49;
            					}
            					break;
            					case (int)8: {
HXLINE( 725)						a->push(this->getIdent());
            					}
            					break;
            					default:{
HXLINE( 729)						this->unexpected(tk5);
HXLINE( 730)						goto _hx_goto_49;
            					}
            				}
            			}
            			_hx_goto_49:;
HXLINE( 733)			::Array< ::Dynamic> args = this->parseExprList(::crowplexus::hscript::Token_obj::TPClose_dyn());
HXLINE( 734)			 ::crowplexus::hscript::ExprDef e14 = ::crowplexus::hscript::ExprDef_obj::ENew(a->join(HX_(".",2e,00,00,00)),args);
HXDLIN( 734)			 ::Dynamic pmin9 = p1;
HXDLIN( 734)			 ::Dynamic pmax9 = null();
HXDLIN( 734)			if (::hx::IsNull( e14 )) {
HXLINE( 734)				return null();
            			}
            			else {
HXLINE( 734)				if (::hx::IsNull( pmin9 )) {
HXLINE( 734)					pmin9 = this->tokenMin;
            				}
HXDLIN( 734)				if (::hx::IsNull( pmax9 )) {
HXLINE( 734)					pmax9 = this->tokenMax;
            				}
HXDLIN( 734)				return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e14,( (int)(pmin9) ),( (int)(pmax9) ),this->origin,this->line);
            			}
HXLINE( 718)			goto _hx_goto_46;
            		}
            		if (  (_hx_switch_0==HX_("package",86,2b,b1,41)) ){
HXLINE( 976)			 ::crowplexus::hscript::Token tk6 = this->token();
HXLINE( 977)			{
HXLINE( 977)				 ::haxe::ds::List _hx_tmp9 = this->tokens;
HXDLIN( 977)				_hx_tmp9->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk6,this->tokenMin,this->tokenMax));
HXDLIN( 977)				this->tokenMin = this->oldTokenMin;
HXDLIN( 977)				this->tokenMax = this->oldTokenMax;
            			}
HXLINE( 978)			this->packageName = HX_("",00,00,00,00);
HXLINE( 979)			if (::hx::IsPointerEq( tk6,::crowplexus::hscript::Token_obj::TSemicolon_dyn() )) {
HXLINE( 980)				 ::crowplexus::hscript::ExprDef e15 = ::crowplexus::hscript::ExprDef_obj::EIgnore(false);
HXDLIN( 980)				 ::Dynamic pmin10 = null();
HXDLIN( 980)				 ::Dynamic pmax10 = null();
HXDLIN( 980)				if (::hx::IsNull( e15 )) {
HXLINE( 980)					return null();
            				}
            				else {
HXLINE( 980)					if (::hx::IsNull( pmin10 )) {
HXLINE( 980)						pmin10 = this->tokenMin;
            					}
HXDLIN( 980)					if (::hx::IsNull( pmax10 )) {
HXLINE( 980)						pmax10 = this->tokenMax;
            					}
HXDLIN( 980)					return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e15,( (int)(pmin10) ),( (int)(pmax10) ),this->origin,this->line);
            				}
            			}
HXLINE( 982)			::Array< ::String > path1 = this->parsePath();
HXLINE( 984)			this->packageName = path1->join(HX_(".",2e,00,00,00));
HXLINE( 985)			 ::crowplexus::hscript::ExprDef e16 = ::crowplexus::hscript::ExprDef_obj::EIgnore(false);
HXDLIN( 985)			 ::Dynamic pmin11 = null();
HXDLIN( 985)			 ::Dynamic pmax11 = null();
HXDLIN( 985)			if (::hx::IsNull( e16 )) {
HXLINE( 985)				return null();
            			}
            			else {
HXLINE( 985)				if (::hx::IsNull( pmin11 )) {
HXLINE( 985)					pmin11 = this->tokenMin;
            				}
HXDLIN( 985)				if (::hx::IsNull( pmax11 )) {
HXLINE( 985)					pmax11 = this->tokenMax;
            				}
HXDLIN( 985)				return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e16,( (int)(pmin11) ),( (int)(pmax11) ),this->origin,this->line);
            			}
HXLINE( 974)			goto _hx_goto_46;
            		}
            		if (  (_hx_switch_0==HX_("return",b0,a4,2d,09)) ){
HXLINE( 714)			 ::crowplexus::hscript::Token tk7 = this->token();
HXLINE( 715)			{
HXLINE( 715)				 ::haxe::ds::List _hx_tmp10 = this->tokens;
HXDLIN( 715)				_hx_tmp10->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk7,this->tokenMin,this->tokenMax));
HXDLIN( 715)				this->tokenMin = this->oldTokenMin;
HXDLIN( 715)				this->tokenMax = this->oldTokenMax;
            			}
HXLINE( 716)			 ::crowplexus::hscript::Expr e17;
HXDLIN( 716)			if (::hx::IsPointerEq( tk7,::crowplexus::hscript::Token_obj::TSemicolon_dyn() )) {
HXLINE( 716)				e17 = null();
            			}
            			else {
HXLINE( 716)				e17 = this->parseExpr();
            			}
HXLINE( 717)			 ::crowplexus::hscript::ExprDef e18 = ::crowplexus::hscript::ExprDef_obj::EReturn(e17);
HXDLIN( 717)			 ::Dynamic pmin12 = p1;
HXDLIN( 717)			 ::Dynamic pmax12;
HXDLIN( 717)			if (::hx::IsNull( e17 )) {
HXLINE( 717)				pmax12 = this->tokenMax;
            			}
            			else {
HXLINE( 717)				if (::hx::IsNull( e17 )) {
HXLINE( 717)					pmax12 = 0;
            				}
            				else {
HXLINE( 717)					pmax12 = e17->pmax;
            				}
            			}
HXDLIN( 717)			if (::hx::IsNull( e18 )) {
HXLINE( 717)				return null();
            			}
            			else {
HXLINE( 717)				if (::hx::IsNull( pmin12 )) {
HXLINE( 717)					pmin12 = this->tokenMin;
            				}
HXDLIN( 717)				if (::hx::IsNull( pmax12 )) {
HXLINE( 717)					pmax12 = this->tokenMax;
            				}
HXDLIN( 717)				return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e18,( (int)(pmin12) ),( (int)(pmax12) ),this->origin,this->line);
            			}
HXLINE( 713)			goto _hx_goto_46;
            		}
            		if (  (_hx_switch_0==HX_("switch",f4,49,79,c5)) ){
HXLINE( 753)			 ::crowplexus::hscript::Expr parentExpr = this->parseExpr();
HXLINE( 754)			 ::crowplexus::hscript::Expr def = null();
HXDLIN( 754)			::Array< ::Dynamic> cases = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 755)			{
HXLINE( 755)				 ::crowplexus::hscript::Token t8 = this->token();
HXDLIN( 755)				if (::hx::IsPointerNotEq( t8,::crowplexus::hscript::Token_obj::TBrOpen_dyn() )) {
HXLINE( 755)					this->unexpected(t8);
            				}
            			}
HXLINE( 756)			while(true){
HXLINE( 757)				 ::crowplexus::hscript::Token tk8 = this->token();
HXLINE( 758)				switch((int)(tk8->_hx_getIndex())){
            					case (int)2: {
HXLINE( 812)						::String _hx_switch_1 = tk8->_hx_getString(0);
            						if (  (_hx_switch_1==HX_("case",b0,1e,ba,41)) ){
HXLINE( 760)							 ::crowplexus::hscript::SwitchCase c =  ::crowplexus::hscript::SwitchCase_obj::__alloc( HX_CTX ,::Array_obj< ::Dynamic>::__new(0),null(),null());
HXLINE( 761)							cases->push(c);
HXLINE( 762)							while(true){
HXLINE( 763)								 ::crowplexus::hscript::Expr e19 = this->parseExpr();
HXLINE( 764)								c->values->push(e19);
HXLINE( 765)								tk8 = this->token();
HXLINE( 766)								switch((int)(tk8->_hx_getIndex())){
            									case (int)2: {
HXLINE( 769)										if ((tk8->_hx_getString(0) == HX_("if",dd,5b,00,00))) {
HXLINE( 773)											 ::crowplexus::hscript::Expr e20 = this->parseExpr();
HXLINE( 774)											c->ifExpr = e20;
HXLINE( 775)											{
HXLINE( 775)												tk8 = this->token();
HXDLIN( 775)												switch((int)(tk8->_hx_getIndex())){
            													case (int)9: {
            													}
            													break;
            													case (int)14: {
HXLINE( 777)														goto _hx_goto_52;
            													}
            													break;
            													default:{
HXLINE( 779)														this->unexpected(tk8);
HXLINE( 780)														goto _hx_goto_52;
            													}
            												}
            											}
            										}
            										else {
HXLINE( 785)											this->unexpected(tk8);
HXLINE( 786)											goto _hx_goto_52;
            										}
            									}
            									break;
            									case (int)9: {
            									}
            									break;
            									case (int)14: {
HXLINE( 783)										goto _hx_goto_52;
            									}
            									break;
            									default:{
HXLINE( 785)										this->unexpected(tk8);
HXLINE( 786)										goto _hx_goto_52;
            									}
            								}
            							}
            							_hx_goto_52:;
HXLINE( 789)							::Array< ::Dynamic> exprs = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 790)							while(true){
HXLINE( 791)								tk8 = this->token();
HXLINE( 792)								{
HXLINE( 792)									 ::haxe::ds::List _hx_tmp11 = this->tokens;
HXDLIN( 792)									_hx_tmp11->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk8,this->tokenMin,this->tokenMax));
HXDLIN( 792)									this->tokenMin = this->oldTokenMin;
HXDLIN( 792)									this->tokenMax = this->oldTokenMax;
            								}
HXLINE( 793)								switch((int)(tk8->_hx_getIndex())){
            									case (int)0: {
HXLINE( 796)										if (this->resumeErrors) {
HXLINE( 797)											goto _hx_goto_53;
            										}
            										else {
HXLINE( 799)											this->parseFullExpr(exprs);
            										}
            									}
            									break;
            									case (int)2: {
HXLINE( 794)										::String _hx_switch_2 = tk8->_hx_getString(0);
            										if (  (_hx_switch_2==HX_("case",b0,1e,ba,41)) ||  (_hx_switch_2==HX_("default",c1,d8,c3,9b)) ){
HXLINE( 795)											goto _hx_goto_53;
HXDLIN( 795)											goto _hx_goto_54;
            										}
            										/* default */{
HXLINE( 799)											this->parseFullExpr(exprs);
            										}
            										_hx_goto_54:;
            									}
            									break;
            									case (int)7: {
HXLINE( 795)										goto _hx_goto_53;
            									}
            									break;
            									default:{
HXLINE( 799)										this->parseFullExpr(exprs);
            									}
            								}
            							}
            							_hx_goto_53:;
HXLINE( 802)							 ::crowplexus::hscript::Expr _hx_tmp12;
HXDLIN( 802)							if ((exprs->length == 1)) {
HXLINE( 802)								_hx_tmp12 = exprs->__get(0).StaticCast<  ::crowplexus::hscript::Expr >();
            							}
            							else {
HXLINE( 802)								if ((exprs->length == 0)) {
HXLINE( 802)									 ::crowplexus::hscript::ExprDef e22 = ::crowplexus::hscript::ExprDef_obj::EBlock(::Array_obj< ::Dynamic>::__new(0));
HXDLIN( 802)									 ::Dynamic pmin13 = this->tokenMin;
HXDLIN( 802)									 ::Dynamic pmax13 = this->tokenMin;
HXDLIN( 802)									if (::hx::IsNull( e22 )) {
HXLINE( 802)										_hx_tmp12 = null();
            									}
            									else {
HXLINE( 802)										if (::hx::IsNull( pmin13 )) {
HXLINE( 802)											pmin13 = this->tokenMin;
            										}
HXDLIN( 802)										if (::hx::IsNull( pmax13 )) {
HXLINE( 802)											pmax13 = this->tokenMax;
            										}
HXDLIN( 802)										_hx_tmp12 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e22,( (int)(pmin13) ),( (int)(pmax13) ),this->origin,this->line);
            									}
            								}
            								else {
HXLINE( 803)									 ::crowplexus::hscript::ExprDef e23 = ::crowplexus::hscript::ExprDef_obj::EBlock(exprs);
HXDLIN( 803)									 ::crowplexus::hscript::Expr e24 = exprs->__get(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 803)									 ::Dynamic pmin14;
HXDLIN( 803)									if (::hx::IsNull( e24 )) {
HXLINE( 803)										pmin14 = 0;
            									}
            									else {
HXLINE( 803)										pmin14 = e24->pmin;
            									}
HXDLIN( 803)									 ::crowplexus::hscript::Expr e25 = exprs->__get((exprs->length - 1)).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 803)									 ::Dynamic pmax14;
HXDLIN( 803)									if (::hx::IsNull( e25 )) {
HXLINE( 803)										pmax14 = 0;
            									}
            									else {
HXLINE( 803)										pmax14 = e25->pmax;
            									}
HXDLIN( 803)									if (::hx::IsNull( e23 )) {
HXLINE( 802)										_hx_tmp12 = null();
            									}
            									else {
HXLINE( 803)										if (::hx::IsNull( pmin14 )) {
HXLINE( 803)											pmin14 = this->tokenMin;
            										}
HXDLIN( 803)										if (::hx::IsNull( pmax14 )) {
HXLINE( 803)											pmax14 = this->tokenMax;
            										}
HXLINE( 802)										_hx_tmp12 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e23,( (int)(pmin14) ),( (int)(pmax14) ),this->origin,this->line);
            									}
            								}
            							}
HXDLIN( 802)							c->expr = _hx_tmp12;
HXLINE( 805)							{
HXLINE( 805)								int _g = 0;
HXDLIN( 805)								::Array< ::Dynamic> _g1 = c->values;
HXDLIN( 805)								while((_g < _g1->length)){
HXLINE( 805)									 ::crowplexus::hscript::Expr i = _g1->__get(_g).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 805)									_g = (_g + 1);
HXLINE( 806)									{
HXLINE( 806)										 ::crowplexus::hscript::ExprDef _g2 = i->e;
HXDLIN( 806)										if ((_g2->_hx_getIndex() == 2)) {
HXLINE( 807)											if ((_g2->_hx_getString(0) == HX_("_",5f,00,00,00))) {
HXLINE( 808)												def = c->expr;
            											}
            										}
            									}
            								}
            							}
HXLINE( 759)							goto _hx_goto_51;
            						}
            						if (  (_hx_switch_1==HX_("default",c1,d8,c3,9b)) ){
HXLINE( 813)							if (::hx::IsNotNull( def )) {
HXLINE( 814)								this->unexpected(tk8);
            							}
HXLINE( 815)							{
HXLINE( 815)								 ::crowplexus::hscript::Token t9 = this->token();
HXDLIN( 815)								if (::hx::IsPointerNotEq( t9,::crowplexus::hscript::Token_obj::TDoubleDot_dyn() )) {
HXLINE( 815)									this->unexpected(t9);
            								}
            							}
HXLINE( 816)							::Array< ::Dynamic> exprs1 = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 817)							while(true){
HXLINE( 818)								tk8 = this->token();
HXLINE( 819)								{
HXLINE( 819)									 ::haxe::ds::List _hx_tmp13 = this->tokens;
HXDLIN( 819)									_hx_tmp13->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk8,this->tokenMin,this->tokenMax));
HXDLIN( 819)									this->tokenMin = this->oldTokenMin;
HXDLIN( 819)									this->tokenMax = this->oldTokenMax;
            								}
HXLINE( 820)								switch((int)(tk8->_hx_getIndex())){
            									case (int)0: {
HXLINE( 823)										if (this->resumeErrors) {
HXLINE( 824)											goto _hx_goto_56;
            										}
            										else {
HXLINE( 826)											this->parseFullExpr(exprs1);
            										}
            									}
            									break;
            									case (int)2: {
HXLINE( 821)										::String _hx_switch_3 = tk8->_hx_getString(0);
            										if (  (_hx_switch_3==HX_("case",b0,1e,ba,41)) ||  (_hx_switch_3==HX_("default",c1,d8,c3,9b)) ){
HXLINE( 822)											goto _hx_goto_56;
HXDLIN( 822)											goto _hx_goto_57;
            										}
            										/* default */{
HXLINE( 826)											this->parseFullExpr(exprs1);
            										}
            										_hx_goto_57:;
            									}
            									break;
            									case (int)7: {
HXLINE( 822)										goto _hx_goto_56;
            									}
            									break;
            									default:{
HXLINE( 826)										this->parseFullExpr(exprs1);
            									}
            								}
            							}
            							_hx_goto_56:;
HXLINE( 829)							if ((exprs1->length == 1)) {
HXLINE( 829)								def = exprs1->__get(0).StaticCast<  ::crowplexus::hscript::Expr >();
            							}
            							else {
HXLINE( 829)								if ((exprs1->length == 0)) {
HXLINE( 829)									 ::crowplexus::hscript::ExprDef e26 = ::crowplexus::hscript::ExprDef_obj::EBlock(::Array_obj< ::Dynamic>::__new(0));
HXDLIN( 829)									 ::Dynamic pmin15 = this->tokenMin;
HXDLIN( 829)									 ::Dynamic pmax15 = this->tokenMin;
HXDLIN( 829)									if (::hx::IsNull( e26 )) {
HXLINE( 829)										def = null();
            									}
            									else {
HXLINE( 829)										if (::hx::IsNull( pmin15 )) {
HXLINE( 829)											pmin15 = this->tokenMin;
            										}
HXDLIN( 829)										if (::hx::IsNull( pmax15 )) {
HXLINE( 829)											pmax15 = this->tokenMax;
            										}
HXDLIN( 829)										def =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e26,( (int)(pmin15) ),( (int)(pmax15) ),this->origin,this->line);
            									}
            								}
            								else {
HXLINE( 830)									 ::crowplexus::hscript::ExprDef e27 = ::crowplexus::hscript::ExprDef_obj::EBlock(exprs1);
HXDLIN( 830)									 ::crowplexus::hscript::Expr e28 = exprs1->__get(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 830)									 ::Dynamic pmin16;
HXDLIN( 830)									if (::hx::IsNull( e28 )) {
HXLINE( 830)										pmin16 = 0;
            									}
            									else {
HXLINE( 830)										pmin16 = e28->pmin;
            									}
HXDLIN( 830)									 ::crowplexus::hscript::Expr e29 = exprs1->__get((exprs1->length - 1)).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 830)									 ::Dynamic pmax16;
HXDLIN( 830)									if (::hx::IsNull( e29 )) {
HXLINE( 830)										pmax16 = 0;
            									}
            									else {
HXLINE( 830)										pmax16 = e29->pmax;
            									}
HXDLIN( 830)									if (::hx::IsNull( e27 )) {
HXLINE( 830)										def = null();
            									}
            									else {
HXLINE( 830)										if (::hx::IsNull( pmin16 )) {
HXLINE( 830)											pmin16 = this->tokenMin;
            										}
HXDLIN( 830)										if (::hx::IsNull( pmax16 )) {
HXLINE( 830)											pmax16 = this->tokenMax;
            										}
HXDLIN( 830)										def =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e27,( (int)(pmin16) ),( (int)(pmax16) ),this->origin,this->line);
            									}
            								}
            							}
HXLINE( 812)							goto _hx_goto_51;
            						}
            						/* default */{
HXLINE( 834)							this->unexpected(tk8);
HXLINE( 835)							goto _hx_goto_50;
            						}
            						_hx_goto_51:;
            					}
            					break;
            					case (int)7: {
HXLINE( 832)						goto _hx_goto_50;
            					}
            					break;
            					default:{
HXLINE( 834)						this->unexpected(tk8);
HXLINE( 835)						goto _hx_goto_50;
            					}
            				}
            			}
            			_hx_goto_50:;
HXLINE( 838)			 ::crowplexus::hscript::ExprDef e30 = ::crowplexus::hscript::ExprDef_obj::ESwitch(parentExpr,cases,def);
HXDLIN( 838)			 ::Dynamic pmin17 = p1;
HXDLIN( 838)			 ::Dynamic pmax17 = this->tokenMax;
HXDLIN( 838)			if (::hx::IsNull( e30 )) {
HXLINE( 838)				return null();
            			}
            			else {
HXLINE( 838)				if (::hx::IsNull( pmin17 )) {
HXLINE( 838)					pmin17 = this->tokenMin;
            				}
HXDLIN( 838)				if (::hx::IsNull( pmax17 )) {
HXLINE( 838)					pmax17 = this->tokenMax;
            				}
HXDLIN( 838)				return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e30,( (int)(pmin17) ),( (int)(pmax17) ),this->origin,this->line);
            			}
HXLINE( 752)			goto _hx_goto_46;
            		}
            		if (  (_hx_switch_0==HX_("throw",26,5d,90,0f)) ){
HXLINE( 736)			 ::crowplexus::hscript::Expr e31 = this->parseExpr();
HXLINE( 737)			 ::crowplexus::hscript::ExprDef e32 = ::crowplexus::hscript::ExprDef_obj::EThrow(e31);
HXDLIN( 737)			 ::Dynamic pmin18 = p1;
HXDLIN( 737)			 ::Dynamic pmax18;
HXDLIN( 737)			if (::hx::IsNull( e31 )) {
HXLINE( 737)				pmax18 = 0;
            			}
            			else {
HXLINE( 737)				pmax18 = e31->pmax;
            			}
HXDLIN( 737)			if (::hx::IsNull( e32 )) {
HXLINE( 737)				return null();
            			}
            			else {
HXLINE( 737)				if (::hx::IsNull( pmin18 )) {
HXLINE( 737)					pmin18 = this->tokenMin;
            				}
HXDLIN( 737)				if (::hx::IsNull( pmax18 )) {
HXLINE( 737)					pmax18 = this->tokenMax;
            				}
HXDLIN( 737)				return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e32,( (int)(pmin18) ),( (int)(pmax18) ),this->origin,this->line);
            			}
HXLINE( 735)			goto _hx_goto_46;
            		}
            		if (  (_hx_switch_0==HX_("try",3b,69,58,00)) ){
HXLINE( 739)			 ::crowplexus::hscript::Expr e33 = this->parseExpr();
HXLINE( 740)			{
HXLINE( 740)				 ::crowplexus::hscript::Token t10 = this->token();
HXDLIN( 740)				if (!(__hxcpp_enum_eq(t10,::crowplexus::hscript::Token_obj::TId(HX_("catch",3b,7c,21,41))))) {
HXLINE( 740)					this->unexpected(t10);
            				}
            			}
HXLINE( 741)			{
HXLINE( 741)				 ::crowplexus::hscript::Token t11 = this->token();
HXDLIN( 741)				if (::hx::IsPointerNotEq( t11,::crowplexus::hscript::Token_obj::TPOpen_dyn() )) {
HXLINE( 741)					this->unexpected(t11);
            				}
            			}
HXLINE( 742)			::String vname1 = this->getIdent();
HXLINE( 743)			{
HXLINE( 743)				 ::crowplexus::hscript::Token t12 = this->token();
HXDLIN( 743)				if (::hx::IsPointerNotEq( t12,::crowplexus::hscript::Token_obj::TDoubleDot_dyn() )) {
HXLINE( 743)					this->unexpected(t12);
            				}
            			}
HXLINE( 744)			 ::crowplexus::hscript::CType t13 = null();
HXLINE( 745)			if (this->allowTypes) {
HXLINE( 746)				t13 = this->parseType();
            			}
            			else {
HXLINE( 748)				 ::crowplexus::hscript::Token t14 = this->token();
HXDLIN( 748)				if (!(__hxcpp_enum_eq(t14,::crowplexus::hscript::Token_obj::TId(HX_("Dynamic",5f,c7,66,03))))) {
HXLINE( 748)					this->unexpected(t14);
            				}
            			}
HXLINE( 749)			{
HXLINE( 749)				 ::crowplexus::hscript::Token t15 = this->token();
HXDLIN( 749)				if (::hx::IsPointerNotEq( t15,::crowplexus::hscript::Token_obj::TPClose_dyn() )) {
HXLINE( 749)					this->unexpected(t15);
            				}
            			}
HXLINE( 750)			 ::crowplexus::hscript::Expr ec = this->parseExpr();
HXLINE( 751)			 ::crowplexus::hscript::ExprDef e34 = ::crowplexus::hscript::ExprDef_obj::ETry(e33,vname1,t13,ec);
HXDLIN( 751)			 ::Dynamic pmin19 = p1;
HXDLIN( 751)			 ::Dynamic pmax19;
HXDLIN( 751)			if (::hx::IsNull( ec )) {
HXLINE( 751)				pmax19 = 0;
            			}
            			else {
HXLINE( 751)				pmax19 = ec->pmax;
            			}
HXDLIN( 751)			if (::hx::IsNull( e34 )) {
HXLINE( 751)				return null();
            			}
            			else {
HXLINE( 751)				if (::hx::IsNull( pmin19 )) {
HXLINE( 751)					pmin19 = this->tokenMin;
            				}
HXDLIN( 751)				if (::hx::IsNull( pmax19 )) {
HXLINE( 751)					pmax19 = this->tokenMax;
            				}
HXDLIN( 751)				return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e34,( (int)(pmin19) ),( (int)(pmax19) ),this->origin,this->line);
            			}
HXLINE( 738)			goto _hx_goto_46;
            		}
            		if (  (_hx_switch_0==HX_("typedef",4b,37,d8,f8)) ){
HXLINE( 933)			::String name3 = this->getIdent();
HXLINE( 935)			{
HXLINE( 935)				 ::crowplexus::hscript::Token t16 = this->token();
HXDLIN( 935)				if (!(__hxcpp_enum_eq(t16,::crowplexus::hscript::Token_obj::TOp(HX_("=",3d,00,00,00))))) {
HXLINE( 935)					this->unexpected(t16);
            				}
            			}
HXLINE( 937)			 ::crowplexus::hscript::CType t17 = this->parseType();
HXLINE( 939)			switch((int)(t17->_hx_getIndex())){
            				case (int)0: {
HXLINE( 942)					 ::Dynamic tp = t17->_hx_getObject(0);
HXLINE( 943)					::Array< ::String > path2 = ( (::Array< ::String >)(tp->__Field(HX_("pack",d9,d6,51,4a),::hx::paccDynamic)) )->concat(::Array_obj< ::String >::__new(1)->init(0, ::Dynamic(tp->__Field(HX_("name",4b,72,ff,48),::hx::paccDynamic))));
HXLINE( 944)					::Array< ::Dynamic> params = ( (::Array< ::Dynamic>)(tp->__Field(HX_("params",46,fb,7a,ed),::hx::paccDynamic)) );
HXLINE( 945)					bool _hx_tmp14;
HXDLIN( 945)					if (::hx::IsNotNull( params )) {
HXLINE( 945)						_hx_tmp14 = (params->length > 1);
            					}
            					else {
HXLINE( 945)						_hx_tmp14 = false;
            					}
HXDLIN( 945)					if (_hx_tmp14) {
HXLINE( 946)						if (!(this->resumeErrors)) {
HXLINE( 946)							HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::ECustom(HX_("Typedefs can't have parameters",87,c6,2a,8a)),this->tokenMin,this->tokenMax,this->origin,this->line));
            						}
            					}
HXLINE( 948)					if ((path2->length == 0)) {
HXLINE( 949)						if (!(this->resumeErrors)) {
HXLINE( 949)							HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::ECustom(HX_("Typedefs can't be empty",ab,14,b5,9d)),this->tokenMin,this->tokenMax,this->origin,this->line));
            						}
            					}
HXLINE( 951)					{
HXLINE( 952)						::String className = path2->join(HX_(".",2e,00,00,00));
HXLINE( 953)						 ::Dynamic cl = ::crowplexus::hscript::Tools_obj::getClass(className);
HXLINE( 954)						if (::hx::IsNotNull( cl )) {
HXLINE( 955)							 ::crowplexus::hscript::ExprDef e35 = ::crowplexus::hscript::ExprDef_obj::EDirectValue(cl);
HXDLIN( 955)							 ::Dynamic pmin20 = null();
HXDLIN( 955)							 ::Dynamic pmax20 = null();
HXDLIN( 955)							 ::crowplexus::hscript::Expr e36;
HXDLIN( 955)							if (::hx::IsNull( e35 )) {
HXLINE( 955)								e36 = null();
            							}
            							else {
HXLINE( 955)								if (::hx::IsNull( pmin20 )) {
HXLINE( 955)									pmin20 = this->tokenMin;
            								}
HXDLIN( 955)								if (::hx::IsNull( pmax20 )) {
HXLINE( 955)									pmax20 = this->tokenMax;
            								}
HXDLIN( 955)								e36 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e35,( (int)(pmin20) ),( (int)(pmax20) ),this->origin,this->line);
            							}
HXDLIN( 955)							 ::crowplexus::hscript::ExprDef e37 = ::crowplexus::hscript::ExprDef_obj::EVar(name3,null(),e36,null());
HXDLIN( 955)							 ::Dynamic pmin21 = null();
HXDLIN( 955)							 ::Dynamic pmax21 = null();
HXDLIN( 955)							if (::hx::IsNull( e37 )) {
HXLINE( 955)								return null();
            							}
            							else {
HXLINE( 955)								if (::hx::IsNull( pmin21 )) {
HXLINE( 955)									pmin21 = this->tokenMin;
            								}
HXDLIN( 955)								if (::hx::IsNull( pmax21 )) {
HXLINE( 955)									pmax21 = this->tokenMax;
            								}
HXDLIN( 955)								return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e37,( (int)(pmin21) ),( (int)(pmax21) ),this->origin,this->line);
            							}
            						}
            					}
HXLINE( 959)					 ::crowplexus::hscript::ExprDef e38 = ::crowplexus::hscript::ExprDef_obj::EIdent(path2->shift());
HXDLIN( 959)					 ::Dynamic pmin22 = null();
HXDLIN( 959)					 ::Dynamic pmax22 = null();
HXDLIN( 959)					 ::crowplexus::hscript::Expr expr;
HXDLIN( 959)					if (::hx::IsNull( e38 )) {
HXLINE( 959)						expr = null();
            					}
            					else {
HXLINE( 959)						if (::hx::IsNull( pmin22 )) {
HXLINE( 959)							pmin22 = this->tokenMin;
            						}
HXDLIN( 959)						if (::hx::IsNull( pmax22 )) {
HXLINE( 959)							pmax22 = this->tokenMax;
            						}
HXDLIN( 959)						expr =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e38,( (int)(pmin22) ),( (int)(pmax22) ),this->origin,this->line);
            					}
HXLINE( 960)					while((path2->length > 0)){
HXLINE( 961)						 ::crowplexus::hscript::ExprDef e39 = ::crowplexus::hscript::ExprDef_obj::EField(expr,path2->shift(),false);
HXDLIN( 961)						 ::Dynamic pmin23 = null();
HXDLIN( 961)						 ::Dynamic pmax23 = null();
HXDLIN( 961)						if (::hx::IsNull( e39 )) {
HXLINE( 961)							expr = null();
            						}
            						else {
HXLINE( 961)							if (::hx::IsNull( pmin23 )) {
HXLINE( 961)								pmin23 = this->tokenMin;
            							}
HXDLIN( 961)							if (::hx::IsNull( pmax23 )) {
HXLINE( 961)								pmax23 = this->tokenMax;
            							}
HXDLIN( 961)							expr =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e39,( (int)(pmin23) ),( (int)(pmax23) ),this->origin,this->line);
            						}
            					}
HXLINE( 965)					 ::crowplexus::hscript::ExprDef e40 = ::crowplexus::hscript::ExprDef_obj::EVar(name3,null(),expr,null());
HXDLIN( 965)					 ::Dynamic pmin24 = null();
HXDLIN( 965)					 ::Dynamic pmax24 = null();
HXDLIN( 965)					if (::hx::IsNull( e40 )) {
HXLINE( 965)						return null();
            					}
            					else {
HXLINE( 965)						if (::hx::IsNull( pmin24 )) {
HXLINE( 965)							pmin24 = this->tokenMin;
            						}
HXDLIN( 965)						if (::hx::IsNull( pmax24 )) {
HXLINE( 965)							pmax24 = this->tokenMax;
            						}
HXDLIN( 965)						return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e40,( (int)(pmin24) ),( (int)(pmax24) ),this->origin,this->line);
            					}
            				}
            				break;
            				case (int)1: {
HXLINE( 940)					::Array< ::Dynamic> _g3 = t17->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 940)					 ::crowplexus::hscript::CType _g4 = t17->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::CType >();
HXLINE( 941)					 ::crowplexus::hscript::ExprDef e41 = ::crowplexus::hscript::ExprDef_obj::EIgnore(true);
HXDLIN( 941)					 ::Dynamic pmin25 = null();
HXDLIN( 941)					 ::Dynamic pmax25 = null();
HXDLIN( 941)					if (::hx::IsNull( e41 )) {
HXLINE( 941)						return null();
            					}
            					else {
HXLINE( 941)						if (::hx::IsNull( pmin25 )) {
HXLINE( 941)							pmin25 = this->tokenMin;
            						}
HXDLIN( 941)						if (::hx::IsNull( pmax25 )) {
HXLINE( 941)							pmax25 = this->tokenMax;
            						}
HXDLIN( 941)						return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e41,( (int)(pmin25) ),( (int)(pmax25) ),this->origin,this->line);
            					}
            				}
            				break;
            				case (int)2: {
HXLINE( 940)					::Array< ::Dynamic> _g5 = t17->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
HXLINE( 941)					 ::crowplexus::hscript::ExprDef e42 = ::crowplexus::hscript::ExprDef_obj::EIgnore(true);
HXDLIN( 941)					 ::Dynamic pmin26 = null();
HXDLIN( 941)					 ::Dynamic pmax26 = null();
HXDLIN( 941)					if (::hx::IsNull( e42 )) {
HXLINE( 941)						return null();
            					}
            					else {
HXLINE( 941)						if (::hx::IsNull( pmin26 )) {
HXLINE( 941)							pmin26 = this->tokenMin;
            						}
HXDLIN( 941)						if (::hx::IsNull( pmax26 )) {
HXLINE( 941)							pmax26 = this->tokenMax;
            						}
HXDLIN( 941)						return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e42,( (int)(pmin26) ),( (int)(pmax26) ),this->origin,this->line);
            					}
            				}
            				break;
            				case (int)3: {
HXLINE( 940)					::Array< ::Dynamic> _g6 = t17->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 940)					::Array< ::Dynamic> _g7 = t17->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
HXLINE( 941)					 ::crowplexus::hscript::ExprDef e43 = ::crowplexus::hscript::ExprDef_obj::EIgnore(true);
HXDLIN( 941)					 ::Dynamic pmin27 = null();
HXDLIN( 941)					 ::Dynamic pmax27 = null();
HXDLIN( 941)					if (::hx::IsNull( e43 )) {
HXLINE( 941)						return null();
            					}
            					else {
HXLINE( 941)						if (::hx::IsNull( pmin27 )) {
HXLINE( 941)							pmin27 = this->tokenMin;
            						}
HXDLIN( 941)						if (::hx::IsNull( pmax27 )) {
HXLINE( 941)							pmax27 = this->tokenMax;
            						}
HXDLIN( 941)						return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e43,( (int)(pmin27) ),( (int)(pmax27) ),this->origin,this->line);
            					}
            				}
            				break;
            				case (int)7: {
HXLINE( 940)					::Array< ::Dynamic> _g8 = t17->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
HXLINE( 941)					 ::crowplexus::hscript::ExprDef e44 = ::crowplexus::hscript::ExprDef_obj::EIgnore(true);
HXDLIN( 941)					 ::Dynamic pmin28 = null();
HXDLIN( 941)					 ::Dynamic pmax28 = null();
HXDLIN( 941)					if (::hx::IsNull( e44 )) {
HXLINE( 941)						return null();
            					}
            					else {
HXLINE( 941)						if (::hx::IsNull( pmin28 )) {
HXLINE( 941)							pmin28 = this->tokenMin;
            						}
HXDLIN( 941)						if (::hx::IsNull( pmax28 )) {
HXLINE( 941)							pmax28 = this->tokenMax;
            						}
HXDLIN( 941)						return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e44,( (int)(pmin28) ),( (int)(pmax28) ),this->origin,this->line);
            					}
            				}
            				break;
            				default:{
HXLINE( 967)					{
HXLINE( 967)						 ::crowplexus::hscript::ErrorDef err = ::crowplexus::hscript::ErrorDef_obj::ECustom((HX_("Typedef, unknown type ",51,ad,fa,44) + ::Std_obj::string(t17)));
HXDLIN( 967)						if (!(this->resumeErrors)) {
HXLINE( 967)							HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,err,this->tokenMin,this->tokenMax,this->origin,this->line));
            						}
            					}
HXLINE( 968)					return null();
            				}
            			}
HXLINE( 920)			goto _hx_goto_46;
            		}
            		if (  (_hx_switch_0==HX_("using",44,75,35,aa)) ){
HXLINE( 972)			::Array< ::String > path3 = this->parsePath();
HXLINE( 973)			 ::crowplexus::hscript::ExprDef e45 = ::crowplexus::hscript::ExprDef_obj::EUsing(path3->join(HX_(".",2e,00,00,00)));
HXDLIN( 973)			 ::Dynamic pmin29 = null();
HXDLIN( 973)			 ::Dynamic pmax29 = null();
HXDLIN( 973)			if (::hx::IsNull( e45 )) {
HXLINE( 973)				return null();
            			}
            			else {
HXLINE( 973)				if (::hx::IsNull( pmin29 )) {
HXLINE( 973)					pmin29 = this->tokenMin;
            				}
HXDLIN( 973)				if (::hx::IsNull( pmax29 )) {
HXLINE( 973)					pmax29 = this->tokenMax;
            				}
HXDLIN( 973)				return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e45,( (int)(pmin29) ),( (int)(pmax29) ),this->origin,this->line);
            			}
HXLINE( 971)			goto _hx_goto_46;
            		}
            		if (  (_hx_switch_0==HX_("while",b1,43,bd,c9)) ){
HXLINE( 677)			 ::crowplexus::hscript::Expr econd1 = this->parseExpr();
HXLINE( 678)			 ::crowplexus::hscript::Expr e46 = this->parseExpr();
HXLINE( 679)			 ::crowplexus::hscript::ExprDef e47 = ::crowplexus::hscript::ExprDef_obj::EWhile(econd1,e46);
HXDLIN( 679)			 ::Dynamic pmin30 = p1;
HXDLIN( 679)			 ::Dynamic pmax30;
HXDLIN( 679)			if (::hx::IsNull( e46 )) {
HXLINE( 679)				pmax30 = 0;
            			}
            			else {
HXLINE( 679)				pmax30 = e46->pmax;
            			}
HXDLIN( 679)			if (::hx::IsNull( e47 )) {
HXLINE( 679)				return null();
            			}
            			else {
HXLINE( 679)				if (::hx::IsNull( pmin30 )) {
HXLINE( 679)					pmin30 = this->tokenMin;
            				}
HXDLIN( 679)				if (::hx::IsNull( pmax30 )) {
HXLINE( 679)					pmax30 = this->tokenMax;
            				}
HXDLIN( 679)				return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e47,( (int)(pmin30) ),( (int)(pmax30) ),this->origin,this->line);
            			}
HXLINE( 676)			goto _hx_goto_46;
            		}
            		/* default */{
HXLINE( 987)			return null();
            		}
            		_hx_goto_46:;
HXLINE( 641)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,parseStructure,return )

 ::crowplexus::hscript::Expr Parser_obj::parseExprNext( ::crowplexus::hscript::Expr e1){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_991_parseExprNext)
HXLINE( 992)		 ::crowplexus::hscript::Token tk = this->token();
HXLINE( 993)		switch((int)(tk->_hx_getIndex())){
            			case (int)3: {
HXLINE( 994)				::String op = tk->_hx_getString(0);
HXLINE( 995)				if ((op == HX_("->",71,27,00,00))) {
HXLINE( 997)					{
HXLINE( 997)						 ::crowplexus::hscript::ExprDef _g = e1->e;
HXDLIN( 997)						switch((int)(_g->_hx_getIndex())){
            							case (int)2: {
HXLINE( 998)								::String i = _g->_hx_getString(0);
HXLINE( 999)								 ::crowplexus::hscript::Expr eret = this->parseExpr();
HXLINE(1000)								 ::crowplexus::hscript::ExprDef e = ::crowplexus::hscript::ExprDef_obj::EReturn(eret);
HXDLIN(1000)								 ::Dynamic pmin;
HXDLIN(1000)								if (::hx::IsNull( eret )) {
HXLINE(1000)									pmin = 0;
            								}
            								else {
HXLINE(1000)									pmin = eret->pmin;
            								}
HXDLIN(1000)								 ::Dynamic pmax = null();
HXDLIN(1000)								 ::crowplexus::hscript::Expr e2;
HXDLIN(1000)								if (::hx::IsNull( e )) {
HXLINE(1000)									e2 = null();
            								}
            								else {
HXLINE(1000)									if (::hx::IsNull( pmin )) {
HXLINE(1000)										pmin = this->tokenMin;
            									}
HXDLIN(1000)									if (::hx::IsNull( pmax )) {
HXLINE(1000)										pmax = this->tokenMax;
            									}
HXDLIN(1000)									e2 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e,( (int)(pmin) ),( (int)(pmax) ),this->origin,this->line);
            								}
HXDLIN(1000)								 ::crowplexus::hscript::ExprDef e3 = ::crowplexus::hscript::ExprDef_obj::EFunction(::Array_obj< ::Dynamic>::__new(1)->init(0, ::Dynamic(::hx::Anon_obj::Create(1)
            									->setFixed(0,HX_("name",4b,72,ff,48),i))),e2,null(),null());
HXDLIN(1000)								 ::Dynamic pmin1;
HXDLIN(1000)								if (::hx::IsNull( e1 )) {
HXLINE(1000)									pmin1 = 0;
            								}
            								else {
HXLINE(1000)									pmin1 = e1->pmin;
            								}
HXDLIN(1000)								 ::Dynamic pmax1 = null();
HXDLIN(1000)								if (::hx::IsNull( e3 )) {
HXLINE(1000)									return null();
            								}
            								else {
HXLINE(1000)									if (::hx::IsNull( pmin1 )) {
HXLINE(1000)										pmin1 = this->tokenMin;
            									}
HXDLIN(1000)									if (::hx::IsNull( pmax1 )) {
HXLINE(1000)										pmax1 = this->tokenMax;
            									}
HXDLIN(1000)									return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e3,( (int)(pmin1) ),( (int)(pmax1) ),this->origin,this->line);
            								}
            							}
            							break;
            							case (int)5: {
HXLINE( 998)								 ::crowplexus::hscript::ExprDef _hx_tmp = _g->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >()->e;
HXDLIN( 998)								if ((_hx_tmp->_hx_getIndex() == 2)) {
HXLINE( 998)									::String i1 = _hx_tmp->_hx_getString(0);
HXLINE( 999)									 ::crowplexus::hscript::Expr eret1 = this->parseExpr();
HXLINE(1000)									 ::crowplexus::hscript::ExprDef e4 = ::crowplexus::hscript::ExprDef_obj::EReturn(eret1);
HXDLIN(1000)									 ::Dynamic pmin2;
HXDLIN(1000)									if (::hx::IsNull( eret1 )) {
HXLINE(1000)										pmin2 = 0;
            									}
            									else {
HXLINE(1000)										pmin2 = eret1->pmin;
            									}
HXDLIN(1000)									 ::Dynamic pmax2 = null();
HXDLIN(1000)									 ::crowplexus::hscript::Expr e5;
HXDLIN(1000)									if (::hx::IsNull( e4 )) {
HXLINE(1000)										e5 = null();
            									}
            									else {
HXLINE(1000)										if (::hx::IsNull( pmin2 )) {
HXLINE(1000)											pmin2 = this->tokenMin;
            										}
HXDLIN(1000)										if (::hx::IsNull( pmax2 )) {
HXLINE(1000)											pmax2 = this->tokenMax;
            										}
HXDLIN(1000)										e5 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e4,( (int)(pmin2) ),( (int)(pmax2) ),this->origin,this->line);
            									}
HXDLIN(1000)									 ::crowplexus::hscript::ExprDef e6 = ::crowplexus::hscript::ExprDef_obj::EFunction(::Array_obj< ::Dynamic>::__new(1)->init(0, ::Dynamic(::hx::Anon_obj::Create(1)
            										->setFixed(0,HX_("name",4b,72,ff,48),i1))),e5,null(),null());
HXDLIN(1000)									 ::Dynamic pmin3;
HXDLIN(1000)									if (::hx::IsNull( e1 )) {
HXLINE(1000)										pmin3 = 0;
            									}
            									else {
HXLINE(1000)										pmin3 = e1->pmin;
            									}
HXDLIN(1000)									 ::Dynamic pmax3 = null();
HXDLIN(1000)									if (::hx::IsNull( e6 )) {
HXLINE(1000)										return null();
            									}
            									else {
HXLINE(1000)										if (::hx::IsNull( pmin3 )) {
HXLINE(1000)											pmin3 = this->tokenMin;
            										}
HXDLIN(1000)										if (::hx::IsNull( pmax3 )) {
HXLINE(1000)											pmax3 = this->tokenMax;
            										}
HXDLIN(1000)										return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e6,( (int)(pmin3) ),( (int)(pmax3) ),this->origin,this->line);
            									}
            								}
            							}
            							break;
            							case (int)28: {
HXLINE(1001)								 ::crowplexus::hscript::ExprDef _hx_tmp1 = _g->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >()->e;
HXDLIN(1001)								if ((_hx_tmp1->_hx_getIndex() == 2)) {
HXLINE(1001)									::String i2 = _hx_tmp1->_hx_getString(0);
HXDLIN(1001)									 ::crowplexus::hscript::CType t = _g->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::CType >();
HXLINE(1002)									 ::crowplexus::hscript::Expr eret2 = this->parseExpr();
HXLINE(1003)									 ::crowplexus::hscript::ExprDef e7 = ::crowplexus::hscript::ExprDef_obj::EReturn(eret2);
HXDLIN(1003)									 ::Dynamic pmin4;
HXDLIN(1003)									if (::hx::IsNull( eret2 )) {
HXLINE(1003)										pmin4 = 0;
            									}
            									else {
HXLINE(1003)										pmin4 = eret2->pmin;
            									}
HXDLIN(1003)									 ::Dynamic pmax4 = null();
HXDLIN(1003)									 ::crowplexus::hscript::Expr e8;
HXDLIN(1003)									if (::hx::IsNull( e7 )) {
HXLINE(1003)										e8 = null();
            									}
            									else {
HXLINE(1003)										if (::hx::IsNull( pmin4 )) {
HXLINE(1003)											pmin4 = this->tokenMin;
            										}
HXDLIN(1003)										if (::hx::IsNull( pmax4 )) {
HXLINE(1003)											pmax4 = this->tokenMax;
            										}
HXDLIN(1003)										e8 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e7,( (int)(pmin4) ),( (int)(pmax4) ),this->origin,this->line);
            									}
HXDLIN(1003)									 ::crowplexus::hscript::ExprDef e9 = ::crowplexus::hscript::ExprDef_obj::EFunction(::Array_obj< ::Dynamic>::__new(1)->init(0, ::Dynamic(::hx::Anon_obj::Create(2)
            										->setFixed(0,HX_("t",74,00,00,00),t)
            										->setFixed(1,HX_("name",4b,72,ff,48),i2))),e8,null(),null());
HXDLIN(1003)									 ::Dynamic pmin5;
HXDLIN(1003)									if (::hx::IsNull( e1 )) {
HXLINE(1003)										pmin5 = 0;
            									}
            									else {
HXLINE(1003)										pmin5 = e1->pmin;
            									}
HXDLIN(1003)									 ::Dynamic pmax5 = null();
HXDLIN(1003)									if (::hx::IsNull( e9 )) {
HXLINE(1003)										return null();
            									}
            									else {
HXLINE(1003)										if (::hx::IsNull( pmin5 )) {
HXLINE(1003)											pmin5 = this->tokenMin;
            										}
HXDLIN(1003)										if (::hx::IsNull( pmax5 )) {
HXLINE(1003)											pmax5 = this->tokenMax;
            										}
HXDLIN(1003)										return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e9,( (int)(pmin5) ),( (int)(pmax5) ),this->origin,this->line);
            									}
            								}
            							}
            							break;
            							default:{
            							}
            						}
            					}
HXLINE(1006)					this->unexpected(tk);
            				}
HXLINE(1009)				if (::hx::IsEq( this->opPriority->get(op),-1 )) {
HXLINE(1010)					bool _hx_tmp2;
HXDLIN(1010)					if (!(this->isBlock(e1))) {
HXLINE(1010)						 ::crowplexus::hscript::ExprDef _g1 = e1->e;
HXDLIN(1010)						if ((_g1->_hx_getIndex() == 5)) {
HXLINE(1011)							 ::crowplexus::hscript::Expr _g2 = _g1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXLINE(1010)							_hx_tmp2 = true;
            						}
            						else {
HXLINE(1010)							_hx_tmp2 = false;
            						}
            					}
            					else {
HXLINE(1010)						_hx_tmp2 = true;
            					}
HXDLIN(1010)					if (_hx_tmp2) {
HXLINE(1014)						{
HXLINE(1014)							 ::haxe::ds::List _hx_tmp3 = this->tokens;
HXDLIN(1014)							_hx_tmp3->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN(1014)							this->tokenMin = this->oldTokenMin;
HXDLIN(1014)							this->tokenMax = this->oldTokenMax;
            						}
HXLINE(1015)						return e1;
            					}
HXLINE(1017)					 ::crowplexus::hscript::ExprDef e10 = ::crowplexus::hscript::ExprDef_obj::EUnop(op,false,e1);
HXDLIN(1017)					 ::Dynamic pmin6;
HXDLIN(1017)					if (::hx::IsNull( e1 )) {
HXLINE(1017)						pmin6 = 0;
            					}
            					else {
HXLINE(1017)						pmin6 = e1->pmin;
            					}
HXDLIN(1017)					 ::Dynamic pmax6 = null();
HXDLIN(1017)					 ::crowplexus::hscript::Expr _hx_tmp4;
HXDLIN(1017)					if (::hx::IsNull( e10 )) {
HXLINE(1017)						_hx_tmp4 = null();
            					}
            					else {
HXLINE(1017)						if (::hx::IsNull( pmin6 )) {
HXLINE(1017)							pmin6 = this->tokenMin;
            						}
HXDLIN(1017)						if (::hx::IsNull( pmax6 )) {
HXLINE(1017)							pmax6 = this->tokenMax;
            						}
HXDLIN(1017)						_hx_tmp4 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e10,( (int)(pmin6) ),( (int)(pmax6) ),this->origin,this->line);
            					}
HXDLIN(1017)					return this->parseExprNext(_hx_tmp4);
            				}
HXLINE(1019)				return this->makeBinop(op,e1,this->parseExpr());
            			}
            			break;
            			case (int)4: {
HXLINE(1024)				 ::crowplexus::hscript::ExprDef e11 = ::crowplexus::hscript::ExprDef_obj::ECall(e1,this->parseExprList(::crowplexus::hscript::Token_obj::TPClose_dyn()));
HXDLIN(1024)				 ::Dynamic pmin7;
HXDLIN(1024)				if (::hx::IsNull( e1 )) {
HXLINE(1024)					pmin7 = 0;
            				}
            				else {
HXLINE(1024)					pmin7 = e1->pmin;
            				}
HXDLIN(1024)				 ::Dynamic pmax7 = null();
HXDLIN(1024)				 ::crowplexus::hscript::Expr _hx_tmp5;
HXDLIN(1024)				if (::hx::IsNull( e11 )) {
HXLINE(1024)					_hx_tmp5 = null();
            				}
            				else {
HXLINE(1024)					if (::hx::IsNull( pmin7 )) {
HXLINE(1024)						pmin7 = this->tokenMin;
            					}
HXDLIN(1024)					if (::hx::IsNull( pmax7 )) {
HXLINE(1024)						pmax7 = this->tokenMax;
            					}
HXDLIN(1024)					_hx_tmp5 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e11,( (int)(pmin7) ),( (int)(pmax7) ),this->origin,this->line);
            				}
HXDLIN(1024)				return this->parseExprNext(_hx_tmp5);
            			}
            			break;
            			case (int)11: {
HXLINE(1026)				 ::crowplexus::hscript::Expr e21 = this->parseExpr();
HXLINE(1027)				{
HXLINE(1027)					 ::crowplexus::hscript::Token t1 = this->token();
HXDLIN(1027)					if (::hx::IsPointerNotEq( t1,::crowplexus::hscript::Token_obj::TBkClose_dyn() )) {
HXLINE(1027)						this->unexpected(t1);
            					}
            				}
HXLINE(1028)				 ::crowplexus::hscript::ExprDef e12 = ::crowplexus::hscript::ExprDef_obj::EArray(e1,e21);
HXDLIN(1028)				 ::Dynamic pmin8;
HXDLIN(1028)				if (::hx::IsNull( e1 )) {
HXLINE(1028)					pmin8 = 0;
            				}
            				else {
HXLINE(1028)					pmin8 = e1->pmin;
            				}
HXDLIN(1028)				 ::Dynamic pmax8 = null();
HXDLIN(1028)				 ::crowplexus::hscript::Expr _hx_tmp6;
HXDLIN(1028)				if (::hx::IsNull( e12 )) {
HXLINE(1028)					_hx_tmp6 = null();
            				}
            				else {
HXLINE(1028)					if (::hx::IsNull( pmin8 )) {
HXLINE(1028)						pmin8 = this->tokenMin;
            					}
HXDLIN(1028)					if (::hx::IsNull( pmax8 )) {
HXLINE(1028)						pmax8 = this->tokenMax;
            					}
HXDLIN(1028)					_hx_tmp6 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e12,( (int)(pmin8) ),( (int)(pmax8) ),this->origin,this->line);
            				}
HXDLIN(1028)				return this->parseExprNext(_hx_tmp6);
            			}
            			break;
            			case (int)13: {
HXLINE(1030)				 ::crowplexus::hscript::Expr e22 = this->parseExpr();
HXLINE(1031)				{
HXLINE(1031)					 ::crowplexus::hscript::Token t2 = this->token();
HXDLIN(1031)					if (::hx::IsPointerNotEq( t2,::crowplexus::hscript::Token_obj::TDoubleDot_dyn() )) {
HXLINE(1031)						this->unexpected(t2);
            					}
            				}
HXLINE(1032)				 ::crowplexus::hscript::Expr e31 = this->parseExpr();
HXLINE(1033)				 ::crowplexus::hscript::ExprDef e13 = ::crowplexus::hscript::ExprDef_obj::ETernary(e1,e22,e31);
HXDLIN(1033)				 ::Dynamic pmin9;
HXDLIN(1033)				if (::hx::IsNull( e1 )) {
HXLINE(1033)					pmin9 = 0;
            				}
            				else {
HXLINE(1033)					pmin9 = e1->pmin;
            				}
HXDLIN(1033)				 ::Dynamic pmax9;
HXDLIN(1033)				if (::hx::IsNull( e31 )) {
HXLINE(1033)					pmax9 = 0;
            				}
            				else {
HXLINE(1033)					pmax9 = e31->pmax;
            				}
HXDLIN(1033)				if (::hx::IsNull( e13 )) {
HXLINE(1033)					return null();
            				}
            				else {
HXLINE(1033)					if (::hx::IsNull( pmin9 )) {
HXLINE(1033)						pmin9 = this->tokenMin;
            					}
HXDLIN(1033)					if (::hx::IsNull( pmax9 )) {
HXLINE(1033)						pmax9 = this->tokenMax;
            					}
HXDLIN(1033)					return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e13,( (int)(pmin9) ),( (int)(pmax9) ),this->origin,this->line);
            				}
            			}
            			break;
            			case (int)8: case (int)17: {
HXLINE(1021)				::String field = this->getIdent();
HXLINE(1022)				 ::crowplexus::hscript::ExprDef e14 = ::crowplexus::hscript::ExprDef_obj::EField(e1,field,::hx::IsPointerEq( tk,::crowplexus::hscript::Token_obj::TQuestionDot_dyn() ));
HXDLIN(1022)				 ::Dynamic pmin10;
HXDLIN(1022)				if (::hx::IsNull( e1 )) {
HXLINE(1022)					pmin10 = 0;
            				}
            				else {
HXLINE(1022)					pmin10 = e1->pmin;
            				}
HXDLIN(1022)				 ::Dynamic pmax10 = null();
HXDLIN(1022)				 ::crowplexus::hscript::Expr _hx_tmp7;
HXDLIN(1022)				if (::hx::IsNull( e14 )) {
HXLINE(1022)					_hx_tmp7 = null();
            				}
            				else {
HXLINE(1022)					if (::hx::IsNull( pmin10 )) {
HXLINE(1022)						pmin10 = this->tokenMin;
            					}
HXDLIN(1022)					if (::hx::IsNull( pmax10 )) {
HXLINE(1022)						pmax10 = this->tokenMax;
            					}
HXDLIN(1022)					_hx_tmp7 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e14,( (int)(pmin10) ),( (int)(pmax10) ),this->origin,this->line);
            				}
HXDLIN(1022)				return this->parseExprNext(_hx_tmp7);
            			}
            			break;
            			default:{
HXLINE(1035)				{
HXLINE(1035)					 ::haxe::ds::List _hx_tmp8 = this->tokens;
HXDLIN(1035)					_hx_tmp8->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN(1035)					this->tokenMin = this->oldTokenMin;
HXDLIN(1035)					this->tokenMax = this->oldTokenMax;
            				}
HXLINE(1036)				return e1;
            			}
            		}
HXLINE( 993)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,parseExprNext,return )

::Array< ::Dynamic> Parser_obj::parseFunctionArgs(){
            	HX_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1040_parseFunctionArgs)
HXLINE(1041)		::Array< ::Dynamic> args = ::Array_obj< ::Dynamic>::__new();
HXLINE(1042)		 ::crowplexus::hscript::Token tk = this->token();
HXLINE(1043)		if (::hx::IsPointerNotEq( tk,::crowplexus::hscript::Token_obj::TPClose_dyn() )) {
HXLINE(1044)			bool done = false;
HXLINE(1045)			while(!(done)){
HXLINE(1046)				::String name = null();
HXDLIN(1046)				bool opt = false;
HXLINE(1047)				if ((tk->_hx_getIndex() == 13)) {
HXLINE(1049)					opt = true;
HXLINE(1050)					tk = this->token();
            				}
HXLINE(1053)				if ((tk->_hx_getIndex() == 2)) {
HXLINE(1054)					::String id = tk->_hx_getString(0);
HXLINE(1055)					name = id;
            				}
            				else {
HXLINE(1057)					this->unexpected(tk);
HXLINE(1058)					goto _hx_goto_61;
            				}
HXLINE(1060)				 ::Dynamic arg =  ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("name",4b,72,ff,48),name));
HXLINE(1061)				args->push(arg);
HXLINE(1062)				if (opt) {
HXLINE(1063)					arg->__SetField(HX_("opt",33,9c,54,00),true,::hx::paccDynamic);
            				}
HXLINE(1064)				if (this->allowTypes) {
HXLINE(1065)					if (this->maybe(::crowplexus::hscript::Token_obj::TDoubleDot_dyn())) {
HXLINE(1066)						arg->__SetField(HX_("t",74,00,00,00),this->parseType(),::hx::paccDynamic);
            					}
HXLINE(1067)					if (this->maybe(::crowplexus::hscript::Token_obj::TOp(HX_("=",3d,00,00,00)))) {
HXLINE(1068)						arg->__SetField(HX_("value",71,7f,b8,31),this->parseExpr(),::hx::paccDynamic);
            					}
            				}
HXLINE(1070)				tk = this->token();
HXLINE(1071)				switch((int)(tk->_hx_getIndex())){
            					case (int)5: {
HXLINE(1075)						done = true;
            					}
            					break;
            					case (int)9: {
HXLINE(1073)						tk = this->token();
            					}
            					break;
            					default:{
HXLINE(1077)						this->unexpected(tk);
            					}
            				}
            			}
            			_hx_goto_61:;
            		}
HXLINE(1081)		return args;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,parseFunctionArgs,return )

 ::Dynamic Parser_obj::parseFunctionDecl(){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1084_parseFunctionDecl)
HXLINE(1085)		{
HXLINE(1085)			 ::crowplexus::hscript::Token t = this->token();
HXDLIN(1085)			if (::hx::IsPointerNotEq( t,::crowplexus::hscript::Token_obj::TPOpen_dyn() )) {
HXLINE(1085)				this->unexpected(t);
            			}
            		}
HXLINE(1086)		::Array< ::Dynamic> args = this->parseFunctionArgs();
HXLINE(1087)		 ::crowplexus::hscript::CType ret = null();
HXLINE(1088)		if (this->allowTypes) {
HXLINE(1089)			 ::crowplexus::hscript::Token tk = this->token();
HXLINE(1090)			if (::hx::IsPointerNotEq( tk,::crowplexus::hscript::Token_obj::TDoubleDot_dyn() )) {
HXLINE(1091)				 ::haxe::ds::List _hx_tmp = this->tokens;
HXDLIN(1091)				_hx_tmp->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN(1091)				this->tokenMin = this->oldTokenMin;
HXDLIN(1091)				this->tokenMax = this->oldTokenMax;
            			}
            			else {
HXLINE(1093)				ret = this->parseType();
            			}
            		}
HXLINE(1095)		return  ::Dynamic(::hx::Anon_obj::Create(3)
            			->setFixed(0,HX_("ret",61,d9,56,00),ret)
            			->setFixed(1,HX_("args",5d,8d,74,40),args)
            			->setFixed(2,HX_("body",a2,7a,1b,41),this->parseExpr()));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,parseFunctionDecl,return )

::Array< ::String > Parser_obj::parsePath(){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1098_parsePath)
HXLINE(1099)		::Array< ::String > path = ::Array_obj< ::String >::__new(1)->init(0,this->getIdent());
HXLINE(1100)		while(true){
HXLINE(1101)			 ::crowplexus::hscript::Token t = this->token();
HXLINE(1102)			if (::hx::IsPointerNotEq( t,::crowplexus::hscript::Token_obj::TDot_dyn() )) {
HXLINE(1103)				{
HXLINE(1103)					 ::haxe::ds::List _hx_tmp = this->tokens;
HXDLIN(1103)					_hx_tmp->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,t,this->tokenMin,this->tokenMax));
HXDLIN(1103)					this->tokenMin = this->oldTokenMin;
HXDLIN(1103)					this->tokenMax = this->oldTokenMax;
            				}
HXLINE(1104)				goto _hx_goto_64;
            			}
HXLINE(1106)			path->push(this->getIdent());
            		}
            		_hx_goto_64:;
HXLINE(1108)		return path;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,parsePath,return )

 ::crowplexus::hscript::CType Parser_obj::parseType(){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1111_parseType)
HXDLIN(1111)		 ::crowplexus::hscript::Parser _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE(1112)		 ::crowplexus::hscript::Token t = this->token();
HXLINE(1113)		switch((int)(t->_hx_getIndex())){
            			case (int)2: {
HXLINE(1114)				::String v = t->_hx_getString(0);
HXLINE(1115)				{
HXLINE(1115)					 ::haxe::ds::List _hx_tmp = this->tokens;
HXDLIN(1115)					_hx_tmp->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,t,this->tokenMin,this->tokenMax));
HXDLIN(1115)					this->tokenMin = this->oldTokenMin;
HXDLIN(1115)					this->tokenMax = this->oldTokenMax;
            				}
HXLINE(1116)				::Array< ::String > path = this->parsePath();
HXLINE(1117)				::String name = ( (::String)(path->pop()) );
HXLINE(1118)				::Array< ::Dynamic> params = null();
HXLINE(1119)				t = this->token();
HXLINE(1120)				if ((t->_hx_getIndex() == 3)) {
HXLINE(1121)					::String op = t->_hx_getString(0);
HXLINE(1122)					if ((op == HX_("<",3c,00,00,00))) {
HXLINE(1123)						params = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(1124)						while(true){
HXLINE(1125)							params->push(this->parseType());
HXLINE(1126)							t = this->token();
HXLINE(1127)							switch((int)(t->_hx_getIndex())){
            								case (int)3: {
HXLINE(1129)									::String op1 = t->_hx_getString(0);
HXDLIN(1129)									{
HXLINE(1130)										if ((op1 == HX_(">",3e,00,00,00))) {
HXLINE(1131)											goto _hx_goto_66;
            										}
HXLINE(1132)										if (::hx::IsEq( op1.charCodeAt(0),62 )) {
HXLINE(1134)											 ::haxe::ds::List _hx_tmp1 = this->tokens;
HXDLIN(1134)											 ::crowplexus::hscript::Token _hx_tmp2 = ::crowplexus::hscript::Token_obj::TOp(op1.substr(1,null()));
HXDLIN(1134)											_hx_tmp1->add( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,_hx_tmp2,((this->tokenMax - op1.length) - 1),this->tokenMax));
HXLINE(1138)											goto _hx_goto_66;
            										}
            									}
            								}
            								break;
            								case (int)9: {
HXLINE(1128)									continue;
            								}
            								break;
            								default:{
            								}
            							}
HXLINE(1142)							this->unexpected(t);
HXLINE(1143)							goto _hx_goto_66;
            						}
            						_hx_goto_66:;
            					}
            					else {
HXLINE(1145)						 ::haxe::ds::List _hx_tmp3 = this->tokens;
HXDLIN(1145)						_hx_tmp3->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,t,this->tokenMin,this->tokenMax));
HXDLIN(1145)						this->tokenMin = this->oldTokenMin;
HXDLIN(1145)						this->tokenMax = this->oldTokenMax;
            					}
            				}
            				else {
HXLINE(1147)					 ::haxe::ds::List _hx_tmp4 = this->tokens;
HXDLIN(1147)					_hx_tmp4->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,t,this->tokenMin,this->tokenMax));
HXDLIN(1147)					this->tokenMin = this->oldTokenMin;
HXDLIN(1147)					this->tokenMax = this->oldTokenMax;
            				}
HXLINE(1149)				return this->parseTypeNext(::crowplexus::hscript::CType_obj::CTPath( ::Dynamic(::hx::Anon_obj::Create(4)
            					->setFixed(0,HX_("params",46,fb,7a,ed),params)
            					->setFixed(1,HX_("sub",80,a9,57,00),null())
            					->setFixed(2,HX_("name",4b,72,ff,48),name)
            					->setFixed(3,HX_("pack",d9,d6,51,4a),path))));
            			}
            			break;
            			case (int)4: {
            				HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::crowplexus::hscript::Parser,_gthis) HXARGC(1)
            				 ::crowplexus::hscript::CType _hx_run(::Array< ::Dynamic> args){
            					HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1161_parseType)
HXLINE(1162)					{
HXLINE(1162)						 ::crowplexus::hscript::Token _g = _gthis->token();
HXDLIN(1162)						if ((_g->_hx_getIndex() == 3)) {
HXLINE(1163)							if ((_g->_hx_getString(0) != HX_("->",71,27,00,00))) {
HXLINE(1164)								 ::crowplexus::hscript::Token t = _g;
HXLINE(1165)								_gthis->unexpected(t);
            							}
            						}
            						else {
HXLINE(1164)							 ::crowplexus::hscript::Token t1 = _g;
HXLINE(1165)							_gthis->unexpected(t1);
            						}
            					}
HXLINE(1168)					return ::crowplexus::hscript::CType_obj::CTFun(args,_gthis->parseType());
            				}
            				HX_END_LOCAL_FUNC1(return)

HXLINE(1156)				 ::crowplexus::hscript::Token a = this->token();
HXDLIN(1156)				 ::crowplexus::hscript::Token b = this->token();
HXLINE(1158)				{
HXLINE(1158)					 ::haxe::ds::List _hx_tmp5 = this->tokens;
HXDLIN(1158)					_hx_tmp5->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,b,this->tokenMin,this->tokenMax));
HXDLIN(1158)					this->tokenMin = this->oldTokenMin;
HXDLIN(1158)					this->tokenMax = this->oldTokenMax;
            				}
HXLINE(1159)				{
HXLINE(1159)					 ::haxe::ds::List _hx_tmp6 = this->tokens;
HXDLIN(1159)					_hx_tmp6->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,a,this->tokenMin,this->tokenMax));
HXDLIN(1159)					this->tokenMin = this->oldTokenMin;
HXDLIN(1159)					this->tokenMax = this->oldTokenMax;
            				}
HXLINE(1161)				 ::Dynamic withReturn =  ::Dynamic(new _hx_Closure_0(_gthis));
HXLINE(1171)				switch((int)(a->_hx_getIndex())){
            					case (int)2: {
HXLINE(1172)						::String _g = a->_hx_getString(0);
HXLINE(1171)						if ((b->_hx_getIndex() == 14)) {
HXLINE(1173)							::Array< ::Dynamic> _g1 = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(1174)							{
HXLINE(1174)								int _g2 = 0;
HXDLIN(1174)								::Array< ::Dynamic> _g3 = this->parseFunctionArgs();
HXDLIN(1174)								while((_g2 < _g3->length)){
HXLINE(1174)									 ::Dynamic arg = _g3->__get(_g2);
HXDLIN(1174)									_g2 = (_g2 + 1);
HXLINE(1175)									{
HXLINE(1175)										 ::crowplexus::hscript::Expr _g4 = ( ( ::crowplexus::hscript::Expr)(arg->__Field(HX_("value",71,7f,b8,31),::hx::paccDynamic)) );
HXLINE(1176)										if (::hx::IsNotNull( _g4 )) {
HXLINE(1177)											 ::crowplexus::hscript::Expr v1 = _g4;
HXLINE(1178)											if (!(this->resumeErrors)) {
HXLINE(1178)												HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::ECustom(HX_("Default values not allowed in function types",28,46,7a,e6)),v1->pmin,v1->pmax,this->origin,this->line));
            											}
            										}
            									}
HXLINE(1181)									 ::crowplexus::hscript::CType _hx_tmp7;
HXDLIN(1181)									if (( (bool)(arg->__Field(HX_("opt",33,9c,54,00),::hx::paccDynamic)) )) {
HXLINE(1181)										_hx_tmp7 = ::crowplexus::hscript::CType_obj::CTOpt( ::Dynamic(arg->__Field(HX_("t",74,00,00,00),::hx::paccDynamic)));
            									}
            									else {
HXLINE(1181)										_hx_tmp7 = arg->__Field(HX_("t",74,00,00,00),::hx::paccDynamic);
            									}
HXDLIN(1181)									_g1->push(::crowplexus::hscript::CType_obj::CTNamed( ::Dynamic(arg->__Field(HX_("name",4b,72,ff,48),::hx::paccDynamic)),_hx_tmp7));
            								}
            							}
HXLINE(1173)							::Array< ::Dynamic> args = _g1;
HXLINE(1185)							return withReturn(args);
            						}
            						else {
HXLINE(1187)							 ::crowplexus::hscript::CType t1 = this->parseType();
HXLINE(1188)							 ::crowplexus::hscript::Token _g5 = this->token();
HXDLIN(1188)							switch((int)(_g5->_hx_getIndex())){
            								case (int)5: {
HXLINE(1200)									return this->parseTypeNext(::crowplexus::hscript::CType_obj::CTParent(t1));
            								}
            								break;
            								case (int)9: {
HXLINE(1190)									::Array< ::Dynamic> args1 = ::Array_obj< ::Dynamic>::__new(1)->init(0,t1);
HXLINE(1192)									do {
HXLINE(1193)										args1->push(this->parseType());
            									} while(this->maybe(::crowplexus::hscript::Token_obj::TComma_dyn()));
;
HXLINE(1197)									{
HXLINE(1197)										 ::crowplexus::hscript::Token t2 = this->token();
HXDLIN(1197)										if (::hx::IsPointerNotEq( t2,::crowplexus::hscript::Token_obj::TPClose_dyn() )) {
HXLINE(1197)											this->unexpected(t2);
            										}
            									}
HXLINE(1198)									return withReturn(args1);
            								}
            								break;
            								default:{
HXLINE(1201)									 ::crowplexus::hscript::Token t3 = _g5;
HXDLIN(1201)									return this->unexpected(t3);
            								}
            							}
            						}
            					}
            					break;
            					case (int)5: {
HXLINE(1173)						::Array< ::Dynamic> _g6 = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(1174)						{
HXLINE(1174)							int _g7 = 0;
HXDLIN(1174)							::Array< ::Dynamic> _g8 = this->parseFunctionArgs();
HXDLIN(1174)							while((_g7 < _g8->length)){
HXLINE(1174)								 ::Dynamic arg1 = _g8->__get(_g7);
HXDLIN(1174)								_g7 = (_g7 + 1);
HXLINE(1175)								{
HXLINE(1175)									 ::crowplexus::hscript::Expr _g9 = ( ( ::crowplexus::hscript::Expr)(arg1->__Field(HX_("value",71,7f,b8,31),::hx::paccDynamic)) );
HXLINE(1176)									if (::hx::IsNotNull( _g9 )) {
HXLINE(1177)										 ::crowplexus::hscript::Expr v2 = _g9;
HXLINE(1178)										if (!(this->resumeErrors)) {
HXLINE(1178)											HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::ECustom(HX_("Default values not allowed in function types",28,46,7a,e6)),v2->pmin,v2->pmax,this->origin,this->line));
            										}
            									}
            								}
HXLINE(1181)								 ::crowplexus::hscript::CType _hx_tmp8;
HXDLIN(1181)								if (( (bool)(arg1->__Field(HX_("opt",33,9c,54,00),::hx::paccDynamic)) )) {
HXLINE(1181)									_hx_tmp8 = ::crowplexus::hscript::CType_obj::CTOpt( ::Dynamic(arg1->__Field(HX_("t",74,00,00,00),::hx::paccDynamic)));
            								}
            								else {
HXLINE(1181)									_hx_tmp8 = arg1->__Field(HX_("t",74,00,00,00),::hx::paccDynamic);
            								}
HXDLIN(1181)								_g6->push(::crowplexus::hscript::CType_obj::CTNamed( ::Dynamic(arg1->__Field(HX_("name",4b,72,ff,48),::hx::paccDynamic)),_hx_tmp8));
            							}
            						}
HXLINE(1173)						::Array< ::Dynamic> args2 = _g6;
HXLINE(1185)						return withReturn(args2);
            					}
            					break;
            					default:{
HXLINE(1187)						 ::crowplexus::hscript::CType t4 = this->parseType();
HXLINE(1188)						 ::crowplexus::hscript::Token _g10 = this->token();
HXDLIN(1188)						switch((int)(_g10->_hx_getIndex())){
            							case (int)5: {
HXLINE(1200)								return this->parseTypeNext(::crowplexus::hscript::CType_obj::CTParent(t4));
            							}
            							break;
            							case (int)9: {
HXLINE(1190)								::Array< ::Dynamic> args3 = ::Array_obj< ::Dynamic>::__new(1)->init(0,t4);
HXLINE(1192)								do {
HXLINE(1193)									args3->push(this->parseType());
            								} while(this->maybe(::crowplexus::hscript::Token_obj::TComma_dyn()));
;
HXLINE(1197)								{
HXLINE(1197)									 ::crowplexus::hscript::Token t5 = this->token();
HXDLIN(1197)									if (::hx::IsPointerNotEq( t5,::crowplexus::hscript::Token_obj::TPClose_dyn() )) {
HXLINE(1197)										this->unexpected(t5);
            									}
            								}
HXLINE(1198)								return withReturn(args3);
            							}
            							break;
            							default:{
HXLINE(1201)								 ::crowplexus::hscript::Token t6 = _g10;
HXDLIN(1201)								return this->unexpected(t6);
            							}
            						}
            					}
            				}
            			}
            			break;
            			case (int)6: {
HXLINE(1205)				 ::Dynamic curType = null();
HXLINE(1206)				::Array< ::Dynamic> fields = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(1207)				::Array< ::Dynamic> tps = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(1208)				::Array< ::Dynamic> meta = null();
HXLINE(1209)				while(true){
HXLINE(1210)					t = this->token();
HXLINE(1211)					switch((int)(t->_hx_getIndex())){
            						case (int)2: {
HXLINE(1219)							::String _g11 = t->_hx_getString(0);
HXDLIN(1219)							if ((_g11 == HX_("var",e7,de,59,00))) {
HXLINE(1214)								::String name1 = this->getIdent();
HXLINE(1215)								{
HXLINE(1215)									 ::crowplexus::hscript::Token t7 = this->token();
HXDLIN(1215)									if (::hx::IsPointerNotEq( t7,::crowplexus::hscript::Token_obj::TDoubleDot_dyn() )) {
HXLINE(1215)										this->unexpected(t7);
            									}
            								}
HXLINE(1216)								fields->push( ::Dynamic(::hx::Anon_obj::Create(3)
            									->setFixed(0,HX_("t",74,00,00,00),this->parseType())
            									->setFixed(1,HX_("meta",c5,4a,59,48),meta)
            									->setFixed(2,HX_("name",4b,72,ff,48),name1)));
HXLINE(1217)								meta = null();
HXLINE(1218)								{
HXLINE(1218)									 ::crowplexus::hscript::Token t8 = this->token();
HXDLIN(1218)									if (::hx::IsPointerNotEq( t8,::crowplexus::hscript::Token_obj::TSemicolon_dyn() )) {
HXLINE(1218)										this->unexpected(t8);
            									}
            								}
            							}
            							else {
HXLINE(1219)								::String name2 = _g11;
HXDLIN(1219)								{
HXLINE(1220)									{
HXLINE(1220)										 ::crowplexus::hscript::Token t9 = this->token();
HXDLIN(1220)										if (::hx::IsPointerNotEq( t9,::crowplexus::hscript::Token_obj::TDoubleDot_dyn() )) {
HXLINE(1220)											this->unexpected(t9);
            										}
            									}
HXLINE(1221)									fields->push( ::Dynamic(::hx::Anon_obj::Create(3)
            										->setFixed(0,HX_("t",74,00,00,00),this->parseType())
            										->setFixed(1,HX_("meta",c5,4a,59,48),meta)
            										->setFixed(2,HX_("name",4b,72,ff,48),name2)));
HXLINE(1222)									t = this->token();
HXLINE(1223)									switch((int)(t->_hx_getIndex())){
            										case (int)7: {
HXLINE(1225)											goto _hx_goto_71;
            										}
            										break;
            										case (int)9: {
            										}
            										break;
            										default:{
HXLINE(1226)											this->unexpected(t);
            										}
            									}
            								}
            							}
            						}
            						break;
            						case (int)3: {
HXLINE(1232)							if ((t->_hx_getString(0) == HX_(">",3e,00,00,00))) {
HXLINE(1233)								 ::crowplexus::hscript::CType tp = this->parseType();
HXLINE(1234)								if ((tp->_hx_getIndex() == 0)) {
HXLINE(1235)									 ::Dynamic tp1 = tp->_hx_getObject(0);
HXLINE(1236)									tps->push(tp1);
            								}
            								else {
HXLINE(1238)									this->unexpected(t);
            								}
HXLINE(1240)								t = this->token();
HXLINE(1241)								switch((int)(t->_hx_getIndex())){
            									case (int)7: {
HXLINE(1243)										goto _hx_goto_71;
            									}
            									break;
            									case (int)9: {
            									}
            									break;
            									default:{
HXLINE(1244)										this->unexpected(t);
            									}
            								}
            							}
            							else {
HXLINE(1247)								::haxe::Log_obj::trace(t, ::Dynamic(::hx::Anon_obj::Create(5)
            									->setFixed(0,HX_("className",a3,92,3d,dc),HX_("crowplexus.hscript.Parser",64,46,ff,14))
            									->setFixed(1,HX_("customParams",d7,51,18,ed),::cpp::VirtualArray_obj::__new(2)->init(0,fields)->init(1,tps))
            									->setFixed(2,HX_("methodName",cc,19,0f,12),HX_("parseType",8d,44,af,d4))
            									->setFixed(3,HX_("fileName",e7,5a,43,62),HX_("crowplexus/hscript/Parser.hx",98,79,3b,2e))
            									->setFixed(4,HX_("lineNumber",dd,81,22,76),1247)));
HXLINE(1248)								this->unexpected(t);
HXLINE(1249)								goto _hx_goto_71;
            							}
            						}
            						break;
            						case (int)7: {
HXLINE(1212)							goto _hx_goto_71;
            						}
            						break;
            						case (int)15: {
HXLINE(1228)							::String name3 = t->_hx_getString(0);
HXDLIN(1228)							{
HXLINE(1229)								if (::hx::IsNull( meta )) {
HXLINE(1230)									meta = ::Array_obj< ::Dynamic>::__new(0);
            								}
HXLINE(1231)								meta->push( ::Dynamic(::hx::Anon_obj::Create(2)
            									->setFixed(0,HX_("params",46,fb,7a,ed),this->parseMetaArgs())
            									->setFixed(1,HX_("name",4b,72,ff,48),name3)));
            							}
            						}
            						break;
            						default:{
HXLINE(1247)							::haxe::Log_obj::trace(t, ::Dynamic(::hx::Anon_obj::Create(5)
            								->setFixed(0,HX_("className",a3,92,3d,dc),HX_("crowplexus.hscript.Parser",64,46,ff,14))
            								->setFixed(1,HX_("customParams",d7,51,18,ed),::cpp::VirtualArray_obj::__new(2)->init(0,fields)->init(1,tps))
            								->setFixed(2,HX_("methodName",cc,19,0f,12),HX_("parseType",8d,44,af,d4))
            								->setFixed(3,HX_("fileName",e7,5a,43,62),HX_("crowplexus/hscript/Parser.hx",98,79,3b,2e))
            								->setFixed(4,HX_("lineNumber",dd,81,22,76),1247)));
HXLINE(1248)							this->unexpected(t);
HXLINE(1249)							goto _hx_goto_71;
            						}
            					}
            				}
            				_hx_goto_71:;
HXLINE(1252)				 ::crowplexus::hscript::CType _hx_tmp9;
HXDLIN(1252)				if ((tps->length == 0)) {
HXLINE(1252)					_hx_tmp9 = ::crowplexus::hscript::CType_obj::CTAnon(fields);
            				}
            				else {
HXLINE(1252)					_hx_tmp9 = ::crowplexus::hscript::CType_obj::CTExtend(tps,fields);
            				}
HXDLIN(1252)				return this->parseTypeNext(_hx_tmp9);
            			}
            			break;
            			default:{
HXLINE(1254)				return this->unexpected(t);
            			}
            		}
HXLINE(1113)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,parseType,return )

 ::crowplexus::hscript::CType Parser_obj::parseTypeNext( ::crowplexus::hscript::CType t){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1258_parseTypeNext)
HXLINE(1259)		 ::crowplexus::hscript::Token tk = this->token();
HXLINE(1260)		bool isIntersection = false;
HXLINE(1261)		if ((tk->_hx_getIndex() == 3)) {
HXLINE(1262)			::String op = tk->_hx_getString(0);
HXDLIN(1262)			{
HXLINE(1263)				bool _hx_tmp;
HXDLIN(1263)				if ((op != HX_("->",71,27,00,00))) {
HXLINE(1263)					_hx_tmp = (op != HX_("&",26,00,00,00));
            				}
            				else {
HXLINE(1263)					_hx_tmp = false;
            				}
HXDLIN(1263)				if (_hx_tmp) {
HXLINE(1264)					{
HXLINE(1264)						 ::haxe::ds::List _hx_tmp1 = this->tokens;
HXDLIN(1264)						_hx_tmp1->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN(1264)						this->tokenMin = this->oldTokenMin;
HXDLIN(1264)						this->tokenMax = this->oldTokenMax;
            					}
HXLINE(1265)					return t;
            				}
HXLINE(1267)				isIntersection = (op == HX_("&",26,00,00,00));
            			}
            		}
            		else {
HXLINE(1269)			{
HXLINE(1269)				 ::haxe::ds::List _hx_tmp2 = this->tokens;
HXDLIN(1269)				_hx_tmp2->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN(1269)				this->tokenMin = this->oldTokenMin;
HXDLIN(1269)				this->tokenMax = this->oldTokenMax;
            			}
HXLINE(1270)			return t;
            		}
HXLINE(1272)		 ::crowplexus::hscript::CType t2 = this->parseType();
HXLINE(1273)		if ((t2->_hx_getIndex() == 1)) {
HXLINE(1274)			 ::crowplexus::hscript::CType _g = t2->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::CType >();
HXDLIN(1274)			::Array< ::Dynamic> args = t2->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
HXLINE(1275)			args->unshift(t);
HXLINE(1276)			return t2;
            		}
            		else {
HXLINE(1278)			if (isIntersection) {
HXLINE(1279)				return ::crowplexus::hscript::CType_obj::CTIntersection(::Array_obj< ::Dynamic>::__new(2)->init(0,t)->init(1,t2));
            			}
HXLINE(1280)			return ::crowplexus::hscript::CType_obj::CTFun(::Array_obj< ::Dynamic>::__new(1)->init(0,t),t2);
            		}
HXLINE(1273)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,parseTypeNext,return )

::Array< ::Dynamic> Parser_obj::parseExprList( ::crowplexus::hscript::Token etk){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1284_parseExprList)
HXLINE(1285)		::Array< ::Dynamic> args = ::Array_obj< ::Dynamic>::__new();
HXLINE(1286)		 ::crowplexus::hscript::Token tk = this->token();
HXLINE(1287)		if (::hx::IsPointerEq( tk,etk )) {
HXLINE(1288)			return args;
            		}
HXLINE(1289)		{
HXLINE(1289)			 ::haxe::ds::List _hx_tmp = this->tokens;
HXDLIN(1289)			_hx_tmp->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN(1289)			this->tokenMin = this->oldTokenMin;
HXDLIN(1289)			this->tokenMax = this->oldTokenMax;
            		}
HXLINE(1290)		while(true){
HXLINE(1291)			args->push(this->parseExpr());
HXLINE(1292)			tk = this->token();
HXLINE(1293)			if ((tk->_hx_getIndex() != 9)) {
HXLINE(1296)				if (::hx::IsPointerEq( tk,etk )) {
HXLINE(1297)					goto _hx_goto_75;
            				}
HXLINE(1298)				this->unexpected(tk);
HXLINE(1299)				goto _hx_goto_75;
            			}
            		}
            		_hx_goto_75:;
HXLINE(1302)		return args;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,parseExprList,return )

::Array< ::Dynamic> Parser_obj::parseModule(::String content,::String __o_origin){
            		::String origin = __o_origin;
            		if (::hx::IsNull(__o_origin)) origin = HX_("hscript",73,8c,18,2c);
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1307_parseModule)
HXLINE(1308)		this->initParser(origin);
HXLINE(1309)		this->input = content;
HXLINE(1310)		this->readPos = 0;
HXLINE(1311)		this->allowTypes = true;
HXLINE(1312)		this->allowMetadata = true;
HXLINE(1313)		::Array< ::Dynamic> decls = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(1314)		while(true){
HXLINE(1315)			 ::crowplexus::hscript::Token tk = this->token();
HXLINE(1316)			if (::hx::IsPointerEq( tk,::crowplexus::hscript::Token_obj::TEof_dyn() )) {
HXLINE(1317)				goto _hx_goto_77;
            			}
HXLINE(1318)			{
HXLINE(1318)				 ::haxe::ds::List _hx_tmp = this->tokens;
HXDLIN(1318)				_hx_tmp->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN(1318)				this->tokenMin = this->oldTokenMin;
HXDLIN(1318)				this->tokenMax = this->oldTokenMax;
            			}
HXLINE(1319)			decls->push(this->parseModuleDecl());
            		}
            		_hx_goto_77:;
HXLINE(1321)		return decls;
            	}


HX_DEFINE_DYNAMIC_FUNC2(Parser_obj,parseModule,return )

::Array< ::Dynamic> Parser_obj::parseMetadata(){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1324_parseMetadata)
HXLINE(1325)		::Array< ::Dynamic> meta = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(1326)		while(true){
HXLINE(1327)			 ::crowplexus::hscript::Token tk = this->token();
HXLINE(1328)			if ((tk->_hx_getIndex() == 15)) {
HXLINE(1329)				::String name = tk->_hx_getString(0);
HXLINE(1330)				meta->push( ::Dynamic(::hx::Anon_obj::Create(2)
            					->setFixed(0,HX_("params",46,fb,7a,ed),this->parseMetaArgs())
            					->setFixed(1,HX_("name",4b,72,ff,48),name)));
            			}
            			else {
HXLINE(1332)				{
HXLINE(1332)					 ::haxe::ds::List _hx_tmp = this->tokens;
HXDLIN(1332)					_hx_tmp->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN(1332)					this->tokenMin = this->oldTokenMin;
HXDLIN(1332)					this->tokenMax = this->oldTokenMax;
            				}
HXLINE(1333)				goto _hx_goto_79;
            			}
            		}
            		_hx_goto_79:;
HXLINE(1336)		return meta;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,parseMetadata,return )

 ::Dynamic Parser_obj::parseParams(){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1339_parseParams)
HXLINE(1340)		if (this->maybe(::crowplexus::hscript::Token_obj::TOp(HX_("<",3c,00,00,00)))) {
HXLINE(1341)			if (!(this->resumeErrors)) {
HXLINE(1341)				HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::EInvalidOp(HX_("Unsupported class type parameters",9d,ae,a3,50)),this->readPos,this->readPos,this->origin,this->line));
            			}
            		}
HXLINE(1342)		return  ::Dynamic(::hx::Anon_obj::Create(0));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,parseParams,return )

 ::crowplexus::hscript::ModuleDecl Parser_obj::parseModuleDecl(){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1345_parseModuleDecl)
HXLINE(1346)		::Array< ::Dynamic> meta = this->parseMetadata();
HXLINE(1347)		::String ident = this->getIdent();
HXLINE(1348)		bool isPrivate = false;
HXDLIN(1348)		bool isExtern = false;
HXLINE(1349)		while(true){
HXLINE(1350)			::String _hx_switch_0 = ident;
            			if (  (_hx_switch_0==HX_("extern",60,d5,1a,c7)) ){
HXLINE(1354)				isExtern = true;
HXDLIN(1354)				goto _hx_goto_83;
            			}
            			if (  (_hx_switch_0==HX_("private",03,2d,6f,89)) ){
HXLINE(1352)				isPrivate = true;
HXDLIN(1352)				goto _hx_goto_83;
            			}
            			/* default */{
HXLINE(1356)				goto _hx_goto_82;
            			}
            			_hx_goto_83:;
HXLINE(1358)			ident = this->getIdent();
            		}
            		_hx_goto_82:;
HXLINE(1360)		::String _hx_switch_1 = ident;
            		if (  (_hx_switch_1==HX_("class",38,78,58,48)) ){
HXLINE(1388)			::String name = this->getIdent();
HXLINE(1389)			 ::Dynamic params = this->parseParams();
HXLINE(1390)			 ::crowplexus::hscript::CType extend = null();
HXLINE(1391)			::Array< ::Dynamic> implement = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(1393)			while(true){
HXLINE(1394)				 ::crowplexus::hscript::Token t = this->token();
HXLINE(1395)				if ((t->_hx_getIndex() == 2)) {
HXLINE(1398)					::String _hx_switch_2 = t->_hx_getString(0);
            					if (  (_hx_switch_2==HX_("extends",59,cd,5c,70)) ){
HXLINE(1397)						extend = this->parseType();
HXDLIN(1397)						goto _hx_goto_86;
            					}
            					if (  (_hx_switch_2==HX_("implements",70,fd,43,a8)) ){
HXLINE(1399)						implement->push(this->parseType());
HXDLIN(1399)						goto _hx_goto_86;
            					}
            					/* default */{
HXLINE(1401)						{
HXLINE(1401)							 ::haxe::ds::List _hx_tmp = this->tokens;
HXDLIN(1401)							_hx_tmp->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,t,this->tokenMin,this->tokenMax));
HXDLIN(1401)							this->tokenMin = this->oldTokenMin;
HXDLIN(1401)							this->tokenMax = this->oldTokenMax;
            						}
HXLINE(1402)						goto _hx_goto_85;
            					}
            					_hx_goto_86:;
            				}
            				else {
HXLINE(1401)					{
HXLINE(1401)						 ::haxe::ds::List _hx_tmp1 = this->tokens;
HXDLIN(1401)						_hx_tmp1->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,t,this->tokenMin,this->tokenMax));
HXDLIN(1401)						this->tokenMin = this->oldTokenMin;
HXDLIN(1401)						this->tokenMax = this->oldTokenMax;
            					}
HXLINE(1402)					goto _hx_goto_85;
            				}
            			}
            			_hx_goto_85:;
HXLINE(1406)			::Array< ::Dynamic> fields = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(1407)			{
HXLINE(1407)				 ::crowplexus::hscript::Token t1 = this->token();
HXDLIN(1407)				if (::hx::IsPointerNotEq( t1,::crowplexus::hscript::Token_obj::TBrOpen_dyn() )) {
HXLINE(1407)					this->unexpected(t1);
            				}
            			}
HXLINE(1408)			while(!(this->maybe(::crowplexus::hscript::Token_obj::TBrClose_dyn()))){
HXLINE(1409)				fields->push(this->parseField());
            			}
HXLINE(1411)			return ::crowplexus::hscript::ModuleDecl_obj::DClass( ::Dynamic(::hx::Anon_obj::Create(8)
            				->setFixed(0,HX_("fields",79,8e,8e,80),fields)
            				->setFixed(1,HX_("isPrivate",39,aa,6d,8d),isPrivate)
            				->setFixed(2,HX_("implement",a3,71,3f,af),implement)
            				->setFixed(3,HX_("extend",da,d1,1a,c7),extend)
            				->setFixed(4,HX_("params",46,fb,7a,ed),params)
            				->setFixed(5,HX_("isExtern",ea,70,84,1f),isExtern)
            				->setFixed(6,HX_("meta",c5,4a,59,48),meta)
            				->setFixed(7,HX_("name",4b,72,ff,48),name)));
HXLINE(1387)			goto _hx_goto_84;
            		}
            		if (  (_hx_switch_1==HX_("import",65,a1,82,08)) ){
HXLINE(1366)			::Array< ::String > path = ::Array_obj< ::String >::__new(1)->init(0,this->getIdent());
HXLINE(1367)			bool star = false;
HXLINE(1368)			::String as = HX_("",00,00,00,00);
HXLINE(1369)			while(true){
HXLINE(1370)				 ::crowplexus::hscript::Token t2 = this->token();
HXLINE(1371)				if (::hx::IsPointerNotEq( t2,::crowplexus::hscript::Token_obj::TDot_dyn() )) {
HXLINE(1372)					{
HXLINE(1372)						 ::haxe::ds::List _hx_tmp2 = this->tokens;
HXDLIN(1372)						_hx_tmp2->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,t2,this->tokenMin,this->tokenMax));
HXDLIN(1372)						this->tokenMin = this->oldTokenMin;
HXDLIN(1372)						this->tokenMax = this->oldTokenMax;
            					}
HXLINE(1373)					goto _hx_goto_88;
            				}
HXLINE(1375)				t2 = this->token();
HXLINE(1376)				switch((int)(t2->_hx_getIndex())){
            					case (int)2: {
HXLINE(1377)						::String id = t2->_hx_getString(0);
HXLINE(1378)						path->push(id);
            					}
            					break;
            					case (int)3: {
HXLINE(1379)						if ((t2->_hx_getString(0) == HX_("*",2a,00,00,00))) {
HXLINE(1380)							star = true;
            						}
            						else {
HXLINE(1382)							this->unexpected(t2);
            						}
            					}
            					break;
            					default:{
HXLINE(1382)						this->unexpected(t2);
            					}
            				}
            			}
            			_hx_goto_88:;
HXLINE(1385)			{
HXLINE(1385)				 ::crowplexus::hscript::Token t3 = this->token();
HXDLIN(1385)				if (::hx::IsPointerNotEq( t3,::crowplexus::hscript::Token_obj::TSemicolon_dyn() )) {
HXLINE(1385)					this->unexpected(t3);
            				}
            			}
HXLINE(1386)			return ::crowplexus::hscript::ModuleDecl_obj::DImport(path,star,as);
HXLINE(1365)			goto _hx_goto_84;
            		}
            		if (  (_hx_switch_1==HX_("package",86,2b,b1,41)) ){
HXLINE(1362)			::Array< ::String > path1 = this->parsePath();
HXLINE(1363)			{
HXLINE(1363)				 ::crowplexus::hscript::Token t4 = this->token();
HXDLIN(1363)				if (::hx::IsPointerNotEq( t4,::crowplexus::hscript::Token_obj::TSemicolon_dyn() )) {
HXLINE(1363)					this->unexpected(t4);
            				}
            			}
HXLINE(1364)			return ::crowplexus::hscript::ModuleDecl_obj::DPackage(path1);
HXLINE(1361)			goto _hx_goto_84;
            		}
            		if (  (_hx_switch_1==HX_("typedef",4b,37,d8,f8)) ){
HXLINE(1422)			::String name1 = this->getIdent();
HXLINE(1423)			 ::Dynamic params1 = this->parseParams();
HXLINE(1424)			{
HXLINE(1424)				 ::crowplexus::hscript::Token t5 = this->token();
HXDLIN(1424)				if (!(__hxcpp_enum_eq(t5,::crowplexus::hscript::Token_obj::TOp(HX_("=",3d,00,00,00))))) {
HXLINE(1424)					this->unexpected(t5);
            				}
            			}
HXLINE(1425)			 ::crowplexus::hscript::CType t6 = this->parseType();
HXLINE(1426)			return ::crowplexus::hscript::ModuleDecl_obj::DTypedef( ::Dynamic(::hx::Anon_obj::Create(5)
            				->setFixed(0,HX_("isPrivate",39,aa,6d,8d),isPrivate)
            				->setFixed(1,HX_("params",46,fb,7a,ed),params1)
            				->setFixed(2,HX_("t",74,00,00,00),t6)
            				->setFixed(3,HX_("meta",c5,4a,59,48),meta)
            				->setFixed(4,HX_("name",4b,72,ff,48),name1)));
HXLINE(1421)			goto _hx_goto_84;
            		}
            		/* default */{
HXLINE(1434)			this->unexpected(::crowplexus::hscript::Token_obj::TId(ident));
            		}
            		_hx_goto_84:;
HXLINE(1436)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,parseModuleDecl,return )

 ::Dynamic Parser_obj::parseField(){
            	HX_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1439_parseField)
HXLINE(1440)		::Array< ::Dynamic> meta = this->parseMetadata();
HXLINE(1441)		::Array< unsigned char > access = ::Array_obj< unsigned char >::__new(0);
HXLINE(1442)		while(true){
HXLINE(1443)			::String id = this->getIdent();
HXLINE(1444)			::String _hx_switch_0 = id;
            			if (  (_hx_switch_0==HX_("final",76,5f,9a,00)) ||  (_hx_switch_0==HX_("var",e7,de,59,00)) ){
HXLINE(1471)				::String name = this->getIdent();
HXLINE(1472)				::String get = null();
HXDLIN(1472)				::String set = null();
HXLINE(1473)				if (this->maybe(::crowplexus::hscript::Token_obj::TPOpen_dyn())) {
HXLINE(1474)					get = this->getIdent();
HXLINE(1475)					{
HXLINE(1475)						 ::crowplexus::hscript::Token t = this->token();
HXDLIN(1475)						if (::hx::IsPointerNotEq( t,::crowplexus::hscript::Token_obj::TComma_dyn() )) {
HXLINE(1475)							this->unexpected(t);
            						}
            					}
HXLINE(1476)					set = this->getIdent();
HXLINE(1477)					{
HXLINE(1477)						 ::crowplexus::hscript::Token t1 = this->token();
HXDLIN(1477)						if (::hx::IsPointerNotEq( t1,::crowplexus::hscript::Token_obj::TPClose_dyn() )) {
HXLINE(1477)							this->unexpected(t1);
            						}
            					}
            				}
HXLINE(1479)				 ::crowplexus::hscript::CType type;
HXDLIN(1479)				if (this->maybe(::crowplexus::hscript::Token_obj::TDoubleDot_dyn())) {
HXLINE(1479)					type = this->parseType();
            				}
            				else {
HXLINE(1479)					type = null();
            				}
HXLINE(1480)				 ::crowplexus::hscript::Expr expr;
HXDLIN(1480)				if (this->maybe(::crowplexus::hscript::Token_obj::TOp(HX_("=",3d,00,00,00)))) {
HXLINE(1480)					expr = this->parseExpr();
            				}
            				else {
HXLINE(1480)					expr = null();
            				}
HXLINE(1482)				if (::hx::IsNotNull( expr )) {
HXLINE(1483)					if (this->isBlock(expr)) {
HXLINE(1484)						this->maybe(::crowplexus::hscript::Token_obj::TSemicolon_dyn());
            					}
            					else {
HXLINE(1486)						 ::crowplexus::hscript::Token t2 = this->token();
HXDLIN(1486)						if (::hx::IsPointerNotEq( t2,::crowplexus::hscript::Token_obj::TSemicolon_dyn() )) {
HXLINE(1486)							this->unexpected(t2);
            						}
            					}
            				}
            				else {
HXLINE(1487)					bool _hx_tmp;
HXDLIN(1487)					if (::hx::IsNotNull( type )) {
HXLINE(1487)						if (::hx::IsNull( type )) {
HXLINE(1487)							_hx_tmp = false;
            						}
            						else {
HXLINE(1487)							if ((type->_hx_getIndex() == 2)) {
HXLINE(1487)								::Array< ::Dynamic> _g = type->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
HXDLIN(1487)								_hx_tmp = true;
            							}
            							else {
HXLINE(1487)								_hx_tmp = false;
            							}
            						}
            					}
            					else {
HXLINE(1487)						_hx_tmp = false;
            					}
HXDLIN(1487)					if (_hx_tmp) {
HXLINE(1488)						this->maybe(::crowplexus::hscript::Token_obj::TSemicolon_dyn());
            					}
            					else {
HXLINE(1490)						 ::crowplexus::hscript::Token t3 = this->token();
HXDLIN(1490)						if (::hx::IsPointerNotEq( t3,::crowplexus::hscript::Token_obj::TSemicolon_dyn() )) {
HXLINE(1490)							this->unexpected(t3);
            						}
            					}
            				}
HXLINE(1492)				return  ::Dynamic(::hx::Anon_obj::Create(4)
            					->setFixed(0,HX_("access",a4,95,06,0b),access)
            					->setFixed(1,HX_("kind",54,e1,09,47),::crowplexus::hscript::FieldKind_obj::KVar( ::Dynamic(::hx::Anon_obj::Create(4)
            						->setFixed(0,HX_("get",96,80,4e,00),get)
            						->setFixed(1,HX_("set",a2,9b,57,00),set)
            						->setFixed(2,HX_("expr",35,fd,1d,43),expr)
            						->setFixed(3,HX_("type",ba,f2,08,4d),type))))
            					->setFixed(2,HX_("meta",c5,4a,59,48),meta)
            					->setFixed(3,HX_("name",4b,72,ff,48),name));
HXLINE(1470)				goto _hx_goto_91;
            			}
            			if (  (_hx_switch_0==HX_("function",18,ab,52,14)) ){
HXLINE(1458)				::String name1 = this->getIdent();
HXLINE(1459)				 ::Dynamic inf = this->parseFunctionDecl();
HXLINE(1460)				return  ::Dynamic(::hx::Anon_obj::Create(4)
            					->setFixed(0,HX_("access",a4,95,06,0b),access)
            					->setFixed(1,HX_("kind",54,e1,09,47),::crowplexus::hscript::FieldKind_obj::KFunction( ::Dynamic(::hx::Anon_obj::Create(3)
            						->setFixed(0,HX_("ret",61,d9,56,00), ::Dynamic(inf->__Field(HX_("ret",61,d9,56,00),::hx::paccDynamic)))
            						->setFixed(1,HX_("args",5d,8d,74,40), ::Dynamic(inf->__Field(HX_("args",5d,8d,74,40),::hx::paccDynamic)))
            						->setFixed(2,HX_("expr",35,fd,1d,43), ::Dynamic(inf->__Field(HX_("body",a2,7a,1b,41),::hx::paccDynamic))))))
            					->setFixed(2,HX_("meta",c5,4a,59,48),meta)
            					->setFixed(3,HX_("name",4b,72,ff,48),name1));
HXLINE(1457)				goto _hx_goto_91;
            			}
            			if (  (_hx_switch_0==HX_("inline",59,ca,3f,99)) ){
HXLINE(1452)				access->push(( (unsigned char)(2) ));
HXDLIN(1452)				goto _hx_goto_91;
            			}
            			if (  (_hx_switch_0==HX_("macro",0c,70,16,03)) ){
HXLINE(1456)				access->push(( (unsigned char)(5) ));
HXDLIN(1456)				goto _hx_goto_91;
            			}
            			if (  (_hx_switch_0==HX_("override",4c,22,28,49)) ){
HXLINE(1446)				access->push(( (unsigned char)(3) ));
HXDLIN(1446)				goto _hx_goto_91;
            			}
            			if (  (_hx_switch_0==HX_("private",03,2d,6f,89)) ){
HXLINE(1450)				access->push(( (unsigned char)(1) ));
HXDLIN(1450)				goto _hx_goto_91;
            			}
            			if (  (_hx_switch_0==HX_("public",a9,80,f3,66)) ){
HXLINE(1448)				access->push(( (unsigned char)(0) ));
HXDLIN(1448)				goto _hx_goto_91;
            			}
            			if (  (_hx_switch_0==HX_("static",ae,dc,fb,05)) ){
HXLINE(1454)				access->push(( (unsigned char)(4) ));
HXDLIN(1454)				goto _hx_goto_91;
            			}
            			/* default */{
HXLINE(1504)				this->unexpected(::crowplexus::hscript::Token_obj::TId(id));
HXLINE(1505)				goto _hx_goto_90;
            			}
            			_hx_goto_91:;
            		}
            		_hx_goto_90:;
HXLINE(1508)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,parseField,return )

int Parser_obj::readChar(){
            	HX_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1514_readChar)
HXDLIN(1514)		return this->input.cca(this->readPos++);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,readChar,return )

::String Parser_obj::readString(int until){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1517_readString)
HXLINE(1518)		int c = 0;
HXLINE(1519)		 ::StringBuf b =  ::StringBuf_obj::__alloc( HX_CTX );
HXLINE(1520)		bool esc = false;
HXLINE(1521)		int old = this->line;
HXLINE(1522)		::String s = this->input;
HXLINE(1524)		int p1 = (this->readPos - 1);
HXLINE(1526)		while(true){
HXLINE(1527)			int c1 = this->input.cca(this->readPos++);
HXLINE(1528)			if ((c1 == 0)) {
HXLINE(1529)				this->line = old;
HXLINE(1530)				if (!(this->resumeErrors)) {
HXLINE(1530)					HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::EUnterminatedString_dyn(),p1,p1,this->origin,this->line));
            				}
HXLINE(1531)				goto _hx_goto_94;
            			}
HXLINE(1533)			if (esc) {
HXLINE(1534)				esc = false;
HXLINE(1535)				switch((int)(c1)){
            					case (int)47: {
HXLINE(1545)						if (this->allowJSON) {
HXLINE(1546)							if ((c1 >= 127)) {
HXLINE(1546)								::String x = ::String::fromCharCode(c1);
HXDLIN(1546)								if (::hx::IsNotNull( b->charBuf )) {
HXLINE(1546)									b->flush();
            								}
HXDLIN(1546)								if (::hx::IsNull( b->b )) {
HXLINE(1546)									b->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x));
            								}
            								else {
HXLINE(1546)									::Array< ::String > b1 = b->b;
HXDLIN(1546)									b1->push(::Std_obj::string(x));
            								}
            							}
            							else {
HXLINE(1546)								if (::hx::IsNull( b->charBuf )) {
HXLINE(1546)									b->charBuf = ::Array_obj< char >::__new();
            								}
HXDLIN(1546)								b->charBuf->push(c1);
            							}
            						}
            						else {
HXLINE(1548)							this->invalidChar(c1);
            						}
            					}
            					break;
            					case (int)34: case (int)39: case (int)92: {
HXLINE(1543)						if ((c1 >= 127)) {
HXLINE(1543)							::String x1 = ::String::fromCharCode(c1);
HXDLIN(1543)							if (::hx::IsNotNull( b->charBuf )) {
HXLINE(1543)								b->flush();
            							}
HXDLIN(1543)							if (::hx::IsNull( b->b )) {
HXLINE(1543)								b->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x1));
            							}
            							else {
HXLINE(1543)								::Array< ::String > b2 = b->b;
HXDLIN(1543)								b2->push(::Std_obj::string(x1));
            							}
            						}
            						else {
HXLINE(1543)							if (::hx::IsNull( b->charBuf )) {
HXLINE(1543)								b->charBuf = ::Array_obj< char >::__new();
            							}
HXDLIN(1543)							b->charBuf->push(c1);
            						}
            					}
            					break;
            					case (int)110: {
HXLINE(1537)						if (::hx::IsNull( b->charBuf )) {
HXLINE(1537)							b->charBuf = ::Array_obj< char >::__new();
            						}
HXDLIN(1537)						b->charBuf->push(10);
            					}
            					break;
            					case (int)114: {
HXLINE(1539)						if (::hx::IsNull( b->charBuf )) {
HXLINE(1539)							b->charBuf = ::Array_obj< char >::__new();
            						}
HXDLIN(1539)						b->charBuf->push(13);
            					}
            					break;
            					case (int)116: {
HXLINE(1541)						if (::hx::IsNull( b->charBuf )) {
HXLINE(1541)							b->charBuf = ::Array_obj< char >::__new();
            						}
HXDLIN(1541)						b->charBuf->push(9);
            					}
            					break;
            					case (int)117: {
HXLINE(1550)						if (!(this->allowJSON)) {
HXLINE(1551)							this->invalidChar(c1);
            						}
HXLINE(1552)						int k = 0;
HXLINE(1553)						{
HXLINE(1553)							int _g = 0;
HXDLIN(1553)							while((_g < 4)){
HXLINE(1553)								_g = (_g + 1);
HXDLIN(1553)								int i = (_g - 1);
HXLINE(1554)								k = (k << 4);
HXLINE(1555)								int _hx_char = this->input.cca(this->readPos++);
HXLINE(1556)								switch((int)(_hx_char)){
            									case (int)48: case (int)49: case (int)50: case (int)51: case (int)52: case (int)53: case (int)54: case (int)55: case (int)56: case (int)57: {
HXLINE(1558)										k = (k + (_hx_char - 48));
            									}
            									break;
            									case (int)65: case (int)66: case (int)67: case (int)68: case (int)69: case (int)70: {
HXLINE(1560)										k = (k + (_hx_char - 55));
            									}
            									break;
            									case (int)97: case (int)98: case (int)99: case (int)100: case (int)101: case (int)102: {
HXLINE(1562)										k = (k + (_hx_char - 87));
            									}
            									break;
            									default:{
HXLINE(1564)										if ((_hx_char == 0)) {
HXLINE(1565)											this->line = old;
HXLINE(1566)											if (!(this->resumeErrors)) {
HXLINE(1566)												HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::EUnterminatedString_dyn(),p1,p1,this->origin,this->line));
            											}
            										}
HXLINE(1568)										this->invalidChar(_hx_char);
            									}
            								}
            							}
            						}
HXLINE(1571)						if ((k >= 127)) {
HXLINE(1571)							::String x2 = ::String::fromCharCode(k);
HXDLIN(1571)							if (::hx::IsNotNull( b->charBuf )) {
HXLINE(1571)								b->flush();
            							}
HXDLIN(1571)							if (::hx::IsNull( b->b )) {
HXLINE(1571)								b->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x2));
            							}
            							else {
HXLINE(1571)								::Array< ::String > b3 = b->b;
HXDLIN(1571)								b3->push(::Std_obj::string(x2));
            							}
            						}
            						else {
HXLINE(1571)							if (::hx::IsNull( b->charBuf )) {
HXLINE(1571)								b->charBuf = ::Array_obj< char >::__new();
            							}
HXDLIN(1571)							b->charBuf->push(k);
            						}
            					}
            					break;
            					default:{
HXLINE(1573)						this->invalidChar(c1);
            					}
            				}
            			}
            			else {
HXLINE(1575)				if ((c1 == 92)) {
HXLINE(1576)					esc = true;
            				}
            				else {
HXLINE(1577)					if ((c1 == until)) {
HXLINE(1578)						goto _hx_goto_94;
            					}
            					else {
HXLINE(1580)						if ((c1 == 10)) {
HXLINE(1581)							this->line++;
            						}
HXLINE(1582)						if ((c1 >= 127)) {
HXLINE(1582)							::String x3 = ::String::fromCharCode(c1);
HXDLIN(1582)							if (::hx::IsNotNull( b->charBuf )) {
HXLINE(1582)								b->flush();
            							}
HXDLIN(1582)							if (::hx::IsNull( b->b )) {
HXLINE(1582)								b->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x3));
            							}
            							else {
HXLINE(1582)								::Array< ::String > b4 = b->b;
HXDLIN(1582)								b4->push(::Std_obj::string(x3));
            							}
            						}
            						else {
HXLINE(1582)							if (::hx::IsNull( b->charBuf )) {
HXLINE(1582)								b->charBuf = ::Array_obj< char >::__new();
            							}
HXDLIN(1582)							b->charBuf->push(c1);
            						}
            					}
            				}
            			}
            		}
            		_hx_goto_94:;
HXLINE(1585)		return b->toString();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,readString,return )

 ::crowplexus::hscript::Token Parser_obj::token(){
            	HX_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1588_token)
HXLINE(1590)		 ::crowplexus::hscript::TokenPos t = this->tokens->pop().StaticCast<  ::crowplexus::hscript::TokenPos >();
HXLINE(1591)		if (::hx::IsNotNull( t )) {
HXLINE(1592)			this->tokenMin = t->min;
HXLINE(1593)			this->tokenMax = t->max;
HXLINE(1594)			return t->t;
            		}
HXLINE(1596)		this->oldTokenMin = this->tokenMin;
HXLINE(1597)		this->oldTokenMax = this->tokenMax;
HXLINE(1598)		int _hx_tmp;
HXDLIN(1598)		if ((this->_hx_char < 0)) {
HXLINE(1598)			_hx_tmp = this->readPos;
            		}
            		else {
HXLINE(1598)			_hx_tmp = (this->readPos - 1);
            		}
HXDLIN(1598)		this->tokenMin = _hx_tmp;
HXLINE(1599)		 ::crowplexus::hscript::Token t1 = this->_token();
HXLINE(1600)		int _hx_tmp1;
HXDLIN(1600)		if ((this->_hx_char < 0)) {
HXLINE(1600)			_hx_tmp1 = (this->readPos - 1);
            		}
            		else {
HXLINE(1600)			_hx_tmp1 = (this->readPos - 2);
            		}
HXDLIN(1600)		this->tokenMax = _hx_tmp1;
HXLINE(1601)		return t1;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,token,return )

 ::crowplexus::hscript::Token Parser_obj::_token(){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1602__token)
HXLINE(1607)		int _hx_char;
HXLINE(1608)		if ((this->_hx_char < 0)) {
HXLINE(1609)			_hx_char = this->input.cca(this->readPos++);
            		}
            		else {
HXLINE(1611)			_hx_char = this->_hx_char;
HXLINE(1612)			this->_hx_char = -1;
            		}
HXLINE(1614)		while(true){
HXLINE(1615)			if ((_hx_char == 0)) {
HXLINE(1616)				this->_hx_char = _hx_char;
HXLINE(1617)				return ::crowplexus::hscript::Token_obj::TEof_dyn();
            			}
HXLINE(1619)			switch((int)(_hx_char)){
            				case (int)0: {
HXLINE(1621)					return ::crowplexus::hscript::Token_obj::TEof_dyn();
            				}
            				break;
            				case (int)10: {
HXLINE(1627)					this->line++;
HXLINE(1629)					this->tokenMin++;
            				}
            				break;
            				case (int)9: case (int)13: case (int)32: {
HXLINE(1624)					this->tokenMin++;
            				}
            				break;
            				case (int)34: case (int)39: {
HXLINE(1796)					return ::crowplexus::hscript::Token_obj::TConst(::crowplexus::hscript::Const_obj::CString(this->readString(_hx_char)));
            				}
            				break;
            				case (int)35: {
HXLINE(1834)					_hx_char = this->input.cca(this->readPos++);
HXLINE(1835)					if (this->idents->__get(_hx_char)) {
HXLINE(1836)						::String id = ::String::fromCharCode(_hx_char);
HXLINE(1837)						while(true){
HXLINE(1838)							_hx_char = this->input.cca(this->readPos++);
HXLINE(1839)							if (!(this->idents->__get(_hx_char))) {
HXLINE(1840)								this->_hx_char = _hx_char;
HXLINE(1841)								return this->preprocess(id);
            							}
HXLINE(1843)							id = (id + ::String::fromCharCode(_hx_char));
            						}
            					}
HXLINE(1846)					this->invalidChar(_hx_char);
            				}
            				break;
            				case (int)40: {
HXLINE(1756)					return ::crowplexus::hscript::Token_obj::TPOpen_dyn();
            				}
            				break;
            				case (int)41: {
HXLINE(1758)					return ::crowplexus::hscript::Token_obj::TPClose_dyn();
            				}
            				break;
            				case (int)44: {
HXLINE(1760)					return ::crowplexus::hscript::Token_obj::TComma_dyn();
            				}
            				break;
            				case (int)46: {
HXLINE(1762)					_hx_char = this->input.cca(this->readPos++);
HXLINE(1763)					switch((int)(_hx_char)){
            						case (int)46: {
HXLINE(1779)							_hx_char = this->input.cca(this->readPos++);
HXLINE(1780)							if ((_hx_char != 46)) {
HXLINE(1781)								this->invalidChar(_hx_char);
            							}
HXLINE(1782)							return ::crowplexus::hscript::Token_obj::TOp(HX_("...",ee,0f,23,00));
            						}
            						break;
            						case (int)48: case (int)49: case (int)50: case (int)51: case (int)52: case (int)53: case (int)54: case (int)55: case (int)56: case (int)57: {
HXLINE(1765)							int n = (_hx_char - 48);
HXLINE(1766)							int exp = 1;
HXLINE(1767)							while(true){
HXLINE(1768)								_hx_char = this->input.cca(this->readPos++);
HXLINE(1769)								exp = (exp * 10);
HXLINE(1770)								switch((int)(_hx_char)){
            									case (int)48: case (int)49: case (int)50: case (int)51: case (int)52: case (int)53: case (int)54: case (int)55: case (int)56: case (int)57: {
HXLINE(1772)										n = ((n * 10) + (_hx_char - 48));
            									}
            									break;
            									default:{
HXLINE(1774)										this->_hx_char = _hx_char;
HXLINE(1775)										return ::crowplexus::hscript::Token_obj::TConst(::crowplexus::hscript::Const_obj::CFloat((( (Float)(n) ) / ( (Float)(exp) ))));
            									}
            								}
            							}
            						}
            						break;
            						default:{
HXLINE(1784)							this->_hx_char = _hx_char;
HXLINE(1785)							return ::crowplexus::hscript::Token_obj::TDot_dyn();
            						}
            					}
            				}
            				break;
            				case (int)48: case (int)49: case (int)50: case (int)51: case (int)52: case (int)53: case (int)54: case (int)55: case (int)56: case (int)57: {
HXLINE(1632)					Float n1 = (( (Float)((_hx_char - 48)) ) * ((Float)1.0));
HXLINE(1633)					Float exp1 = ((Float)0.);
HXLINE(1634)					while(true){
HXLINE(1635)						_hx_char = this->input.cca(this->readPos++);
HXLINE(1636)						exp1 = (exp1 * ( (Float)(10) ));
HXLINE(1637)						switch((int)(_hx_char)){
            							case (int)46: {
HXLINE(1659)								if ((exp1 > 0)) {
HXLINE(1661)									bool _hx_tmp;
HXDLIN(1661)									if ((exp1 == 10)) {
HXLINE(1661)										_hx_tmp = (this->input.cca(this->readPos++) == 46);
            									}
            									else {
HXLINE(1661)										_hx_tmp = false;
            									}
HXDLIN(1661)									if (_hx_tmp) {
HXLINE(1662)										{
HXLINE(1662)											 ::haxe::ds::List _hx_tmp1 = this->tokens;
HXDLIN(1662)											_hx_tmp1->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,::crowplexus::hscript::Token_obj::TOp(HX_("...",ee,0f,23,00)),this->tokenMin,this->tokenMax));
HXDLIN(1662)											this->tokenMin = this->oldTokenMin;
HXDLIN(1662)											this->tokenMax = this->oldTokenMax;
            										}
HXLINE(1663)										int i = ::Std_obj::_hx_int(n1);
HXLINE(1664)										 ::crowplexus::hscript::Const _hx_tmp2;
HXDLIN(1664)										if ((i == n1)) {
HXLINE(1664)											_hx_tmp2 = ::crowplexus::hscript::Const_obj::CInt(i);
            										}
            										else {
HXLINE(1664)											_hx_tmp2 = ::crowplexus::hscript::Const_obj::CFloat(n1);
            										}
HXDLIN(1664)										return ::crowplexus::hscript::Token_obj::TConst(_hx_tmp2);
            									}
HXLINE(1666)									this->invalidChar(_hx_char);
            								}
HXLINE(1668)								exp1 = ((Float)1.);
            							}
            							break;
            							case (int)48: case (int)49: case (int)50: case (int)51: case (int)52: case (int)53: case (int)54: case (int)55: case (int)56: case (int)57: {
HXLINE(1639)								n1 = ((n1 * ( (Float)(10) )) + (_hx_char - 48));
            							}
            							break;
            							case (int)69: case (int)101: {
HXLINE(1642)								 ::crowplexus::hscript::Token tk = this->token();
HXLINE(1643)								 ::Dynamic pow = null();
HXLINE(1644)								switch((int)(tk->_hx_getIndex())){
            									case (int)1: {
HXLINE(1645)										 ::crowplexus::hscript::Const _g = tk->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Const >();
HXDLIN(1645)										if ((_g->_hx_getIndex() == 0)) {
HXLINE(1645)											int e = _g->_hx_getInt(0);
HXDLIN(1645)											pow = e;
            										}
            										else {
HXLINE(1653)											 ::haxe::ds::List _hx_tmp3 = this->tokens;
HXDLIN(1653)											_hx_tmp3->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN(1653)											this->tokenMin = this->oldTokenMin;
HXDLIN(1653)											this->tokenMax = this->oldTokenMax;
            										}
            									}
            									break;
            									case (int)3: {
HXLINE(1646)										if ((tk->_hx_getString(0) == HX_("-",2d,00,00,00))) {
HXLINE(1647)											tk = this->token();
HXLINE(1648)											if ((tk->_hx_getIndex() == 1)) {
HXLINE(1649)												 ::crowplexus::hscript::Const _g1 = tk->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Const >();
HXDLIN(1649)												if ((_g1->_hx_getIndex() == 0)) {
HXLINE(1649)													int e1 = _g1->_hx_getInt(0);
HXDLIN(1649)													pow = -(e1);
            												}
            												else {
HXLINE(1650)													 ::haxe::ds::List _hx_tmp4 = this->tokens;
HXDLIN(1650)													_hx_tmp4->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN(1650)													this->tokenMin = this->oldTokenMin;
HXDLIN(1650)													this->tokenMax = this->oldTokenMax;
            												}
            											}
            											else {
HXLINE(1650)												 ::haxe::ds::List _hx_tmp5 = this->tokens;
HXDLIN(1650)												_hx_tmp5->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN(1650)												this->tokenMin = this->oldTokenMin;
HXDLIN(1650)												this->tokenMax = this->oldTokenMax;
            											}
            										}
            										else {
HXLINE(1653)											 ::haxe::ds::List _hx_tmp6 = this->tokens;
HXDLIN(1653)											_hx_tmp6->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN(1653)											this->tokenMin = this->oldTokenMin;
HXDLIN(1653)											this->tokenMax = this->oldTokenMax;
            										}
            									}
            									break;
            									default:{
HXLINE(1653)										 ::haxe::ds::List _hx_tmp7 = this->tokens;
HXDLIN(1653)										_hx_tmp7->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN(1653)										this->tokenMin = this->oldTokenMin;
HXDLIN(1653)										this->tokenMax = this->oldTokenMax;
            									}
            								}
HXLINE(1655)								if (::hx::IsNull( pow )) {
HXLINE(1656)									this->invalidChar(_hx_char);
            								}
HXLINE(1657)								return ::crowplexus::hscript::Token_obj::TConst(::crowplexus::hscript::Const_obj::CFloat((((::Math_obj::pow(( (Float)(10) ),( (Float)(pow) )) / exp1) * n1) * ( (Float)(10) ))));
            							}
            							break;
            							case (int)95: {
            							}
            							break;
            							case (int)98: {
HXLINE(1713)								bool _hx_tmp8;
HXDLIN(1713)								if (!((n1 > 0))) {
HXLINE(1713)									_hx_tmp8 = (exp1 > 0);
            								}
            								else {
HXLINE(1713)									_hx_tmp8 = true;
            								}
HXDLIN(1713)								if (_hx_tmp8) {
HXLINE(1714)									this->invalidChar(_hx_char);
            								}
HXLINE(1717)								int n2 = 0;
HXLINE(1718)								while(true){
HXLINE(1719)									_hx_char = this->input.cca(this->readPos++);
HXLINE(1720)									switch((int)(_hx_char)){
            										case (int)48: case (int)49: {
HXLINE(1722)											n2 = (((n2 << 1) + _hx_char) - 48);
            										}
            										break;
            										case (int)95: {
            										}
            										break;
            										default:{
HXLINE(1725)											this->_hx_char = _hx_char;
HXLINE(1726)											return ::crowplexus::hscript::Token_obj::TConst(::crowplexus::hscript::Const_obj::CInt(n2));
            										}
            									}
            								}
            							}
            							break;
            							case (int)120: {
HXLINE(1670)								bool _hx_tmp9;
HXDLIN(1670)								if (!((n1 > 0))) {
HXLINE(1670)									_hx_tmp9 = (exp1 > 0);
            								}
            								else {
HXLINE(1670)									_hx_tmp9 = true;
            								}
HXDLIN(1670)								if (_hx_tmp9) {
HXLINE(1671)									this->invalidChar(_hx_char);
            								}
HXLINE(1674)								int n3 = 0;
HXLINE(1675)								while(true){
HXLINE(1676)									_hx_char = this->input.cca(this->readPos++);
HXLINE(1677)									switch((int)(_hx_char)){
            										case (int)48: case (int)49: case (int)50: case (int)51: case (int)52: case (int)53: case (int)54: case (int)55: case (int)56: case (int)57: {
HXLINE(1679)											n3 = (((n3 << 4) + _hx_char) - 48);
            										}
            										break;
            										case (int)65: case (int)66: case (int)67: case (int)68: case (int)69: case (int)70: {
HXLINE(1681)											n3 = ((n3 << 4) + (_hx_char - 55));
            										}
            										break;
            										case (int)95: {
            										}
            										break;
            										case (int)97: case (int)98: case (int)99: case (int)100: case (int)101: case (int)102: {
HXLINE(1683)											n3 = ((n3 << 4) + (_hx_char - 87));
            										}
            										break;
            										default:{
HXLINE(1686)											this->_hx_char = _hx_char;
HXLINE(1687)											return ::crowplexus::hscript::Token_obj::TConst(::crowplexus::hscript::Const_obj::CInt(n3));
            										}
            									}
            								}
            							}
            							break;
            							default:{
HXLINE(1748)								this->_hx_char = _hx_char;
HXLINE(1749)								int i1 = ::Std_obj::_hx_int(n1);
HXLINE(1750)								 ::crowplexus::hscript::Const _hx_tmp10;
HXDLIN(1750)								if ((exp1 > 0)) {
HXLINE(1750)									_hx_tmp10 = ::crowplexus::hscript::Const_obj::CFloat(((n1 * ( (Float)(10) )) / exp1));
            								}
            								else {
HXLINE(1750)									if ((i1 == n1)) {
HXLINE(1750)										_hx_tmp10 = ::crowplexus::hscript::Const_obj::CInt(i1);
            									}
            									else {
HXLINE(1750)										_hx_tmp10 = ::crowplexus::hscript::Const_obj::CFloat(n1);
            									}
            								}
HXDLIN(1750)								return ::crowplexus::hscript::Token_obj::TConst(_hx_tmp10);
            							}
            						}
            					}
            				}
            				break;
            				case (int)58: {
HXLINE(1810)					return ::crowplexus::hscript::Token_obj::TDoubleDot_dyn();
            				}
            				break;
            				case (int)59: {
HXLINE(1754)					return ::crowplexus::hscript::Token_obj::TSemicolon_dyn();
            				}
            				break;
            				case (int)61: {
HXLINE(1812)					_hx_char = this->input.cca(this->readPos++);
HXLINE(1813)					if ((_hx_char == 61)) {
HXLINE(1814)						return ::crowplexus::hscript::Token_obj::TOp(HX_("==",60,35,00,00));
            					}
            					else {
HXLINE(1815)						if ((_hx_char == 62)) {
HXLINE(1816)							return ::crowplexus::hscript::Token_obj::TOp(HX_("=>",61,35,00,00));
            						}
            					}
HXLINE(1817)					this->_hx_char = _hx_char;
HXLINE(1818)					return ::crowplexus::hscript::Token_obj::TOp(HX_("=",3d,00,00,00));
            				}
            				break;
            				case (int)63: {
HXLINE(1798)					_hx_char = this->input.cca(this->readPos++);
HXLINE(1799)					if ((_hx_char == 46)) {
HXLINE(1800)						return ::crowplexus::hscript::Token_obj::TQuestionDot_dyn();
            					}
            					else {
HXLINE(1801)						if ((_hx_char == 63)) {
HXLINE(1802)							_hx_char = this->input.cca(this->readPos++);
HXLINE(1803)							if ((_hx_char == 61)) {
HXLINE(1804)								return ::crowplexus::hscript::Token_obj::TOp((HX_("??",20,37,00,00) + HX_("=",3d,00,00,00)));
            							}
HXLINE(1805)							return ::crowplexus::hscript::Token_obj::TOp(HX_("??",20,37,00,00));
            						}
            					}
HXLINE(1807)					this->_hx_char = _hx_char;
HXLINE(1808)					return ::crowplexus::hscript::Token_obj::TQuestion_dyn();
            				}
            				break;
            				case (int)64: {
HXLINE(1820)					_hx_char = this->input.cca(this->readPos++);
HXLINE(1821)					bool _hx_tmp11;
HXDLIN(1821)					if (!(this->idents->__get(_hx_char))) {
HXLINE(1821)						_hx_tmp11 = (_hx_char == 58);
            					}
            					else {
HXLINE(1821)						_hx_tmp11 = true;
            					}
HXDLIN(1821)					if (_hx_tmp11) {
HXLINE(1822)						::String id1 = ::String::fromCharCode(_hx_char);
HXLINE(1823)						while(true){
HXLINE(1824)							_hx_char = this->input.cca(this->readPos++);
HXLINE(1825)							if (!(this->idents->__get(_hx_char))) {
HXLINE(1826)								this->_hx_char = _hx_char;
HXLINE(1827)								return ::crowplexus::hscript::Token_obj::TMeta(id1);
            							}
HXLINE(1829)							id1 = (id1 + ::String::fromCharCode(_hx_char));
            						}
            					}
HXLINE(1832)					this->invalidChar(_hx_char);
            				}
            				break;
            				case (int)91: {
HXLINE(1792)					return ::crowplexus::hscript::Token_obj::TBkOpen_dyn();
            				}
            				break;
            				case (int)93: {
HXLINE(1794)					return ::crowplexus::hscript::Token_obj::TBkClose_dyn();
            				}
            				break;
            				case (int)123: {
HXLINE(1788)					return ::crowplexus::hscript::Token_obj::TBrOpen_dyn();
            				}
            				break;
            				case (int)125: {
HXLINE(1790)					return ::crowplexus::hscript::Token_obj::TBrClose_dyn();
            				}
            				break;
            				default:{
HXLINE(1848)					if (this->ops->__get(_hx_char)) {
HXLINE(1849)						::String op = ::String::fromCharCode(_hx_char);
HXLINE(1850)						while(true){
HXLINE(1851)							_hx_char = this->input.cca(this->readPos++);
HXLINE(1852)							if ((_hx_char == 0)) {
HXLINE(1853)								_hx_char = 0;
            							}
HXLINE(1854)							if (!(this->ops->__get(_hx_char))) {
HXLINE(1855)								this->_hx_char = _hx_char;
HXLINE(1856)								return ::crowplexus::hscript::Token_obj::TOp(op);
            							}
HXLINE(1858)							::String pop = op;
HXLINE(1859)							op = (op + ::String::fromCharCode(_hx_char));
HXLINE(1860)							bool _hx_tmp12;
HXDLIN(1860)							if (!(this->opPriority->exists(op))) {
HXLINE(1860)								_hx_tmp12 = this->opPriority->exists(pop);
            							}
            							else {
HXLINE(1860)								_hx_tmp12 = false;
            							}
HXDLIN(1860)							if (_hx_tmp12) {
HXLINE(1861)								bool _hx_tmp13;
HXDLIN(1861)								if ((op != HX_("//",20,29,00,00))) {
HXLINE(1861)									_hx_tmp13 = (op == HX_("/*",1b,29,00,00));
            								}
            								else {
HXLINE(1861)									_hx_tmp13 = true;
            								}
HXDLIN(1861)								if (_hx_tmp13) {
HXLINE(1862)									return this->tokenComment(op,_hx_char);
            								}
HXLINE(1863)								this->_hx_char = _hx_char;
HXLINE(1864)								return ::crowplexus::hscript::Token_obj::TOp(pop);
            							}
            						}
            					}
HXLINE(1868)					if (this->idents->__get(_hx_char)) {
HXLINE(1869)						::String id2 = ::String::fromCharCode(_hx_char);
HXLINE(1870)						while(true){
HXLINE(1871)							_hx_char = this->input.cca(this->readPos++);
HXLINE(1872)							if ((_hx_char == 0)) {
HXLINE(1873)								_hx_char = 0;
            							}
HXLINE(1874)							if (!(this->idents->__get(_hx_char))) {
HXLINE(1875)								this->_hx_char = _hx_char;
HXLINE(1876)								return ::crowplexus::hscript::Token_obj::TId(id2);
            							}
HXLINE(1878)							id2 = (id2 + ::String::fromCharCode(_hx_char));
            						}
            					}
HXLINE(1881)					this->invalidChar(_hx_char);
            				}
            			}
HXLINE(1883)			_hx_char = this->input.cca(this->readPos++);
            		}
HXLINE(1614)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,_token,return )

 ::Dynamic Parser_obj::preprocValue(::String id){
            	HX_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1889_preprocValue)
HXDLIN(1889)		return this->preprocesorValues->get(id);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,preprocValue,return )

 ::crowplexus::hscript::Expr Parser_obj::parsePreproCond(){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1894_parsePreproCond)
HXLINE(1895)		 ::crowplexus::hscript::Token tk = this->token();
HXLINE(1896)		switch((int)(tk->_hx_getIndex())){
            			case (int)2: {
HXLINE(1900)				::String id = tk->_hx_getString(0);
HXLINE(1901)				 ::crowplexus::hscript::ExprDef e = ::crowplexus::hscript::ExprDef_obj::EIdent(id);
HXDLIN(1901)				 ::Dynamic pmin = this->tokenMin;
HXDLIN(1901)				 ::Dynamic pmax = this->tokenMax;
HXDLIN(1901)				if (::hx::IsNull( e )) {
HXLINE(1901)					return null();
            				}
            				else {
HXLINE(1901)					if (::hx::IsNull( pmin )) {
HXLINE(1901)						pmin = this->tokenMin;
            					}
HXDLIN(1901)					if (::hx::IsNull( pmax )) {
HXLINE(1901)						pmax = this->tokenMax;
            					}
HXDLIN(1901)					return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e,( (int)(pmin) ),( (int)(pmax) ),this->origin,this->line);
            				}
            			}
            			break;
            			case (int)3: {
HXLINE(1902)				if ((tk->_hx_getString(0) == HX_("!",21,00,00,00))) {
HXLINE(1903)					 ::crowplexus::hscript::ExprDef e1 = ::crowplexus::hscript::ExprDef_obj::EUnop(HX_("!",21,00,00,00),true,this->parsePreproCond());
HXDLIN(1903)					 ::Dynamic pmin1 = this->tokenMin;
HXDLIN(1903)					 ::Dynamic pmax1 = this->tokenMax;
HXDLIN(1903)					if (::hx::IsNull( e1 )) {
HXLINE(1903)						return null();
            					}
            					else {
HXLINE(1903)						if (::hx::IsNull( pmin1 )) {
HXLINE(1903)							pmin1 = this->tokenMin;
            						}
HXDLIN(1903)						if (::hx::IsNull( pmax1 )) {
HXLINE(1903)							pmax1 = this->tokenMax;
            						}
HXDLIN(1903)						return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e1,( (int)(pmin1) ),( (int)(pmax1) ),this->origin,this->line);
            					}
            				}
            				else {
HXLINE(1905)					return ( ( ::crowplexus::hscript::Expr)(this->unexpected(tk)) );
            				}
            			}
            			break;
            			case (int)4: {
HXLINE(1898)				{
HXLINE(1898)					 ::haxe::ds::List _hx_tmp = this->tokens;
HXDLIN(1898)					_hx_tmp->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,::crowplexus::hscript::Token_obj::TPOpen_dyn(),this->tokenMin,this->tokenMax));
HXDLIN(1898)					this->tokenMin = this->oldTokenMin;
HXDLIN(1898)					this->tokenMax = this->oldTokenMax;
            				}
HXLINE(1899)				return this->parseExpr();
            			}
            			break;
            			default:{
HXLINE(1905)				return ( ( ::crowplexus::hscript::Expr)(this->unexpected(tk)) );
            			}
            		}
HXLINE(1896)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,parsePreproCond,return )

bool Parser_obj::evalPreproCond( ::crowplexus::hscript::Expr e){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1910_evalPreproCond)
HXDLIN(1910)		 ::crowplexus::hscript::ExprDef _g = e->e;
HXDLIN(1910)		switch((int)(_g->_hx_getIndex())){
            			case (int)2: {
HXLINE(1911)				::String id = _g->_hx_getString(0);
HXLINE(1912)				return ::hx::IsNotNull( this->preprocValue(id) );
            			}
            			break;
            			case (int)5: {
HXLINE(1915)				 ::crowplexus::hscript::Expr e1 = _g->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXLINE(1916)				return this->evalPreproCond(e1);
            			}
            			break;
            			case (int)8: {
HXLINE(1919)				 ::crowplexus::hscript::Expr _g1 = _g->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN(1919)				 ::crowplexus::hscript::Expr _g2 = _g->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN(1919)				::String _hx_switch_0 = _g->_hx_getString(0);
            				if (  (_hx_switch_0==HX_("&&",40,21,00,00)) ){
HXLINE(1917)					 ::crowplexus::hscript::Expr e11 = _g1;
HXDLIN(1917)					 ::crowplexus::hscript::Expr e2 = _g2;
HXLINE(1918)					if (this->evalPreproCond(e11)) {
HXLINE(1918)						return this->evalPreproCond(e2);
            					}
            					else {
HXLINE(1918)						return false;
            					}
HXLINE(1917)					goto _hx_goto_110;
            				}
            				if (  (_hx_switch_0==HX_("||",80,6c,00,00)) ){
HXLINE(1919)					 ::crowplexus::hscript::Expr e12 = _g1;
HXDLIN(1919)					 ::crowplexus::hscript::Expr e21 = _g2;
HXLINE(1920)					if (!(this->evalPreproCond(e12))) {
HXLINE(1920)						return this->evalPreproCond(e21);
            					}
            					else {
HXLINE(1920)						return true;
            					}
HXLINE(1919)					goto _hx_goto_110;
            				}
            				/* default */{
HXLINE(1922)					{
HXLINE(1922)						 ::crowplexus::hscript::ErrorDef err = ::crowplexus::hscript::ErrorDef_obj::EInvalidPreprocessor((HX_("Can't eval ",01,17,bf,09) + ::Type_obj::enumConstructor(e->e)));
HXDLIN(1922)						if (!(this->resumeErrors)) {
HXLINE(1922)							HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,err,this->readPos,this->readPos,this->origin,this->line));
            						}
            					}
HXLINE(1923)					return false;
            				}
            				_hx_goto_110:;
            			}
            			break;
            			case (int)9: {
HXLINE(1913)				bool _g3 = _g->_hx_getBool(1);
HXDLIN(1913)				if ((_g->_hx_getString(0) == HX_("!",21,00,00,00))) {
HXLINE(1913)					 ::crowplexus::hscript::Expr e3 = _g->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >();
HXLINE(1914)					return !(this->evalPreproCond(e3));
            				}
            				else {
HXLINE(1922)					{
HXLINE(1922)						 ::crowplexus::hscript::ErrorDef err1 = ::crowplexus::hscript::ErrorDef_obj::EInvalidPreprocessor((HX_("Can't eval ",01,17,bf,09) + ::Type_obj::enumConstructor(e->e)));
HXDLIN(1922)						if (!(this->resumeErrors)) {
HXLINE(1922)							HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,err1,this->readPos,this->readPos,this->origin,this->line));
            						}
            					}
HXLINE(1923)					return false;
            				}
            			}
            			break;
            			default:{
HXLINE(1922)				{
HXLINE(1922)					 ::crowplexus::hscript::ErrorDef err2 = ::crowplexus::hscript::ErrorDef_obj::EInvalidPreprocessor((HX_("Can't eval ",01,17,bf,09) + ::Type_obj::enumConstructor(e->e)));
HXDLIN(1922)					if (!(this->resumeErrors)) {
HXLINE(1922)						HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,err2,this->readPos,this->readPos,this->origin,this->line));
            					}
            				}
HXLINE(1923)				return false;
            			}
            		}
HXLINE(1910)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,evalPreproCond,return )

 ::crowplexus::hscript::Token Parser_obj::preprocess(::String id){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1928_preprocess)
HXDLIN(1928)		::String _hx_switch_0 = id;
            		if (  (_hx_switch_0==HX_("else",b9,e4,14,43)) ||  (_hx_switch_0==HX_("elseif",d6,a0,a2,dd)) ){
HXLINE(1938)			if ((this->preprocStack->length > 0)) {
HXLINE(1939)				if (this->preprocStack->__get((this->preprocStack->length - 1)).StaticCast<  ::crowplexus::hscript::PreprocessStackValue >()->r) {
HXLINE(1940)					this->preprocStack->__get((this->preprocStack->length - 1)).StaticCast<  ::crowplexus::hscript::PreprocessStackValue >()->r = false;
HXLINE(1941)					this->skipTokens();
HXLINE(1942)					return this->token();
            				}
            				else {
HXLINE(1943)					if ((id == HX_("else",b9,e4,14,43))) {
HXLINE(1944)						this->preprocStack->pop().StaticCast<  ::crowplexus::hscript::PreprocessStackValue >();
HXLINE(1945)						::Array< ::Dynamic> _hx_tmp = this->preprocStack;
HXDLIN(1945)						_hx_tmp->push( ::crowplexus::hscript::PreprocessStackValue_obj::__alloc( HX_CTX ,true));
HXLINE(1946)						return this->token();
            					}
            					else {
HXLINE(1949)						this->preprocStack->pop().StaticCast<  ::crowplexus::hscript::PreprocessStackValue >();
HXLINE(1950)						return this->preprocess(HX_("if",dd,5b,00,00));
            					}
            				}
            			}
            			else {
HXLINE(1956)				return ::crowplexus::hscript::Token_obj::TPrepro(id);
            			}
HXLINE(1938)			goto _hx_goto_112;
            		}
            		if (  (_hx_switch_0==HX_("end",db,03,4d,00)) ){
HXLINE(1952)			if ((this->preprocStack->length > 0)) {
HXLINE(1953)				this->preprocStack->pop().StaticCast<  ::crowplexus::hscript::PreprocessStackValue >();
HXLINE(1954)				return this->token();
            			}
            			else {
HXLINE(1956)				return ::crowplexus::hscript::Token_obj::TPrepro(id);
            			}
HXLINE(1952)			goto _hx_goto_112;
            		}
            		if (  (_hx_switch_0==HX_("if",dd,5b,00,00)) ){
HXLINE(1930)			 ::crowplexus::hscript::Expr e = this->parsePreproCond();
HXLINE(1931)			if (this->evalPreproCond(e)) {
HXLINE(1932)				::Array< ::Dynamic> _hx_tmp1 = this->preprocStack;
HXDLIN(1932)				_hx_tmp1->push( ::crowplexus::hscript::PreprocessStackValue_obj::__alloc( HX_CTX ,true));
HXLINE(1933)				return this->token();
            			}
HXLINE(1935)			::Array< ::Dynamic> _hx_tmp2 = this->preprocStack;
HXDLIN(1935)			_hx_tmp2->push( ::crowplexus::hscript::PreprocessStackValue_obj::__alloc( HX_CTX ,false));
HXLINE(1936)			this->skipTokens();
HXLINE(1937)			return this->token();
HXLINE(1929)			goto _hx_goto_112;
            		}
            		/* default */{
HXLINE(1956)			return ::crowplexus::hscript::Token_obj::TPrepro(id);
            		}
            		_hx_goto_112:;
HXLINE(1928)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,preprocess,return )

void Parser_obj::skipTokens(){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1960_skipTokens)
HXLINE(1961)		int spos = (this->preprocStack->length - 1);
HXLINE(1962)		 ::crowplexus::hscript::PreprocessStackValue obj = this->preprocStack->__get(spos).StaticCast<  ::crowplexus::hscript::PreprocessStackValue >();
HXLINE(1963)		int pos = this->readPos;
HXLINE(1964)		while(true){
HXLINE(1965)			 ::crowplexus::hscript::Token tk = this->token();
HXLINE(1966)			if (::hx::IsPointerEq( tk,::crowplexus::hscript::Token_obj::TEof_dyn() )) {
HXLINE(1968)				if ((this->preprocStack->length != 0)) {
HXLINE(1969)					if (!(this->resumeErrors)) {
HXLINE(1969)						HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::EInvalidPreprocessor(HX_("Unclosed",e5,94,4a,ea)),pos,pos,this->origin,this->line));
            					}
            				}
            				else {
HXLINE(1972)					goto _hx_goto_114;
            				}
            			}
HXLINE(1975)			if (::hx::IsInstanceNotEq( this->preprocStack->__get(spos).StaticCast<  ::crowplexus::hscript::PreprocessStackValue >(),obj )) {
HXLINE(1976)				{
HXLINE(1976)					 ::haxe::ds::List _hx_tmp = this->tokens;
HXDLIN(1976)					_hx_tmp->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN(1976)					this->tokenMin = this->oldTokenMin;
HXDLIN(1976)					this->tokenMax = this->oldTokenMax;
            				}
HXLINE(1977)				goto _hx_goto_114;
            			}
            		}
            		_hx_goto_114:;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,skipTokens,(void))

 ::crowplexus::hscript::Token Parser_obj::tokenComment(::String op,int _hx_char){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1982_tokenComment)
HXLINE(1983)		 ::Dynamic c = op.charCodeAt(1);
HXLINE(1984)		::String s = this->input;
HXLINE(1985)		if (::hx::IsEq( c,47 )) {
HXLINE(1986)			do {
HXLINE(1986)				bool _hx_tmp;
HXDLIN(1986)				if ((_hx_char != 13)) {
HXLINE(1986)					_hx_tmp = (_hx_char != 10);
            				}
            				else {
HXLINE(1986)					_hx_tmp = false;
            				}
HXDLIN(1986)				if (!(_hx_tmp)) {
HXLINE(1986)					goto _hx_goto_116;
            				}
HXLINE(1987)				_hx_char = this->input.cca(this->readPos++);
            			} while((_hx_char != 0));
            			_hx_goto_116:;
HXLINE(1991)			this->_hx_char = _hx_char;
HXLINE(1992)			return this->token();
            		}
HXLINE(1994)		if (::hx::IsEq( c,42 )) {
HXLINE(1995)			int old = this->line;
HXLINE(1996)			if ((op == HX_("/**/",a0,0a,31,1f))) {
HXLINE(1997)				this->_hx_char = _hx_char;
HXLINE(1998)				return this->token();
            			}
HXLINE(2000)			do {
HXLINE(2001)				while((_hx_char != 42)){
HXLINE(2002)					if ((_hx_char == 10)) {
HXLINE(2003)						this->line++;
            					}
HXLINE(2004)					_hx_char = this->input.cca(this->readPos++);
HXLINE(2005)					if ((_hx_char == 0)) {
HXLINE(2006)						this->line = old;
HXLINE(2007)						if (!(this->resumeErrors)) {
HXLINE(2007)							HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::EUnterminatedComment_dyn(),this->tokenMin,this->tokenMin,this->origin,this->line));
            						}
HXLINE(2008)						goto _hx_goto_118;
            					}
            				}
            				_hx_goto_118:;
HXLINE(2011)				_hx_char = this->input.cca(this->readPos++);
HXLINE(2012)				if ((_hx_char == 0)) {
HXLINE(2013)					this->line = old;
HXLINE(2014)					if (!(this->resumeErrors)) {
HXLINE(2014)						HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::EUnterminatedComment_dyn(),this->tokenMin,this->tokenMin,this->origin,this->line));
            					}
HXLINE(2015)					goto _hx_goto_117;
            				}
            			} while((_hx_char != 47));
            			_hx_goto_117:;
HXLINE(2020)			return this->token();
            		}
HXLINE(2022)		this->_hx_char = _hx_char;
HXLINE(2023)		return ::crowplexus::hscript::Token_obj::TOp(op);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Parser_obj,tokenComment,return )

::String Parser_obj::constString( ::crowplexus::hscript::Const c){
            	HX_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_2027_constString)
HXDLIN(2027)		switch((int)(c->_hx_getIndex())){
            			case (int)0: {
HXLINE(2028)				int v = c->_hx_getInt(0);
HXDLIN(2028)				return ::Std_obj::string(v);
            			}
            			break;
            			case (int)1: {
HXLINE(2029)				Float f = c->_hx_getFloat(0);
HXDLIN(2029)				return ::Std_obj::string(f);
            			}
            			break;
            			case (int)2: {
HXLINE(2030)				::String s = c->_hx_getString(0);
HXDLIN(2030)				return s;
            			}
            			break;
            		}
HXLINE(2027)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,constString,return )

::String Parser_obj::tokenString( ::crowplexus::hscript::Token t){
            	HX_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_2038_tokenString)
HXDLIN(2038)		switch((int)(t->_hx_getIndex())){
            			case (int)0: {
HXLINE(2039)				return HX_("<eof>",3e,ee,21,cf);
            			}
            			break;
            			case (int)1: {
HXLINE(2040)				 ::crowplexus::hscript::Const c = t->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Const >();
HXDLIN(2040)				return this->constString(c);
            			}
            			break;
            			case (int)2: {
HXLINE(2041)				::String s = t->_hx_getString(0);
HXDLIN(2041)				return s;
            			}
            			break;
            			case (int)3: {
HXLINE(2042)				::String s1 = t->_hx_getString(0);
HXDLIN(2042)				return s1;
            			}
            			break;
            			case (int)4: {
HXLINE(2043)				return HX_("(",28,00,00,00);
            			}
            			break;
            			case (int)5: {
HXLINE(2044)				return HX_(")",29,00,00,00);
            			}
            			break;
            			case (int)6: {
HXLINE(2045)				return HX_("{",7b,00,00,00);
            			}
            			break;
            			case (int)7: {
HXLINE(2046)				return HX_("}",7d,00,00,00);
            			}
            			break;
            			case (int)8: {
HXLINE(2047)				return HX_(".",2e,00,00,00);
            			}
            			break;
            			case (int)9: {
HXLINE(2048)				return HX_(",",2c,00,00,00);
            			}
            			break;
            			case (int)10: {
HXLINE(2049)				return HX_(";",3b,00,00,00);
            			}
            			break;
            			case (int)11: {
HXLINE(2050)				return HX_("[",5b,00,00,00);
            			}
            			break;
            			case (int)12: {
HXLINE(2051)				return HX_("]",5d,00,00,00);
            			}
            			break;
            			case (int)13: {
HXLINE(2052)				return HX_("?",3f,00,00,00);
            			}
            			break;
            			case (int)14: {
HXLINE(2053)				return HX_(":",3a,00,00,00);
            			}
            			break;
            			case (int)15: {
HXLINE(2054)				::String id = t->_hx_getString(0);
HXDLIN(2054)				return (HX_("@",40,00,00,00) + id);
            			}
            			break;
            			case (int)16: {
HXLINE(2055)				::String id1 = t->_hx_getString(0);
HXDLIN(2055)				return (HX_("#",23,00,00,00) + id1);
            			}
            			break;
            			case (int)17: {
HXLINE(2056)				return HX_("?.",0f,37,00,00);
            			}
            			break;
            		}
HXLINE(2038)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,tokenString,return )


::hx::ObjectPtr< Parser_obj > Parser_obj::__new() {
	::hx::ObjectPtr< Parser_obj > __this = new Parser_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< Parser_obj > Parser_obj::__alloc(::hx::Ctx *_hx_ctx) {
	Parser_obj *__this = (Parser_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Parser_obj), true, "crowplexus.hscript.Parser"));
	*(void **)__this = Parser_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

Parser_obj::Parser_obj()
{
}

void Parser_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Parser);
	HX_MARK_MEMBER_NAME(line,"line");
	HX_MARK_MEMBER_NAME(opChars,"opChars");
	HX_MARK_MEMBER_NAME(identChars,"identChars");
	HX_MARK_MEMBER_NAME(opPriority,"opPriority");
	HX_MARK_MEMBER_NAME(opRightAssoc,"opRightAssoc");
	HX_MARK_MEMBER_NAME(preprocesorValues,"preprocesorValues");
	HX_MARK_MEMBER_NAME(allowJSON,"allowJSON");
	HX_MARK_MEMBER_NAME(allowTypes,"allowTypes");
	HX_MARK_MEMBER_NAME(allowMetadata,"allowMetadata");
	HX_MARK_MEMBER_NAME(resumeErrors,"resumeErrors");
	HX_MARK_MEMBER_NAME(packageName,"packageName");
	HX_MARK_MEMBER_NAME(input,"input");
	HX_MARK_MEMBER_NAME(readPos,"readPos");
	HX_MARK_MEMBER_NAME(_hx_char,"char");
	HX_MARK_MEMBER_NAME(ops,"ops");
	HX_MARK_MEMBER_NAME(idents,"idents");
	HX_MARK_MEMBER_NAME(uid,"uid");
	HX_MARK_MEMBER_NAME(origin,"origin");
	HX_MARK_MEMBER_NAME(tokenMin,"tokenMin");
	HX_MARK_MEMBER_NAME(tokenMax,"tokenMax");
	HX_MARK_MEMBER_NAME(oldTokenMin,"oldTokenMin");
	HX_MARK_MEMBER_NAME(oldTokenMax,"oldTokenMax");
	HX_MARK_MEMBER_NAME(tokens,"tokens");
	HX_MARK_MEMBER_NAME(preprocStack,"preprocStack");
	HX_MARK_END_CLASS();
}

void Parser_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(line,"line");
	HX_VISIT_MEMBER_NAME(opChars,"opChars");
	HX_VISIT_MEMBER_NAME(identChars,"identChars");
	HX_VISIT_MEMBER_NAME(opPriority,"opPriority");
	HX_VISIT_MEMBER_NAME(opRightAssoc,"opRightAssoc");
	HX_VISIT_MEMBER_NAME(preprocesorValues,"preprocesorValues");
	HX_VISIT_MEMBER_NAME(allowJSON,"allowJSON");
	HX_VISIT_MEMBER_NAME(allowTypes,"allowTypes");
	HX_VISIT_MEMBER_NAME(allowMetadata,"allowMetadata");
	HX_VISIT_MEMBER_NAME(resumeErrors,"resumeErrors");
	HX_VISIT_MEMBER_NAME(packageName,"packageName");
	HX_VISIT_MEMBER_NAME(input,"input");
	HX_VISIT_MEMBER_NAME(readPos,"readPos");
	HX_VISIT_MEMBER_NAME(_hx_char,"char");
	HX_VISIT_MEMBER_NAME(ops,"ops");
	HX_VISIT_MEMBER_NAME(idents,"idents");
	HX_VISIT_MEMBER_NAME(uid,"uid");
	HX_VISIT_MEMBER_NAME(origin,"origin");
	HX_VISIT_MEMBER_NAME(tokenMin,"tokenMin");
	HX_VISIT_MEMBER_NAME(tokenMax,"tokenMax");
	HX_VISIT_MEMBER_NAME(oldTokenMin,"oldTokenMin");
	HX_VISIT_MEMBER_NAME(oldTokenMax,"oldTokenMax");
	HX_VISIT_MEMBER_NAME(tokens,"tokens");
	HX_VISIT_MEMBER_NAME(preprocStack,"preprocStack");
}

::hx::Val Parser_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"mk") ) { return ::hx::Val( mk_dyn() ); }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"ops") ) { return ::hx::Val( ops ); }
		if (HX_FIELD_EQ(inName,"uid") ) { return ::hx::Val( uid ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"line") ) { return ::hx::Val( line ); }
		if (HX_FIELD_EQ(inName,"char") ) { return ::hx::Val( _hx_char ); }
		if (HX_FIELD_EQ(inName,"push") ) { return ::hx::Val( push_dyn() ); }
		if (HX_FIELD_EQ(inName,"expr") ) { return ::hx::Val( expr_dyn() ); }
		if (HX_FIELD_EQ(inName,"pmin") ) { return ::hx::Val( pmin_dyn() ); }
		if (HX_FIELD_EQ(inName,"pmax") ) { return ::hx::Val( pmax_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"input") ) { return ::hx::Val( input ); }
		if (HX_FIELD_EQ(inName,"error") ) { return ::hx::Val( error_dyn() ); }
		if (HX_FIELD_EQ(inName,"maybe") ) { return ::hx::Val( maybe_dyn() ); }
		if (HX_FIELD_EQ(inName,"token") ) { return ::hx::Val( token_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"idents") ) { return ::hx::Val( idents ); }
		if (HX_FIELD_EQ(inName,"origin") ) { return ::hx::Val( origin ); }
		if (HX_FIELD_EQ(inName,"tokens") ) { return ::hx::Val( tokens ); }
		if (HX_FIELD_EQ(inName,"ensure") ) { return ::hx::Val( ensure_dyn() ); }
		if (HX_FIELD_EQ(inName,"_token") ) { return ::hx::Val( _token_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"opChars") ) { return ::hx::Val( opChars ); }
		if (HX_FIELD_EQ(inName,"readPos") ) { return ::hx::Val( readPos ); }
		if (HX_FIELD_EQ(inName,"isBlock") ) { return ::hx::Val( isBlock_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"tokenMin") ) { return ::hx::Val( tokenMin ); }
		if (HX_FIELD_EQ(inName,"tokenMax") ) { return ::hx::Val( tokenMax ); }
		if (HX_FIELD_EQ(inName,"getIdent") ) { return ::hx::Val( getIdent_dyn() ); }
		if (HX_FIELD_EQ(inName,"mapCompr") ) { return ::hx::Val( mapCompr_dyn() ); }
		if (HX_FIELD_EQ(inName,"makeUnop") ) { return ::hx::Val( makeUnop_dyn() ); }
		if (HX_FIELD_EQ(inName,"readChar") ) { return ::hx::Val( readChar_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"allowJSON") ) { return ::hx::Val( allowJSON ); }
		if (HX_FIELD_EQ(inName,"parseExpr") ) { return ::hx::Val( parseExpr_dyn() ); }
		if (HX_FIELD_EQ(inName,"makeBinop") ) { return ::hx::Val( makeBinop_dyn() ); }
		if (HX_FIELD_EQ(inName,"parsePath") ) { return ::hx::Val( parsePath_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseType") ) { return ::hx::Val( parseType_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"identChars") ) { return ::hx::Val( identChars ); }
		if (HX_FIELD_EQ(inName,"opPriority") ) { return ::hx::Val( opPriority ); }
		if (HX_FIELD_EQ(inName,"allowTypes") ) { return ::hx::Val( allowTypes ); }
		if (HX_FIELD_EQ(inName,"initParser") ) { return ::hx::Val( initParser_dyn() ); }
		if (HX_FIELD_EQ(inName,"unexpected") ) { return ::hx::Val( unexpected_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseField") ) { return ::hx::Val( parseField_dyn() ); }
		if (HX_FIELD_EQ(inName,"readString") ) { return ::hx::Val( readString_dyn() ); }
		if (HX_FIELD_EQ(inName,"preprocess") ) { return ::hx::Val( preprocess_dyn() ); }
		if (HX_FIELD_EQ(inName,"skipTokens") ) { return ::hx::Val( skipTokens_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"packageName") ) { return ::hx::Val( packageName ); }
		if (HX_FIELD_EQ(inName,"oldTokenMin") ) { return ::hx::Val( oldTokenMin ); }
		if (HX_FIELD_EQ(inName,"oldTokenMax") ) { return ::hx::Val( oldTokenMax ); }
		if (HX_FIELD_EQ(inName,"invalidChar") ) { return ::hx::Val( invalidChar_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseString") ) { return ::hx::Val( parseString_dyn() ); }
		if (HX_FIELD_EQ(inName,"ensureToken") ) { return ::hx::Val( ensureToken_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseObject") ) { return ::hx::Val( parseObject_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseLambda") ) { return ::hx::Val( parseLambda_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseModule") ) { return ::hx::Val( parseModule_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseParams") ) { return ::hx::Val( parseParams_dyn() ); }
		if (HX_FIELD_EQ(inName,"constString") ) { return ::hx::Val( constString_dyn() ); }
		if (HX_FIELD_EQ(inName,"tokenString") ) { return ::hx::Val( tokenString_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"opRightAssoc") ) { return ::hx::Val( opRightAssoc ); }
		if (HX_FIELD_EQ(inName,"resumeErrors") ) { return ::hx::Val( resumeErrors ); }
		if (HX_FIELD_EQ(inName,"extractIdent") ) { return ::hx::Val( extractIdent_dyn() ); }
		if (HX_FIELD_EQ(inName,"preprocValue") ) { return ::hx::Val( preprocValue_dyn() ); }
		if (HX_FIELD_EQ(inName,"preprocStack") ) { return ::hx::Val( preprocStack ); }
		if (HX_FIELD_EQ(inName,"tokenComment") ) { return ::hx::Val( tokenComment_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"allowMetadata") ) { return ::hx::Val( allowMetadata ); }
		if (HX_FIELD_EQ(inName,"parseFullExpr") ) { return ::hx::Val( parseFullExpr_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseMetaArgs") ) { return ::hx::Val( parseMetaArgs_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseExprNext") ) { return ::hx::Val( parseExprNext_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseTypeNext") ) { return ::hx::Val( parseTypeNext_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseExprList") ) { return ::hx::Val( parseExprList_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseMetadata") ) { return ::hx::Val( parseMetadata_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"parseStructure") ) { return ::hx::Val( parseStructure_dyn() ); }
		if (HX_FIELD_EQ(inName,"evalPreproCond") ) { return ::hx::Val( evalPreproCond_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"parseModuleDecl") ) { return ::hx::Val( parseModuleDecl_dyn() ); }
		if (HX_FIELD_EQ(inName,"parsePreproCond") ) { return ::hx::Val( parsePreproCond_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"preprocesorValues") ) { return ::hx::Val( preprocesorValues ); }
		if (HX_FIELD_EQ(inName,"parseFunctionArgs") ) { return ::hx::Val( parseFunctionArgs_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseFunctionDecl") ) { return ::hx::Val( parseFunctionDecl_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val Parser_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"ops") ) { ops=inValue.Cast< ::Array< bool > >(); return inValue; }
		if (HX_FIELD_EQ(inName,"uid") ) { uid=inValue.Cast< int >(); return inValue; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"line") ) { line=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"char") ) { _hx_char=inValue.Cast< int >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"input") ) { input=inValue.Cast< ::String >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"idents") ) { idents=inValue.Cast< ::Array< bool > >(); return inValue; }
		if (HX_FIELD_EQ(inName,"origin") ) { origin=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"tokens") ) { tokens=inValue.Cast<  ::haxe::ds::List >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"opChars") ) { opChars=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"readPos") ) { readPos=inValue.Cast< int >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"tokenMin") ) { tokenMin=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"tokenMax") ) { tokenMax=inValue.Cast< int >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"allowJSON") ) { allowJSON=inValue.Cast< bool >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"identChars") ) { identChars=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"opPriority") ) { opPriority=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
		if (HX_FIELD_EQ(inName,"allowTypes") ) { allowTypes=inValue.Cast< bool >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"packageName") ) { packageName=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"oldTokenMin") ) { oldTokenMin=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"oldTokenMax") ) { oldTokenMax=inValue.Cast< int >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"opRightAssoc") ) { opRightAssoc=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
		if (HX_FIELD_EQ(inName,"resumeErrors") ) { resumeErrors=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"preprocStack") ) { preprocStack=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"allowMetadata") ) { allowMetadata=inValue.Cast< bool >(); return inValue; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"preprocesorValues") ) { preprocesorValues=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Parser_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("line",f4,17,b3,47));
	outFields->push(HX_("opChars",fc,f3,a7,a8));
	outFields->push(HX_("identChars",cd,23,3f,ee));
	outFields->push(HX_("opPriority",a5,21,d8,3e));
	outFields->push(HX_("opRightAssoc",9a,d1,fe,02));
	outFields->push(HX_("preprocesorValues",4c,e2,81,ce));
	outFields->push(HX_("allowJSON",31,27,44,b1));
	outFields->push(HX_("allowTypes",30,2b,97,45));
	outFields->push(HX_("allowMetadata",18,79,d4,10));
	outFields->push(HX_("resumeErrors",38,61,37,31));
	outFields->push(HX_("packageName",f1,04,ad,04));
	outFields->push(HX_("input",0a,c4,1d,be));
	outFields->push(HX_("readPos",de,03,cf,02));
	outFields->push(HX_("char",d6,5e,bf,41));
	outFields->push(HX_("ops",32,9c,54,00));
	outFields->push(HX_("idents",83,4f,a1,d2));
	outFields->push(HX_("uid",90,23,59,00));
	outFields->push(HX_("origin",e6,19,01,4b));
	outFields->push(HX_("tokenMin",19,a8,42,2b));
	outFields->push(HX_("tokenMax",2b,a1,42,2b));
	outFields->push(HX_("oldTokenMin",e0,7b,1c,6b));
	outFields->push(HX_("oldTokenMax",f2,74,1c,6b));
	outFields->push(HX_("tokens",5a,17,e7,91));
	outFields->push(HX_("preprocStack",4f,d3,9d,7a));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo Parser_obj_sMemberStorageInfo[] = {
	{::hx::fsInt,(int)offsetof(Parser_obj,line),HX_("line",f4,17,b3,47)},
	{::hx::fsString,(int)offsetof(Parser_obj,opChars),HX_("opChars",fc,f3,a7,a8)},
	{::hx::fsString,(int)offsetof(Parser_obj,identChars),HX_("identChars",cd,23,3f,ee)},
	{::hx::fsObject /*  ::haxe::ds::StringMap */ ,(int)offsetof(Parser_obj,opPriority),HX_("opPriority",a5,21,d8,3e)},
	{::hx::fsObject /*  ::haxe::ds::StringMap */ ,(int)offsetof(Parser_obj,opRightAssoc),HX_("opRightAssoc",9a,d1,fe,02)},
	{::hx::fsObject /*  ::haxe::ds::StringMap */ ,(int)offsetof(Parser_obj,preprocesorValues),HX_("preprocesorValues",4c,e2,81,ce)},
	{::hx::fsBool,(int)offsetof(Parser_obj,allowJSON),HX_("allowJSON",31,27,44,b1)},
	{::hx::fsBool,(int)offsetof(Parser_obj,allowTypes),HX_("allowTypes",30,2b,97,45)},
	{::hx::fsBool,(int)offsetof(Parser_obj,allowMetadata),HX_("allowMetadata",18,79,d4,10)},
	{::hx::fsBool,(int)offsetof(Parser_obj,resumeErrors),HX_("resumeErrors",38,61,37,31)},
	{::hx::fsString,(int)offsetof(Parser_obj,packageName),HX_("packageName",f1,04,ad,04)},
	{::hx::fsString,(int)offsetof(Parser_obj,input),HX_("input",0a,c4,1d,be)},
	{::hx::fsInt,(int)offsetof(Parser_obj,readPos),HX_("readPos",de,03,cf,02)},
	{::hx::fsInt,(int)offsetof(Parser_obj,_hx_char),HX_("char",d6,5e,bf,41)},
	{::hx::fsObject /* ::Array< bool > */ ,(int)offsetof(Parser_obj,ops),HX_("ops",32,9c,54,00)},
	{::hx::fsObject /* ::Array< bool > */ ,(int)offsetof(Parser_obj,idents),HX_("idents",83,4f,a1,d2)},
	{::hx::fsInt,(int)offsetof(Parser_obj,uid),HX_("uid",90,23,59,00)},
	{::hx::fsString,(int)offsetof(Parser_obj,origin),HX_("origin",e6,19,01,4b)},
	{::hx::fsInt,(int)offsetof(Parser_obj,tokenMin),HX_("tokenMin",19,a8,42,2b)},
	{::hx::fsInt,(int)offsetof(Parser_obj,tokenMax),HX_("tokenMax",2b,a1,42,2b)},
	{::hx::fsInt,(int)offsetof(Parser_obj,oldTokenMin),HX_("oldTokenMin",e0,7b,1c,6b)},
	{::hx::fsInt,(int)offsetof(Parser_obj,oldTokenMax),HX_("oldTokenMax",f2,74,1c,6b)},
	{::hx::fsObject /*  ::haxe::ds::List */ ,(int)offsetof(Parser_obj,tokens),HX_("tokens",5a,17,e7,91)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(Parser_obj,preprocStack),HX_("preprocStack",4f,d3,9d,7a)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *Parser_obj_sStaticStorageInfo = 0;
#endif

static ::String Parser_obj_sMemberFields[] = {
	HX_("line",f4,17,b3,47),
	HX_("opChars",fc,f3,a7,a8),
	HX_("identChars",cd,23,3f,ee),
	HX_("opPriority",a5,21,d8,3e),
	HX_("opRightAssoc",9a,d1,fe,02),
	HX_("preprocesorValues",4c,e2,81,ce),
	HX_("allowJSON",31,27,44,b1),
	HX_("allowTypes",30,2b,97,45),
	HX_("allowMetadata",18,79,d4,10),
	HX_("resumeErrors",38,61,37,31),
	HX_("packageName",f1,04,ad,04),
	HX_("input",0a,c4,1d,be),
	HX_("readPos",de,03,cf,02),
	HX_("char",d6,5e,bf,41),
	HX_("ops",32,9c,54,00),
	HX_("idents",83,4f,a1,d2),
	HX_("uid",90,23,59,00),
	HX_("origin",e6,19,01,4b),
	HX_("tokenMin",19,a8,42,2b),
	HX_("tokenMax",2b,a1,42,2b),
	HX_("oldTokenMin",e0,7b,1c,6b),
	HX_("oldTokenMax",f2,74,1c,6b),
	HX_("tokens",5a,17,e7,91),
	HX_("error",c8,cb,29,73),
	HX_("invalidChar",6d,ad,ce,a9),
	HX_("initParser",0f,f8,cd,f1),
	HX_("parseString",64,d5,6c,8c),
	HX_("unexpected",d1,15,f4,c5),
	HX_("push",da,11,61,4a),
	HX_("ensure",be,f5,7b,04),
	HX_("ensureToken",5b,6c,33,ec),
	HX_("maybe",a8,13,27,03),
	HX_("getIdent",7a,52,50,17),
	HX_("extractIdent",ef,51,fe,d6),
	HX_("expr",35,fd,1d,43),
	HX_("pmin",22,f7,5a,4a),
	HX_("pmax",34,f0,5a,4a),
	HX_("mk",5e,5f,00,00),
	HX_("isBlock",03,19,82,51),
	HX_("parseFullExpr",b7,bd,60,9c),
	HX_("parseObject",52,2b,7c,90),
	HX_("parseExpr",08,4f,c4,ca),
	HX_("parseLambda",9a,df,fc,cb),
	HX_("parseMetaArgs",15,82,33,6e),
	HX_("mapCompr",47,a4,9f,c1),
	HX_("makeUnop",c8,c4,47,44),
	HX_("makeBinop",da,90,98,86),
	HX_("parseStructure",80,85,70,8b),
	HX_("parseExprNext",1b,24,a8,f3),
	HX_("parseFunctionArgs",68,ad,48,04),
	HX_("parseFunctionDecl",75,70,3a,06),
	HX_("parsePath",78,37,f8,d1),
	HX_("parseType",8d,44,af,d4),
	HX_("parseTypeNext",20,c0,fc,fa),
	HX_("parseExprList",86,bb,58,f2),
	HX_("parseModule",3f,e1,0f,3c),
	HX_("parseMetadata",c2,1e,49,85),
	HX_("parseParams",d9,a7,b7,68),
	HX_("parseModuleDecl",49,69,92,8b),
	HX_("parseField",87,db,74,2a),
	HX_("readChar",4c,39,b7,69),
	HX_("readString",c7,0c,ac,0a),
	HX_("token",f9,82,2b,14),
	HX_("_token",3a,ca,12,10),
	HX_("preprocValue",78,eb,4a,28),
	HX_("preprocStack",4f,d3,9d,7a),
	HX_("parsePreproCond",ff,8c,11,d6),
	HX_("evalPreproCond",a8,25,52,b0),
	HX_("preprocess",ac,dc,46,92),
	HX_("skipTokens",39,0b,eb,f9),
	HX_("tokenComment",66,60,fb,25),
	HX_("constString",94,42,30,a9),
	HX_("tokenString",aa,20,de,a4),
	::String(null()) };

::hx::Class Parser_obj::__mClass;

void Parser_obj::__register()
{
	Parser_obj _hx_dummy;
	Parser_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("crowplexus.hscript.Parser",64,46,ff,14);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Parser_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Parser_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Parser_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Parser_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace crowplexus
} // end namespace hscript

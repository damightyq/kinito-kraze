// Generated by Haxe 4.3.4
#include <hxcpp.h>

#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED_ValueType
#include <ValueType.h>
#endif
#ifndef INCLUDED_crowplexus_iris_ErrorSeverity
#include <crowplexus/iris/ErrorSeverity.h>
#endif
#ifndef INCLUDED_crowplexus_iris_ErrorSeverityTools
#include <crowplexus/iris/ErrorSeverityTools.h>
#endif
#ifndef INCLUDED_crowplexus_iris_IrisUsingClass
#include <crowplexus/iris/IrisUsingClass.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_20397616e6a2a4f3_18_getPrefix,"crowplexus.iris.ErrorSeverityTools","getPrefix",0x91b72561,"crowplexus.iris.ErrorSeverityTools.getPrefix","crowplexus/iris/ErrorSeverity.hx",18,0x4ded2bea)
HX_LOCAL_STACK_FRAME(_hx_pos_20397616e6a2a4f3_29_getColor,"crowplexus.iris.ErrorSeverityTools","getColor",0xeaf2d474,"crowplexus.iris.ErrorSeverityTools.getColor","crowplexus/iris/ErrorSeverity.hx",29,0x4ded2bea)
HX_LOCAL_STACK_FRAME(_hx_pos_b1451a6f3b9d1ee4_128_boot,"crowplexus.iris.ErrorSeverityTools","boot",0xcf1ac839,"crowplexus.iris.ErrorSeverityTools.boot","crowplexus/iris/macro/UsingMacro.macro.hx",128,0x0de1e6a4)
namespace crowplexus{
namespace iris{

void ErrorSeverityTools_obj::__construct() { }

Dynamic ErrorSeverityTools_obj::__CreateEmpty() { return new ErrorSeverityTools_obj; }

void *ErrorSeverityTools_obj::_hx_vtable = 0;

Dynamic ErrorSeverityTools_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ErrorSeverityTools_obj > _hx_result = new ErrorSeverityTools_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ErrorSeverityTools_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x41b54c55;
}

static ::crowplexus::iris::IrisUsingClass_obj _hx_crowplexus_iris_ErrorSeverityTools__hx_crowplexus_iris_IrisUsingClass= {
};

void *ErrorSeverityTools_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0xc23de75e: return &_hx_crowplexus_iris_ErrorSeverityTools__hx_crowplexus_iris_IrisUsingClass;
	}
	#ifdef HXCPP_SCRIPTABLE
	return super::_hx_getInterface(inHash);
	#else
	return 0;
	#endif
}

::String ErrorSeverityTools_obj::getPrefix( ::crowplexus::iris::ErrorSeverity severity){
            	HX_STACKFRAME(&_hx_pos_20397616e6a2a4f3_18_getPrefix)
HXDLIN(  18)		if (::hx::IsNull( severity )) {
HXLINE(  23)			return HX_("UNKNOWN",6a,f7,4e,61);
            		}
            		else {
HXDLIN(  18)			if ((severity->_hx_getIndex() == 0)) {
HXLINE(  19)				return HX_("",00,00,00,00);
            			}
            			else {
HXLINE(  24)				return ::Type_obj::enumConstructor(severity);
            			}
            		}
HXLINE(  18)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ErrorSeverityTools_obj,getPrefix,return )

int ErrorSeverityTools_obj::getColor( ::crowplexus::iris::ErrorSeverity severity){
            	HX_STACKFRAME(&_hx_pos_20397616e6a2a4f3_29_getColor)
HXDLIN(  29)		switch((int)(severity->_hx_getIndex())){
            			case (int)0: {
HXLINE(  30)				return 9;
            			}
            			break;
            			case (int)1: {
HXLINE(  31)				return 3;
            			}
            			break;
            			case (int)2: {
HXLINE(  32)				return 1;
            			}
            			break;
            			case (int)3: {
HXLINE(  33)				return 1;
            			}
            			break;
            		}
HXLINE(  29)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ErrorSeverityTools_obj,getColor,return )

 ::haxe::ds::StringMap ErrorSeverityTools_obj::_hx___irisUsing_crowplexus_iris_ErrorSeverityTools;


ErrorSeverityTools_obj::ErrorSeverityTools_obj()
{
}

bool ErrorSeverityTools_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"getColor") ) { outValue = getColor_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"getPrefix") ) { outValue = getPrefix_dyn(); return true; }
		break;
	case 46:
		if (HX_FIELD_EQ(inName,"__irisUsing_crowplexus_iris_ErrorSeverityTools") ) { outValue = ( _hx___irisUsing_crowplexus_iris_ErrorSeverityTools ); return true; }
	}
	return false;
}

bool ErrorSeverityTools_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 46:
		if (HX_FIELD_EQ(inName,"__irisUsing_crowplexus_iris_ErrorSeverityTools") ) { _hx___irisUsing_crowplexus_iris_ErrorSeverityTools=ioValue.Cast<  ::haxe::ds::StringMap >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *ErrorSeverityTools_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo ErrorSeverityTools_obj_sStaticStorageInfo[] = {
	{::hx::fsObject /*  ::haxe::ds::StringMap */ ,(void *) &ErrorSeverityTools_obj::_hx___irisUsing_crowplexus_iris_ErrorSeverityTools,HX_("__irisUsing_crowplexus_iris_ErrorSeverityTools",d5,69,da,0b)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void ErrorSeverityTools_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ErrorSeverityTools_obj::_hx___irisUsing_crowplexus_iris_ErrorSeverityTools,"__irisUsing_crowplexus_iris_ErrorSeverityTools");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ErrorSeverityTools_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ErrorSeverityTools_obj::_hx___irisUsing_crowplexus_iris_ErrorSeverityTools,"__irisUsing_crowplexus_iris_ErrorSeverityTools");
};

#endif

::hx::Class ErrorSeverityTools_obj::__mClass;

static ::String ErrorSeverityTools_obj_sStaticFields[] = {
	HX_("getPrefix",c8,62,0d,2b),
	HX_("getColor",ed,80,33,aa),
	HX_("__irisUsing_crowplexus_iris_ErrorSeverityTools",d5,69,da,0b),
	::String(null())
};

void ErrorSeverityTools_obj::__register()
{
	ErrorSeverityTools_obj _hx_dummy;
	ErrorSeverityTools_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("crowplexus.iris.ErrorSeverityTools",c7,99,09,b9);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &ErrorSeverityTools_obj::__GetStatic;
	__mClass->mSetStaticField = &ErrorSeverityTools_obj::__SetStatic;
	__mClass->mMarkFunc = ErrorSeverityTools_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(ErrorSeverityTools_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< ErrorSeverityTools_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ErrorSeverityTools_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ErrorSeverityTools_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ErrorSeverityTools_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void ErrorSeverityTools_obj::__boot()
{
{
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(0)
            		 ::haxe::ds::StringMap _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_b1451a6f3b9d1ee4_128_boot)
HXDLIN( 128)			 ::haxe::ds::StringMap _g =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN( 128)			{
HXDLIN( 128)				 ::ValueType value = null();
HXDLIN( 128)				_g->set(HX_("getPrefix",c8,62,0d,2b),value);
            			}
HXDLIN( 128)			{
HXDLIN( 128)				 ::ValueType value1 = null();
HXDLIN( 128)				_g->set(HX_("getColor",ed,80,33,aa),value1);
            			}
HXDLIN( 128)			return _g;
            		}
            		HX_END_LOCAL_FUNC0(return)

            	HX_STACKFRAME(&_hx_pos_b1451a6f3b9d1ee4_128_boot)
HXDLIN( 128)		_hx___irisUsing_crowplexus_iris_ErrorSeverityTools = ( ( ::haxe::ds::StringMap)( ::Dynamic(new _hx_Closure_0())()) );
            	}
}

} // end namespace crowplexus
} // end namespace iris

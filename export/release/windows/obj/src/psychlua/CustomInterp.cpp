// Generated by Haxe 4.3.4
#include <hxcpp.h>

#ifndef INCLUDED_Reflect
#include <Reflect.h>
#endif
#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_Error
#include <crowplexus/hscript/Error.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_ErrorDef
#include <crowplexus/hscript/ErrorDef.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_Expr
#include <crowplexus/hscript/Expr.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_Interp
#include <crowplexus/hscript/Interp.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_LocalVar
#include <crowplexus/hscript/LocalVar.h>
#endif
#ifndef INCLUDED_crowplexus_iris_Iris
#include <crowplexus/iris/Iris.h>
#endif
#ifndef INCLUDED_crowplexus_iris_utils_UsingEntry
#include <crowplexus/iris/utils/UsingEntry.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_psychlua_CustomInterp
#include <psychlua/CustomInterp.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_e09bdaa7531abaf1_528_new,"psychlua.CustomInterp","new",0x2803a028,"psychlua.CustomInterp.new","psychlua/HScript.hx",528,0x619ca0dd)
HX_LOCAL_STACK_FRAME(_hx_pos_e09bdaa7531abaf1_533_set_parentInstance,"psychlua.CustomInterp","set_parentInstance",0xfe135f54,"psychlua.CustomInterp.set_parentInstance","psychlua/HScript.hx",533,0x619ca0dd)
HX_LOCAL_STACK_FRAME(_hx_pos_e09bdaa7531abaf1_549_fcall,"psychlua.CustomInterp","fcall",0x4bb295cc,"psychlua.CustomInterp.fcall","psychlua/HScript.hx",549,0x619ca0dd)
HX_LOCAL_STACK_FRAME(_hx_pos_e09bdaa7531abaf1_566_resolve,"psychlua.CustomInterp","resolve",0xacc766b4,"psychlua.CustomInterp.resolve","psychlua/HScript.hx",566,0x619ca0dd)
namespace psychlua{

void CustomInterp_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_e09bdaa7531abaf1_528_new)
HXLINE( 530)		this->parentInstance = ::cpp::VirtualArray_obj::__new(0);
HXLINE( 546)		super::__construct();
            	}

Dynamic CustomInterp_obj::__CreateEmpty() { return new CustomInterp_obj; }

void *CustomInterp_obj::_hx_vtable = 0;

Dynamic CustomInterp_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< CustomInterp_obj > _hx_result = new CustomInterp_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool CustomInterp_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x177bd5fb) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x177bd5fb;
	} else {
		return inClassId==(int)0x2013e222;
	}
}

 ::Dynamic CustomInterp_obj::set_parentInstance( ::Dynamic inst){
            	HX_STACKFRAME(&_hx_pos_e09bdaa7531abaf1_533_set_parentInstance)
HXLINE( 534)		this->parentInstance = inst;
HXLINE( 535)		if (::hx::IsNull( this->parentInstance )) {
HXLINE( 537)			this->_instanceFields = ::Array_obj< ::String >::__new(0);
HXLINE( 538)			return inst;
            		}
HXLINE( 540)		this->_instanceFields = ::Type_obj::getInstanceFields(::Type_obj::getClass(inst));
HXLINE( 541)		return inst;
            	}


HX_DEFINE_DYNAMIC_FUNC1(CustomInterp_obj,set_parentInstance,return )

 ::Dynamic CustomInterp_obj::fcall( ::Dynamic o,::String funcToRun,::cpp::VirtualArray args){
            	HX_STACKFRAME(&_hx_pos_e09bdaa7531abaf1_549_fcall)
HXLINE( 550)		{
HXLINE( 550)			int _g = 0;
HXDLIN( 550)			::Array< ::Dynamic> _g1 = this->usings;
HXDLIN( 550)			while((_g < _g1->length)){
HXLINE( 550)				 ::crowplexus::iris::utils::UsingEntry _using = _g1->__get(_g).StaticCast<  ::crowplexus::iris::utils::UsingEntry >();
HXDLIN( 550)				_g = (_g + 1);
HXLINE( 551)				 ::Dynamic v = _using->call(o,funcToRun,args);
HXLINE( 552)				if (::hx::IsNotNull( v )) {
HXLINE( 553)					return v;
            				}
            			}
            		}
HXLINE( 556)		 ::Dynamic f = this->get(o,funcToRun);
HXLINE( 558)		if (::hx::IsNull( f )) {
HXLINE( 559)			 ::Dynamic _hx_tmp = ::crowplexus::iris::Iris_obj::error;
HXDLIN( 559)			_hx_tmp((HX_("Tried to call null function ",82,b8,6f,2c) + funcToRun),this->posInfos());
HXLINE( 560)			return null();
            		}
HXLINE( 563)		return ::Reflect_obj::callMethod(o,f,args);
            	}


 ::Dynamic CustomInterp_obj::resolve(::String id){
            	HX_GC_STACKFRAME(&_hx_pos_e09bdaa7531abaf1_566_resolve)
HXLINE( 567)		if (this->locals->exists(id)) {
HXLINE( 568)			 ::crowplexus::hscript::LocalVar l = ( ( ::crowplexus::hscript::LocalVar)(this->locals->get(id)) );
HXLINE( 569)			return l->r;
            		}
HXLINE( 572)		if (this->variables->exists(id)) {
HXLINE( 573)			 ::Dynamic v = this->variables->get(id);
HXLINE( 574)			return v;
            		}
HXLINE( 577)		if (this->imports->exists(id)) {
HXLINE( 578)			 ::Dynamic v1 = this->imports->get(id);
HXLINE( 579)			return v1;
            		}
HXLINE( 582)		bool _hx_tmp;
HXDLIN( 582)		if (::hx::IsNotNull( this->parentInstance )) {
HXLINE( 582)			_hx_tmp = this->_instanceFields->contains(id);
            		}
            		else {
HXLINE( 582)			_hx_tmp = false;
            		}
HXDLIN( 582)		if (_hx_tmp) {
HXLINE( 583)			 ::Dynamic v2 = ::Reflect_obj::getProperty(this->parentInstance,id);
HXLINE( 584)			return v2;
            		}
HXLINE( 587)		 ::crowplexus::hscript::Error e =  ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::EUnknownVariable(id),this->curExpr->pmin,this->curExpr->pmax,this->curExpr->origin,this->curExpr->line);
HXDLIN( 587)		HX_STACK_DO_THROW(e);
HXDLIN( 587)		return null();
            	}



::hx::ObjectPtr< CustomInterp_obj > CustomInterp_obj::__new() {
	::hx::ObjectPtr< CustomInterp_obj > __this = new CustomInterp_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< CustomInterp_obj > CustomInterp_obj::__alloc(::hx::Ctx *_hx_ctx) {
	CustomInterp_obj *__this = (CustomInterp_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(CustomInterp_obj), true, "psychlua.CustomInterp"));
	*(void **)__this = CustomInterp_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

CustomInterp_obj::CustomInterp_obj()
{
}

void CustomInterp_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(CustomInterp);
	HX_MARK_MEMBER_NAME(parentInstance,"parentInstance");
	HX_MARK_MEMBER_NAME(_instanceFields,"_instanceFields");
	 ::crowplexus::hscript::Interp_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void CustomInterp_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(parentInstance,"parentInstance");
	HX_VISIT_MEMBER_NAME(_instanceFields,"_instanceFields");
	 ::crowplexus::hscript::Interp_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val CustomInterp_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"fcall") ) { return ::hx::Val( fcall_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"resolve") ) { return ::hx::Val( resolve_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"parentInstance") ) { return ::hx::Val( parentInstance ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"_instanceFields") ) { return ::hx::Val( _instanceFields ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"set_parentInstance") ) { return ::hx::Val( set_parentInstance_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val CustomInterp_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 14:
		if (HX_FIELD_EQ(inName,"parentInstance") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_parentInstance(inValue.Cast<  ::Dynamic >()) );parentInstance=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"_instanceFields") ) { _instanceFields=inValue.Cast< ::Array< ::String > >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void CustomInterp_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("parentInstance",df,1a,b9,21));
	outFields->push(HX_("_instanceFields",8d,c8,83,c4));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo CustomInterp_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(CustomInterp_obj,parentInstance),HX_("parentInstance",df,1a,b9,21)},
	{::hx::fsObject /* ::Array< ::String > */ ,(int)offsetof(CustomInterp_obj,_instanceFields),HX_("_instanceFields",8d,c8,83,c4)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *CustomInterp_obj_sStaticStorageInfo = 0;
#endif

static ::String CustomInterp_obj_sMemberFields[] = {
	HX_("parentInstance",df,1a,b9,21),
	HX_("_instanceFields",8d,c8,83,c4),
	HX_("set_parentInstance",1c,2e,02,9a),
	HX_("fcall",04,44,99,fc),
	HX_("resolve",ec,12,60,67),
	::String(null()) };

::hx::Class CustomInterp_obj::__mClass;

void CustomInterp_obj::__register()
{
	CustomInterp_obj _hx_dummy;
	CustomInterp_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("psychlua.CustomInterp",36,ac,de,3e);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(CustomInterp_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< CustomInterp_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = CustomInterp_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = CustomInterp_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace psychlua

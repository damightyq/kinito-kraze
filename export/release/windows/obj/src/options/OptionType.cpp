// Generated by Haxe 4.3.4
#include <hxcpp.h>

#ifndef INCLUDED_options_OptionType
#include <options/OptionType.h>
#endif
namespace options{

::options::OptionType OptionType_obj::BOOL;

::options::OptionType OptionType_obj::FLOAT;

::options::OptionType OptionType_obj::INT;

::options::OptionType OptionType_obj::KEYBIND;

::options::OptionType OptionType_obj::PERCENT;

::options::OptionType OptionType_obj::STRING;

bool OptionType_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("BOOL",2a,4c,dc,2b)) { outValue = OptionType_obj::BOOL; return true; }
	if (inName==HX_("FLOAT",7c,fd,84,80)) { outValue = OptionType_obj::FLOAT; return true; }
	if (inName==HX_("INT",cf,a8,37,00)) { outValue = OptionType_obj::INT; return true; }
	if (inName==HX_("KEYBIND",bc,0e,eb,2f)) { outValue = OptionType_obj::KEYBIND; return true; }
	if (inName==HX_("PERCENT",a5,7e,ae,f8)) { outValue = OptionType_obj::PERCENT; return true; }
	if (inName==HX_("STRING",d1,d4,b2,c3)) { outValue = OptionType_obj::STRING; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(OptionType_obj)

int OptionType_obj::__FindIndex(::String inName)
{
	if (inName==HX_("BOOL",2a,4c,dc,2b)) return 0;
	if (inName==HX_("FLOAT",7c,fd,84,80)) return 2;
	if (inName==HX_("INT",cf,a8,37,00)) return 1;
	if (inName==HX_("KEYBIND",bc,0e,eb,2f)) return 5;
	if (inName==HX_("PERCENT",a5,7e,ae,f8)) return 3;
	if (inName==HX_("STRING",d1,d4,b2,c3)) return 4;
	return super::__FindIndex(inName);
}

int OptionType_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("BOOL",2a,4c,dc,2b)) return 0;
	if (inName==HX_("FLOAT",7c,fd,84,80)) return 0;
	if (inName==HX_("INT",cf,a8,37,00)) return 0;
	if (inName==HX_("KEYBIND",bc,0e,eb,2f)) return 0;
	if (inName==HX_("PERCENT",a5,7e,ae,f8)) return 0;
	if (inName==HX_("STRING",d1,d4,b2,c3)) return 0;
	return super::__FindArgCount(inName);
}

::hx::Val OptionType_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("BOOL",2a,4c,dc,2b)) return BOOL;
	if (inName==HX_("FLOAT",7c,fd,84,80)) return FLOAT;
	if (inName==HX_("INT",cf,a8,37,00)) return INT;
	if (inName==HX_("KEYBIND",bc,0e,eb,2f)) return KEYBIND;
	if (inName==HX_("PERCENT",a5,7e,ae,f8)) return PERCENT;
	if (inName==HX_("STRING",d1,d4,b2,c3)) return STRING;
	return super::__Field(inName,inCallProp);
}

static ::String OptionType_obj_sStaticFields[] = {
	HX_("BOOL",2a,4c,dc,2b),
	HX_("INT",cf,a8,37,00),
	HX_("FLOAT",7c,fd,84,80),
	HX_("PERCENT",a5,7e,ae,f8),
	HX_("STRING",d1,d4,b2,c3),
	HX_("KEYBIND",bc,0e,eb,2f),
	::String(null())
};

::hx::Class OptionType_obj::__mClass;

Dynamic __Create_OptionType_obj() { return new OptionType_obj; }

void OptionType_obj::__register()
{

::hx::Static(__mClass) = ::hx::_hx_RegisterClass(HX_("options.OptionType",ff,87,2f,3d), ::hx::TCanCast< OptionType_obj >,OptionType_obj_sStaticFields,0,
	&__Create_OptionType_obj, &__Create,
	&super::__SGetClass(), &CreateOptionType_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &OptionType_obj::__GetStatic;
}

void OptionType_obj::__boot()
{
BOOL = ::hx::CreateConstEnum< OptionType_obj >(HX_("BOOL",2a,4c,dc,2b),0);
FLOAT = ::hx::CreateConstEnum< OptionType_obj >(HX_("FLOAT",7c,fd,84,80),2);
INT = ::hx::CreateConstEnum< OptionType_obj >(HX_("INT",cf,a8,37,00),1);
KEYBIND = ::hx::CreateConstEnum< OptionType_obj >(HX_("KEYBIND",bc,0e,eb,2f),5);
PERCENT = ::hx::CreateConstEnum< OptionType_obj >(HX_("PERCENT",a5,7e,ae,f8),3);
STRING = ::hx::CreateConstEnum< OptionType_obj >(HX_("STRING",d1,d4,b2,c3),4);
}


} // end namespace options

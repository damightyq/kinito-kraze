// Generated by Haxe 4.3.4
#include <hxcpp.h>

#ifndef INCLUDED_flxanimate_effects_FlxColorEffect
#include <flxanimate/effects/FlxColorEffect.h>
#endif
#ifndef INCLUDED_openfl_geom_ColorTransform
#include <openfl/geom/ColorTransform.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_05be9081e4a44dad_13_new,"flxanimate.effects.FlxColorEffect","new",0x4aca52df,"flxanimate.effects.FlxColorEffect.new","flxanimate/effects/FlxColorEffect.hx",13,0x519a422f)
HX_LOCAL_STACK_FRAME(_hx_pos_05be9081e4a44dad_40_process,"flxanimate.effects.FlxColorEffect","process",0xe60dd06e,"flxanimate.effects.FlxColorEffect.process","flxanimate/effects/FlxColorEffect.hx",40,0x519a422f)
HX_LOCAL_STACK_FRAME(_hx_pos_05be9081e4a44dad_47___create,"flxanimate.effects.FlxColorEffect","__create",0x5a43e33d,"flxanimate.effects.FlxColorEffect.__create","flxanimate/effects/FlxColorEffect.hx",47,0x519a422f)
namespace flxanimate{
namespace effects{

void FlxColorEffect_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_05be9081e4a44dad_13_new)
HXLINE(  25)		this->c_Transform = null();
HXLINE(  19)		this->renderDirty = true;
HXLINE(  32)		this->c_Transform =  ::openfl::geom::ColorTransform_obj::__alloc( HX_CTX ,null(),null(),null(),null(),null(),null(),null(),null());
HXLINE(  34)		this->process();
            	}

Dynamic FlxColorEffect_obj::__CreateEmpty() { return new FlxColorEffect_obj; }

void *FlxColorEffect_obj::_hx_vtable = 0;

Dynamic FlxColorEffect_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< FlxColorEffect_obj > _hx_result = new FlxColorEffect_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool FlxColorEffect_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x4fae23f1;
}

void FlxColorEffect_obj::process(){
            	HX_STACKFRAME(&_hx_pos_05be9081e4a44dad_40_process)
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxColorEffect_obj,process,(void))

 ::openfl::geom::ColorTransform FlxColorEffect_obj::_hx___create(){
            	HX_STACKFRAME(&_hx_pos_05be9081e4a44dad_47___create)
HXLINE(  48)		if (this->renderDirty) {
HXLINE(  49)			this->process();
HXLINE(  50)			this->renderDirty = false;
            		}
HXLINE(  53)		return this->c_Transform;
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxColorEffect_obj,_hx___create,return )


::hx::ObjectPtr< FlxColorEffect_obj > FlxColorEffect_obj::__new() {
	::hx::ObjectPtr< FlxColorEffect_obj > __this = new FlxColorEffect_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< FlxColorEffect_obj > FlxColorEffect_obj::__alloc(::hx::Ctx *_hx_ctx) {
	FlxColorEffect_obj *__this = (FlxColorEffect_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(FlxColorEffect_obj), true, "flxanimate.effects.FlxColorEffect"));
	*(void **)__this = FlxColorEffect_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

FlxColorEffect_obj::FlxColorEffect_obj()
{
}

void FlxColorEffect_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(FlxColorEffect);
	HX_MARK_MEMBER_NAME(renderDirty,"renderDirty");
	HX_MARK_MEMBER_NAME(c_Transform,"c_Transform");
	HX_MARK_END_CLASS();
}

void FlxColorEffect_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(renderDirty,"renderDirty");
	HX_VISIT_MEMBER_NAME(c_Transform,"c_Transform");
}

::hx::Val FlxColorEffect_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"process") ) { return ::hx::Val( process_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"__create") ) { return ::hx::Val( _hx___create_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"renderDirty") ) { return ::hx::Val( renderDirty ); }
		if (HX_FIELD_EQ(inName,"c_Transform") ) { return ::hx::Val( c_Transform ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val FlxColorEffect_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 11:
		if (HX_FIELD_EQ(inName,"renderDirty") ) { renderDirty=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"c_Transform") ) { c_Transform=inValue.Cast<  ::openfl::geom::ColorTransform >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void FlxColorEffect_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("renderDirty",dc,7c,81,a5));
	outFields->push(HX_("c_Transform",30,03,0c,19));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo FlxColorEffect_obj_sMemberStorageInfo[] = {
	{::hx::fsBool,(int)offsetof(FlxColorEffect_obj,renderDirty),HX_("renderDirty",dc,7c,81,a5)},
	{::hx::fsObject /*  ::openfl::geom::ColorTransform */ ,(int)offsetof(FlxColorEffect_obj,c_Transform),HX_("c_Transform",30,03,0c,19)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *FlxColorEffect_obj_sStaticStorageInfo = 0;
#endif

static ::String FlxColorEffect_obj_sMemberFields[] = {
	HX_("renderDirty",dc,7c,81,a5),
	HX_("c_Transform",30,03,0c,19),
	HX_("process",6f,a2,4a,f1),
	HX_("__create",1c,d2,3e,24),
	::String(null()) };

::hx::Class FlxColorEffect_obj::__mClass;

void FlxColorEffect_obj::__register()
{
	FlxColorEffect_obj _hx_dummy;
	FlxColorEffect_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("flxanimate.effects.FlxColorEffect",6d,f7,99,2f);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(FlxColorEffect_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< FlxColorEffect_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FlxColorEffect_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FlxColorEffect_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace flxanimate
} // end namespace effects

// Generated by Haxe 4.3.4
#include <hxcpp.h>

#ifndef INCLUDED_flxanimate_effects_FlxAdvanced
#include <flxanimate/effects/FlxAdvanced.h>
#endif
#ifndef INCLUDED_flxanimate_effects_FlxColorEffect
#include <flxanimate/effects/FlxColorEffect.h>
#endif
#ifndef INCLUDED_openfl_geom_ColorTransform
#include <openfl/geom/ColorTransform.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_47b016349e73030e_11_new,"flxanimate.effects.FlxAdvanced","new",0xad052e5b,"flxanimate.effects.FlxAdvanced.new","flxanimate/effects/FlxAdvanced.hx",11,0xe0007df7)
HX_LOCAL_STACK_FRAME(_hx_pos_47b016349e73030e_18_get_colorTransform,"flxanimate.effects.FlxAdvanced","get_colorTransform",0x56714cb7,"flxanimate.effects.FlxAdvanced.get_colorTransform","flxanimate/effects/FlxAdvanced.hx",18,0xe0007df7)
HX_LOCAL_STACK_FRAME(_hx_pos_47b016349e73030e_21_set_colorTransform,"flxanimate.effects.FlxAdvanced","set_colorTransform",0x33207f2b,"flxanimate.effects.FlxAdvanced.set_colorTransform","flxanimate/effects/FlxAdvanced.hx",21,0xe0007df7)
namespace flxanimate{
namespace effects{

void FlxAdvanced_obj::__construct( ::openfl::geom::ColorTransform colorTransform){
            	HX_STACKFRAME(&_hx_pos_47b016349e73030e_11_new)
HXLINE(  12)		super::__construct();
HXLINE(  13)		this->set_colorTransform(colorTransform);
            	}

Dynamic FlxAdvanced_obj::__CreateEmpty() { return new FlxAdvanced_obj; }

void *FlxAdvanced_obj::_hx_vtable = 0;

Dynamic FlxAdvanced_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< FlxAdvanced_obj > _hx_result = new FlxAdvanced_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool FlxAdvanced_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x11d2ef49) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x11d2ef49;
	} else {
		return inClassId==(int)0x4fae23f1;
	}
}

 ::openfl::geom::ColorTransform FlxAdvanced_obj::get_colorTransform(){
            	HX_STACKFRAME(&_hx_pos_47b016349e73030e_18_get_colorTransform)
HXDLIN(  18)		return this->c_Transform;
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxAdvanced_obj,get_colorTransform,return )

 ::openfl::geom::ColorTransform FlxAdvanced_obj::set_colorTransform( ::openfl::geom::ColorTransform value){
            	HX_STACKFRAME(&_hx_pos_47b016349e73030e_21_set_colorTransform)
HXLINE(  22)		this->c_Transform->_hx___copyFrom(value);
HXLINE(  32)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxAdvanced_obj,set_colorTransform,return )


::hx::ObjectPtr< FlxAdvanced_obj > FlxAdvanced_obj::__new( ::openfl::geom::ColorTransform colorTransform) {
	::hx::ObjectPtr< FlxAdvanced_obj > __this = new FlxAdvanced_obj();
	__this->__construct(colorTransform);
	return __this;
}

::hx::ObjectPtr< FlxAdvanced_obj > FlxAdvanced_obj::__alloc(::hx::Ctx *_hx_ctx, ::openfl::geom::ColorTransform colorTransform) {
	FlxAdvanced_obj *__this = (FlxAdvanced_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(FlxAdvanced_obj), true, "flxanimate.effects.FlxAdvanced"));
	*(void **)__this = FlxAdvanced_obj::_hx_vtable;
	__this->__construct(colorTransform);
	return __this;
}

FlxAdvanced_obj::FlxAdvanced_obj()
{
}

::hx::Val FlxAdvanced_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 14:
		if (HX_FIELD_EQ(inName,"colorTransform") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_colorTransform() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"get_colorTransform") ) { return ::hx::Val( get_colorTransform_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_colorTransform") ) { return ::hx::Val( set_colorTransform_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val FlxAdvanced_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 14:
		if (HX_FIELD_EQ(inName,"colorTransform") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_colorTransform(inValue.Cast<  ::openfl::geom::ColorTransform >()) ); }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void FlxAdvanced_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("colorTransform",89,d7,3f,ad));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *FlxAdvanced_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *FlxAdvanced_obj_sStaticStorageInfo = 0;
#endif

static ::String FlxAdvanced_obj_sMemberFields[] = {
	HX_("get_colorTransform",52,b8,d9,48),
	HX_("set_colorTransform",c6,ea,88,25),
	::String(null()) };

::hx::Class FlxAdvanced_obj::__mClass;

void FlxAdvanced_obj::__register()
{
	FlxAdvanced_obj _hx_dummy;
	FlxAdvanced_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("flxanimate.effects.FlxAdvanced",e9,64,ea,96);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(FlxAdvanced_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< FlxAdvanced_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FlxAdvanced_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FlxAdvanced_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace flxanimate
} // end namespace effects

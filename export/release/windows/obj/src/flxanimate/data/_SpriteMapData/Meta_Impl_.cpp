// Generated by Haxe 4.3.4
#include <hxcpp.h>

#ifndef INCLUDED_flxanimate_data_AnimationData
#include <flxanimate/data/AnimationData.h>
#endif
#ifndef INCLUDED_flxanimate_data__SpriteMapData_Meta_Impl_
#include <flxanimate/data/_SpriteMapData/Meta_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_6f20228922dc61d3_37_get_resolution,"flxanimate.data._SpriteMapData.Meta_Impl_","get_resolution",0x1b520317,"flxanimate.data._SpriteMapData.Meta_Impl_.get_resolution","flxanimate/data/SpriteMapData.hx",37,0xcae02402)
static const ::String _hx_array_data_be336c8c_1[] = {
	HX_("resolution",2c,35,49,6d),HX_("scale",8a,ce,ce,78),
};
namespace flxanimate{
namespace data{
namespace _SpriteMapData{

void Meta_Impl__obj::__construct() { }

Dynamic Meta_Impl__obj::__CreateEmpty() { return new Meta_Impl__obj; }

void *Meta_Impl__obj::_hx_vtable = 0;

Dynamic Meta_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Meta_Impl__obj > _hx_result = new Meta_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Meta_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x59676420;
}

::String Meta_Impl__obj::get_resolution( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_6f20228922dc61d3_37_get_resolution)
HXDLIN(  37)		return ( (::String)(::flxanimate::data::AnimationData_obj::setFieldBool(this1,::Array_obj< ::String >::fromData( _hx_array_data_be336c8c_1,2),null())) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Meta_Impl__obj,get_resolution,return )


Meta_Impl__obj::Meta_Impl__obj()
{
}

bool Meta_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 14:
		if (HX_FIELD_EQ(inName,"get_resolution") ) { outValue = get_resolution_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Meta_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *Meta_Impl__obj_sStaticStorageInfo = 0;
#endif

::hx::Class Meta_Impl__obj::__mClass;

static ::String Meta_Impl__obj_sStaticFields[] = {
	HX_("get_resolution",75,bd,3e,e3),
	::String(null())
};

void Meta_Impl__obj::__register()
{
	Meta_Impl__obj _hx_dummy;
	Meta_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("flxanimate.data._SpriteMapData.Meta_Impl_",8c,6c,33,be);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Meta_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Meta_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Meta_Impl__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Meta_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Meta_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace flxanimate
} // end namespace data
} // end namespace _SpriteMapData

// Generated by Haxe 4.3.4
#include <hxcpp.h>

#ifndef INCLUDED_flxanimate_data_AnimationData
#include <flxanimate/data/AnimationData.h>
#endif
#ifndef INCLUDED_flxanimate_data__AnimationData_Timeline_Impl_
#include <flxanimate/data/_AnimationData/Timeline_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_e976ef2f6d79e063_364_get_L,"flxanimate.data._AnimationData.Timeline_Impl_","get_L",0x5de551f0,"flxanimate.data._AnimationData.Timeline_Impl_.get_L","flxanimate/data/AnimationData.hx",364,0xa9372435)
static const ::String _hx_array_data_3e48457b_1[] = {
	HX_("L",4c,00,00,00),HX_("LAYERS",82,c1,33,0b),
};
HX_LOCAL_STACK_FRAME(_hx_pos_e976ef2f6d79e063_368_set_L,"flxanimate.data._AnimationData.Timeline_Impl_","set_L",0x46b447fc,"flxanimate.data._AnimationData.Timeline_Impl_.set_L","flxanimate/data/AnimationData.hx",368,0xa9372435)
static const ::String _hx_array_data_3e48457b_3[] = {
	HX_("L",4c,00,00,00),HX_("LAYERS",82,c1,33,0b),
};
namespace flxanimate{
namespace data{
namespace _AnimationData{

void Timeline_Impl__obj::__construct() { }

Dynamic Timeline_Impl__obj::__CreateEmpty() { return new Timeline_Impl__obj; }

void *Timeline_Impl__obj::_hx_vtable = 0;

Dynamic Timeline_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Timeline_Impl__obj > _hx_result = new Timeline_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Timeline_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x35323249;
}

::Array< ::Dynamic> Timeline_Impl__obj::get_L( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_e976ef2f6d79e063_364_get_L)
HXDLIN( 364)		return ( (::Array< ::Dynamic>)(::flxanimate::data::AnimationData_obj::setFieldBool(this1,::Array_obj< ::String >::fromData( _hx_array_data_3e48457b_1,2),null())) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Timeline_Impl__obj,get_L,return )

::Array< ::Dynamic> Timeline_Impl__obj::set_L( ::Dynamic this1,::Array< ::Dynamic> value){
            	HX_STACKFRAME(&_hx_pos_e976ef2f6d79e063_368_set_L)
HXDLIN( 368)		return ( (::Array< ::Dynamic>)(::flxanimate::data::AnimationData_obj::setFieldBool(this1,::Array_obj< ::String >::fromData( _hx_array_data_3e48457b_3,2),value)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Timeline_Impl__obj,set_L,return )


Timeline_Impl__obj::Timeline_Impl__obj()
{
}

bool Timeline_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"get_L") ) { outValue = get_L_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_L") ) { outValue = set_L_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Timeline_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *Timeline_Impl__obj_sStaticStorageInfo = 0;
#endif

::hx::Class Timeline_Impl__obj::__mClass;

static ::String Timeline_Impl__obj_sStaticFields[] = {
	HX_("get_L",23,a5,60,91),
	HX_("set_L",2f,9b,2f,7a),
	::String(null())
};

void Timeline_Impl__obj::__register()
{
	Timeline_Impl__obj _hx_dummy;
	Timeline_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("flxanimate.data._AnimationData.Timeline_Impl_",7b,45,48,3e);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Timeline_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Timeline_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Timeline_Impl__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Timeline_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Timeline_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace flxanimate
} // end namespace data
} // end namespace _AnimationData

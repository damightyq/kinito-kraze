// Generated by Haxe 4.3.4
#include <hxcpp.h>

#ifndef INCLUDED_flxanimate_data_AnimationData
#include <flxanimate/data/AnimationData.h>
#endif
#ifndef INCLUDED_flxanimate_data__AnimationData_StageInstance_Impl_
#include <flxanimate/data/_AnimationData/StageInstance_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_98410f9d2044d02f_326_get_SI,"flxanimate.data._AnimationData.StageInstance_Impl_","get_SI",0x5580d034,"flxanimate.data._AnimationData.StageInstance_Impl_.get_SI","flxanimate/data/AnimationData.hx",326,0xa9372435)
static const ::String _hx_array_data_dcc73779_1[] = {
	HX_("SI",96,48,00,00),HX_("SYMBOL_Instance",bc,4c,fe,3f),
};
namespace flxanimate{
namespace data{
namespace _AnimationData{

void StageInstance_Impl__obj::__construct() { }

Dynamic StageInstance_Impl__obj::__CreateEmpty() { return new StageInstance_Impl__obj; }

void *StageInstance_Impl__obj::_hx_vtable = 0;

Dynamic StageInstance_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< StageInstance_Impl__obj > _hx_result = new StageInstance_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool StageInstance_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x771d8c77;
}

 ::Dynamic StageInstance_Impl__obj::get_SI( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_98410f9d2044d02f_326_get_SI)
HXDLIN( 326)		return ::flxanimate::data::AnimationData_obj::setFieldBool(this1,::Array_obj< ::String >::fromData( _hx_array_data_dcc73779_1,2),null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(StageInstance_Impl__obj,get_SI,return )


StageInstance_Impl__obj::StageInstance_Impl__obj()
{
}

bool StageInstance_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"get_SI") ) { outValue = get_SI_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *StageInstance_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *StageInstance_Impl__obj_sStaticStorageInfo = 0;
#endif

::hx::Class StageInstance_Impl__obj::__mClass;

static ::String StageInstance_Impl__obj_sStaticFields[] = {
	HX_("get_SI",df,df,2f,a3),
	::String(null())
};

void StageInstance_Impl__obj::__register()
{
	StageInstance_Impl__obj _hx_dummy;
	StageInstance_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("flxanimate.data._AnimationData.StageInstance_Impl_",79,37,c7,dc);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &StageInstance_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(StageInstance_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< StageInstance_Impl__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = StageInstance_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = StageInstance_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace flxanimate
} // end namespace data
} // end namespace _AnimationData

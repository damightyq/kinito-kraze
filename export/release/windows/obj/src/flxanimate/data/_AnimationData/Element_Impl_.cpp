// Generated by Haxe 4.3.4
#include <hxcpp.h>

#ifndef INCLUDED_flxanimate_data_AnimationData
#include <flxanimate/data/AnimationData.h>
#endif
#ifndef INCLUDED_flxanimate_data__AnimationData_Element_Impl_
#include <flxanimate/data/_AnimationData/Element_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_6e9e1b6e8618b267_505_get_ASI,"flxanimate.data._AnimationData.Element_Impl_","get_ASI",0xe03b0542,"flxanimate.data._AnimationData.Element_Impl_.get_ASI","flxanimate/data/AnimationData.hx",505,0xa9372435)
static const ::String _hx_array_data_63a34e02_1[] = {
	HX_("ASI",17,9b,31,00),HX_("ATLAS_SPRITE_instance",fb,f3,3a,ba),
};
namespace flxanimate{
namespace data{
namespace _AnimationData{

void Element_Impl__obj::__construct() { }

Dynamic Element_Impl__obj::__CreateEmpty() { return new Element_Impl__obj; }

void *Element_Impl__obj::_hx_vtable = 0;

Dynamic Element_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Element_Impl__obj > _hx_result = new Element_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Element_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x5ddb74f4;
}

 ::Dynamic Element_Impl__obj::get_ASI( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_6e9e1b6e8618b267_505_get_ASI)
HXDLIN( 505)		return ::flxanimate::data::AnimationData_obj::setFieldBool(this1,::Array_obj< ::String >::fromData( _hx_array_data_63a34e02_1,2),null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Element_Impl__obj,get_ASI,return )


Element_Impl__obj::Element_Impl__obj()
{
}

bool Element_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"get_ASI") ) { outValue = get_ASI_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Element_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *Element_Impl__obj_sStaticStorageInfo = 0;
#endif

::hx::Class Element_Impl__obj::__mClass;

static ::String Element_Impl__obj_sStaticFields[] = {
	HX_("get_ASI",ae,63,a6,26),
	::String(null())
};

void Element_Impl__obj::__register()
{
	Element_Impl__obj _hx_dummy;
	Element_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("flxanimate.data._AnimationData.Element_Impl_",02,4e,a3,63);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Element_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Element_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Element_Impl__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Element_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Element_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace flxanimate
} // end namespace data
} // end namespace _AnimationData

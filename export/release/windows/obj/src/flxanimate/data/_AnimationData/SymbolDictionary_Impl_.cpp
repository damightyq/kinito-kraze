// Generated by Haxe 4.3.4
#include <hxcpp.h>

#ifndef INCLUDED_flxanimate_data_AnimationData
#include <flxanimate/data/AnimationData.h>
#endif
#ifndef INCLUDED_flxanimate_data__AnimationData_SymbolDictionary_Impl_
#include <flxanimate/data/_AnimationData/SymbolDictionary_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_f484bcf4ec86cc94_284_get_S,"flxanimate.data._AnimationData.SymbolDictionary_Impl_","get_S",0x2e959204,"flxanimate.data._AnimationData.SymbolDictionary_Impl_.get_S","flxanimate/data/AnimationData.hx",284,0xa9372435)
static const ::String _hx_array_data_2c2dcdc8_1[] = {
	HX_("S",53,00,00,00),HX_("Symbols",fb,e5,6c,e0),
};
namespace flxanimate{
namespace data{
namespace _AnimationData{

void SymbolDictionary_Impl__obj::__construct() { }

Dynamic SymbolDictionary_Impl__obj::__CreateEmpty() { return new SymbolDictionary_Impl__obj; }

void *SymbolDictionary_Impl__obj::_hx_vtable = 0;

Dynamic SymbolDictionary_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< SymbolDictionary_Impl__obj > _hx_result = new SymbolDictionary_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool SymbolDictionary_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x7a8e2e26;
}

::Array< ::Dynamic> SymbolDictionary_Impl__obj::get_S( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_f484bcf4ec86cc94_284_get_S)
HXDLIN( 284)		return ( (::Array< ::Dynamic>)(::flxanimate::data::AnimationData_obj::setFieldBool(this1,::Array_obj< ::String >::fromData( _hx_array_data_2c2dcdc8_1,2),null())) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(SymbolDictionary_Impl__obj,get_S,return )


SymbolDictionary_Impl__obj::SymbolDictionary_Impl__obj()
{
}

bool SymbolDictionary_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"get_S") ) { outValue = get_S_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *SymbolDictionary_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *SymbolDictionary_Impl__obj_sStaticStorageInfo = 0;
#endif

::hx::Class SymbolDictionary_Impl__obj::__mClass;

static ::String SymbolDictionary_Impl__obj_sStaticFields[] = {
	HX_("get_S",2a,a5,60,91),
	::String(null())
};

void SymbolDictionary_Impl__obj::__register()
{
	SymbolDictionary_Impl__obj _hx_dummy;
	SymbolDictionary_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("flxanimate.data._AnimationData.SymbolDictionary_Impl_",c8,cd,2d,2c);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &SymbolDictionary_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(SymbolDictionary_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< SymbolDictionary_Impl__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = SymbolDictionary_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = SymbolDictionary_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace flxanimate
} // end namespace data
} // end namespace _AnimationData

// Generated by Haxe 4.3.4
#include <hxcpp.h>

#ifndef INCLUDED_flxanimate_data_AnimationData
#include <flxanimate/data/AnimationData.h>
#endif
#ifndef INCLUDED_flxanimate_data__AnimationData_Filters_Impl_
#include <flxanimate/data/_AnimationData/Filters_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_b0f2455f0c8a2f5b_714_get_ACF,"flxanimate.data._AnimationData.Filters_Impl_","get_ACF",0x0a948a8e,"flxanimate.data._AnimationData.Filters_Impl_.get_ACF","flxanimate/data/AnimationData.hx",714,0xa9372435)
static const ::String _hx_array_data_67780a41_1[] = {
	HX_("ACF",24,8d,31,00),HX_("AdjustColorFilter",0c,f9,e5,fb),
};
HX_LOCAL_STACK_FRAME(_hx_pos_b0f2455f0c8a2f5b_718_get_GF,"flxanimate.data._AnimationData.Filters_Impl_","get_GF",0x91d75bf5,"flxanimate.data._AnimationData.Filters_Impl_.get_GF","flxanimate/data/AnimationData.hx",718,0xa9372435)
static const ::String _hx_array_data_67780a41_3[] = {
	HX_("GF",1f,3e,00,00),
};
namespace flxanimate{
namespace data{
namespace _AnimationData{

void Filters_Impl__obj::__construct() { }

Dynamic Filters_Impl__obj::__CreateEmpty() { return new Filters_Impl__obj; }

void *Filters_Impl__obj::_hx_vtable = 0;

Dynamic Filters_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Filters_Impl__obj > _hx_result = new Filters_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Filters_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x61b03133;
}

 ::Dynamic Filters_Impl__obj::get_ACF( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_b0f2455f0c8a2f5b_714_get_ACF)
HXDLIN( 714)		return ::flxanimate::data::AnimationData_obj::setFieldBool(this1,::Array_obj< ::String >::fromData( _hx_array_data_67780a41_1,2),null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Filters_Impl__obj,get_ACF,return )

 ::Dynamic Filters_Impl__obj::get_GF( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_b0f2455f0c8a2f5b_718_get_GF)
HXDLIN( 718)		return ::flxanimate::data::AnimationData_obj::setFieldBool(this1,::Array_obj< ::String >::fromData( _hx_array_data_67780a41_3,1),null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Filters_Impl__obj,get_GF,return )


Filters_Impl__obj::Filters_Impl__obj()
{
}

bool Filters_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"get_GF") ) { outValue = get_GF_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"get_ACF") ) { outValue = get_ACF_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Filters_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *Filters_Impl__obj_sStaticStorageInfo = 0;
#endif

::hx::Class Filters_Impl__obj::__mClass;

static ::String Filters_Impl__obj_sStaticFields[] = {
	HX_("get_ACF",bb,55,a6,26),
	HX_("get_GF",68,d5,2f,a3),
	::String(null())
};

void Filters_Impl__obj::__register()
{
	Filters_Impl__obj _hx_dummy;
	Filters_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("flxanimate.data._AnimationData.Filters_Impl_",41,0a,78,67);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Filters_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Filters_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Filters_Impl__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Filters_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Filters_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace flxanimate
} // end namespace data
} // end namespace _AnimationData

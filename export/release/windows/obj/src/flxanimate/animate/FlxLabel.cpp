// Generated by Haxe 4.3.4
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_flxanimate_animate_FlxLabel
#include <flxanimate/animate/FlxLabel.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_7c1e70a241741db4_14_new,"flxanimate.animate.FlxLabel","new",0x94ad2680,"flxanimate.animate.FlxLabel.new","flxanimate/animate/FlxLabel.hx",14,0xcb3f3b2e)
HX_LOCAL_STACK_FRAME(_hx_pos_7c1e70a241741db4_21_fireCallbacks,"flxanimate.animate.FlxLabel","fireCallbacks",0xfca41698,"flxanimate.animate.FlxLabel.fireCallbacks","flxanimate/animate/FlxLabel.hx",21,0xcb3f3b2e)
HX_LOCAL_STACK_FRAME(_hx_pos_7c1e70a241741db4_29_removeCallbacks,"flxanimate.animate.FlxLabel","removeCallbacks",0x7ff0944a,"flxanimate.animate.FlxLabel.removeCallbacks","flxanimate/animate/FlxLabel.hx",29,0xcb3f3b2e)
HX_LOCAL_STACK_FRAME(_hx_pos_7c1e70a241741db4_33_toString,"flxanimate.animate.FlxLabel","toString",0xbde9468c,"flxanimate.animate.FlxLabel.toString","flxanimate/animate/FlxLabel.hx",33,0xcb3f3b2e)
namespace flxanimate{
namespace animate{

void FlxLabel_obj::__construct(::String name,int frame){
            	HX_STACKFRAME(&_hx_pos_7c1e70a241741db4_14_new)
HXLINE(  15)		this->name = name;
HXLINE(  16)		this->frame = frame;
HXLINE(  17)		this->callbacks = ::Array_obj< ::Dynamic>::__new(0);
            	}

Dynamic FlxLabel_obj::__CreateEmpty() { return new FlxLabel_obj; }

void *FlxLabel_obj::_hx_vtable = 0;

Dynamic FlxLabel_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< FlxLabel_obj > _hx_result = new FlxLabel_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool FlxLabel_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x587b1c54;
}

void FlxLabel_obj::fireCallbacks(){
            	HX_STACKFRAME(&_hx_pos_7c1e70a241741db4_21_fireCallbacks)
HXDLIN(  21)		int _g = 0;
HXDLIN(  21)		::Array< ::Dynamic> _g1 = this->callbacks;
HXDLIN(  21)		while((_g < _g1->length)){
HXDLIN(  21)			 ::Dynamic callback = _g1->__get(_g);
HXDLIN(  21)			_g = (_g + 1);
HXLINE(  23)			callback();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxLabel_obj,fireCallbacks,(void))

void FlxLabel_obj::removeCallbacks(){
            	HX_STACKFRAME(&_hx_pos_7c1e70a241741db4_29_removeCallbacks)
HXDLIN(  29)		this->callbacks = ::Array_obj< ::Dynamic>::__new(0);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxLabel_obj,removeCallbacks,(void))

::String FlxLabel_obj::toString(){
            	HX_STACKFRAME(&_hx_pos_7c1e70a241741db4_33_toString)
HXDLIN(  33)		::String _hx_tmp = ((HX_("(frame: ",eb,a4,55,38) + this->frame) + HX_(" || callbacks: ",b4,5d,80,b9));
HXDLIN(  33)		return ((_hx_tmp + ::Std_obj::string(this->callbacks)) + HX_(")",29,00,00,00));
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxLabel_obj,toString,return )


::hx::ObjectPtr< FlxLabel_obj > FlxLabel_obj::__new(::String name,int frame) {
	::hx::ObjectPtr< FlxLabel_obj > __this = new FlxLabel_obj();
	__this->__construct(name,frame);
	return __this;
}

::hx::ObjectPtr< FlxLabel_obj > FlxLabel_obj::__alloc(::hx::Ctx *_hx_ctx,::String name,int frame) {
	FlxLabel_obj *__this = (FlxLabel_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(FlxLabel_obj), true, "flxanimate.animate.FlxLabel"));
	*(void **)__this = FlxLabel_obj::_hx_vtable;
	__this->__construct(name,frame);
	return __this;
}

FlxLabel_obj::FlxLabel_obj()
{
}

void FlxLabel_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(FlxLabel);
	HX_MARK_MEMBER_NAME(frame,"frame");
	HX_MARK_MEMBER_NAME(name,"name");
	HX_MARK_MEMBER_NAME(callbacks,"callbacks");
	HX_MARK_END_CLASS();
}

void FlxLabel_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(frame,"frame");
	HX_VISIT_MEMBER_NAME(name,"name");
	HX_VISIT_MEMBER_NAME(callbacks,"callbacks");
}

::hx::Val FlxLabel_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"name") ) { return ::hx::Val( name ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"frame") ) { return ::hx::Val( frame ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"toString") ) { return ::hx::Val( toString_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"callbacks") ) { return ::hx::Val( callbacks ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"fireCallbacks") ) { return ::hx::Val( fireCallbacks_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"removeCallbacks") ) { return ::hx::Val( removeCallbacks_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val FlxLabel_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"name") ) { name=inValue.Cast< ::String >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"frame") ) { frame=inValue.Cast< int >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"callbacks") ) { callbacks=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void FlxLabel_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("frame",2d,78,83,06));
	outFields->push(HX_("name",4b,72,ff,48));
	outFields->push(HX_("callbacks",0e,f3,bf,a6));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo FlxLabel_obj_sMemberStorageInfo[] = {
	{::hx::fsInt,(int)offsetof(FlxLabel_obj,frame),HX_("frame",2d,78,83,06)},
	{::hx::fsString,(int)offsetof(FlxLabel_obj,name),HX_("name",4b,72,ff,48)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(FlxLabel_obj,callbacks),HX_("callbacks",0e,f3,bf,a6)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *FlxLabel_obj_sStaticStorageInfo = 0;
#endif

static ::String FlxLabel_obj_sMemberFields[] = {
	HX_("frame",2d,78,83,06),
	HX_("name",4b,72,ff,48),
	HX_("callbacks",0e,f3,bf,a6),
	HX_("fireCallbacks",78,d8,35,4b),
	HX_("removeCallbacks",2a,8e,de,e7),
	HX_("toString",ac,d0,6e,38),
	::String(null()) };

::hx::Class FlxLabel_obj::__mClass;

void FlxLabel_obj::__register()
{
	FlxLabel_obj _hx_dummy;
	FlxLabel_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("flxanimate.animate.FlxLabel",8e,26,00,f9);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(FlxLabel_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< FlxLabel_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FlxLabel_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FlxLabel_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace flxanimate
} // end namespace animate

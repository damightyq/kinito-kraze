// Generated by Haxe 4.3.4
#include <hxcpp.h>

#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_sound_FlxSound
#include <flixel/sound/FlxSound.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_flxanimate_animate_ButtonEvent
#include <flxanimate/animate/ButtonEvent.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_b67213b30387cfdc_24_new,"flxanimate.animate.ButtonEvent","new",0x4adfc8ce,"flxanimate.animate.ButtonEvent.new","flxanimate/animate/ButtonEvent.hx",24,0x796432e4)
HX_LOCAL_STACK_FRAME(_hx_pos_b67213b30387cfdc_36_destroy,"flxanimate.animate.ButtonEvent","destroy",0xc681f468,"flxanimate.animate.ButtonEvent.destroy","flxanimate/animate/ButtonEvent.hx",36,0x796432e4)
HX_LOCAL_STACK_FRAME(_hx_pos_b67213b30387cfdc_48_fire,"flxanimate.animate.ButtonEvent","fire",0x33a93b88,"flxanimate.animate.ButtonEvent.fire","flxanimate/animate/ButtonEvent.hx",48,0x796432e4)
namespace flxanimate{
namespace animate{

void ButtonEvent_obj::__construct( ::Dynamic Callback, ::flixel::sound::FlxSound sound){
            	HX_STACKFRAME(&_hx_pos_b67213b30387cfdc_24_new)
HXLINE(  25)		this->callback = Callback;
HXLINE(  28)		this->sound = sound;
            	}

Dynamic ButtonEvent_obj::__CreateEmpty() { return new ButtonEvent_obj; }

void *ButtonEvent_obj::_hx_vtable = 0;

Dynamic ButtonEvent_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ButtonEvent_obj > _hx_result = new ButtonEvent_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool ButtonEvent_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x10a8569e;
}

void ButtonEvent_obj::destroy(){
            	HX_STACKFRAME(&_hx_pos_b67213b30387cfdc_36_destroy)
HXLINE(  37)		this->callback = null();
HXLINE(  40)		this->sound->destroy();
            	}


HX_DEFINE_DYNAMIC_FUNC0(ButtonEvent_obj,destroy,(void))

void ButtonEvent_obj::fire(){
            	HX_STACKFRAME(&_hx_pos_b67213b30387cfdc_48_fire)
HXLINE(  49)		if (::hx::IsNotNull( this->callback )) {
HXLINE(  50)			this->callback();
            		}
HXLINE(  53)		if (::hx::IsNotNull( this->sound )) {
HXLINE(  54)			this->sound->play(true,null(),null());
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(ButtonEvent_obj,fire,(void))


::hx::ObjectPtr< ButtonEvent_obj > ButtonEvent_obj::__new( ::Dynamic Callback, ::flixel::sound::FlxSound sound) {
	::hx::ObjectPtr< ButtonEvent_obj > __this = new ButtonEvent_obj();
	__this->__construct(Callback,sound);
	return __this;
}

::hx::ObjectPtr< ButtonEvent_obj > ButtonEvent_obj::__alloc(::hx::Ctx *_hx_ctx, ::Dynamic Callback, ::flixel::sound::FlxSound sound) {
	ButtonEvent_obj *__this = (ButtonEvent_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ButtonEvent_obj), true, "flxanimate.animate.ButtonEvent"));
	*(void **)__this = ButtonEvent_obj::_hx_vtable;
	__this->__construct(Callback,sound);
	return __this;
}

ButtonEvent_obj::ButtonEvent_obj()
{
}

void ButtonEvent_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ButtonEvent);
	HX_MARK_MEMBER_NAME(callback,"callback");
	HX_MARK_MEMBER_NAME(sound,"sound");
	HX_MARK_END_CLASS();
}

void ButtonEvent_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(callback,"callback");
	HX_VISIT_MEMBER_NAME(sound,"sound");
}

::hx::Val ButtonEvent_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"fire") ) { return ::hx::Val( fire_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"sound") ) { return ::hx::Val( sound ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"destroy") ) { return ::hx::Val( destroy_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"callback") ) { return ::hx::Val( callback ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val ButtonEvent_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"sound") ) { sound=inValue.Cast<  ::flixel::sound::FlxSound >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"callback") ) { callback=inValue.Cast<  ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ButtonEvent_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("sound",cf,8c,cc,80));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo ButtonEvent_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(ButtonEvent_obj,callback),HX_("callback",c5,99,06,7f)},
	{::hx::fsObject /*  ::flixel::sound::FlxSound */ ,(int)offsetof(ButtonEvent_obj,sound),HX_("sound",cf,8c,cc,80)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *ButtonEvent_obj_sStaticStorageInfo = 0;
#endif

static ::String ButtonEvent_obj_sMemberFields[] = {
	HX_("callback",c5,99,06,7f),
	HX_("sound",cf,8c,cc,80),
	HX_("destroy",fa,2c,86,24),
	HX_("fire",b6,d3,bb,43),
	::String(null()) };

::hx::Class ButtonEvent_obj::__mClass;

void ButtonEvent_obj::__register()
{
	ButtonEvent_obj _hx_dummy;
	ButtonEvent_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("flxanimate.animate.ButtonEvent",dc,09,c4,32);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(ButtonEvent_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< ButtonEvent_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ButtonEvent_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ButtonEvent_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace flxanimate
} // end namespace animate

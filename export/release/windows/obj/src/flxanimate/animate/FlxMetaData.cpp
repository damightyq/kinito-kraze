// Generated by Haxe 4.3.4
#include <hxcpp.h>

#ifndef INCLUDED_flxanimate_animate_FlxMetaData
#include <flxanimate/animate/FlxMetaData.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_c473b54ae7dfc372_626_new,"flxanimate.animate.FlxMetaData","new",0x085bb6a7,"flxanimate.animate.FlxMetaData.new","flxanimate/animate/FlxAnim.hx",626,0x524d8fe9)
HX_LOCAL_STACK_FRAME(_hx_pos_c473b54ae7dfc372_633_destroy,"flxanimate.animate.FlxMetaData","destroy",0x46ec42c1,"flxanimate.animate.FlxMetaData.destroy","flxanimate/animate/FlxAnim.hx",633,0x524d8fe9)
namespace flxanimate{
namespace animate{

void FlxMetaData_obj::__construct(::String name,Float frameRate){
            	HX_STACKFRAME(&_hx_pos_c473b54ae7dfc372_626_new)
HXLINE( 627)		this->name = name;
HXLINE( 628)		this->frameRate = frameRate;
HXLINE( 629)		this->showHiddenLayers = true;
HXLINE( 630)		this->skipFilters = false;
            	}

Dynamic FlxMetaData_obj::__CreateEmpty() { return new FlxMetaData_obj; }

void *FlxMetaData_obj::_hx_vtable = 0;

Dynamic FlxMetaData_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< FlxMetaData_obj > _hx_result = new FlxMetaData_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool FlxMetaData_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x4a18412f;
}

void FlxMetaData_obj::destroy(){
            	HX_STACKFRAME(&_hx_pos_c473b54ae7dfc372_633_destroy)
HXLINE( 634)		this->name = null();
HXLINE( 635)		this->frameRate = ( (Float)(0) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxMetaData_obj,destroy,(void))


FlxMetaData_obj::FlxMetaData_obj()
{
}

void FlxMetaData_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(FlxMetaData);
	HX_MARK_MEMBER_NAME(name,"name");
	HX_MARK_MEMBER_NAME(frameRate,"frameRate");
	HX_MARK_MEMBER_NAME(showHiddenLayers,"showHiddenLayers");
	HX_MARK_MEMBER_NAME(skipFilters,"skipFilters");
	HX_MARK_END_CLASS();
}

void FlxMetaData_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(name,"name");
	HX_VISIT_MEMBER_NAME(frameRate,"frameRate");
	HX_VISIT_MEMBER_NAME(showHiddenLayers,"showHiddenLayers");
	HX_VISIT_MEMBER_NAME(skipFilters,"skipFilters");
}

::hx::Val FlxMetaData_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"name") ) { return ::hx::Val( name ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"destroy") ) { return ::hx::Val( destroy_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"frameRate") ) { return ::hx::Val( frameRate ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"skipFilters") ) { return ::hx::Val( skipFilters ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"showHiddenLayers") ) { return ::hx::Val( showHiddenLayers ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val FlxMetaData_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"name") ) { name=inValue.Cast< ::String >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"frameRate") ) { frameRate=inValue.Cast< Float >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"skipFilters") ) { skipFilters=inValue.Cast< bool >(); return inValue; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"showHiddenLayers") ) { showHiddenLayers=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void FlxMetaData_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("name",4b,72,ff,48));
	outFields->push(HX_("frameRate",ad,11,25,39));
	outFields->push(HX_("showHiddenLayers",29,1d,57,af));
	outFields->push(HX_("skipFilters",fc,10,b8,a4));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo FlxMetaData_obj_sMemberStorageInfo[] = {
	{::hx::fsString,(int)offsetof(FlxMetaData_obj,name),HX_("name",4b,72,ff,48)},
	{::hx::fsFloat,(int)offsetof(FlxMetaData_obj,frameRate),HX_("frameRate",ad,11,25,39)},
	{::hx::fsBool,(int)offsetof(FlxMetaData_obj,showHiddenLayers),HX_("showHiddenLayers",29,1d,57,af)},
	{::hx::fsBool,(int)offsetof(FlxMetaData_obj,skipFilters),HX_("skipFilters",fc,10,b8,a4)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *FlxMetaData_obj_sStaticStorageInfo = 0;
#endif

static ::String FlxMetaData_obj_sMemberFields[] = {
	HX_("name",4b,72,ff,48),
	HX_("frameRate",ad,11,25,39),
	HX_("showHiddenLayers",29,1d,57,af),
	HX_("skipFilters",fc,10,b8,a4),
	HX_("destroy",fa,2c,86,24),
	::String(null()) };

::hx::Class FlxMetaData_obj::__mClass;

void FlxMetaData_obj::__register()
{
	FlxMetaData_obj _hx_dummy;
	FlxMetaData_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("flxanimate.animate.FlxMetaData",35,d7,2b,cd);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(FlxMetaData_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< FlxMetaData_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FlxMetaData_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FlxMetaData_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace flxanimate
} // end namespace animate

// Generated by Haxe 4.3.4
#include <hxcpp.h>

#ifndef INCLUDED_EReg
#include <EReg.h>
#endif
#ifndef INCLUDED_Reflect
#include <Reflect.h>
#endif
#ifndef INCLUDED_StringTools
#include <StringTools.h>
#endif
#ifndef INCLUDED_backend_ClientPrefs
#include <backend/ClientPrefs.h>
#endif
#ifndef INCLUDED_backend_Paths
#include <backend/Paths.h>
#endif
#ifndef INCLUDED_backend_SaveVariables
#include <backend/SaveVariables.h>
#endif
#ifndef INCLUDED_backend_StageData
#include <backend/StageData.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_graphics_FlxGraphic
#include <flixel/graphics/FlxGraphic.h>
#endif
#ifndef INCLUDED_flixel_graphics_frames_FlxAtlasFrames
#include <flixel/graphics/frames/FlxAtlasFrames.h>
#endif
#ifndef INCLUDED_flixel_graphics_frames_FlxFramesCollection
#include <flixel/graphics/frames/FlxFramesCollection.h>
#endif
#ifndef INCLUDED_flixel_math_FlxBasePoint
#include <flixel/math/FlxBasePoint.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxPooled
#include <flixel/util/IFlxPooled.h>
#endif
#ifndef INCLUDED_flixel_util__FlxColor_FlxColor_Impl_
#include <flixel/util/_FlxColor/FlxColor_Impl_.h>
#endif
#ifndef INCLUDED_states_editors_StageEditorMetaSprite
#include <states/editors/StageEditorMetaSprite.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_0c999bce57d1e1b9_1836_new,"states.editors.StageEditorMetaSprite","new",0x649c1073,"states.editors.StageEditorMetaSprite.new","states/editors/StageEditorState.hx",1836,0xcafb7822)
static const Float _hx_array_data_a3b05b01_2[] = {
	(Float)1,(Float)1,
};
static const Float _hx_array_data_a3b05b01_3[] = {
	(Float)1,(Float)1,
};
HX_LOCAL_STACK_FRAME(_hx_pos_0c999bce57d1e1b9_1840_get_visible,"states.editors.StageEditorMetaSprite","get_visible",0x1791e39c,"states.editors.StageEditorMetaSprite.get_visible","states/editors/StageEditorState.hx",1840,0xcafb7822)
HX_LOCAL_STACK_FRAME(_hx_pos_0c999bce57d1e1b9_1841_set_visible,"states.editors.StageEditorMetaSprite","set_visible",0x21feeaa8,"states.editors.StageEditorMetaSprite.set_visible","states/editors/StageEditorState.hx",1841,0xcafb7822)
HX_LOCAL_STACK_FRAME(_hx_pos_0c999bce57d1e1b9_1853_get_x,"states.editors.StageEditorMetaSprite","get_x",0xc8475022,"states.editors.StageEditorMetaSprite.get_x","states/editors/StageEditorState.hx",1853,0xcafb7822)
HX_LOCAL_STACK_FRAME(_hx_pos_0c999bce57d1e1b9_1854_set_x,"states.editors.StageEditorMetaSprite","set_x",0xb116462e,"states.editors.StageEditorMetaSprite.set_x","states/editors/StageEditorState.hx",1854,0xcafb7822)
HX_LOCAL_STACK_FRAME(_hx_pos_0c999bce57d1e1b9_1855_get_y,"states.editors.StageEditorMetaSprite","get_y",0xc8475023,"states.editors.StageEditorMetaSprite.get_y","states/editors/StageEditorState.hx",1855,0xcafb7822)
HX_LOCAL_STACK_FRAME(_hx_pos_0c999bce57d1e1b9_1856_set_y,"states.editors.StageEditorMetaSprite","set_y",0xb116462f,"states.editors.StageEditorMetaSprite.set_y","states/editors/StageEditorState.hx",1856,0xcafb7822)
HX_LOCAL_STACK_FRAME(_hx_pos_0c999bce57d1e1b9_1857_get_alpha,"states.editors.StageEditorMetaSprite","get_alpha",0xa3501408,"states.editors.StageEditorMetaSprite.get_alpha","states/editors/StageEditorState.hx",1857,0xcafb7822)
HX_LOCAL_STACK_FRAME(_hx_pos_0c999bce57d1e1b9_1858_set_alpha,"states.editors.StageEditorMetaSprite","set_alpha",0x86a10014,"states.editors.StageEditorMetaSprite.set_alpha","states/editors/StageEditorState.hx",1858,0xcafb7822)
HX_LOCAL_STACK_FRAME(_hx_pos_0c999bce57d1e1b9_1859_get_angle,"states.editors.StageEditorMetaSprite","get_angle",0xa49bb07d,"states.editors.StageEditorMetaSprite.get_angle","states/editors/StageEditorState.hx",1859,0xcafb7822)
HX_LOCAL_STACK_FRAME(_hx_pos_0c999bce57d1e1b9_1860_set_angle,"states.editors.StageEditorMetaSprite","set_angle",0x87ec9c89,"states.editors.StageEditorMetaSprite.set_angle","states/editors/StageEditorState.hx",1860,0xcafb7822)
HX_LOCAL_STACK_FRAME(_hx_pos_0c999bce57d1e1b9_1864_set_color,"states.editors.StageEditorMetaSprite","set_color",0xaf66ca19,"states.editors.StageEditorMetaSprite.set_color","states/editors/StageEditorState.hx",1864,0xcafb7822)
HX_LOCAL_STACK_FRAME(_hx_pos_0c999bce57d1e1b9_1870_set_image,"states.editors.StageEditorMetaSprite","set_image",0x22737811,"states.editors.StageEditorMetaSprite.set_image","states/editors/StageEditorState.hx",1870,0xcafb7822)
HX_LOCAL_STACK_FRAME(_hx_pos_0c999bce57d1e1b9_1888_setScrollFactor,"states.editors.StageEditorMetaSprite","setScrollFactor",0x57775011,"states.editors.StageEditorMetaSprite.setScrollFactor","states/editors/StageEditorState.hx",1888,0xcafb7822)
HX_LOCAL_STACK_FRAME(_hx_pos_0c999bce57d1e1b9_1897_set_antialiasing,"states.editors.StageEditorMetaSprite","set_antialiasing",0xfa00e0fe,"states.editors.StageEditorMetaSprite.set_antialiasing","states/editors/StageEditorState.hx",1897,0xcafb7822)
HX_LOCAL_STACK_FRAME(_hx_pos_0c999bce57d1e1b9_1903_setScale,"states.editors.StageEditorMetaSprite","setScale",0x0d9ad295,"states.editors.StageEditorMetaSprite.setScale","states/editors/StageEditorState.hx",1903,0xcafb7822)
HX_LOCAL_STACK_FRAME(_hx_pos_0c999bce57d1e1b9_1912_get_flipX,"states.editors.StageEditorMetaSprite","get_flipX",0x844bb1b5,"states.editors.StageEditorMetaSprite.get_flipX","states/editors/StageEditorState.hx",1912,0xcafb7822)
HX_LOCAL_STACK_FRAME(_hx_pos_0c999bce57d1e1b9_1913_set_flipX,"states.editors.StageEditorMetaSprite","set_flipX",0x679c9dc1,"states.editors.StageEditorMetaSprite.set_flipX","states/editors/StageEditorState.hx",1913,0xcafb7822)
HX_LOCAL_STACK_FRAME(_hx_pos_0c999bce57d1e1b9_1914_get_flipY,"states.editors.StageEditorMetaSprite","get_flipY",0x844bb1b6,"states.editors.StageEditorMetaSprite.get_flipY","states/editors/StageEditorState.hx",1914,0xcafb7822)
HX_LOCAL_STACK_FRAME(_hx_pos_0c999bce57d1e1b9_1915_set_flipY,"states.editors.StageEditorMetaSprite","set_flipY",0x679c9dc2,"states.editors.StageEditorMetaSprite.set_flipY","states/editors/StageEditorState.hx",1915,0xcafb7822)
HX_LOCAL_STACK_FRAME(_hx_pos_0c999bce57d1e1b9_1945_formatToJson,"states.editors.StageEditorMetaSprite","formatToJson",0x6f6d1967,"states.editors.StageEditorMetaSprite.formatToJson","states/editors/StageEditorState.hx",1945,0xcafb7822)
HX_LOCAL_STACK_FRAME(_hx_pos_0c999bce57d1e1b9_1978_update,"states.editors.StageEditorMetaSprite","update",0x59f453d6,"states.editors.StageEditorMetaSprite.update","states/editors/StageEditorState.hx",1978,0xcafb7822)
HX_LOCAL_STACK_FRAME(_hx_pos_0c999bce57d1e1b9_1984_draw,"states.editors.StageEditorMetaSprite","draw",0x9d5ffc91,"states.editors.StageEditorMetaSprite.draw","states/editors/StageEditorState.hx",1984,0xcafb7822)
namespace states{
namespace editors{

void StageEditorMetaSprite_obj::__construct( ::Dynamic data, ::flixel::FlxSprite spr){
            	HX_STACKFRAME(&_hx_pos_0c999bce57d1e1b9_1836_new)
HXLINE(1895)		this->antialiasing = true;
HXLINE(1894)		this->scale = ::Array_obj< Float >::fromData( _hx_array_data_a3b05b01_2,2);
HXLINE(1886)		this->scroll = ::Array_obj< Float >::fromData( _hx_array_data_a3b05b01_3,2);
HXLINE(1868)		this->image = HX_("unknown",8a,23,7b,e1);
HXLINE(1862)		this->color = HX_("FFFFFF",c0,27,82,79);
HXLINE(1848)		this->filters = (1 | 2);
HXLINE(1923)		this->sprite = spr;
HXLINE(1924)		if (::hx::IsNull( data )) {
HXLINE(1924)			return;
            		}
HXLINE(1926)		this->type = ( (::String)(data->__Field(HX_("type",ba,f2,08,4d),::hx::paccDynamic)) );
HXLINE(1927)		::String _hx_switch_0 = this->type;
            		if (  (_hx_switch_0==HX_("animatedSprite",08,df,a8,cb)) ||  (_hx_switch_0==HX_("sprite",05,dc,95,c3)) ||  (_hx_switch_0==HX_("square",9d,00,f2,58)) ){
HXLINE(1930)			{
HXLINE(1930)				{
HXLINE(1930)					::String v = HX_("name",4b,72,ff,48);
HXLINE(1932)					 ::Dynamic dat = ::Reflect_obj::field(data,v);
HXLINE(1933)					if (::hx::IsNotNull( dat )) {
HXLINE(1933)						::Reflect_obj::setField(::hx::ObjectPtr<OBJ_>(this),v,dat);
            					}
            				}
HXLINE(1930)				{
HXLINE(1930)					::String v1 = HX_("image",5b,1f,69,bd);
HXLINE(1932)					 ::Dynamic dat1 = ::Reflect_obj::field(data,v1);
HXLINE(1933)					if (::hx::IsNotNull( dat1 )) {
HXLINE(1933)						::Reflect_obj::setField(::hx::ObjectPtr<OBJ_>(this),v1,dat1);
            					}
            				}
HXLINE(1930)				{
HXLINE(1930)					::String v2 = HX_("scale",8a,ce,ce,78);
HXLINE(1932)					 ::Dynamic dat2 = ::Reflect_obj::field(data,v2);
HXLINE(1933)					if (::hx::IsNotNull( dat2 )) {
HXLINE(1933)						::Reflect_obj::setField(::hx::ObjectPtr<OBJ_>(this),v2,dat2);
            					}
            				}
HXLINE(1930)				{
HXLINE(1930)					::String v3 = HX_("scroll",0d,d8,64,47);
HXLINE(1932)					 ::Dynamic dat3 = ::Reflect_obj::field(data,v3);
HXLINE(1933)					if (::hx::IsNotNull( dat3 )) {
HXLINE(1933)						::Reflect_obj::setField(::hx::ObjectPtr<OBJ_>(this),v3,dat3);
            					}
            				}
HXLINE(1930)				{
HXLINE(1930)					::String v4 = HX_("color",63,71,5c,4a);
HXLINE(1932)					 ::Dynamic dat4 = ::Reflect_obj::field(data,v4);
HXLINE(1933)					if (::hx::IsNotNull( dat4 )) {
HXLINE(1933)						::Reflect_obj::setField(::hx::ObjectPtr<OBJ_>(this),v4,dat4);
            					}
            				}
HXLINE(1930)				{
HXLINE(1930)					::String v5 = HX_("filters",bb,a1,46,09);
HXLINE(1932)					 ::Dynamic dat5 = ::Reflect_obj::field(data,v5);
HXLINE(1933)					if (::hx::IsNotNull( dat5 )) {
HXLINE(1933)						::Reflect_obj::setField(::hx::ObjectPtr<OBJ_>(this),v5,dat5);
            					}
            				}
HXLINE(1930)				{
HXLINE(1930)					::String v6 = HX_("antialiasing",f4,16,b3,48);
HXLINE(1932)					 ::Dynamic dat6 = ::Reflect_obj::field(data,v6);
HXLINE(1933)					if (::hx::IsNotNull( dat6 )) {
HXLINE(1933)						::Reflect_obj::setField(::hx::ObjectPtr<OBJ_>(this),v6,dat6);
            					}
            				}
            			}
HXLINE(1936)			if ((this->type == HX_("animatedSprite",08,df,a8,cb))) {
HXLINE(1938)				this->animations = ( (::Array< ::Dynamic>)(data->__Field(HX_("animations",ef,34,1c,83),::hx::paccDynamic)) );
HXLINE(1939)				this->firstAnimation = ( (::String)(data->__Field(HX_("firstAnimation",b4,d0,f1,66),::hx::paccDynamic)) );
            			}
HXLINE(1929)			goto _hx_goto_0;
            		}
            		_hx_goto_0:;
            	}

Dynamic StageEditorMetaSprite_obj::__CreateEmpty() { return new StageEditorMetaSprite_obj; }

void *StageEditorMetaSprite_obj::_hx_vtable = 0;

Dynamic StageEditorMetaSprite_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< StageEditorMetaSprite_obj > _hx_result = new StageEditorMetaSprite_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool StageEditorMetaSprite_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x109602d9;
}

bool StageEditorMetaSprite_obj::get_visible(){
            	HX_STACKFRAME(&_hx_pos_0c999bce57d1e1b9_1840_get_visible)
HXDLIN(1840)		return this->sprite->visible;
            	}


HX_DEFINE_DYNAMIC_FUNC0(StageEditorMetaSprite_obj,get_visible,return )

bool StageEditorMetaSprite_obj::set_visible(bool v){
            	HX_STACKFRAME(&_hx_pos_0c999bce57d1e1b9_1841_set_visible)
HXDLIN(1841)		return this->sprite->set_visible(v);
            	}


HX_DEFINE_DYNAMIC_FUNC1(StageEditorMetaSprite_obj,set_visible,return )

Float StageEditorMetaSprite_obj::get_x(){
            	HX_STACKFRAME(&_hx_pos_0c999bce57d1e1b9_1853_get_x)
HXDLIN(1853)		return this->sprite->x;
            	}


HX_DEFINE_DYNAMIC_FUNC0(StageEditorMetaSprite_obj,get_x,return )

Float StageEditorMetaSprite_obj::set_x(Float v){
            	HX_STACKFRAME(&_hx_pos_0c999bce57d1e1b9_1854_set_x)
HXDLIN(1854)		return this->sprite->set_x(v);
            	}


HX_DEFINE_DYNAMIC_FUNC1(StageEditorMetaSprite_obj,set_x,return )

Float StageEditorMetaSprite_obj::get_y(){
            	HX_STACKFRAME(&_hx_pos_0c999bce57d1e1b9_1855_get_y)
HXDLIN(1855)		return this->sprite->y;
            	}


HX_DEFINE_DYNAMIC_FUNC0(StageEditorMetaSprite_obj,get_y,return )

Float StageEditorMetaSprite_obj::set_y(Float v){
            	HX_STACKFRAME(&_hx_pos_0c999bce57d1e1b9_1856_set_y)
HXDLIN(1856)		return this->sprite->set_y(v);
            	}


HX_DEFINE_DYNAMIC_FUNC1(StageEditorMetaSprite_obj,set_y,return )

Float StageEditorMetaSprite_obj::get_alpha(){
            	HX_STACKFRAME(&_hx_pos_0c999bce57d1e1b9_1857_get_alpha)
HXDLIN(1857)		return this->sprite->alpha;
            	}


HX_DEFINE_DYNAMIC_FUNC0(StageEditorMetaSprite_obj,get_alpha,return )

Float StageEditorMetaSprite_obj::set_alpha(Float v){
            	HX_STACKFRAME(&_hx_pos_0c999bce57d1e1b9_1858_set_alpha)
HXDLIN(1858)		return this->sprite->set_alpha(v);
            	}


HX_DEFINE_DYNAMIC_FUNC1(StageEditorMetaSprite_obj,set_alpha,return )

Float StageEditorMetaSprite_obj::get_angle(){
            	HX_STACKFRAME(&_hx_pos_0c999bce57d1e1b9_1859_get_angle)
HXDLIN(1859)		return this->sprite->angle;
            	}


HX_DEFINE_DYNAMIC_FUNC0(StageEditorMetaSprite_obj,get_angle,return )

Float StageEditorMetaSprite_obj::set_angle(Float v){
            	HX_STACKFRAME(&_hx_pos_0c999bce57d1e1b9_1860_set_angle)
HXDLIN(1860)		return this->sprite->set_angle(v);
            	}


HX_DEFINE_DYNAMIC_FUNC1(StageEditorMetaSprite_obj,set_angle,return )

::String StageEditorMetaSprite_obj::set_color(::String v){
            	HX_GC_STACKFRAME(&_hx_pos_0c999bce57d1e1b9_1864_set_color)
HXLINE(1865)		 ::flixel::FlxSprite _hx_tmp = this->sprite;
HXDLIN(1865)		 ::EReg hideChars =  ::EReg_obj::__alloc( HX_CTX ,HX_("[\t\n\r]",ac,57,71,6b),HX_("",00,00,00,00));
HXDLIN(1865)		::String color = ::StringTools_obj::trim(hideChars->split(v)->join(HX_("",00,00,00,00)));
HXDLIN(1865)		if (::StringTools_obj::startsWith(color,HX_("0x",48,2a,00,00))) {
HXLINE(1865)			color = color.substring((color.length - 6),null());
            		}
HXDLIN(1865)		 ::Dynamic colorNum = ::flixel::util::_FlxColor::FlxColor_Impl__obj::fromString(color);
HXDLIN(1865)		if (::hx::IsNull( colorNum )) {
HXLINE(1865)			colorNum = ::flixel::util::_FlxColor::FlxColor_Impl__obj::fromString((HX_("#",23,00,00,00) + color));
            		}
HXDLIN(1865)		int _hx_tmp1;
HXDLIN(1865)		if (::hx::IsNotNull( colorNum )) {
HXLINE(1865)			_hx_tmp1 = ( (int)(colorNum) );
            		}
            		else {
HXLINE(1865)			_hx_tmp1 = -1;
            		}
HXDLIN(1865)		_hx_tmp->set_color(_hx_tmp1);
HXLINE(1866)		return (this->color = v);
            	}


HX_DEFINE_DYNAMIC_FUNC1(StageEditorMetaSprite_obj,set_color,return )

::String StageEditorMetaSprite_obj::set_image(::String v){
            	HX_STACKFRAME(&_hx_pos_0c999bce57d1e1b9_1870_set_image)
HXLINE(1871)		try {
            			HX_STACK_CATCHABLE( ::Dynamic, 0);
HXLINE(1873)			::String _hx_switch_0 = this->type;
            			if (  (_hx_switch_0==HX_("animatedSprite",08,df,a8,cb)) ){
HXLINE(1878)				 ::flixel::FlxSprite _hx_tmp = this->sprite;
HXDLIN(1878)				_hx_tmp->set_frames(::backend::Paths_obj::getAtlas(v,null(),null()));
HXDLIN(1878)				goto _hx_goto_15;
            			}
            			if (  (_hx_switch_0==HX_("sprite",05,dc,95,c3)) ){
HXLINE(1876)				 ::flixel::FlxSprite _hx_tmp1 = this->sprite;
HXDLIN(1876)				_hx_tmp1->loadGraphic(::backend::Paths_obj::image(v,null(),null()),null(),null(),null(),null(),null());
HXDLIN(1876)				goto _hx_goto_15;
            			}
            			_hx_goto_15:;
            		} catch( ::Dynamic _hx_e) {
            			if (_hx_e.IsClass<  ::Dynamic >() ){
            				HX_STACK_BEGIN_CATCH
            				 ::Dynamic _g = _hx_e;
HXLINE(1881)				{
HXLINE(1881)					null();
            				}
            			}
            			else {
            				HX_STACK_DO_THROW(_hx_e);
            			}
            		}
HXLINE(1882)		this->sprite->updateHitbox();
HXLINE(1883)		return (this->image = v);
            	}


HX_DEFINE_DYNAMIC_FUNC1(StageEditorMetaSprite_obj,set_image,return )

void StageEditorMetaSprite_obj::setScrollFactor( ::Dynamic scrX, ::Dynamic scrY){
            	HX_STACKFRAME(&_hx_pos_0c999bce57d1e1b9_1888_setScrollFactor)
HXLINE(1889)		Float _hx_tmp;
HXDLIN(1889)		if (::hx::IsNotNull( scrX )) {
HXLINE(1889)			_hx_tmp = ( (Float)(scrX) );
            		}
            		else {
HXLINE(1889)			_hx_tmp = this->scroll->__get(0);
            		}
HXDLIN(1889)		this->scroll[0] = _hx_tmp;
HXLINE(1890)		Float _hx_tmp1;
HXDLIN(1890)		if (::hx::IsNotNull( scrY )) {
HXLINE(1890)			_hx_tmp1 = ( (Float)(scrY) );
            		}
            		else {
HXLINE(1890)			_hx_tmp1 = this->scroll->__get(1);
            		}
HXDLIN(1890)		this->scroll[1] = _hx_tmp1;
HXLINE(1891)		{
HXLINE(1891)			 ::flixel::math::FlxBasePoint this1 = this->sprite->scrollFactor;
HXDLIN(1891)			Float y = this->scroll->__get(1);
HXDLIN(1891)			this1->set_x(this->scroll->__get(0));
HXDLIN(1891)			this1->set_y(y);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(StageEditorMetaSprite_obj,setScrollFactor,(void))

bool StageEditorMetaSprite_obj::set_antialiasing(bool v){
            	HX_STACKFRAME(&_hx_pos_0c999bce57d1e1b9_1897_set_antialiasing)
HXLINE(1898)		bool _hx_tmp;
HXDLIN(1898)		if (v) {
HXLINE(1898)			_hx_tmp = ::backend::ClientPrefs_obj::data->antialiasing;
            		}
            		else {
HXLINE(1898)			_hx_tmp = false;
            		}
HXDLIN(1898)		this->sprite->set_antialiasing(_hx_tmp);
HXLINE(1899)		return (this->antialiasing = v);
            	}


HX_DEFINE_DYNAMIC_FUNC1(StageEditorMetaSprite_obj,set_antialiasing,return )

void StageEditorMetaSprite_obj::setScale( ::Dynamic wid, ::Dynamic hei){
            	HX_STACKFRAME(&_hx_pos_0c999bce57d1e1b9_1903_setScale)
HXLINE(1904)		Float _hx_tmp;
HXDLIN(1904)		if (::hx::IsNotNull( wid )) {
HXLINE(1904)			_hx_tmp = ( (Float)(wid) );
            		}
            		else {
HXLINE(1904)			_hx_tmp = this->scale->__get(0);
            		}
HXDLIN(1904)		this->scale[0] = _hx_tmp;
HXLINE(1905)		Float _hx_tmp1;
HXDLIN(1905)		if (::hx::IsNotNull( hei )) {
HXLINE(1905)			_hx_tmp1 = ( (Float)(hei) );
            		}
            		else {
HXLINE(1905)			_hx_tmp1 = this->scale->__get(1);
            		}
HXDLIN(1905)		this->scale[1] = _hx_tmp1;
HXLINE(1906)		{
HXLINE(1906)			 ::flixel::math::FlxBasePoint this1 = this->sprite->scale;
HXDLIN(1906)			Float y = this->scale->__get(1);
HXDLIN(1906)			this1->set_x(this->scale->__get(0));
HXDLIN(1906)			this1->set_y(y);
            		}
HXLINE(1907)		this->sprite->updateHitbox();
            	}


HX_DEFINE_DYNAMIC_FUNC2(StageEditorMetaSprite_obj,setScale,(void))

bool StageEditorMetaSprite_obj::get_flipX(){
            	HX_STACKFRAME(&_hx_pos_0c999bce57d1e1b9_1912_get_flipX)
HXDLIN(1912)		return this->sprite->flipX;
            	}


HX_DEFINE_DYNAMIC_FUNC0(StageEditorMetaSprite_obj,get_flipX,return )

bool StageEditorMetaSprite_obj::set_flipX(bool v){
            	HX_STACKFRAME(&_hx_pos_0c999bce57d1e1b9_1913_set_flipX)
HXDLIN(1913)		bool _hx_tmp;
HXDLIN(1913)		if (v) {
HXDLIN(1913)			_hx_tmp = (this->type != HX_("square",9d,00,f2,58));
            		}
            		else {
HXDLIN(1913)			_hx_tmp = false;
            		}
HXDLIN(1913)		return this->sprite->set_flipX(_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC1(StageEditorMetaSprite_obj,set_flipX,return )

bool StageEditorMetaSprite_obj::get_flipY(){
            	HX_STACKFRAME(&_hx_pos_0c999bce57d1e1b9_1914_get_flipY)
HXDLIN(1914)		return this->sprite->flipY;
            	}


HX_DEFINE_DYNAMIC_FUNC0(StageEditorMetaSprite_obj,get_flipY,return )

bool StageEditorMetaSprite_obj::set_flipY(bool v){
            	HX_STACKFRAME(&_hx_pos_0c999bce57d1e1b9_1915_set_flipY)
HXDLIN(1915)		bool _hx_tmp;
HXDLIN(1915)		if (v) {
HXDLIN(1915)			_hx_tmp = (this->type != HX_("square",9d,00,f2,58));
            		}
            		else {
HXDLIN(1915)			_hx_tmp = false;
            		}
HXDLIN(1915)		return this->sprite->set_flipY(_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC1(StageEditorMetaSprite_obj,set_flipY,return )

 ::Dynamic StageEditorMetaSprite_obj::formatToJson(){
            	HX_STACKFRAME(&_hx_pos_0c999bce57d1e1b9_1945_formatToJson)
HXLINE(1946)		 ::Dynamic obj =  ::Dynamic(::hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("type",ba,f2,08,4d),this->type));
HXLINE(1947)		::String _hx_switch_0 = this->type;
            		if (  (_hx_switch_0==HX_("animatedSprite",08,df,a8,cb)) ||  (_hx_switch_0==HX_("sprite",05,dc,95,c3)) ||  (_hx_switch_0==HX_("square",9d,00,f2,58)) ){
HXLINE(1950)			obj->__SetField(HX_("name",4b,72,ff,48),this->name,::hx::paccDynamic);
HXLINE(1951)			obj->__SetField(HX_("x",78,00,00,00),this->get_x(),::hx::paccDynamic);
HXLINE(1952)			obj->__SetField(HX_("y",79,00,00,00),this->get_y(),::hx::paccDynamic);
HXLINE(1953)			obj->__SetField(HX_("scale",8a,ce,ce,78),this->scale,::hx::paccDynamic);
HXLINE(1954)			obj->__SetField(HX_("scroll",0d,d8,64,47),this->scroll,::hx::paccDynamic);
HXLINE(1955)			obj->__SetField(HX_("alpha",5e,a7,96,21),this->get_alpha(),::hx::paccDynamic);
HXLINE(1956)			obj->__SetField(HX_("angle",d3,43,e2,22),this->get_angle(),::hx::paccDynamic);
HXLINE(1957)			obj->__SetField(HX_("color",63,71,5c,4a),this->color,::hx::paccDynamic);
HXLINE(1958)			obj->__SetField(HX_("filters",bb,a1,46,09),this->filters,::hx::paccDynamic);
HXLINE(1960)			if ((this->type != HX_("square",9d,00,f2,58))) {
HXLINE(1962)				obj->__SetField(HX_("flipX",0b,45,92,02),this->get_flipX(),::hx::paccDynamic);
HXLINE(1963)				obj->__SetField(HX_("flipY",0c,45,92,02),this->get_flipY(),::hx::paccDynamic);
HXLINE(1964)				obj->__SetField(HX_("image",5b,1f,69,bd),this->image,::hx::paccDynamic);
HXLINE(1965)				obj->__SetField(HX_("antialiasing",f4,16,b3,48),this->antialiasing,::hx::paccDynamic);
HXLINE(1966)				if ((this->type == HX_("animatedSprite",08,df,a8,cb))) {
HXLINE(1968)					obj->__SetField(HX_("animations",ef,34,1c,83),this->animations,::hx::paccDynamic);
HXLINE(1969)					obj->__SetField(HX_("firstAnimation",b4,d0,f1,66),this->firstAnimation,::hx::paccDynamic);
            				}
            			}
HXLINE(1949)			goto _hx_goto_24;
            		}
            		_hx_goto_24:;
HXLINE(1973)		return obj;
            	}


HX_DEFINE_DYNAMIC_FUNC0(StageEditorMetaSprite_obj,formatToJson,return )

void StageEditorMetaSprite_obj::update(int curFilters,Float elapsed){
            	HX_STACKFRAME(&_hx_pos_0c999bce57d1e1b9_1978_update)
HXDLIN(1978)		bool _hx_tmp;
HXDLIN(1978)		if (((curFilters & this->filters) == 0)) {
HXDLIN(1978)			_hx_tmp = ::backend::StageData_obj::reservedNames->contains(this->type);
            		}
            		else {
HXDLIN(1978)			_hx_tmp = true;
            		}
HXDLIN(1978)		if (_hx_tmp) {
HXLINE(1979)			this->sprite->update(elapsed);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(StageEditorMetaSprite_obj,update,(void))

void StageEditorMetaSprite_obj::draw(int curFilters){
            	HX_STACKFRAME(&_hx_pos_0c999bce57d1e1b9_1984_draw)
HXDLIN(1984)		bool _hx_tmp;
HXDLIN(1984)		if (((curFilters & this->filters) == 0)) {
HXDLIN(1984)			_hx_tmp = ::backend::StageData_obj::reservedNames->contains(this->type);
            		}
            		else {
HXDLIN(1984)			_hx_tmp = true;
            		}
HXDLIN(1984)		if (_hx_tmp) {
HXLINE(1985)			this->sprite->draw();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(StageEditorMetaSprite_obj,draw,(void))


::hx::ObjectPtr< StageEditorMetaSprite_obj > StageEditorMetaSprite_obj::__new( ::Dynamic data, ::flixel::FlxSprite spr) {
	::hx::ObjectPtr< StageEditorMetaSprite_obj > __this = new StageEditorMetaSprite_obj();
	__this->__construct(data,spr);
	return __this;
}

::hx::ObjectPtr< StageEditorMetaSprite_obj > StageEditorMetaSprite_obj::__alloc(::hx::Ctx *_hx_ctx, ::Dynamic data, ::flixel::FlxSprite spr) {
	StageEditorMetaSprite_obj *__this = (StageEditorMetaSprite_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(StageEditorMetaSprite_obj), true, "states.editors.StageEditorMetaSprite"));
	*(void **)__this = StageEditorMetaSprite_obj::_hx_vtable;
	__this->__construct(data,spr);
	return __this;
}

StageEditorMetaSprite_obj::StageEditorMetaSprite_obj()
{
}

void StageEditorMetaSprite_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(StageEditorMetaSprite);
	HX_MARK_MEMBER_NAME(sprite,"sprite");
	HX_MARK_MEMBER_NAME(type,"type");
	HX_MARK_MEMBER_NAME(name,"name");
	HX_MARK_MEMBER_NAME(filters,"filters");
	HX_MARK_MEMBER_NAME(color,"color");
	HX_MARK_MEMBER_NAME(image,"image");
	HX_MARK_MEMBER_NAME(scroll,"scroll");
	HX_MARK_MEMBER_NAME(scale,"scale");
	HX_MARK_MEMBER_NAME(antialiasing,"antialiasing");
	HX_MARK_MEMBER_NAME(firstAnimation,"firstAnimation");
	HX_MARK_MEMBER_NAME(animations,"animations");
	HX_MARK_END_CLASS();
}

void StageEditorMetaSprite_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(sprite,"sprite");
	HX_VISIT_MEMBER_NAME(type,"type");
	HX_VISIT_MEMBER_NAME(name,"name");
	HX_VISIT_MEMBER_NAME(filters,"filters");
	HX_VISIT_MEMBER_NAME(color,"color");
	HX_VISIT_MEMBER_NAME(image,"image");
	HX_VISIT_MEMBER_NAME(scroll,"scroll");
	HX_VISIT_MEMBER_NAME(scale,"scale");
	HX_VISIT_MEMBER_NAME(antialiasing,"antialiasing");
	HX_VISIT_MEMBER_NAME(firstAnimation,"firstAnimation");
	HX_VISIT_MEMBER_NAME(animations,"animations");
}

::hx::Val StageEditorMetaSprite_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"x") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_x() ); }
		if (HX_FIELD_EQ(inName,"y") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_y() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"type") ) { return ::hx::Val( type ); }
		if (HX_FIELD_EQ(inName,"name") ) { return ::hx::Val( name ); }
		if (HX_FIELD_EQ(inName,"draw") ) { return ::hx::Val( draw_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"alpha") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_alpha() ); }
		if (HX_FIELD_EQ(inName,"angle") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_angle() ); }
		if (HX_FIELD_EQ(inName,"get_x") ) { return ::hx::Val( get_x_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_x") ) { return ::hx::Val( set_x_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_y") ) { return ::hx::Val( get_y_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_y") ) { return ::hx::Val( set_y_dyn() ); }
		if (HX_FIELD_EQ(inName,"color") ) { return ::hx::Val( color ); }
		if (HX_FIELD_EQ(inName,"image") ) { return ::hx::Val( image ); }
		if (HX_FIELD_EQ(inName,"scale") ) { return ::hx::Val( scale ); }
		if (HX_FIELD_EQ(inName,"flipX") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_flipX() ); }
		if (HX_FIELD_EQ(inName,"flipY") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_flipY() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"sprite") ) { return ::hx::Val( sprite ); }
		if (HX_FIELD_EQ(inName,"scroll") ) { return ::hx::Val( scroll ); }
		if (HX_FIELD_EQ(inName,"update") ) { return ::hx::Val( update_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"visible") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_visible() ); }
		if (HX_FIELD_EQ(inName,"filters") ) { return ::hx::Val( filters ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"setScale") ) { return ::hx::Val( setScale_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"get_alpha") ) { return ::hx::Val( get_alpha_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_alpha") ) { return ::hx::Val( set_alpha_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_angle") ) { return ::hx::Val( get_angle_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_angle") ) { return ::hx::Val( set_angle_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_color") ) { return ::hx::Val( set_color_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_image") ) { return ::hx::Val( set_image_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_flipX") ) { return ::hx::Val( get_flipX_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_flipX") ) { return ::hx::Val( set_flipX_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_flipY") ) { return ::hx::Val( get_flipY_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_flipY") ) { return ::hx::Val( set_flipY_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"animations") ) { return ::hx::Val( animations ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"get_visible") ) { return ::hx::Val( get_visible_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_visible") ) { return ::hx::Val( set_visible_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"antialiasing") ) { return ::hx::Val( antialiasing ); }
		if (HX_FIELD_EQ(inName,"formatToJson") ) { return ::hx::Val( formatToJson_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"firstAnimation") ) { return ::hx::Val( firstAnimation ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"setScrollFactor") ) { return ::hx::Val( setScrollFactor_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"set_antialiasing") ) { return ::hx::Val( set_antialiasing_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val StageEditorMetaSprite_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"x") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_x(inValue.Cast< Float >()) ); }
		if (HX_FIELD_EQ(inName,"y") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_y(inValue.Cast< Float >()) ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"type") ) { type=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"name") ) { name=inValue.Cast< ::String >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"alpha") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_alpha(inValue.Cast< Float >()) ); }
		if (HX_FIELD_EQ(inName,"angle") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_angle(inValue.Cast< Float >()) ); }
		if (HX_FIELD_EQ(inName,"color") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_color(inValue.Cast< ::String >()) );color=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"image") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_image(inValue.Cast< ::String >()) );image=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"scale") ) { scale=inValue.Cast< ::Array< Float > >(); return inValue; }
		if (HX_FIELD_EQ(inName,"flipX") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_flipX(inValue.Cast< bool >()) ); }
		if (HX_FIELD_EQ(inName,"flipY") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_flipY(inValue.Cast< bool >()) ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"sprite") ) { sprite=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"scroll") ) { scroll=inValue.Cast< ::Array< Float > >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"visible") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_visible(inValue.Cast< bool >()) ); }
		if (HX_FIELD_EQ(inName,"filters") ) { filters=inValue.Cast< int >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"animations") ) { animations=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"antialiasing") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_antialiasing(inValue.Cast< bool >()) );antialiasing=inValue.Cast< bool >(); return inValue; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"firstAnimation") ) { firstAnimation=inValue.Cast< ::String >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void StageEditorMetaSprite_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("sprite",05,dc,95,c3));
	outFields->push(HX_("visible",72,78,24,a3));
	outFields->push(HX_("type",ba,f2,08,4d));
	outFields->push(HX_("name",4b,72,ff,48));
	outFields->push(HX_("filters",bb,a1,46,09));
	outFields->push(HX_("x",78,00,00,00));
	outFields->push(HX_("y",79,00,00,00));
	outFields->push(HX_("alpha",5e,a7,96,21));
	outFields->push(HX_("angle",d3,43,e2,22));
	outFields->push(HX_("color",63,71,5c,4a));
	outFields->push(HX_("image",5b,1f,69,bd));
	outFields->push(HX_("scroll",0d,d8,64,47));
	outFields->push(HX_("scale",8a,ce,ce,78));
	outFields->push(HX_("antialiasing",f4,16,b3,48));
	outFields->push(HX_("flipX",0b,45,92,02));
	outFields->push(HX_("flipY",0c,45,92,02));
	outFields->push(HX_("firstAnimation",b4,d0,f1,66));
	outFields->push(HX_("animations",ef,34,1c,83));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo StageEditorMetaSprite_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(StageEditorMetaSprite_obj,sprite),HX_("sprite",05,dc,95,c3)},
	{::hx::fsString,(int)offsetof(StageEditorMetaSprite_obj,type),HX_("type",ba,f2,08,4d)},
	{::hx::fsString,(int)offsetof(StageEditorMetaSprite_obj,name),HX_("name",4b,72,ff,48)},
	{::hx::fsInt,(int)offsetof(StageEditorMetaSprite_obj,filters),HX_("filters",bb,a1,46,09)},
	{::hx::fsString,(int)offsetof(StageEditorMetaSprite_obj,color),HX_("color",63,71,5c,4a)},
	{::hx::fsString,(int)offsetof(StageEditorMetaSprite_obj,image),HX_("image",5b,1f,69,bd)},
	{::hx::fsObject /* ::Array< Float > */ ,(int)offsetof(StageEditorMetaSprite_obj,scroll),HX_("scroll",0d,d8,64,47)},
	{::hx::fsObject /* ::Array< Float > */ ,(int)offsetof(StageEditorMetaSprite_obj,scale),HX_("scale",8a,ce,ce,78)},
	{::hx::fsBool,(int)offsetof(StageEditorMetaSprite_obj,antialiasing),HX_("antialiasing",f4,16,b3,48)},
	{::hx::fsString,(int)offsetof(StageEditorMetaSprite_obj,firstAnimation),HX_("firstAnimation",b4,d0,f1,66)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(StageEditorMetaSprite_obj,animations),HX_("animations",ef,34,1c,83)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *StageEditorMetaSprite_obj_sStaticStorageInfo = 0;
#endif

static ::String StageEditorMetaSprite_obj_sMemberFields[] = {
	HX_("sprite",05,dc,95,c3),
	HX_("get_visible",89,d8,1e,29),
	HX_("set_visible",95,df,8b,33),
	HX_("type",ba,f2,08,4d),
	HX_("name",4b,72,ff,48),
	HX_("filters",bb,a1,46,09),
	HX_("get_x",4f,a5,60,91),
	HX_("set_x",5b,9b,2f,7a),
	HX_("get_y",50,a5,60,91),
	HX_("set_y",5c,9b,2f,7a),
	HX_("get_alpha",b5,03,40,65),
	HX_("set_alpha",c1,ef,90,48),
	HX_("get_angle",2a,a0,8b,66),
	HX_("set_angle",36,8c,dc,49),
	HX_("color",63,71,5c,4a),
	HX_("set_color",c6,b9,56,71),
	HX_("image",5b,1f,69,bd),
	HX_("set_image",be,67,63,e4),
	HX_("scroll",0d,d8,64,47),
	HX_("setScrollFactor",7e,bf,85,5a),
	HX_("scale",8a,ce,ce,78),
	HX_("antialiasing",f4,16,b3,48),
	HX_("set_antialiasing",f1,f0,93,a3),
	HX_("setScale",88,37,03,87),
	HX_("get_flipX",62,a1,3b,46),
	HX_("set_flipX",6e,8d,8c,29),
	HX_("get_flipY",63,a1,3b,46),
	HX_("set_flipY",6f,8d,8c,29),
	HX_("firstAnimation",b4,d0,f1,66),
	HX_("animations",ef,34,1c,83),
	HX_("formatToJson",da,73,36,b9),
	HX_("update",09,86,05,87),
	HX_("draw",04,2c,70,42),
	::String(null()) };

::hx::Class StageEditorMetaSprite_obj::__mClass;

void StageEditorMetaSprite_obj::__register()
{
	StageEditorMetaSprite_obj _hx_dummy;
	StageEditorMetaSprite_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("states.editors.StageEditorMetaSprite",01,5b,b0,a3);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(StageEditorMetaSprite_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< StageEditorMetaSprite_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = StageEditorMetaSprite_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = StageEditorMetaSprite_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace states
} // end namespace editors

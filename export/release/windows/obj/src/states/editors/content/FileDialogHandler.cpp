// Generated by Haxe 4.3.4
#include <hxcpp.h>

#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_haxe_Exception
#include <haxe/Exception.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_lime_ui_FileDialogType
#include <lime/ui/FileDialogType.h>
#endif
#ifndef INCLUDED_openfl_events_ErrorEvent
#include <openfl/events/ErrorEvent.h>
#endif
#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IOErrorEvent
#include <openfl/events/IOErrorEvent.h>
#endif
#ifndef INCLUDED_openfl_events_TextEvent
#include <openfl/events/TextEvent.h>
#endif
#ifndef INCLUDED_openfl_net_FileFilter
#include <openfl/net/FileFilter.h>
#endif
#ifndef INCLUDED_openfl_net_FileReference
#include <openfl/net/FileReference.h>
#endif
#ifndef INCLUDED_states_editors_content_FileDialogHandler
#include <states/editors/content/FileDialogHandler.h>
#endif
#ifndef INCLUDED_states_editors_content_FileReferenceCustom
#include <states/editors/content/FileReferenceCustom.h>
#endif
#ifndef INCLUDED_sys_io_File
#include <sys/io/File.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_80cf14f97dc74c75_15_new,"states.editors.content.FileDialogHandler","new",0x7e32202f,"states.editors.content.FileDialogHandler.new","states/editors/content/FileDialogHandler.hx",15,0x366c28a4)
HX_LOCAL_STACK_FRAME(_hx_pos_80cf14f97dc74c75_36_save,"states.editors.content.FileDialogHandler","save",0xf0f5108e,"states.editors.content.FileDialogHandler.save","states/editors/content/FileDialogHandler.hx",36,0x366c28a4)
HX_LOCAL_STACK_FRAME(_hx_pos_80cf14f97dc74c75_52_open,"states.editors.content.FileDialogHandler","open",0xee5b891b,"states.editors.content.FileDialogHandler.open","states/editors/content/FileDialogHandler.hx",52,0x366c28a4)
HX_LOCAL_STACK_FRAME(_hx_pos_80cf14f97dc74c75_72_openDirectory,"states.editors.content.FileDialogHandler","openDirectory",0xc25dcdd2,"states.editors.content.FileDialogHandler.openDirectory","states/editors/content/FileDialogHandler.hx",72,0x366c28a4)
HX_LOCAL_STACK_FRAME(_hx_pos_80cf14f97dc74c75_91_onSaveComplete,"states.editors.content.FileDialogHandler","onSaveComplete",0xabbf6166,"states.editors.content.FileDialogHandler.onSaveComplete","states/editors/content/FileDialogHandler.hx",91,0x366c28a4)
HX_LOCAL_STACK_FRAME(_hx_pos_80cf14f97dc74c75_103_onLoadComplete,"states.editors.content.FileDialogHandler","onLoadComplete",0x52a0014f,"states.editors.content.FileDialogHandler.onLoadComplete","states/editors/content/FileDialogHandler.hx",103,0x366c28a4)
HX_LOCAL_STACK_FRAME(_hx_pos_80cf14f97dc74c75_117_onLoadDirectoryComplete,"states.editors.content.FileDialogHandler","onLoadDirectoryComplete",0x1194a0f0,"states.editors.content.FileDialogHandler.onLoadDirectoryComplete","states/editors/content/FileDialogHandler.hx",117,0x366c28a4)
HX_LOCAL_STACK_FRAME(_hx_pos_80cf14f97dc74c75_130_onCancelFn,"states.editors.content.FileDialogHandler","onCancelFn",0xe7c0a9b2,"states.editors.content.FileDialogHandler.onCancelFn","states/editors/content/FileDialogHandler.hx",130,0x366c28a4)
HX_LOCAL_STACK_FRAME(_hx_pos_80cf14f97dc74c75_137_onErrorFn,"states.editors.content.FileDialogHandler","onErrorFn",0xb993d8e0,"states.editors.content.FileDialogHandler.onErrorFn","states/editors/content/FileDialogHandler.hx",137,0x366c28a4)
HX_LOCAL_STACK_FRAME(_hx_pos_80cf14f97dc74c75_144__startUp,"states.editors.content.FileDialogHandler","_startUp",0xe19676af,"states.editors.content.FileDialogHandler._startUp","states/editors/content/FileDialogHandler.hx",144,0x366c28a4)
HX_LOCAL_STACK_FRAME(_hx_pos_80cf14f97dc74c75_155_removeEvents,"states.editors.content.FileDialogHandler","removeEvents",0x532ea8ce,"states.editors.content.FileDialogHandler.removeEvents","states/editors/content/FileDialogHandler.hx",155,0x366c28a4)
HX_LOCAL_STACK_FRAME(_hx_pos_80cf14f97dc74c75_163_destroy,"states.editors.content.FileDialogHandler","destroy",0xc12a1049,"states.editors.content.FileDialogHandler.destroy","states/editors/content/FileDialogHandler.hx",163,0x366c28a4)
namespace states{
namespace editors{
namespace content{

void FileDialogHandler_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_80cf14f97dc74c75_15_new)
HXLINE(  89)		this->completed = true;
HXLINE(  18)		this->_dialogMode = ::lime::ui::FileDialogType_obj::OPEN_dyn();
HXLINE(  21)		this->_fileRef =  ::states::editors::content::FileReferenceCustom_obj::__alloc( HX_CTX );
HXLINE(  22)		this->_fileRef->addEventListener(HX_("cancel",7a,ed,33,b8),this->onCancelFn_dyn(),null(),null(),null());
HXLINE(  23)		this->_fileRef->addEventListener(HX_("ioError",02,fe,41,76),this->onErrorFn_dyn(),null(),null(),null());
HXLINE(  25)		super::__construct();
            	}

Dynamic FileDialogHandler_obj::__CreateEmpty() { return new FileDialogHandler_obj; }

void *FileDialogHandler_obj::_hx_vtable = 0;

Dynamic FileDialogHandler_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< FileDialogHandler_obj > _hx_result = new FileDialogHandler_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool FileDialogHandler_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x593cd04d) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x593cd04d;
	} else {
		return inClassId==(int)0x7ccf8994;
	}
}

void FileDialogHandler_obj::save(::String __o_fileName,::String __o_dataToSave, ::Dynamic onComplete, ::Dynamic onCancel, ::Dynamic onError){
            		::String fileName = __o_fileName;
            		if (::hx::IsNull(__o_fileName)) fileName = HX_("",00,00,00,00);
            		::String dataToSave = __o_dataToSave;
            		if (::hx::IsNull(__o_dataToSave)) dataToSave = HX_("",00,00,00,00);
            	HX_GC_STACKFRAME(&_hx_pos_80cf14f97dc74c75_36_save)
HXLINE(  37)		if (!(this->completed)) {
HXLINE(  39)			HX_STACK_DO_THROW( ::haxe::Exception_obj::__alloc( HX_CTX ,HX_("You must finish previous operation before starting a new one.",d1,0b,86,80),null(),null()));
            		}
HXLINE(  42)		this->_dialogMode = ::lime::ui::FileDialogType_obj::SAVE_dyn();
HXLINE(  43)		this->_startUp(onComplete,onCancel,onError);
HXLINE(  45)		this->removeEvents();
HXLINE(  46)		this->_currentEvent = this->onSaveComplete_dyn();
HXLINE(  47)		this->_fileRef->addEventListener(HX_("select",fc,1a,33,6a),this->_currentEvent,null(),null(),null());
HXLINE(  48)		this->_fileRef->save(dataToSave,fileName);
            	}


HX_DEFINE_DYNAMIC_FUNC5(FileDialogHandler_obj,save,(void))

void FileDialogHandler_obj::open(::String defaultName,::String title,::Array< ::Dynamic> filter, ::Dynamic onComplete, ::Dynamic onCancel, ::Dynamic onError){
            	HX_GC_STACKFRAME(&_hx_pos_80cf14f97dc74c75_52_open)
HXLINE(  53)		if (!(this->completed)) {
HXLINE(  55)			HX_STACK_DO_THROW( ::haxe::Exception_obj::__alloc( HX_CTX ,HX_("You must finish previous operation before starting a new one.",d1,0b,86,80),null(),null()));
            		}
HXLINE(  58)		this->_dialogMode = ::lime::ui::FileDialogType_obj::OPEN_dyn();
HXLINE(  59)		this->_startUp(onComplete,onCancel,onError);
HXLINE(  60)		if (::hx::IsNull( filter )) {
HXLINE(  60)			filter = ::Array_obj< ::Dynamic>::__new(1)->init(0, ::openfl::net::FileFilter_obj::__alloc( HX_CTX ,HX_("JSON",28,0a,29,31),HX_("json",28,42,68,46),null()));
            		}
HXLINE(  65)		this->removeEvents();
HXLINE(  66)		this->_currentEvent = this->onLoadComplete_dyn();
HXLINE(  67)		this->_fileRef->addEventListener(HX_("select",fc,1a,33,6a),this->_currentEvent,null(),null(),null());
HXLINE(  68)		this->_fileRef->browseEx(::lime::ui::FileDialogType_obj::OPEN_dyn(),defaultName,title,filter);
            	}


HX_DEFINE_DYNAMIC_FUNC6(FileDialogHandler_obj,open,(void))

void FileDialogHandler_obj::openDirectory(::String title, ::Dynamic onComplete, ::Dynamic onCancel, ::Dynamic onError){
            	HX_GC_STACKFRAME(&_hx_pos_80cf14f97dc74c75_72_openDirectory)
HXLINE(  73)		if (!(this->completed)) {
HXLINE(  75)			HX_STACK_DO_THROW( ::haxe::Exception_obj::__alloc( HX_CTX ,HX_("You must finish previous operation before starting a new one.",d1,0b,86,80),null(),null()));
            		}
HXLINE(  78)		this->_dialogMode = ::lime::ui::FileDialogType_obj::OPEN_DIRECTORY_dyn();
HXLINE(  79)		this->_startUp(onComplete,onCancel,onError);
HXLINE(  81)		this->removeEvents();
HXLINE(  82)		this->_currentEvent = this->onLoadDirectoryComplete_dyn();
HXLINE(  83)		this->_fileRef->addEventListener(HX_("select",fc,1a,33,6a),this->_currentEvent,null(),null(),null());
HXLINE(  84)		this->_fileRef->browseEx(::lime::ui::FileDialogType_obj::OPEN_DIRECTORY_dyn(),null(),title,null());
            	}


HX_DEFINE_DYNAMIC_FUNC4(FileDialogHandler_obj,openDirectory,(void))

void FileDialogHandler_obj::onSaveComplete( ::openfl::events::Event _){
            	HX_STACKFRAME(&_hx_pos_80cf14f97dc74c75_91_onSaveComplete)
HXLINE(  93)		this->path = this->_fileRef->_trackSavedPath;
HXLINE(  94)		this->completed = true;
HXLINE(  95)		::haxe::Log_obj::trace((HX_("Saved file to: ",0c,4a,80,b1) + this->path),::hx::SourceInfo(HX_("source/states/editors/content/FileDialogHandler.hx",30,06,e8,15),95,HX_("states.editors.content.FileDialogHandler",bd,dc,1c,a7),HX_("onSaveComplete",d5,ac,3f,bc)));
HXLINE(  97)		this->removeEvents();
HXLINE(  98)		this->completed = true;
HXLINE(  99)		if (::hx::IsNotNull( this->onComplete )) {
HXLINE(  99)			this->onComplete();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(FileDialogHandler_obj,onSaveComplete,(void))

void FileDialogHandler_obj::onLoadComplete( ::openfl::events::Event _){
            	HX_STACKFRAME(&_hx_pos_80cf14f97dc74c75_103_onLoadComplete)
HXLINE( 105)		this->path = this->_fileRef->_hx___path;
HXLINE( 106)		this->data = ::sys::io::File_obj::getContent(this->path);
HXLINE( 107)		this->completed = true;
HXLINE( 108)		::haxe::Log_obj::trace((HX_("Loaded file from: ",39,2b,cc,dc) + this->path),::hx::SourceInfo(HX_("source/states/editors/content/FileDialogHandler.hx",30,06,e8,15),108,HX_("states.editors.content.FileDialogHandler",bd,dc,1c,a7),HX_("onLoadComplete",be,4c,20,63)));
HXLINE( 110)		this->removeEvents();
HXLINE( 111)		this->completed = true;
HXLINE( 112)		if (::hx::IsNotNull( this->onComplete )) {
HXLINE( 113)			this->onComplete();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(FileDialogHandler_obj,onLoadComplete,(void))

void FileDialogHandler_obj::onLoadDirectoryComplete( ::openfl::events::Event _){
            	HX_STACKFRAME(&_hx_pos_80cf14f97dc74c75_117_onLoadDirectoryComplete)
HXLINE( 119)		this->path = this->_fileRef->_hx___path;
HXLINE( 120)		this->completed = true;
HXLINE( 121)		::haxe::Log_obj::trace((HX_("Loaded directory: ",d8,ed,a5,8f) + this->path),::hx::SourceInfo(HX_("source/states/editors/content/FileDialogHandler.hx",30,06,e8,15),121,HX_("states.editors.content.FileDialogHandler",bd,dc,1c,a7),HX_("onLoadDirectoryComplete",a1,ef,7c,22)));
HXLINE( 123)		this->removeEvents();
HXLINE( 124)		this->completed = true;
HXLINE( 125)		if (::hx::IsNotNull( this->onComplete )) {
HXLINE( 126)			this->onComplete();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(FileDialogHandler_obj,onLoadDirectoryComplete,(void))

void FileDialogHandler_obj::onCancelFn( ::openfl::events::Event _){
            	HX_STACKFRAME(&_hx_pos_80cf14f97dc74c75_130_onCancelFn)
HXLINE( 131)		this->removeEvents();
HXLINE( 132)		this->completed = true;
HXLINE( 133)		if (::hx::IsNotNull( this->onCancel )) {
HXLINE( 133)			this->onError();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(FileDialogHandler_obj,onCancelFn,(void))

void FileDialogHandler_obj::onErrorFn( ::openfl::events::IOErrorEvent _){
            	HX_STACKFRAME(&_hx_pos_80cf14f97dc74c75_137_onErrorFn)
HXLINE( 138)		this->removeEvents();
HXLINE( 139)		this->completed = true;
HXLINE( 140)		if (::hx::IsNotNull( this->onError )) {
HXLINE( 140)			this->onError();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(FileDialogHandler_obj,onErrorFn,(void))

void FileDialogHandler_obj::_startUp( ::Dynamic onComplete, ::Dynamic onCancel, ::Dynamic onError){
            	HX_STACKFRAME(&_hx_pos_80cf14f97dc74c75_144__startUp)
HXLINE( 145)		this->onComplete = onComplete;
HXLINE( 146)		this->onCancel = onCancel;
HXLINE( 147)		this->onError = onError;
HXLINE( 148)		this->completed = false;
HXLINE( 150)		this->data = null();
HXLINE( 151)		this->path = null();
            	}


HX_DEFINE_DYNAMIC_FUNC3(FileDialogHandler_obj,_startUp,(void))

void FileDialogHandler_obj::removeEvents(){
            	HX_STACKFRAME(&_hx_pos_80cf14f97dc74c75_155_removeEvents)
HXLINE( 156)		if (::hx::IsNull( this->_currentEvent )) {
HXLINE( 156)			return;
            		}
HXLINE( 158)		this->_fileRef->removeEventListener(HX_("select",fc,1a,33,6a),this->_currentEvent,null());
HXLINE( 159)		this->_currentEvent = null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(FileDialogHandler_obj,removeEvents,(void))

void FileDialogHandler_obj::destroy(){
            	HX_STACKFRAME(&_hx_pos_80cf14f97dc74c75_163_destroy)
HXLINE( 164)		this->removeEvents();
HXLINE( 165)		this->_fileRef = null();
HXLINE( 166)		this->_currentEvent = null();
HXLINE( 167)		this->onComplete = null();
HXLINE( 168)		this->onCancel = null();
HXLINE( 169)		this->onError = null();
HXLINE( 170)		this->data = null();
HXLINE( 171)		this->path = null();
HXLINE( 172)		this->completed = true;
HXLINE( 173)		this->super::destroy();
            	}



::hx::ObjectPtr< FileDialogHandler_obj > FileDialogHandler_obj::__new() {
	::hx::ObjectPtr< FileDialogHandler_obj > __this = new FileDialogHandler_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< FileDialogHandler_obj > FileDialogHandler_obj::__alloc(::hx::Ctx *_hx_ctx) {
	FileDialogHandler_obj *__this = (FileDialogHandler_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(FileDialogHandler_obj), true, "states.editors.content.FileDialogHandler"));
	*(void **)__this = FileDialogHandler_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

FileDialogHandler_obj::FileDialogHandler_obj()
{
}

void FileDialogHandler_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(FileDialogHandler);
	HX_MARK_MEMBER_NAME(_fileRef,"_fileRef");
	HX_MARK_MEMBER_NAME(_dialogMode,"_dialogMode");
	HX_MARK_MEMBER_NAME(onComplete,"onComplete");
	HX_MARK_MEMBER_NAME(onCancel,"onCancel");
	HX_MARK_MEMBER_NAME(onError,"onError");
	HX_MARK_MEMBER_NAME(_currentEvent,"_currentEvent");
	HX_MARK_MEMBER_NAME(data,"data");
	HX_MARK_MEMBER_NAME(path,"path");
	HX_MARK_MEMBER_NAME(completed,"completed");
	 ::flixel::FlxBasic_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void FileDialogHandler_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_fileRef,"_fileRef");
	HX_VISIT_MEMBER_NAME(_dialogMode,"_dialogMode");
	HX_VISIT_MEMBER_NAME(onComplete,"onComplete");
	HX_VISIT_MEMBER_NAME(onCancel,"onCancel");
	HX_VISIT_MEMBER_NAME(onError,"onError");
	HX_VISIT_MEMBER_NAME(_currentEvent,"_currentEvent");
	HX_VISIT_MEMBER_NAME(data,"data");
	HX_VISIT_MEMBER_NAME(path,"path");
	HX_VISIT_MEMBER_NAME(completed,"completed");
	 ::flixel::FlxBasic_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val FileDialogHandler_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"save") ) { return ::hx::Val( save_dyn() ); }
		if (HX_FIELD_EQ(inName,"open") ) { return ::hx::Val( open_dyn() ); }
		if (HX_FIELD_EQ(inName,"data") ) { return ::hx::Val( data ); }
		if (HX_FIELD_EQ(inName,"path") ) { return ::hx::Val( path ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"onError") ) { return ::hx::Val( onError ); }
		if (HX_FIELD_EQ(inName,"destroy") ) { return ::hx::Val( destroy_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"_fileRef") ) { return ::hx::Val( _fileRef ); }
		if (HX_FIELD_EQ(inName,"onCancel") ) { return ::hx::Val( onCancel ); }
		if (HX_FIELD_EQ(inName,"_startUp") ) { return ::hx::Val( _startUp_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"completed") ) { return ::hx::Val( completed ); }
		if (HX_FIELD_EQ(inName,"onErrorFn") ) { return ::hx::Val( onErrorFn_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"onComplete") ) { return ::hx::Val( onComplete ); }
		if (HX_FIELD_EQ(inName,"onCancelFn") ) { return ::hx::Val( onCancelFn_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"_dialogMode") ) { return ::hx::Val( _dialogMode ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"removeEvents") ) { return ::hx::Val( removeEvents_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"_currentEvent") ) { return ::hx::Val( _currentEvent ); }
		if (HX_FIELD_EQ(inName,"openDirectory") ) { return ::hx::Val( openDirectory_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"onSaveComplete") ) { return ::hx::Val( onSaveComplete_dyn() ); }
		if (HX_FIELD_EQ(inName,"onLoadComplete") ) { return ::hx::Val( onLoadComplete_dyn() ); }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"onLoadDirectoryComplete") ) { return ::hx::Val( onLoadDirectoryComplete_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val FileDialogHandler_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"data") ) { data=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"path") ) { path=inValue.Cast< ::String >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"onError") ) { onError=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"_fileRef") ) { _fileRef=inValue.Cast<  ::states::editors::content::FileReferenceCustom >(); return inValue; }
		if (HX_FIELD_EQ(inName,"onCancel") ) { onCancel=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"completed") ) { completed=inValue.Cast< bool >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"onComplete") ) { onComplete=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"_dialogMode") ) { _dialogMode=inValue.Cast<  ::lime::ui::FileDialogType >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"_currentEvent") ) { _currentEvent=inValue.Cast<  ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void FileDialogHandler_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("_fileRef",b8,51,06,39));
	outFields->push(HX_("_dialogMode",6a,d5,ec,8e));
	outFields->push(HX_("data",2a,56,63,42));
	outFields->push(HX_("path",a5,e5,51,4a));
	outFields->push(HX_("completed",8b,a1,38,4f));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo FileDialogHandler_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::states::editors::content::FileReferenceCustom */ ,(int)offsetof(FileDialogHandler_obj,_fileRef),HX_("_fileRef",b8,51,06,39)},
	{::hx::fsObject /*  ::lime::ui::FileDialogType */ ,(int)offsetof(FileDialogHandler_obj,_dialogMode),HX_("_dialogMode",6a,d5,ec,8e)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(FileDialogHandler_obj,onComplete),HX_("onComplete",f8,d4,7e,5d)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(FileDialogHandler_obj,onCancel),HX_("onCancel",f9,e3,e0,97)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(FileDialogHandler_obj,onError),HX_("onError",29,6a,67,09)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(FileDialogHandler_obj,_currentEvent),HX_("_currentEvent",00,40,3f,9f)},
	{::hx::fsString,(int)offsetof(FileDialogHandler_obj,data),HX_("data",2a,56,63,42)},
	{::hx::fsString,(int)offsetof(FileDialogHandler_obj,path),HX_("path",a5,e5,51,4a)},
	{::hx::fsBool,(int)offsetof(FileDialogHandler_obj,completed),HX_("completed",8b,a1,38,4f)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *FileDialogHandler_obj_sStaticStorageInfo = 0;
#endif

static ::String FileDialogHandler_obj_sMemberFields[] = {
	HX_("_fileRef",b8,51,06,39),
	HX_("_dialogMode",6a,d5,ec,8e),
	HX_("onComplete",f8,d4,7e,5d),
	HX_("onCancel",f9,e3,e0,97),
	HX_("onError",29,6a,67,09),
	HX_("_currentEvent",00,40,3f,9f),
	HX_("save",3d,8b,4d,4c),
	HX_("open",ca,03,b4,49),
	HX_("openDirectory",43,05,0e,2c),
	HX_("data",2a,56,63,42),
	HX_("path",a5,e5,51,4a),
	HX_("completed",8b,a1,38,4f),
	HX_("onSaveComplete",d5,ac,3f,bc),
	HX_("onLoadComplete",be,4c,20,63),
	HX_("onLoadDirectoryComplete",a1,ef,7c,22),
	HX_("onCancelFn",a1,d1,dc,fc),
	HX_("onErrorFn",d1,43,b5,c1),
	HX_("_startUp",de,74,d3,6e),
	HX_("removeEvents",7d,ea,97,05),
	HX_("destroy",fa,2c,86,24),
	::String(null()) };

::hx::Class FileDialogHandler_obj::__mClass;

void FileDialogHandler_obj::__register()
{
	FileDialogHandler_obj _hx_dummy;
	FileDialogHandler_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("states.editors.content.FileDialogHandler",bd,dc,1c,a7);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(FileDialogHandler_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< FileDialogHandler_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FileDialogHandler_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FileDialogHandler_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace states
} // end namespace editors
} // end namespace content

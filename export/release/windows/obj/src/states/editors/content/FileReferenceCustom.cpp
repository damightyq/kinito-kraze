// Generated by Haxe 4.3.4
#include <hxcpp.h>

#ifndef INCLUDED_StringTools
#include <StringTools.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_lime_app__Event_String_Void
#include <lime/app/_Event_String_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_Void_Void
#include <lime/app/_Event_Void_Void.h>
#endif
#ifndef INCLUDED_lime_ui_FileDialog
#include <lime/ui/FileDialog.h>
#endif
#ifndef INCLUDED_lime_ui_FileDialogType
#include <lime/ui/FileDialogType.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_net_FileFilter
#include <openfl/net/FileFilter.h>
#endif
#ifndef INCLUDED_openfl_net_FileReference
#include <openfl/net/FileReference.h>
#endif
#ifndef INCLUDED_openfl_utils_ByteArrayData
#include <openfl/utils/ByteArrayData.h>
#endif
#ifndef INCLUDED_openfl_utils_IDataInput
#include <openfl/utils/IDataInput.h>
#endif
#ifndef INCLUDED_openfl_utils_IDataOutput
#include <openfl/utils/IDataOutput.h>
#endif
#ifndef INCLUDED_states_editors_content_FileReferenceCustom
#include <states/editors/content/FileReferenceCustom.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_6827e4bc155c9301_178_new,"states.editors.content.FileReferenceCustom","new",0x0aca23e9,"states.editors.content.FileReferenceCustom.new","states/editors/content/FileDialogHandler.hx",178,0x366c28a4)
HX_LOCAL_STACK_FRAME(_hx_pos_6827e4bc155c9301_183_saveFileDialog_onSelect,"states.editors.content.FileReferenceCustom","saveFileDialog_onSelect",0x5b85c4c2,"states.editors.content.FileReferenceCustom.saveFileDialog_onSelect","states/editors/content/FileDialogHandler.hx",183,0x366c28a4)
HX_LOCAL_STACK_FRAME(_hx_pos_6827e4bc155c9301_189_browseEx,"states.editors.content.FileReferenceCustom","browseEx",0x4c1c4c74,"states.editors.content.FileReferenceCustom.browseEx","states/editors/content/FileDialogHandler.hx",189,0x366c28a4)
namespace states{
namespace editors{
namespace content{

void FileReferenceCustom_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_6827e4bc155c9301_178_new)
HXDLIN( 178)		super::__construct();
            	}

Dynamic FileReferenceCustom_obj::__CreateEmpty() { return new FileReferenceCustom_obj; }

void *FileReferenceCustom_obj::_hx_vtable = 0;

Dynamic FileReferenceCustom_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< FileReferenceCustom_obj > _hx_result = new FileReferenceCustom_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool FileReferenceCustom_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x0c89e854) {
		if (inClassId<=(int)0x0c1b0022) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x0c1b0022;
		} else {
			return inClassId==(int)0x0c89e854;
		}
	} else {
		return inClassId==(int)0x154df377;
	}
}

void FileReferenceCustom_obj::saveFileDialog_onSelect(::String path){
            	HX_STACKFRAME(&_hx_pos_6827e4bc155c9301_183_saveFileDialog_onSelect)
HXLINE( 184)		this->_trackSavedPath = path;
HXLINE( 185)		this->super::saveFileDialog_onSelect(path);
            	}


bool FileReferenceCustom_obj::browseEx( ::lime::ui::FileDialogType __o_browseType,::String defaultName,::String title,::Array< ::Dynamic> typeFilter){
            		 ::lime::ui::FileDialogType browseType = __o_browseType;
            		if (::hx::IsNull(__o_browseType)) browseType = ::lime::ui::FileDialogType_obj::OPEN_dyn();
            	HX_GC_STACKFRAME(&_hx_pos_6827e4bc155c9301_189_browseEx)
HXLINE( 190)		this->_hx___data = null();
HXLINE( 191)		this->_hx___path = null();
HXLINE( 194)		::String filter = null();
HXLINE( 196)		if (::hx::IsNotNull( typeFilter )) {
HXLINE( 198)			::Array< ::String > filters = ::Array_obj< ::String >::__new(0);
HXLINE( 200)			{
HXLINE( 200)				int _g = 0;
HXDLIN( 200)				while((_g < typeFilter->length)){
HXLINE( 200)					 ::openfl::net::FileFilter type = typeFilter->__get(_g).StaticCast<  ::openfl::net::FileFilter >();
HXDLIN( 200)					_g = (_g + 1);
HXLINE( 202)					filters->push(::StringTools_obj::replace(::StringTools_obj::replace(type->extension,HX_("*.",c4,24,00,00),HX_("",00,00,00,00)),HX_(";",3b,00,00,00),HX_(",",2c,00,00,00)));
            				}
            			}
HXLINE( 205)			filter = filters->join(HX_(";",3b,00,00,00));
            		}
HXLINE( 208)		 ::lime::ui::FileDialog openFileDialog =  ::lime::ui::FileDialog_obj::__alloc( HX_CTX );
HXLINE( 209)		openFileDialog->onCancel->add(this->openFileDialog_onCancel_dyn(),null(),null());
HXLINE( 210)		openFileDialog->onSelect->add(this->openFileDialog_onSelect_dyn(),null(),null());
HXLINE( 211)		openFileDialog->browse(browseType,filter,defaultName,title);
HXLINE( 212)		return true;
            	}


HX_DEFINE_DYNAMIC_FUNC4(FileReferenceCustom_obj,browseEx,return )


::hx::ObjectPtr< FileReferenceCustom_obj > FileReferenceCustom_obj::__new() {
	::hx::ObjectPtr< FileReferenceCustom_obj > __this = new FileReferenceCustom_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< FileReferenceCustom_obj > FileReferenceCustom_obj::__alloc(::hx::Ctx *_hx_ctx) {
	FileReferenceCustom_obj *__this = (FileReferenceCustom_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(FileReferenceCustom_obj), true, "states.editors.content.FileReferenceCustom"));
	*(void **)__this = FileReferenceCustom_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

FileReferenceCustom_obj::FileReferenceCustom_obj()
{
}

void FileReferenceCustom_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(FileReferenceCustom);
	HX_MARK_MEMBER_NAME(_trackSavedPath,"_trackSavedPath");
	 ::openfl::net::FileReference_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void FileReferenceCustom_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_trackSavedPath,"_trackSavedPath");
	 ::openfl::net::FileReference_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val FileReferenceCustom_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"browseEx") ) { return ::hx::Val( browseEx_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"_trackSavedPath") ) { return ::hx::Val( _trackSavedPath ); }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"saveFileDialog_onSelect") ) { return ::hx::Val( saveFileDialog_onSelect_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val FileReferenceCustom_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 15:
		if (HX_FIELD_EQ(inName,"_trackSavedPath") ) { _trackSavedPath=inValue.Cast< ::String >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void FileReferenceCustom_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("_trackSavedPath",60,9c,dd,14));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo FileReferenceCustom_obj_sMemberStorageInfo[] = {
	{::hx::fsString,(int)offsetof(FileReferenceCustom_obj,_trackSavedPath),HX_("_trackSavedPath",60,9c,dd,14)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *FileReferenceCustom_obj_sStaticStorageInfo = 0;
#endif

static ::String FileReferenceCustom_obj_sMemberFields[] = {
	HX_("_trackSavedPath",60,9c,dd,14),
	HX_("saveFileDialog_onSelect",b9,16,1a,eb),
	HX_("browseEx",9d,10,7b,9c),
	::String(null()) };

::hx::Class FileReferenceCustom_obj::__mClass;

void FileReferenceCustom_obj::__register()
{
	FileReferenceCustom_obj _hx_dummy;
	FileReferenceCustom_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("states.editors.content.FileReferenceCustom",77,fb,45,4d);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(FileReferenceCustom_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< FileReferenceCustom_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FileReferenceCustom_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FileReferenceCustom_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace states
} // end namespace editors
} // end namespace content

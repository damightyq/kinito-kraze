// Generated by Haxe 4.3.4
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_StringTools
#include <StringTools.h>
#endif
#ifndef INCLUDED_backend_BaseStage
#include <backend/BaseStage.h>
#endif
#ifndef INCLUDED_backend_ClientPrefs
#include <backend/ClientPrefs.h>
#endif
#ifndef INCLUDED_backend_Conductor
#include <backend/Conductor.h>
#endif
#ifndef INCLUDED_backend_Language
#include <backend/Language.h>
#endif
#ifndef INCLUDED_backend_MusicBeatState
#include <backend/MusicBeatState.h>
#endif
#ifndef INCLUDED_backend_MusicBeatSubstate
#include <backend/MusicBeatSubstate.h>
#endif
#ifndef INCLUDED_backend_Paths
#include <backend/Paths.h>
#endif
#ifndef INCLUDED_backend_SaveVariables
#include <backend/SaveVariables.h>
#endif
#ifndef INCLUDED_cutscenes_CutsceneHandler
#include <cutscenes/CutsceneHandler.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxCamera
#include <flixel/FlxCamera.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxGame
#include <flixel/FlxGame.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_FlxState
#include <flixel/FlxState.h>
#endif
#ifndef INCLUDED_flixel_FlxStrip
#include <flixel/FlxStrip.h>
#endif
#ifndef INCLUDED_flixel_FlxSubState
#include <flixel/FlxSubState.h>
#endif
#ifndef INCLUDED_flixel_addons_display_FlxTiledSprite
#include <flixel/addons/display/FlxTiledSprite.h>
#endif
#ifndef INCLUDED_flixel_addons_transition_FlxTransitionableState
#include <flixel/addons/transition/FlxTransitionableState.h>
#endif
#ifndef INCLUDED_flixel_animation_FlxAnimationController
#include <flixel/animation/FlxAnimationController.h>
#endif
#ifndef INCLUDED_flixel_graphics_FlxGraphic
#include <flixel/graphics/FlxGraphic.h>
#endif
#ifndef INCLUDED_flixel_graphics_frames_FlxAtlasFrames
#include <flixel/graphics/frames/FlxAtlasFrames.h>
#endif
#ifndef INCLUDED_flixel_graphics_frames_FlxFrame
#include <flixel/graphics/frames/FlxFrame.h>
#endif
#ifndef INCLUDED_flixel_graphics_frames_FlxFramesCollection
#include <flixel/graphics/frames/FlxFramesCollection.h>
#endif
#ifndef INCLUDED_flixel_graphics_tile_FlxGraphicsShader
#include <flixel/graphics/tile/FlxGraphicsShader.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedSpriteGroup
#include <flixel/group/FlxTypedSpriteGroup.h>
#endif
#ifndef INCLUDED_flixel_math_FlxBasePoint
#include <flixel/math/FlxBasePoint.h>
#endif
#ifndef INCLUDED_flixel_math_FlxMath
#include <flixel/math/FlxMath.h>
#endif
#ifndef INCLUDED_flixel_math_FlxRandom
#include <flixel/math/FlxRandom.h>
#endif
#ifndef INCLUDED_flixel_sound_FlxSound
#include <flixel/sound/FlxSound.h>
#endif
#ifndef INCLUDED_flixel_sound_FlxSoundGroup
#include <flixel/sound/FlxSoundGroup.h>
#endif
#ifndef INCLUDED_flixel_system_frontEnds_SoundFrontEnd
#include <flixel/system/frontEnds/SoundFrontEnd.h>
#endif
#ifndef INCLUDED_flixel_tweens_FlxEase
#include <flixel/tweens/FlxEase.h>
#endif
#ifndef INCLUDED_flixel_tweens_FlxTween
#include <flixel/tweens/FlxTween.h>
#endif
#ifndef INCLUDED_flixel_tweens_misc_AngleTween
#include <flixel/tweens/misc/AngleTween.h>
#endif
#ifndef INCLUDED_flixel_tweens_misc_ColorTween
#include <flixel/tweens/misc/ColorTween.h>
#endif
#ifndef INCLUDED_flixel_tweens_misc_VarTween
#include <flixel/tweens/misc/VarTween.h>
#endif
#ifndef INCLUDED_flixel_tweens_motion_Motion
#include <flixel/tweens/motion/Motion.h>
#endif
#ifndef INCLUDED_flixel_tweens_motion_QuadPath
#include <flixel/tweens/motion/QuadPath.h>
#endif
#ifndef INCLUDED_flixel_util_FlxPool
#include <flixel/util/FlxPool.h>
#endif
#ifndef INCLUDED_flixel_util_FlxTimer
#include <flixel/util/FlxTimer.h>
#endif
#ifndef INCLUDED_flixel_util_FlxTimerManager
#include <flixel/util/FlxTimerManager.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxPool
#include <flixel/util/IFlxPool.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxPooled
#include <flixel/util/IFlxPooled.h>
#endif
#ifndef INCLUDED_flxanimate_FlxAnimate
#include <flxanimate/FlxAnimate.h>
#endif
#ifndef INCLUDED_flxanimate_PsychFlxAnimate
#include <flxanimate/PsychFlxAnimate.h>
#endif
#ifndef INCLUDED_flxanimate_animate_FlxAnim
#include <flxanimate/animate/FlxAnim.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_objects_BGSprite
#include <objects/BGSprite.h>
#endif
#ifndef INCLUDED_objects_Character
#include <objects/Character.h>
#endif
#ifndef INCLUDED_objects_Note
#include <objects/Note.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_GraphicsShader
#include <openfl/display/GraphicsShader.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Shader
#include <openfl/display/Shader.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_filters_BitmapFilter
#include <openfl/filters/BitmapFilter.h>
#endif
#ifndef INCLUDED_openfl_filters_ShaderFilter
#include <openfl/filters/ShaderFilter.h>
#endif
#ifndef INCLUDED_openfl_media_Sound
#include <openfl/media/Sound.h>
#endif
#ifndef INCLUDED_shaders_RainShader
#include <shaders/RainShader.h>
#endif
#ifndef INCLUDED_states_PlayState
#include <states/PlayState.h>
#endif
#ifndef INCLUDED_states_stages_NeneState
#include <states/stages/NeneState.h>
#endif
#ifndef INCLUDED_states_stages_PhillyStreets
#include <states/stages/PhillyStreets.h>
#endif
#ifndef INCLUDED_states_stages_objects_ABotSpeaker
#include <states/stages/objects/ABotSpeaker.h>
#endif
#ifndef INCLUDED_states_stages_objects_SpraycanAtlasSprite
#include <states/stages/objects/SpraycanAtlasSprite.h>
#endif
#ifndef INCLUDED_substates_GameOverSubstate
#include <substates/GameOverSubstate.h>
#endif
#ifndef INCLUDED_sys_FileSystem
#include <sys/FileSystem.h>
#endif
#ifndef INCLUDED_sys_io_File
#include <sys/io/File.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_25_new,"states.stages.PhillyStreets","new",0x16baa38d,"states.stages.PhillyStreets.new","states/stages/PhillyStreets.hx",25,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_49_create,"states.stages.PhillyStreets","create",0x7f2d0def,"states.stages.PhillyStreets.create","states/stages/PhillyStreets.hx",49,0xc5ad7ea3)
static const ::String _hx_array_data_624cd91b_3[] = {
	HX_("car1",9d,1d,ba,41),HX_("car2",9e,1d,ba,41),HX_("car3",9f,1d,ba,41),HX_("car4",a0,1d,ba,41),
};
static const ::String _hx_array_data_624cd91b_4[] = {
	HX_("car1",9d,1d,ba,41),HX_("car2",9e,1d,ba,41),HX_("car3",9f,1d,ba,41),HX_("car4",a0,1d,ba,41),
};
static const ::String _hx_array_data_624cd91b_5[] = {
	HX_("redtogreen",37,4e,60,05),HX_("greentored",13,61,c8,55),
};
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_156_create,"states.stages.PhillyStreets","create",0x7f2d0def,"states.stages.PhillyStreets.create","states/stages/PhillyStreets.hx",156,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_153_create,"states.stages.PhillyStreets","create",0x7f2d0def,"states.stages.PhillyStreets.create","states/stages/PhillyStreets.hx",153,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_171_createPost,"states.stages.PhillyStreets","createPost",0x2131e1ef,"states.stages.PhillyStreets.createPost","states/stages/PhillyStreets.hx",171,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_195_createPost,"states.stages.PhillyStreets","createPost",0x2131e1ef,"states.stages.PhillyStreets.createPost","states/stages/PhillyStreets.hx",195,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_212_videoCutscene,"states.stages.PhillyStreets","videoCutscene",0xe84dcd92,"states.stages.PhillyStreets.videoCutscene","states/stages/PhillyStreets.hx",212,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_227_videoCutscene,"states.stages.PhillyStreets","videoCutscene",0xe84dcd92,"states.stages.PhillyStreets.videoCutscene","states/stages/PhillyStreets.hx",227,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_272_darnellCutscene,"states.stages.PhillyStreets","darnellCutscene",0x105b66a3,"states.stages.PhillyStreets.darnellCutscene","states/stages/PhillyStreets.hx",272,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_282_darnellCutscene,"states.stages.PhillyStreets","darnellCutscene",0x105b66a3,"states.stages.PhillyStreets.darnellCutscene","states/stages/PhillyStreets.hx",282,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_294_darnellCutscene,"states.stages.PhillyStreets","darnellCutscene",0x105b66a3,"states.stages.PhillyStreets.darnellCutscene","states/stages/PhillyStreets.hx",294,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_297_darnellCutscene,"states.stages.PhillyStreets","darnellCutscene",0x105b66a3,"states.stages.PhillyStreets.darnellCutscene","states/stages/PhillyStreets.hx",297,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_304_darnellCutscene,"states.stages.PhillyStreets","darnellCutscene",0x105b66a3,"states.stages.PhillyStreets.darnellCutscene","states/stages/PhillyStreets.hx",304,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_309_darnellCutscene,"states.stages.PhillyStreets","darnellCutscene",0x105b66a3,"states.stages.PhillyStreets.darnellCutscene","states/stages/PhillyStreets.hx",309,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_314_darnellCutscene,"states.stages.PhillyStreets","darnellCutscene",0x105b66a3,"states.stages.PhillyStreets.darnellCutscene","states/stages/PhillyStreets.hx",314,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_316_darnellCutscene,"states.stages.PhillyStreets","darnellCutscene",0x105b66a3,"states.stages.PhillyStreets.darnellCutscene","states/stages/PhillyStreets.hx",316,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_322_darnellCutscene,"states.stages.PhillyStreets","darnellCutscene",0x105b66a3,"states.stages.PhillyStreets.darnellCutscene","states/stages/PhillyStreets.hx",322,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_338_darnellCutscene,"states.stages.PhillyStreets","darnellCutscene",0x105b66a3,"states.stages.PhillyStreets.darnellCutscene","states/stages/PhillyStreets.hx",338,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_327_darnellCutscene,"states.stages.PhillyStreets","darnellCutscene",0x105b66a3,"states.stages.PhillyStreets.darnellCutscene","states/stages/PhillyStreets.hx",327,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_343_darnellCutscene,"states.stages.PhillyStreets","darnellCutscene",0x105b66a3,"states.stages.PhillyStreets.darnellCutscene","states/stages/PhillyStreets.hx",343,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_351_darnellCutscene,"states.stages.PhillyStreets","darnellCutscene",0x105b66a3,"states.stages.PhillyStreets.darnellCutscene","states/stages/PhillyStreets.hx",351,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_364_darnellCutscene,"states.stages.PhillyStreets","darnellCutscene",0x105b66a3,"states.stages.PhillyStreets.darnellCutscene","states/stages/PhillyStreets.hx",364,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_359_darnellCutscene,"states.stages.PhillyStreets","darnellCutscene",0x105b66a3,"states.stages.PhillyStreets.darnellCutscene","states/stages/PhillyStreets.hx",359,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_372_darnellCutscene,"states.stages.PhillyStreets","darnellCutscene",0x105b66a3,"states.stages.PhillyStreets.darnellCutscene","states/stages/PhillyStreets.hx",372,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_247_darnellCutscene,"states.stages.PhillyStreets","darnellCutscene",0x105b66a3,"states.stages.PhillyStreets.darnellCutscene","states/stages/PhillyStreets.hx",247,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_392_updateABotEye,"states.stages.PhillyStreets","updateABotEye",0x725f8b4f,"states.stages.PhillyStreets.updateABotEye","states/stages/PhillyStreets.hx",392,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_402_startSong,"states.stages.PhillyStreets","startSong",0x6c589044,"states.stages.PhillyStreets.startSong","states/stages/PhillyStreets.hx",402,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_408_onNeneAnimationFinished,"states.stages.PhillyStreets","onNeneAnimationFinished",0x2eee1a96,"states.stages.PhillyStreets.onNeneAnimationFinished","states/stages/PhillyStreets.hx",408,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_436_precache,"states.stages.PhillyStreets","precache",0x70cc64f2,"states.stages.PhillyStreets.precache","states/stages/PhillyStreets.hx",436,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_457_precache,"states.stages.PhillyStreets","precache",0x70cc64f2,"states.stages.PhillyStreets.precache","states/stages/PhillyStreets.hx",457,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_433_precache,"states.stages.PhillyStreets","precache",0x70cc64f2,"states.stages.PhillyStreets.precache","states/stages/PhillyStreets.hx",433,0xc5ad7ea3)
static const bool _hx_array_data_624cd91b_39[] = {
	0,
};
static const bool _hx_array_data_624cd91b_40[] = {
	0,
};
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_502_setupRainShader,"states.stages.PhillyStreets","setupRainShader",0xf10f2723,"states.stages.PhillyStreets.setupRainShader","states/stages/PhillyStreets.hx",502,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_524_update,"states.stages.PhillyStreets","update",0x8a232cfc,"states.stages.PhillyStreets.update","states/stages/PhillyStreets.hx",524,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_543_transitionState,"states.stages.PhillyStreets","transitionState",0xcae45ee9,"states.stages.PhillyStreets.transitionState","states/stages/PhillyStreets.hx",543,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_593_sectionHit,"states.stages.PhillyStreets","sectionHit",0x831591e1,"states.stages.PhillyStreets.sectionHit","states/stages/PhillyStreets.hx",593,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_605_beatHit,"states.stages.PhillyStreets","beatHit",0x2ad9582a,"states.stages.PhillyStreets.beatHit","states/stages/PhillyStreets.hx",605,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_637_changeLights,"states.stages.PhillyStreets","changeLights",0xe9edc3a0,"states.stages.PhillyStreets.changeLights","states/stages/PhillyStreets.hx",637,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_670_finishCarLights,"states.stages.PhillyStreets","finishCarLights",0xabdc39eb,"states.stages.PhillyStreets.finishCarLights","states/stages/PhillyStreets.hx",670,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_656_finishCarLights,"states.stages.PhillyStreets","finishCarLights",0xabdc39eb,"states.stages.PhillyStreets.finishCarLights","states/stages/PhillyStreets.hx",656,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_708_driveCarLights,"states.stages.PhillyStreets","driveCarLights",0x86a2b19a,"states.stages.PhillyStreets.driveCarLights","states/stages/PhillyStreets.hx",708,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_674_driveCarLights,"states.stages.PhillyStreets","driveCarLights",0x86a2b19a,"states.stages.PhillyStreets.driveCarLights","states/stages/PhillyStreets.hx",674,0xc5ad7ea3)
static const int _hx_array_data_624cd91b_52[] = {
	(int)0,(int)0,
};
static const int _hx_array_data_624cd91b_53[] = {
	(int)20,(int)-15,
};
static const int _hx_array_data_624cd91b_54[] = {
	(int)30,(int)50,
};
static const int _hx_array_data_624cd91b_55[] = {
	(int)10,(int)60,
};
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_749_driveCar,"states.stages.PhillyStreets","driveCar",0x4f060edd,"states.stages.PhillyStreets.driveCar","states/stages/PhillyStreets.hx",749,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_715_driveCar,"states.stages.PhillyStreets","driveCar",0x4f060edd,"states.stages.PhillyStreets.driveCar","states/stages/PhillyStreets.hx",715,0xc5ad7ea3)
static const int _hx_array_data_624cd91b_58[] = {
	(int)0,(int)0,
};
static const int _hx_array_data_624cd91b_59[] = {
	(int)20,(int)-15,
};
static const int _hx_array_data_624cd91b_60[] = {
	(int)30,(int)50,
};
static const int _hx_array_data_624cd91b_61[] = {
	(int)10,(int)60,
};
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_787_driveCarBack,"states.stages.PhillyStreets","driveCarBack",0x519d47a4,"states.stages.PhillyStreets.driveCarBack","states/stages/PhillyStreets.hx",787,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_753_driveCarBack,"states.stages.PhillyStreets","driveCarBack",0x519d47a4,"states.stages.PhillyStreets.driveCarBack","states/stages/PhillyStreets.hx",753,0xc5ad7ea3)
static const int _hx_array_data_624cd91b_64[] = {
	(int)0,(int)0,
};
static const int _hx_array_data_624cd91b_65[] = {
	(int)20,(int)-15,
};
static const int _hx_array_data_624cd91b_66[] = {
	(int)30,(int)50,
};
static const int _hx_array_data_624cd91b_67[] = {
	(int)10,(int)60,
};
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_791_goodNoteHit,"states.stages.PhillyStreets","goodNoteHit",0x1d2595f1,"states.stages.PhillyStreets.goodNoteHit","states/stages/PhillyStreets.hx",791,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_817_goodNoteHit,"states.stages.PhillyStreets","goodNoteHit",0x1d2595f1,"states.stages.PhillyStreets.goodNoteHit","states/stages/PhillyStreets.hx",817,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_831_goodNoteHit,"states.stages.PhillyStreets","goodNoteHit",0x1d2595f1,"states.stages.PhillyStreets.goodNoteHit","states/stages/PhillyStreets.hx",831,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_845_goodNoteHit,"states.stages.PhillyStreets","goodNoteHit",0x1d2595f1,"states.stages.PhillyStreets.goodNoteHit","states/stages/PhillyStreets.hx",845,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_862_createCasing,"states.stages.PhillyStreets","createCasing",0xf899b33c,"states.stages.PhillyStreets.createCasing","states/stages/PhillyStreets.hx",862,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_851_createCasing,"states.stages.PhillyStreets","createCasing",0xf899b33c,"states.stages.PhillyStreets.createCasing","states/stages/PhillyStreets.hx",851,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_889_opponentNoteHit,"states.stages.PhillyStreets","opponentNoteHit",0xb2f9d811,"states.stages.PhillyStreets.opponentNoteHit","states/stages/PhillyStreets.hx",889,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_914_opponentNoteHit,"states.stages.PhillyStreets","opponentNoteHit",0xb2f9d811,"states.stages.PhillyStreets.opponentNoteHit","states/stages/PhillyStreets.hx",914,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_929_noteMiss,"states.stages.PhillyStreets","noteMiss",0x9a9b01c1,"states.stages.PhillyStreets.noteMiss","states/stages/PhillyStreets.hx",929,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_945_noteMiss,"states.stages.PhillyStreets","noteMiss",0x9a9b01c1,"states.stages.PhillyStreets.noteMiss","states/stages/PhillyStreets.hx",945,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_950_noteMiss,"states.stages.PhillyStreets","noteMiss",0x9a9b01c1,"states.stages.PhillyStreets.noteMiss","states/stages/PhillyStreets.hx",950,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_956_noteMiss,"states.stages.PhillyStreets","noteMiss",0x9a9b01c1,"states.stages.PhillyStreets.noteMiss","states/stages/PhillyStreets.hx",956,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_996_showPicoFade,"states.stages.PhillyStreets","showPicoFade",0x0808d651,"states.stages.PhillyStreets.showPicoFade","states/stages/PhillyStreets.hx",996,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_982_showPicoFade,"states.stages.PhillyStreets","showPicoFade",0x0808d651,"states.stages.PhillyStreets.showPicoFade","states/stages/PhillyStreets.hx",982,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_1002_darkenStageProps,"states.stages.PhillyStreets","darkenStageProps",0xf37db7c4,"states.stages.PhillyStreets.darkenStageProps","states/stages/PhillyStreets.hx",1002,0xc5ad7ea3)
HX_LOCAL_STACK_FRAME(_hx_pos_06ef21b7f8b4c92f_1007_darkenStageProps,"states.stages.PhillyStreets","darkenStageProps",0xf37db7c4,"states.stages.PhillyStreets.darkenStageProps","states/stages/PhillyStreets.hx",1007,0xc5ad7ea3)
namespace states{
namespace stages{

void PhillyStreets_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_25_new)
HXLINE( 927)		this->picoFlicker = null();
HXLINE( 602)		this->car2Interruptable = true;
HXLINE( 601)		this->carInterruptable = true;
HXLINE( 600)		this->carWaiting = false;
HXLINE( 598)		this->changeInterval = 8;
HXLINE( 597)		this->lastChange = 0;
HXLINE( 596)		this->lightsStop = false;
HXLINE( 522)		this->animationFinished = false;
HXLINE( 521)		this->currentNeneState = ::states::stages::NeneState_obj::STATE_DEFAULT_dyn();
HXLINE( 210)		this->videoEnded = false;
HXLINE( 169)		this->noteTypes = ::Array_obj< ::String >::__new(0);
HXLINE(  46)		this->darkenable = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(  34)		this->rainShaderEndIntensity = ((Float)0);
HXLINE(  33)		this->rainShaderStartIntensity = ((Float)0);
HXLINE(  30)		this->blinkCountdown = 3;
HXLINE(  29)		this->VULTURE_THRESHOLD = ((Float)0.5);
HXLINE(  28)		this->MAX_BLINK_DELAY = 7;
HXLINE(  27)		this->MIN_BLINK_DELAY = 3;
HXLINE(  25)		super::__construct();
            	}

Dynamic PhillyStreets_obj::__CreateEmpty() { return new PhillyStreets_obj; }

void *PhillyStreets_obj::_hx_vtable = 0;

Dynamic PhillyStreets_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< PhillyStreets_obj > _hx_result = new PhillyStreets_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool PhillyStreets_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x230cab9d) {
		if (inClassId<=(int)0x057d6f11) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x057d6f11;
		} else {
			return inClassId==(int)0x230cab9d;
		}
	} else {
		return inClassId==(int)0x7ccf8994;
	}
}

void PhillyStreets_obj::create(){
            	HX_GC_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_49_create)
HXDLIN(  49)		 ::states::stages::PhillyStreets _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE(  50)		if (!(::backend::ClientPrefs_obj::data->lowQuality)) {
HXLINE(  52)			 ::flixel::graphics::FlxGraphic skyImage = ::backend::Paths_obj::image(HX_("phillyStreets/phillySkybox",f9,b5,75,12),null(),null());
HXLINE(  53)			this->scrollingSky =  ::flixel::addons::display::FlxTiledSprite_obj::__alloc( HX_CTX ,skyImage,( (Float)((skyImage->width + 400)) ),( (Float)(skyImage->height) ),true,false);
HXLINE(  54)			this->scrollingSky->set_antialiasing(::backend::ClientPrefs_obj::data->antialiasing);
HXLINE(  55)			this->scrollingSky->setPosition(-650,-375);
HXLINE(  56)			{
HXLINE(  56)				 ::flixel::math::FlxBasePoint this1 = this->scrollingSky->scrollFactor;
HXDLIN(  56)				this1->set_x(((Float)0.1));
HXDLIN(  56)				this1->set_y(((Float)0.1));
            			}
HXLINE(  57)			{
HXLINE(  57)				 ::flixel::math::FlxBasePoint this2 = this->scrollingSky->scale;
HXDLIN(  57)				this2->set_x(((Float)0.65));
HXDLIN(  57)				this2->set_y(((Float)0.65));
            			}
HXLINE(  58)			this->add(this->scrollingSky);
HXLINE(  59)			this->darkenable->push(this->scrollingSky);
HXLINE(  61)			 ::objects::BGSprite phillySkyline =  ::objects::BGSprite_obj::__alloc( HX_CTX ,HX_("phillyStreets/phillySkyline",46,10,21,1b),-545,-273,((Float)0.2),((Float)0.2),null(),null());
HXLINE(  62)			this->add(phillySkyline);
HXLINE(  63)			this->darkenable->push(phillySkyline);
HXLINE(  65)			 ::objects::BGSprite phillyForegroundCity =  ::objects::BGSprite_obj::__alloc( HX_CTX ,HX_("phillyStreets/phillyForegroundCity",3d,71,35,6c),625,94,((Float)0.3),((Float)0.3),null(),null());
HXLINE(  66)			this->add(phillyForegroundCity);
HXLINE(  67)			this->darkenable->push(phillyForegroundCity);
            		}
HXLINE(  70)		 ::objects::BGSprite phillyConstruction =  ::objects::BGSprite_obj::__alloc( HX_CTX ,HX_("phillyStreets/phillyConstruction",80,81,c8,d7),1800,364,((Float)0.7),1,null(),null());
HXLINE(  71)		this->add(phillyConstruction);
HXLINE(  72)		this->darkenable->push(phillyConstruction);
HXLINE(  74)		 ::objects::BGSprite phillyHighwayLights =  ::objects::BGSprite_obj::__alloc( HX_CTX ,HX_("phillyStreets/phillyHighwayLights",7b,b7,81,ca),284,305,1,1,null(),null());
HXLINE(  75)		this->add(phillyHighwayLights);
HXLINE(  76)		this->darkenable->push(phillyHighwayLights);
HXLINE(  78)		if (!(::backend::ClientPrefs_obj::data->lowQuality)) {
HXLINE(  80)			 ::objects::BGSprite phillyHighwayLightsLightmap =  ::objects::BGSprite_obj::__alloc( HX_CTX ,HX_("phillyStreets/phillyHighwayLights_lightmap",0a,1c,71,d1),284,305,1,1,null(),null());
HXLINE(  81)			phillyHighwayLightsLightmap->set_blend(0);
HXLINE(  82)			phillyHighwayLightsLightmap->set_alpha(((Float)0.6));
HXLINE(  83)			this->add(phillyHighwayLightsLightmap);
HXLINE(  84)			this->darkenable->push(phillyHighwayLightsLightmap);
            		}
HXLINE(  87)		 ::objects::BGSprite phillyHighway =  ::objects::BGSprite_obj::__alloc( HX_CTX ,HX_("phillyStreets/phillyHighway",fe,85,2d,25),139,209,1,1,null(),null());
HXLINE(  88)		this->add(phillyHighway);
HXLINE(  89)		this->darkenable->push(phillyHighway);
HXLINE(  91)		if (!(::backend::ClientPrefs_obj::data->lowQuality)) {
HXLINE(  93)			 ::objects::BGSprite phillySmog =  ::objects::BGSprite_obj::__alloc( HX_CTX ,HX_("phillyStreets/phillySmog",a1,fc,f8,44),-6,245,((Float)0.8),1,null(),null());
HXLINE(  94)			this->add(phillySmog);
HXLINE(  95)			this->darkenable->push(phillySmog);
HXLINE(  97)			{
HXLINE(  98)				{
HXLINE(  99)					 ::objects::BGSprite car =  ::objects::BGSprite_obj::__alloc( HX_CTX ,HX_("phillyStreets/phillyCars",4e,7a,5c,3a),1200,818,((Float)0.9),1,::Array_obj< ::String >::fromData( _hx_array_data_624cd91b_3,4),false);
HXLINE( 100)					this->add(car);
HXLINE( 103)					this->phillyCars = car;
HXLINE( 106)					this->darkenable->push(car);
            				}
HXLINE(  98)				{
HXLINE(  99)					 ::objects::BGSprite car1 =  ::objects::BGSprite_obj::__alloc( HX_CTX ,HX_("phillyStreets/phillyCars",4e,7a,5c,3a),1200,818,((Float)0.9),1,::Array_obj< ::String >::fromData( _hx_array_data_624cd91b_4,4),false);
HXLINE( 100)					this->add(car1);
HXLINE( 104)					this->phillyCars2 = car1;
HXLINE( 106)					this->darkenable->push(car1);
            				}
            			}
HXLINE( 108)			this->phillyCars2->set_flipX(true);
HXLINE( 110)			this->phillyTraffic =  ::objects::BGSprite_obj::__alloc( HX_CTX ,HX_("phillyStreets/phillyTraffic",ae,8e,9e,3b),1840,608,((Float)0.9),1,::Array_obj< ::String >::fromData( _hx_array_data_624cd91b_5,2),false);
HXLINE( 111)			this->add(this->phillyTraffic);
HXLINE( 112)			this->darkenable->push(this->phillyTraffic);
HXLINE( 114)			 ::objects::BGSprite phillyTrafficLightmap =  ::objects::BGSprite_obj::__alloc( HX_CTX ,HX_("phillyStreets/phillyTraffic_lightmap",77,46,57,36),1840,608,((Float)0.9),1,null(),null());
HXLINE( 115)			phillyTrafficLightmap->set_blend(0);
HXLINE( 116)			phillyTrafficLightmap->set_alpha(((Float)0.6));
HXLINE( 117)			this->add(phillyTrafficLightmap);
HXLINE( 118)			this->darkenable->push(phillyTrafficLightmap);
            		}
HXLINE( 121)		 ::objects::BGSprite phillyForeground =  ::objects::BGSprite_obj::__alloc( HX_CTX ,HX_("phillyStreets/phillyForeground",72,f2,8c,ed),88,317,1,1,null(),null());
HXLINE( 122)		this->add(phillyForeground);
HXLINE( 123)		this->darkenable->push(phillyForeground);
HXLINE( 125)		if (!(::backend::ClientPrefs_obj::data->lowQuality)) {
HXLINE( 127)			this->picoFade =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,null(),null(),null());
HXLINE( 128)			this->picoFade->set_antialiasing(::backend::ClientPrefs_obj::data->antialiasing);
HXLINE( 129)			this->picoFade->set_alpha(( (Float)(0) ));
HXLINE( 130)			this->add(this->picoFade);
HXLINE( 131)			this->darkenable->push(this->picoFade);
            		}
HXLINE( 134)		this->abot =  ::states::stages::objects::ABotSpeaker_obj::__alloc( HX_CTX ,( ( ::flixel::group::FlxTypedSpriteGroup)(::flixel::FlxG_obj::game->_state->__Field(HX_("gfGroup",a0,b8,ab,b0),::hx::paccDynamic)) )->x,(( ( ::flixel::group::FlxTypedSpriteGroup)(::flixel::FlxG_obj::game->_state->__Field(HX_("gfGroup",a0,b8,ab,b0),::hx::paccDynamic)) )->y + 550));
HXLINE( 135)		this->updateABotEye(true);
HXLINE( 136)		this->add(this->abot);
HXLINE( 138)		if (::backend::ClientPrefs_obj::data->shaders) {
HXLINE( 139)			this->setupRainShader();
            		}
HXLINE( 141)		 ::Dynamic _song = ::states::PlayState_obj::SONG;
HXLINE( 142)		bool _hx_tmp;
HXDLIN( 142)		if (::hx::IsNotNull( _song->__Field(HX_("gameOverSound",89,f8,70,3c),::hx::paccDynamic) )) {
HXLINE( 142)			_hx_tmp = (::StringTools_obj::trim(( (::String)(_song->__Field(HX_("gameOverSound",89,f8,70,3c),::hx::paccDynamic)) )).length < 1);
            		}
            		else {
HXLINE( 142)			_hx_tmp = true;
            		}
HXDLIN( 142)		if (_hx_tmp) {
HXLINE( 142)			::substates::GameOverSubstate_obj::deathSoundName = HX_("fnf_loss_sfx-pico",e8,4c,fe,4b);
            		}
HXLINE( 143)		bool _hx_tmp1;
HXDLIN( 143)		if (::hx::IsNotNull( _song->__Field(HX_("gameOverLoop",ea,8f,ff,6a),::hx::paccDynamic) )) {
HXLINE( 143)			_hx_tmp1 = (::StringTools_obj::trim(( (::String)(_song->__Field(HX_("gameOverLoop",ea,8f,ff,6a),::hx::paccDynamic)) )).length < 1);
            		}
            		else {
HXLINE( 143)			_hx_tmp1 = true;
            		}
HXDLIN( 143)		if (_hx_tmp1) {
HXLINE( 143)			::substates::GameOverSubstate_obj::loopSoundName = HX_("gameOver-pico",6c,ff,d6,5b);
            		}
HXLINE( 144)		bool _hx_tmp2;
HXDLIN( 144)		if (::hx::IsNotNull( _song->__Field(HX_("gameOverEnd",15,2d,a9,8d),::hx::paccDynamic) )) {
HXLINE( 144)			_hx_tmp2 = (::StringTools_obj::trim(( (::String)(_song->__Field(HX_("gameOverEnd",15,2d,a9,8d),::hx::paccDynamic)) )).length < 1);
            		}
            		else {
HXLINE( 144)			_hx_tmp2 = true;
            		}
HXDLIN( 144)		if (_hx_tmp2) {
HXLINE( 144)			::substates::GameOverSubstate_obj::endSoundName = HX_("gameOverEnd-pico",5d,4a,d2,f5);
            		}
HXLINE( 145)		bool _hx_tmp3;
HXDLIN( 145)		if (::hx::IsNotNull( _song->__Field(HX_("gameOverChar",5c,48,07,65),::hx::paccDynamic) )) {
HXLINE( 145)			_hx_tmp3 = (::StringTools_obj::trim(( (::String)(_song->__Field(HX_("gameOverChar",5c,48,07,65),::hx::paccDynamic)) )).length < 1);
            		}
            		else {
HXLINE( 145)			_hx_tmp3 = true;
            		}
HXDLIN( 145)		if (_hx_tmp3) {
HXLINE( 145)			::substates::GameOverSubstate_obj::characterName = HX_("pico-dead",4c,22,27,61);
            		}
HXLINE( 146)		this->setDefaultGF(HX_("nene",2e,7c,02,49));
HXLINE( 148)		if (::states::PlayState_obj::isStoryMode) {
HXLINE( 150)			::String _hx_switch_0 = ( (::String)(::flixel::FlxG_obj::game->_state->__Field(HX_("songName",c0,d0,d7,36),::hx::paccDynamic)) );
            			if (  (_hx_switch_0==HX_("2hot",9b,f6,5b,21)) ){
            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(0)
            				void _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_156_create)
HXLINE( 157)					::flixel::FlxG_obj::game->_state->__SetField(HX_("endingSong",5c,73,d7,67),true,::hx::paccDynamic);
HXLINE( 158)					::flixel::FlxG_obj::game->_state->__SetField(HX_("inCutscene",8f,21,01,56),true,::hx::paccDynamic);
HXLINE( 159)					::flixel::FlxG_obj::game->_state->__SetField(HX_("canPause",c6,18,eb,2b),false,::hx::paccDynamic);
HXLINE( 160)					::flixel::addons::transition::FlxTransitionableState_obj::skipNextTransIn = true;
HXLINE( 161)					::flixel::FlxG_obj::camera->set_visible(false);
HXLINE( 162)					( ( ::flixel::FlxCamera)(::flixel::FlxG_obj::game->_state->__Field(HX_("camHUD",e8,2b,76,b7),::hx::paccDynamic)) )->set_visible(false);
HXLINE( 163)					::flixel::FlxG_obj::game->_state->__Field(HX_("startVideo",b9,ec,12,53),::hx::paccDynamic)(HX_("2hotCutscene",45,62,27,fb));
            				}
            				HX_END_LOCAL_FUNC0((void))

HXLINE( 155)				this->setEndCallback( ::Dynamic(new _hx_Closure_0()));
HXDLIN( 155)				goto _hx_goto_1;
            			}
            			if (  (_hx_switch_0==HX_("darnell",4c,ff,b0,f3)) ){
HXLINE( 153)				if (!(::states::PlayState_obj::seenCutscene)) {
            					HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_1,::String,videoName, ::states::stages::PhillyStreets,_g) HXARGC(0)
            					void _hx_run(){
            						HX_GC_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_153_create)
HXLINE( 153)						_g->videoCutscene(videoName);
            					}
            					HX_END_LOCAL_FUNC0((void))

HXLINE( 153)					 ::states::stages::PhillyStreets _g = ::hx::ObjectPtr<OBJ_>(this);
HXDLIN( 153)					::String videoName = HX_("darnellCutscene",f6,03,ae,0e);
HXDLIN( 153)					this->setStartCallback( ::Dynamic(new _hx_Closure_1(videoName,_g)));
            				}
HXDLIN( 153)				goto _hx_goto_1;
            			}
            			_hx_goto_1:;
            		}
            	}


void PhillyStreets_obj::createPost(){
            	HX_GC_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_171_createPost)
HXDLIN( 171)		 ::states::stages::PhillyStreets _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 172)		::Array< ::Dynamic> unspawnNotes = ( (::Array< ::Dynamic>)(::flixel::FlxG_obj::game->_state->__Field(HX_("unspawnNotes",9f,67,f2,45),::hx::paccDynamic)) );
HXLINE( 173)		{
HXLINE( 173)			int _g = 0;
HXDLIN( 173)			while((_g < unspawnNotes->length)){
HXLINE( 173)				 ::objects::Note note = unspawnNotes->__get(_g).StaticCast<  ::objects::Note >();
HXDLIN( 173)				_g = (_g + 1);
HXLINE( 175)				if (::hx::IsNull( note )) {
HXLINE( 175)					continue;
            				}
HXLINE( 178)				if ((note->noteType == HX_("weekend-1-firegun",88,e6,12,66))) {
HXLINE( 181)					note->blockHit = true;
            				}
HXLINE( 183)				if (!(this->noteTypes->contains(note->noteType))) {
HXLINE( 183)					this->noteTypes->push(note->noteType);
            				}
            			}
            		}
HXLINE( 186)		this->spraycanPile =  ::objects::BGSprite_obj::__alloc( HX_CTX ,HX_("SpraycanPile",35,6b,89,b2),920,1045,1,1,null(),null());
HXLINE( 187)		this->precache();
HXLINE( 188)		this->add(this->spraycanPile);
HXLINE( 189)		this->darkenable->push(this->spraycanPile);
HXLINE( 191)		if (::hx::IsNotNull( ( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("gf",1f,5a,00,00),::hx::paccDynamic)) ) )) {
            			HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::states::stages::PhillyStreets,_gthis) HXARGC(3)
            			void _hx_run(::String name,int frameNumber,int frameIndex){
            				HX_GC_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_195_createPost)
HXLINE( 195)				if ((_gthis->currentNeneState->_hx_getIndex() == 1)) {
HXLINE( 198)					bool _hx_tmp;
HXDLIN( 198)					if ((name == HX_("danceLeft",da,cc,f9,df))) {
HXLINE( 198)						_hx_tmp = (frameNumber >= 14);
            					}
            					else {
HXLINE( 198)						_hx_tmp = false;
            					}
HXDLIN( 198)					if (_hx_tmp) {
HXLINE( 200)						_gthis->animationFinished = true;
HXLINE( 201)						_gthis->transitionState();
            					}
            				}
            			}
            			HX_END_LOCAL_FUNC3((void))

HXLINE( 193)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("gf",1f,5a,00,00),::hx::paccDynamic)) )->animation->callback =  ::Dynamic(new _hx_Closure_0(_gthis));
            		}
            	}


void PhillyStreets_obj::videoCutscene(::String videoName){
            	HX_GC_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_212_videoCutscene)
HXDLIN( 212)		 ::states::stages::PhillyStreets _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 213)		::flixel::FlxG_obj::game->_state->__SetField(HX_("inCutscene",8f,21,01,56),true,::hx::paccDynamic);
HXLINE( 214)		bool _hx_tmp;
HXDLIN( 214)		if (!(this->videoEnded)) {
HXLINE( 214)			_hx_tmp = ::hx::IsNotNull( videoName );
            		}
            		else {
HXLINE( 214)			_hx_tmp = false;
            		}
HXDLIN( 214)		if (_hx_tmp) {
            			HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_0, ::states::stages::PhillyStreets,_gthis,::String,videoName) HXARGC(1)
            			void _hx_run( ::flixel::util::FlxTimer tmr){
            				HX_GC_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_227_videoCutscene)
HXLINE( 228)				_gthis->videoEnded = true;
HXLINE( 229)				_gthis->videoCutscene(videoName);
            			}
            			HX_END_LOCAL_FUNC1((void))

HXLINE( 226)			 ::flixel::util::FlxTimer_obj::__alloc( HX_CTX ,null())->start(((Float)0.0), ::Dynamic(new _hx_Closure_0(_gthis,videoName)),null());
HXLINE( 232)			return;
            		}
HXLINE( 235)		if (::states::PlayState_obj::isStoryMode) {
HXLINE( 237)			if ((( (::String)(::flixel::FlxG_obj::game->_state->__Field(HX_("songName",c0,d0,d7,36),::hx::paccDynamic)) ) == HX_("darnell",4c,ff,b0,f3))) {
HXLINE( 240)				this->darnellCutscene();
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(PhillyStreets_obj,videoCutscene,(void))

void PhillyStreets_obj::darnellCutscene(){
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		void _hx_run(::String name){
            			HX_GC_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_272_darnellCutscene)
HXLINE( 272)			::String _hx_switch_0 = name;
            			if (  (_hx_switch_0==HX_("danceLeft",da,cc,f9,df)) ||  (_hx_switch_0==HX_("danceRight",a9,7f,a6,91)) ){
HXLINE( 275)				( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("gf",1f,5a,00,00),::hx::paccDynamic)) )->dance();
HXDLIN( 275)				goto _hx_goto_13;
            			}
            			_hx_goto_13:;
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            		void _hx_run(::String name){
            			HX_GC_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_282_darnellCutscene)
HXLINE( 282)			if ((name == HX_("idle",14,a7,b3,45))) {
HXLINE( 285)				( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("dad",47,36,4c,00),::hx::paccDynamic)) )->dance();
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_2, ::flixel::sound::FlxSound,cutsceneMusic1) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_294_darnellCutscene)
HXLINE( 294)			cutsceneMusic1->play(null(),null(),null());
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_3, ::states::stages::PhillyStreets,_gthis) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_297_darnellCutscene)
HXLINE( 298)			_gthis->moveCamera(true);
HXLINE( 299)			 ::flixel::FlxObject fh = ( ( ::flixel::FlxObject)(::flixel::FlxG_obj::game->_state->__Field(HX_("camFollow",e0,6e,47,22),::hx::paccDynamic)) );
HXDLIN( 299)			fh->set_x((fh->x + 100));
HXLINE( 300)			::flixel::tweens::FlxTween_obj::tween(::flixel::FlxG_obj::camera->scroll, ::Dynamic(::hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("x",78,00,00,00),((( ( ::flixel::FlxObject)(::flixel::FlxG_obj::game->_state->__Field(HX_("camFollow",e0,6e,47,22),::hx::paccDynamic)) )->x + 100) - (( (Float)(::flixel::FlxG_obj::width) ) / ( (Float)(2) ))))
            				->setFixed(1,HX_("y",79,00,00,00),(( ( ::flixel::FlxObject)(::flixel::FlxG_obj::game->_state->__Field(HX_("camFollow",e0,6e,47,22),::hx::paccDynamic)) )->y - (( (Float)(::flixel::FlxG_obj::height) ) / ( (Float)(2) ))))),((Float)2.5), ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::quadInOut_dyn())));
HXLINE( 301)			::flixel::tweens::FlxTween_obj::tween(::flixel::FlxG_obj::camera, ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("zoom",13,a3,f8,50),((Float)0.66))),((Float)2.5), ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::quadInOut_dyn())));
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_4, ::states::stages::PhillyStreets,_gthis) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_304_darnellCutscene)
HXLINE( 305)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("dad",47,36,4c,00),::hx::paccDynamic)) )->playAnim(HX_("lightCan",da,44,e4,8c),true,null(),null());
HXLINE( 306)			_gthis->lightCanSnd->play(true,null(),null());
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_5, ::states::stages::PhillyStreets,_gthis) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_309_darnellCutscene)
HXLINE( 310)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->playAnim(HX_("cock",54,b0,c4,41),true,null(),null());
HXLINE( 311)			::flixel::tweens::FlxTween_obj::tween(::flixel::FlxG_obj::camera->scroll, ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("x",78,00,00,00),((( ( ::flixel::FlxObject)(::flixel::FlxG_obj::game->_state->__Field(HX_("camFollow",e0,6e,47,22),::hx::paccDynamic)) )->x + 180) - (( (Float)(::flixel::FlxG_obj::width) ) / ( (Float)(2) ))))),((Float)0.4), ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::backOut_dyn())));
HXLINE( 312)			_gthis->gunPrepSnd->play(true,null(),null());
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_6, ::states::stages::PhillyStreets,_gthis) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_314_darnellCutscene)
HXLINE( 314)			_gthis->createCasing();
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_7, ::states::stages::PhillyStreets,_gthis) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_316_darnellCutscene)
HXLINE( 317)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("dad",47,36,4c,00),::hx::paccDynamic)) )->playAnim(HX_("kickCan",ea,f3,89,a4),true,null(),null());
HXLINE( 318)			_gthis->spraycan->playCanStart();
HXLINE( 319)			_gthis->kickCanSnd->play(true,null(),null());
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_8, ::states::stages::PhillyStreets,_gthis) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_322_darnellCutscene)
HXLINE( 323)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("dad",47,36,4c,00),::hx::paccDynamic)) )->playAnim(HX_("kneeCan",0d,a3,28,c7),true,null(),null());
HXLINE( 324)			_gthis->kneeCanSnd->play(true,null(),null());
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_10, ::states::stages::PhillyStreets,_gthis) HXARGC(0)
            		void _hx_run(){
            			HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_9, ::states::stages::PhillyStreets,_gthis) HXARGC(1)
            			void _hx_run( ::flixel::util::FlxTimer _){
            				HX_GC_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_338_darnellCutscene)
HXLINE( 338)				_gthis->darkenStageProps();
            			}
            			HX_END_LOCAL_FUNC1((void))

            			HX_GC_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_327_darnellCutscene)
HXLINE( 328)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->playAnim(HX_("intro2",46,54,90,9e),true,null(),null());
HXLINE( 329)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->specialAnim = true;
HXLINE( 331)			 ::flixel::_hx_system::frontEnds::SoundFrontEnd _hx_tmp = ::flixel::FlxG_obj::sound;
HXDLIN( 331)			::String key = (HX_("shots/shot",d0,63,52,0f) + ::flixel::FlxG_obj::random->_hx_int(1,4,null()));
HXDLIN( 331)			 ::Dynamic modsAllowed = true;
HXDLIN( 331)			if (::hx::IsNull( modsAllowed )) {
HXLINE( 331)				modsAllowed = true;
            			}
HXDLIN( 331)			_hx_tmp->play(::backend::Paths_obj::returnSound((HX_("sounds/",eb,02,a5,b6) + key),null(),modsAllowed,null()),null(),null(),null(),null(),null());
HXLINE( 333)			::flixel::tweens::FlxTween_obj::tween(::flixel::FlxG_obj::camera->scroll, ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("x",78,00,00,00),((( ( ::flixel::FlxObject)(::flixel::FlxG_obj::game->_state->__Field(HX_("camFollow",e0,6e,47,22),::hx::paccDynamic)) )->x + 100) - (( (Float)(::flixel::FlxG_obj::width) ) / ( (Float)(2) ))))),((Float)2.5), ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::quadInOut_dyn())));
HXLINE( 335)			_gthis->spraycan->playCanShot();
HXLINE( 336)			 ::flixel::util::FlxTimer_obj::__alloc( HX_CTX ,null())->start(((Float)0.041666666666666664), ::Dynamic(new _hx_Closure_9(_gthis)),null());
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_11, ::flixel::sound::FlxSound,darnellLaugh1) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_343_darnellCutscene)
HXLINE( 344)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("dad",47,36,4c,00),::hx::paccDynamic)) )->animation->finishCallback = null();
HXLINE( 345)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("dad",47,36,4c,00),::hx::paccDynamic)) )->playAnim(HX_("laughCutscene",2b,3c,28,20),true,null(),null());
HXLINE( 346)			darnellLaugh1->play(true,null(),null());
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_12, ::flixel::sound::FlxSound,neneLaugh1) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_351_darnellCutscene)
HXLINE( 352)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("gf",1f,5a,00,00),::hx::paccDynamic)) )->animation->finishCallback = null();
HXLINE( 353)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("gf",1f,5a,00,00),::hx::paccDynamic)) )->playAnim(HX_("laughCutscene",2b,3c,28,20),true,null(),null());
HXLINE( 354)			neneLaugh1->play(true,null(),null());
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_14, ::states::stages::PhillyStreets,_gthis, ::flixel::sound::FlxSound,cutsceneMusic1) HXARGC(0)
            		void _hx_run(){
            			HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_13) HXARGC(1)
            			void _hx_run( ::flixel::tweens::FlxTween _){
            				HX_GC_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_364_darnellCutscene)
HXLINE( 364)				::flixel::FlxG_obj::game->_state->__SetField(HX_("cameraSpeed",a2,8a,af,75),1,::hx::paccDynamic);
            			}
            			HX_END_LOCAL_FUNC1((void))

            			HX_GC_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_359_darnellCutscene)
HXLINE( 360)			cutsceneMusic1->cleanup(cutsceneMusic1->autoDestroy,true);
HXLINE( 362)			::flixel::FlxG_obj::game->_state->__SetField(HX_("cameraSpeed",a2,8a,af,75),0,::hx::paccDynamic);
HXLINE( 363)			::flixel::tweens::FlxTween_obj::tween(::flixel::FlxG_obj::camera, ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("zoom",13,a3,f8,50),((Float)0.77))),2, ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::sineInOut_dyn())));
HXLINE( 364)			::flixel::tweens::FlxTween_obj::tween(::flixel::FlxG_obj::camera->scroll, ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("x",78,00,00,00),((( ( ::flixel::FlxObject)(::flixel::FlxG_obj::game->_state->__Field(HX_("camFollow",e0,6e,47,22),::hx::paccDynamic)) )->x + 180) - (( (Float)(::flixel::FlxG_obj::width) ) / ( (Float)(2) ))))),2, ::Dynamic(::hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::sineInOut_dyn())
            				->setFixed(1,HX_("onComplete",f8,d4,7e,5d), ::Dynamic(new _hx_Closure_13()))));
HXLINE( 365)			::flixel::FlxG_obj::game->_state->__SetField(HX_("inCutscene",8f,21,01,56),false,::hx::paccDynamic);
HXLINE( 367)			 ::states::stages::objects::SpraycanAtlasSprite _gthis1 = _gthis->spraycan;
HXDLIN( 367)			 ::states::stages::objects::SpraycanAtlasSprite _gthis2 = _gthis->spraycan;
HXDLIN( 367)			_gthis1->set_visible(_gthis2->set_active((_gthis->spraycan->cutscene = false)));
HXLINE( 368)			( ( ::flixel::FlxCamera)(::flixel::FlxG_obj::game->_state->__Field(HX_("camHUD",e8,2b,76,b7),::hx::paccDynamic)) )->set_alpha(( (Float)(1) ));
HXLINE( 369)			_gthis->startCountdown();
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_15, ::states::stages::PhillyStreets,_gthis) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_372_darnellCutscene)
HXLINE( 373)			_gthis->cutsceneHandler->finishCallback();
HXLINE( 375)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("dad",47,36,4c,00),::hx::paccDynamic)) )->dance();
HXLINE( 376)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("gf",1f,5a,00,00),::hx::paccDynamic)) )->dance();
HXLINE( 377)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->dance();
HXLINE( 378)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("dad",47,36,4c,00),::hx::paccDynamic)) )->animation->finishCallback = null();
HXLINE( 379)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("gf",1f,5a,00,00),::hx::paccDynamic)) )->animation->finishCallback = null();
HXLINE( 381)			::flixel::FlxG_obj::game->_state->__Field(HX_("moveCameraSection",ef,4b,d5,47),::hx::paccDynamic)();
HXLINE( 382)			::flixel::FlxG_obj::game->_state->__SetField(HX_("cameraSpeed",a2,8a,af,75),1,::hx::paccDynamic);
HXLINE( 383)			::flixel::tweens::FlxTween_obj::cancelTweensOf(::flixel::FlxG_obj::camera,null());
HXLINE( 384)			::flixel::tweens::FlxTween_obj::cancelTweensOf(::flixel::FlxG_obj::camera->scroll,null());
HXLINE( 385)			{
HXLINE( 385)				 ::flixel::math::FlxBasePoint this1 = ::flixel::FlxG_obj::camera->scroll;
HXDLIN( 385)				Float y = (( ( ::flixel::FlxObject)(::flixel::FlxG_obj::game->_state->__Field(HX_("camFollow",e0,6e,47,22),::hx::paccDynamic)) )->y - (( (Float)(::flixel::FlxG_obj::height) ) / ( (Float)(2) )));
HXDLIN( 385)				this1->set_x((( ( ::flixel::FlxObject)(::flixel::FlxG_obj::game->_state->__Field(HX_("camFollow",e0,6e,47,22),::hx::paccDynamic)) )->x - (( (Float)(::flixel::FlxG_obj::width) ) / ( (Float)(2) ))));
HXDLIN( 385)				this1->set_y(y);
            			}
HXLINE( 386)			::flixel::FlxG_obj::camera->set_zoom(( (Float)(::flixel::FlxG_obj::game->_state->__Field(HX_("defaultCamZoom",01,50,2a,0b),::hx::paccDynamic)) ));
            		}
            		HX_END_LOCAL_FUNC0((void))

            	HX_GC_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_247_darnellCutscene)
HXDLIN( 247)		 ::states::stages::PhillyStreets _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 248)		this->moveCamera(false);
HXLINE( 249)		 ::flixel::FlxObject fh = ( ( ::flixel::FlxObject)(::flixel::FlxG_obj::game->_state->__Field(HX_("camFollow",e0,6e,47,22),::hx::paccDynamic)) );
HXDLIN( 249)		fh->set_x((fh->x + 250));
HXLINE( 250)		::flixel::FlxG_obj::camera->snapToTarget();
HXLINE( 251)		::flixel::FlxG_obj::camera->set_zoom(((Float)1.3));
HXLINE( 252)		this->spraycan->cutscene = true;
HXLINE( 254)		this->cutsceneHandler =  ::cutscenes::CutsceneHandler_obj::__alloc( HX_CTX ,null());
HXLINE( 255)		this->cutsceneHandler->endTime = ( (Float)(10) );
HXLINE( 257)		 ::flixel::sound::FlxSound cutsceneMusic =  ::flixel::sound::FlxSound_obj::__alloc( HX_CTX );
HXDLIN( 257)		 ::flixel::sound::FlxSound cutsceneMusic1 = cutsceneMusic->loadEmbedded(::backend::Paths_obj::returnSound((HX_("music/",ea,bf,1b,3f) + HX_("darnellCanCutscene",ce,60,39,8b)),null(),true,null()),null(),null(),null());
HXLINE( 258)		cutsceneMusic1->looped = true;
HXLINE( 259)		::flixel::FlxG_obj::sound->list->add(cutsceneMusic1).StaticCast<  ::flixel::sound::FlxSound >();
HXLINE( 261)		 ::flixel::sound::FlxSound darnellLaugh =  ::flixel::sound::FlxSound_obj::__alloc( HX_CTX );
HXDLIN( 261)		 ::flixel::sound::FlxSound darnellLaugh1 = darnellLaugh->loadEmbedded(::backend::Paths_obj::returnSound((HX_("sounds/",eb,02,a5,b6) + HX_("cutscene/darnell_laugh",89,ca,b6,27)),null(),true,null()),null(),null(),null());
HXLINE( 262)		darnellLaugh1->set_volume(((Float)0.6));
HXLINE( 263)		::flixel::FlxG_obj::sound->list->add(darnellLaugh1).StaticCast<  ::flixel::sound::FlxSound >();
HXLINE( 265)		 ::flixel::sound::FlxSound neneLaugh =  ::flixel::sound::FlxSound_obj::__alloc( HX_CTX );
HXDLIN( 265)		 ::flixel::sound::FlxSound neneLaugh1 = neneLaugh->loadEmbedded(::backend::Paths_obj::returnSound((HX_("sounds/",eb,02,a5,b6) + HX_("cutscene/nene_laugh",15,c1,22,6b)),null(),true,null()),null(),null(),null());
HXLINE( 266)		neneLaugh1->set_volume(((Float)0.6));
HXLINE( 267)		::flixel::FlxG_obj::sound->list->add(neneLaugh1).StaticCast<  ::flixel::sound::FlxSound >();
HXLINE( 269)		( ( ::flixel::FlxCamera)(::flixel::FlxG_obj::game->_state->__Field(HX_("camHUD",e8,2b,76,b7),::hx::paccDynamic)) )->set_alpha(( (Float)(0) ));
HXLINE( 270)		( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("gf",1f,5a,00,00),::hx::paccDynamic)) )->animation->finishCallback =  ::Dynamic(new _hx_Closure_0());
HXLINE( 278)		( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("gf",1f,5a,00,00),::hx::paccDynamic)) )->dance();
HXLINE( 280)		( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("dad",47,36,4c,00),::hx::paccDynamic)) )->animation->finishCallback =  ::Dynamic(new _hx_Closure_1());
HXLINE( 288)		( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("dad",47,36,4c,00),::hx::paccDynamic)) )->dance();
HXLINE( 290)		Float cutsceneDelay = ((Float)2.0);
HXLINE( 291)		( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->playAnim(HX_("intro1",45,54,90,9e),true,null(),null());
HXLINE( 292)		this->cutsceneHandler->timer(((Float)0.7), ::Dynamic(new _hx_Closure_2(cutsceneMusic1)));
HXLINE( 296)		this->cutsceneHandler->timer(cutsceneDelay, ::Dynamic(new _hx_Closure_3(_gthis)));
HXLINE( 303)		this->cutsceneHandler->timer((cutsceneDelay + 3), ::Dynamic(new _hx_Closure_4(_gthis)));
HXLINE( 308)		this->cutsceneHandler->timer((cutsceneDelay + 4), ::Dynamic(new _hx_Closure_5(_gthis)));
HXLINE( 314)		this->cutsceneHandler->timer((cutsceneDelay + ((Float)4.166)), ::Dynamic(new _hx_Closure_6(_gthis)));
HXLINE( 315)		this->cutsceneHandler->timer((cutsceneDelay + ((Float)4.4)), ::Dynamic(new _hx_Closure_7(_gthis)));
HXLINE( 321)		this->cutsceneHandler->timer((cutsceneDelay + ((Float)4.8)), ::Dynamic(new _hx_Closure_8(_gthis)));
HXLINE( 326)		this->cutsceneHandler->timer((cutsceneDelay + ((Float)5.1)), ::Dynamic(new _hx_Closure_10(_gthis)));
HXLINE( 342)		this->cutsceneHandler->timer((cutsceneDelay + ((Float)5.9)), ::Dynamic(new _hx_Closure_11(darnellLaugh1)));
HXLINE( 350)		this->cutsceneHandler->timer((cutsceneDelay + ((Float)6.2)), ::Dynamic(new _hx_Closure_12(neneLaugh1)));
HXLINE( 358)		this->cutsceneHandler->finishCallback =  ::Dynamic(new _hx_Closure_14(_gthis,cutsceneMusic1));
HXLINE( 371)		this->cutsceneHandler->skipCallback =  ::Dynamic(new _hx_Closure_15(_gthis));
HXLINE( 388)		::flixel::FlxG_obj::camera->fade(-16777216,2,true,null(),true);
            	}


HX_DEFINE_DYNAMIC_FUNC0(PhillyStreets_obj,darnellCutscene,(void))

void PhillyStreets_obj::updateABotEye(::hx::Null< bool >  __o_finishInstantly){
            		bool finishInstantly = __o_finishInstantly.Default(false);
            	HX_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_392_updateABotEye)
HXLINE( 393)		Float Value = ( (Float)(this->curSection) );
HXDLIN( 393)		 ::Dynamic Max = (( (::Array< ::Dynamic>)(::states::PlayState_obj::SONG->__Field(HX_("notes",41,dc,ca,9f),::hx::paccDynamic)) )->length - 1);
HXDLIN( 393)		Float lowerBound;
HXDLIN( 393)		if ((Value < 0)) {
HXLINE( 393)			lowerBound = ( (Float)(0) );
            		}
            		else {
HXLINE( 393)			lowerBound = Value;
            		}
HXDLIN( 393)		Float _hx_tmp;
HXDLIN( 393)		bool _hx_tmp1;
HXDLIN( 393)		if (::hx::IsNotNull( Max )) {
HXLINE( 393)			_hx_tmp1 = ::hx::IsGreater( lowerBound,Max );
            		}
            		else {
HXLINE( 393)			_hx_tmp1 = false;
            		}
HXDLIN( 393)		if (_hx_tmp1) {
HXLINE( 393)			_hx_tmp = ( (Float)(Max) );
            		}
            		else {
HXLINE( 393)			_hx_tmp = lowerBound;
            		}
HXDLIN( 393)		if (::hx::IsEq(  ::Dynamic(::states::PlayState_obj::SONG->__Field(HX_("notes",41,dc,ca,9f),::hx::paccDynamic))->__GetItem(::Std_obj::_hx_int(_hx_tmp))->__Field(HX_("mustHitSection",3b,5f,87,62),::hx::paccDynamic),true )) {
HXLINE( 394)			this->abot->lookRight();
            		}
            		else {
HXLINE( 396)			this->abot->lookLeft();
            		}
HXLINE( 398)		if (finishInstantly) {
HXLINE( 398)			 ::flxanimate::animate::FlxAnim _hx_tmp2 = this->abot->eyes->anim;
HXDLIN( 398)			_hx_tmp2->set_curFrame((this->abot->eyes->anim->get_length() - 1));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(PhillyStreets_obj,updateABotEye,(void))

void PhillyStreets_obj::startSong(){
            	HX_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_402_startSong)
HXLINE( 403)		this->abot->set_snd(::flixel::FlxG_obj::sound->music);
HXLINE( 404)		( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("gf",1f,5a,00,00),::hx::paccDynamic)) )->animation->finishCallback = this->onNeneAnimationFinished_dyn();
            	}


void PhillyStreets_obj::onNeneAnimationFinished(::String name){
            	HX_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_408_onNeneAnimationFinished)
HXLINE( 409)		if (!(( (bool)(::flixel::FlxG_obj::game->_state->__Field(HX_("startedCountdown",30,57,28,9b),::hx::paccDynamic)) ))) {
HXLINE( 409)			return;
            		}
HXLINE( 411)		switch((int)(this->currentNeneState->_hx_getIndex())){
            			case (int)2: case (int)4: {
HXLINE( 414)				bool _hx_tmp;
HXDLIN( 414)				if ((name != HX_("raiseKnife",99,c3,95,8c))) {
HXLINE( 414)					_hx_tmp = (name == HX_("lowerKnife",64,22,44,a1));
            				}
            				else {
HXLINE( 414)					_hx_tmp = true;
            				}
HXDLIN( 414)				if (_hx_tmp) {
HXLINE( 416)					this->animationFinished = true;
HXLINE( 417)					this->transitionState();
            				}
            			}
            			break;
            			default:{
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(PhillyStreets_obj,onNeneAnimationFinished,(void))

void PhillyStreets_obj::precache(){
            		HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_0, ::states::stages::PhillyStreets,_gthis,::Array< bool >,didCreateCan) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_436_precache)
HXLINE( 437)			if (didCreateCan->__get(0)) {
HXLINE( 437)				return;
            			}
HXLINE( 438)			_gthis->spraycan =  ::states::stages::objects::SpraycanAtlasSprite_obj::__alloc( HX_CTX ,(_gthis->spraycanPile->x + 530),(_gthis->spraycanPile->y - ( (Float)(240) )));
HXLINE( 439)			_gthis->add(_gthis->spraycan);
HXLINE( 441)			_gthis->lightCanSnd =  ::flixel::sound::FlxSound_obj::__alloc( HX_CTX );
HXLINE( 442)			::flixel::FlxG_obj::sound->list->add(_gthis->lightCanSnd).StaticCast<  ::flixel::sound::FlxSound >();
HXLINE( 443)			 ::flixel::sound::FlxSound _gthis1 = _gthis->lightCanSnd;
HXDLIN( 443)			_gthis1->loadEmbedded(::backend::Paths_obj::returnSound((HX_("sounds/",eb,02,a5,b6) + HX_("Darnell_Lighter",50,ff,6b,bc)),null(),true,null()),null(),null(),null());
HXLINE( 445)			_gthis->kickCanSnd =  ::flixel::sound::FlxSound_obj::__alloc( HX_CTX );
HXLINE( 446)			::flixel::FlxG_obj::sound->list->add(_gthis->kickCanSnd).StaticCast<  ::flixel::sound::FlxSound >();
HXLINE( 447)			 ::flixel::sound::FlxSound _gthis2 = _gthis->kickCanSnd;
HXDLIN( 447)			_gthis2->loadEmbedded(::backend::Paths_obj::returnSound((HX_("sounds/",eb,02,a5,b6) + HX_("Kick_Can_UP",03,41,62,76)),null(),true,null()),null(),null(),null());
HXLINE( 449)			_gthis->kneeCanSnd =  ::flixel::sound::FlxSound_obj::__alloc( HX_CTX );
HXLINE( 450)			::flixel::FlxG_obj::sound->list->add(_gthis->kneeCanSnd).StaticCast<  ::flixel::sound::FlxSound >();
HXLINE( 451)			 ::flixel::sound::FlxSound _gthis3 = _gthis->kneeCanSnd;
HXDLIN( 451)			_gthis3->loadEmbedded(::backend::Paths_obj::returnSound((HX_("sounds/",eb,02,a5,b6) + HX_("Kick_Can_FORWARD",fd,9d,55,26)),null(),true,null()),null(),null(),null());
HXLINE( 452)			didCreateCan[0] = true;
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_1, ::states::stages::PhillyStreets,_gthis,::Array< bool >,didCreateCasing) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_457_precache)
HXLINE( 458)			if (didCreateCasing->__get(0)) {
HXLINE( 458)				return;
            			}
HXLINE( 459)			if (!(::backend::ClientPrefs_obj::data->lowQuality)) {
HXLINE( 461)				::String parentFolder = null();
HXDLIN( 461)				if ((HX_("PicoBullet",27,2d,bf,cb).indexOf(HX_("psychic",d5,09,aa,19),null()) != -1)) {
HXLINE( 461)					::haxe::Log_obj::trace(HX_("PicoBullet",27,2d,bf,cb), ::Dynamic(::hx::Anon_obj::Create(5)
            						->setFixed(0,HX_("className",a3,92,3d,dc),HX_("backend.Paths",34,17,99,92))
            						->setFixed(1,HX_("customParams",d7,51,18,ed),::cpp::VirtualArray_obj::__new(2)->init(0,parentFolder)->init(1,true))
            						->setFixed(2,HX_("methodName",cc,19,0f,12),HX_("getSparrowAtlas",55,ab,b7,a7))
            						->setFixed(3,HX_("fileName",e7,5a,43,62),HX_("source/backend/Paths.hx",ff,43,8c,3d))
            						->setFixed(4,HX_("lineNumber",dd,81,22,76),372)));
            				}
HXDLIN( 461)				 ::flixel::graphics::FlxGraphic imageLoaded = ::backend::Paths_obj::image(HX_("PicoBullet",27,2d,bf,cb),parentFolder,true);
HXDLIN( 461)				bool xmlExists = false;
HXDLIN( 461)				::String xml = ::backend::Paths_obj::modFolders(((HX_("images/",77,50,74,c1) + HX_("PicoBullet",27,2d,bf,cb)) + HX_(".xml",69,3e,c3,1e)));
HXDLIN( 461)				if (::sys::FileSystem_obj::exists(xml)) {
HXLINE( 461)					xmlExists = true;
            				}
HXDLIN( 461)				 ::Dynamic precacheCasing;
HXDLIN( 461)				if (xmlExists) {
HXLINE( 461)					precacheCasing = ::sys::io::File_obj::getContent(xml);
            				}
            				else {
HXLINE( 461)					::String key = (HX_("images/",77,50,74,c1) + HX_("PicoBullet",27,2d,bf,cb));
HXDLIN( 461)					::Dynamic this1 = ::backend::Language_obj::phrases;
HXDLIN( 461)					::String str = ( ( ::haxe::ds::StringMap)(this1) )->get_string(::StringTools_obj::trim(key).toLowerCase());
HXDLIN( 461)					if (::hx::IsNotNull( str )) {
HXLINE( 461)						key = str;
            					}
HXDLIN( 461)					precacheCasing = ::backend::Paths_obj::getPath((key + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),parentFolder,null());
            				}
HXDLIN( 461)				 ::flixel::graphics::frames::FlxAtlasFrames precacheCasing1 = ::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(imageLoaded,precacheCasing);
HXDLIN( 461)				_gthis->casingFrames = precacheCasing1;
HXLINE( 462)				_gthis->casingGroup =  ::flixel::group::FlxTypedSpriteGroup_obj::__alloc( HX_CTX ,null(),null(),null());
HXLINE( 463)				_gthis->add(_gthis->casingGroup);
            			}
HXLINE( 466)			_gthis->gunPrepSnd =  ::flixel::sound::FlxSound_obj::__alloc( HX_CTX );
HXLINE( 467)			::flixel::FlxG_obj::sound->list->add(_gthis->gunPrepSnd).StaticCast<  ::flixel::sound::FlxSound >();
HXLINE( 468)			 ::flixel::sound::FlxSound _gthis1 = _gthis->gunPrepSnd;
HXDLIN( 468)			_gthis1->loadEmbedded(::backend::Paths_obj::returnSound((HX_("sounds/",eb,02,a5,b6) + HX_("Gun_Prep",8c,a4,d7,c1)),null(),true,null()),null(),null(),null());
HXLINE( 469)			didCreateCasing[0] = true;
            		}
            		HX_END_LOCAL_FUNC0((void))

            	HX_GC_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_433_precache)
HXDLIN( 433)		 ::states::stages::PhillyStreets _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 434)		::Array< bool > didCreateCan = ::Array_obj< bool >::fromData( _hx_array_data_624cd91b_39,1);
HXLINE( 435)		 ::Dynamic createCan =  ::Dynamic(new _hx_Closure_0(_gthis,didCreateCan));
HXLINE( 455)		::Array< bool > didCreateCasing = ::Array_obj< bool >::fromData( _hx_array_data_624cd91b_40,1);
HXLINE( 456)		 ::Dynamic precacheCasing =  ::Dynamic(new _hx_Closure_1(_gthis,didCreateCasing));
HXLINE( 472)		{
HXLINE( 472)			int _g = 0;
HXDLIN( 472)			::Array< ::String > _g1 = this->noteTypes;
HXDLIN( 472)			while((_g < _g1->length)){
HXLINE( 472)				::String noteType = _g1->__get(_g);
HXDLIN( 472)				_g = (_g + 1);
HXLINE( 474)				::String _hx_switch_0 = noteType;
            				if (  (_hx_switch_0==HX_("weekend-1-cockgun",aa,40,6b,b0)) ){
HXLINE( 479)					precacheCasing();
HXDLIN( 479)					goto _hx_goto_35;
            				}
            				if (  (_hx_switch_0==HX_("weekend-1-firegun",88,e6,12,66)) ){
HXLINE( 481)					this->bonkSnd =  ::flixel::sound::FlxSound_obj::__alloc( HX_CTX );
HXLINE( 482)					::flixel::FlxG_obj::sound->list->add(this->bonkSnd).StaticCast<  ::flixel::sound::FlxSound >();
HXLINE( 483)					 ::flixel::sound::FlxSound _hx_tmp = this->bonkSnd;
HXDLIN( 483)					_hx_tmp->loadEmbedded(::backend::Paths_obj::returnSound((HX_("sounds/",eb,02,a5,b6) + HX_("Pico_Bonk",24,64,91,b6)),null(),true,null()),null(),null(),null());
HXLINE( 480)					goto _hx_goto_35;
            				}
            				if (  (_hx_switch_0==HX_("weekend-1-kickcan",08,b2,ef,96)) ){
HXLINE( 477)					createCan();
HXDLIN( 477)					goto _hx_goto_35;
            				}
            				_hx_goto_35:;
            			}
            		}
HXLINE( 487)		bool _hx_tmp1;
HXDLIN( 487)		if (::states::PlayState_obj::isStoryMode) {
HXLINE( 487)			_hx_tmp1 = !(::states::PlayState_obj::seenCutscene);
            		}
            		else {
HXLINE( 487)			_hx_tmp1 = false;
            		}
HXDLIN( 487)		if (_hx_tmp1) {
HXLINE( 489)			if ((( (::String)(::flixel::FlxG_obj::game->_state->__Field(HX_("songName",c0,d0,d7,36),::hx::paccDynamic)) ) == HX_("darnell",4c,ff,b0,f3))) {
HXLINE( 492)				createCan();
HXLINE( 493)				precacheCasing();
            			}
            		}
HXLINE( 497)		{
HXLINE( 498)			::backend::Paths_obj::returnSound((HX_("sounds/",eb,02,a5,b6) + (HX_("shots/shot",d0,63,52,0f) + 1)),null(),true,null());
HXDLIN( 498)			::backend::Paths_obj::returnSound((HX_("sounds/",eb,02,a5,b6) + (HX_("shots/shot",d0,63,52,0f) + 2)),null(),true,null());
HXDLIN( 498)			::backend::Paths_obj::returnSound((HX_("sounds/",eb,02,a5,b6) + (HX_("shots/shot",d0,63,52,0f) + 3)),null(),true,null());
HXDLIN( 498)			::backend::Paths_obj::returnSound((HX_("sounds/",eb,02,a5,b6) + (HX_("shots/shot",d0,63,52,0f) + 4)),null(),true,null());
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(PhillyStreets_obj,precache,(void))

void PhillyStreets_obj::setupRainShader(){
            	HX_GC_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_502_setupRainShader)
HXLINE( 503)		this->rainShader =  ::shaders::RainShader_obj::__alloc( HX_CTX );
HXLINE( 504)		this->rainShader->set_scale((( (Float)(::flixel::FlxG_obj::height) ) / ( (Float)(200) )));
HXLINE( 505)		::String _hx_switch_0 = ( (::String)(::flixel::FlxG_obj::game->_state->__Field(HX_("songName",c0,d0,d7,36),::hx::paccDynamic)) );
            		if (  (_hx_switch_0==HX_("2hot",9b,f6,5b,21)) ){
HXLINE( 514)			this->rainShaderStartIntensity = ((Float)0.2);
HXLINE( 515)			this->rainShaderEndIntensity = ((Float)0.4);
HXLINE( 513)			goto _hx_goto_41;
            		}
            		if (  (_hx_switch_0==HX_("darnell",4c,ff,b0,f3)) ){
HXLINE( 508)			this->rainShaderStartIntensity = ( (Float)(0) );
HXLINE( 509)			this->rainShaderEndIntensity = ((Float)0.1);
HXLINE( 507)			goto _hx_goto_41;
            		}
            		if (  (_hx_switch_0==HX_("lit-up",d1,2c,6d,f0)) ){
HXLINE( 511)			this->rainShaderStartIntensity = ((Float)0.1);
HXLINE( 512)			this->rainShaderEndIntensity = ((Float)0.2);
HXLINE( 510)			goto _hx_goto_41;
            		}
            		_hx_goto_41:;
HXLINE( 517)		this->rainShader->set_intensity(this->rainShaderStartIntensity);
HXLINE( 518)		 ::flixel::FlxCamera _hx_tmp = ::flixel::FlxG_obj::camera;
HXDLIN( 518)		_hx_tmp->setFilters(::Array_obj< ::Dynamic>::__new(1)->init(0, ::openfl::filters::ShaderFilter_obj::__alloc( HX_CTX ,this->rainShader)));
            	}


HX_DEFINE_DYNAMIC_FUNC0(PhillyStreets_obj,setupRainShader,(void))

void PhillyStreets_obj::update(Float elapsed){
            	HX_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_524_update)
HXLINE( 525)		if (::hx::IsNotNull( this->scrollingSky )) {
HXLINE( 525)			 ::flixel::addons::display::FlxTiledSprite fh = this->scrollingSky;
HXDLIN( 525)			fh->set_scrollX((fh->scrollX - (elapsed * ( (Float)(22) ))));
            		}
HXLINE( 527)		if (::hx::IsNotNull( this->rainShader )) {
HXLINE( 529)			Float remappedIntensityValue;
HXDLIN( 529)			if (::hx::IsNotNull( ::flixel::FlxG_obj::sound->music )) {
HXLINE( 529)				remappedIntensityValue = ::flixel::FlxG_obj::sound->music->_length;
            			}
            			else {
HXLINE( 529)				remappedIntensityValue = ( (Float)(0) );
            			}
HXDLIN( 529)			Float remappedIntensityValue1 = ::flixel::math::FlxMath_obj::remapToRange(::backend::Conductor_obj::songPosition,( (Float)(0) ),remappedIntensityValue,this->rainShaderStartIntensity,this->rainShaderEndIntensity);
HXLINE( 530)			this->rainShader->set_intensity(remappedIntensityValue1);
HXLINE( 531)			this->rainShader->updateViewInfo(( (Float)(::flixel::FlxG_obj::width) ),( (Float)(::flixel::FlxG_obj::height) ),::flixel::FlxG_obj::camera);
HXLINE( 532)			this->rainShader->update(elapsed);
            		}
HXLINE( 535)		bool _hx_tmp;
HXDLIN( 535)		if (::hx::IsNotNull( ( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("gf",1f,5a,00,00),::hx::paccDynamic)) ) )) {
HXLINE( 535)			_hx_tmp = !(( (bool)(::flixel::FlxG_obj::game->_state->__Field(HX_("startedCountdown",30,57,28,9b),::hx::paccDynamic)) ));
            		}
            		else {
HXLINE( 535)			_hx_tmp = true;
            		}
HXDLIN( 535)		if (_hx_tmp) {
HXLINE( 535)			return;
            		}
HXLINE( 537)		this->animationFinished = ( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("gf",1f,5a,00,00),::hx::paccDynamic)) )->isAnimationFinished();
HXLINE( 538)		this->transitionState();
            	}


void PhillyStreets_obj::transitionState(){
            	HX_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_543_transitionState)
HXDLIN( 543)		switch((int)(this->currentNeneState->_hx_getIndex())){
            			case (int)0: {
HXLINE( 546)				if (::hx::IsLessEq( ::flixel::FlxG_obj::game->_state->__Field(HX_("health",9c,28,06,fd),::hx::paccDynamic),this->VULTURE_THRESHOLD )) {
HXLINE( 548)					this->currentNeneState = ::states::stages::NeneState_obj::STATE_PRE_RAISE_dyn();
HXLINE( 549)					( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("gf",1f,5a,00,00),::hx::paccDynamic)) )->skipDance = true;
            				}
            			}
            			break;
            			case (int)1: {
HXLINE( 553)				if (::hx::IsGreater( ::flixel::FlxG_obj::game->_state->__Field(HX_("health",9c,28,06,fd),::hx::paccDynamic),this->VULTURE_THRESHOLD )) {
HXLINE( 555)					this->currentNeneState = ::states::stages::NeneState_obj::STATE_DEFAULT_dyn();
HXLINE( 556)					( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("gf",1f,5a,00,00),::hx::paccDynamic)) )->skipDance = false;
            				}
            				else {
HXLINE( 558)					if (this->animationFinished) {
HXLINE( 560)						this->currentNeneState = ::states::stages::NeneState_obj::STATE_RAISE_dyn();
HXLINE( 561)						( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("gf",1f,5a,00,00),::hx::paccDynamic)) )->playAnim(HX_("raiseKnife",99,c3,95,8c),null(),null(),null());
HXLINE( 562)						( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("gf",1f,5a,00,00),::hx::paccDynamic)) )->skipDance = true;
HXLINE( 563)						( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("gf",1f,5a,00,00),::hx::paccDynamic)) )->danced = true;
HXLINE( 564)						this->animationFinished = false;
            					}
            				}
            			}
            			break;
            			case (int)2: {
HXLINE( 568)				if (this->animationFinished) {
HXLINE( 570)					this->currentNeneState = ::states::stages::NeneState_obj::STATE_READY_dyn();
HXLINE( 571)					this->animationFinished = false;
            				}
            			}
            			break;
            			case (int)3: {
HXLINE( 575)				if (::hx::IsGreater( ::flixel::FlxG_obj::game->_state->__Field(HX_("health",9c,28,06,fd),::hx::paccDynamic),this->VULTURE_THRESHOLD )) {
HXLINE( 577)					this->currentNeneState = ::states::stages::NeneState_obj::STATE_LOWER_dyn();
HXLINE( 578)					( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("gf",1f,5a,00,00),::hx::paccDynamic)) )->playAnim(HX_("lowerKnife",64,22,44,a1),null(),null(),null());
            				}
            			}
            			break;
            			case (int)4: {
HXLINE( 582)				if (this->animationFinished) {
HXLINE( 584)					this->currentNeneState = ::states::stages::NeneState_obj::STATE_DEFAULT_dyn();
HXLINE( 585)					this->animationFinished = false;
HXLINE( 586)					( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("gf",1f,5a,00,00),::hx::paccDynamic)) )->skipDance = false;
            				}
            			}
            			break;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(PhillyStreets_obj,transitionState,(void))

void PhillyStreets_obj::sectionHit(){
            	HX_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_593_sectionHit)
HXDLIN( 593)		this->updateABotEye(null());
            	}


void PhillyStreets_obj::beatHit(){
            	HX_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_605_beatHit)
HXLINE( 607)		if ((this->currentNeneState->_hx_getIndex() == 3)) {
HXLINE( 609)			if ((this->blinkCountdown == 0)) {
HXLINE( 611)				( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("gf",1f,5a,00,00),::hx::paccDynamic)) )->playAnim(HX_("idleKnife",71,30,e5,41),false,null(),null());
HXLINE( 612)				this->blinkCountdown = ::flixel::FlxG_obj::random->_hx_int(this->MIN_BLINK_DELAY,this->MAX_BLINK_DELAY,null());
            			}
            			else {
HXLINE( 614)				this->blinkCountdown--;
            			}
            		}
HXLINE( 620)		if (::backend::ClientPrefs_obj::data->lowQuality) {
HXLINE( 620)			return;
            		}
HXLINE( 622)		bool _hx_tmp;
HXDLIN( 622)		bool _hx_tmp1;
HXDLIN( 622)		if ((::flixel::FlxG_obj::random->_hx_float(0,100,null()) < 10)) {
HXLINE( 622)			_hx_tmp1 = (this->curBeat != (this->lastChange + this->changeInterval));
            		}
            		else {
HXLINE( 622)			_hx_tmp1 = false;
            		}
HXDLIN( 622)		if (_hx_tmp1) {
HXLINE( 622)			_hx_tmp = (this->carInterruptable == true);
            		}
            		else {
HXLINE( 622)			_hx_tmp = false;
            		}
HXDLIN( 622)		if (_hx_tmp) {
HXLINE( 624)			if ((this->lightsStop == false)) {
HXLINE( 625)				this->driveCar(this->phillyCars);
            			}
            			else {
HXLINE( 627)				this->driveCarLights(this->phillyCars);
            			}
            		}
HXLINE( 630)		bool _hx_tmp2;
HXDLIN( 630)		bool _hx_tmp3;
HXDLIN( 630)		bool _hx_tmp4;
HXDLIN( 630)		if ((::flixel::FlxG_obj::random->_hx_float(0,100,null()) < 10)) {
HXLINE( 630)			_hx_tmp4 = (this->curBeat != (this->lastChange + this->changeInterval));
            		}
            		else {
HXLINE( 630)			_hx_tmp4 = false;
            		}
HXDLIN( 630)		if (_hx_tmp4) {
HXLINE( 630)			_hx_tmp3 = (this->car2Interruptable == true);
            		}
            		else {
HXLINE( 630)			_hx_tmp3 = false;
            		}
HXDLIN( 630)		if (_hx_tmp3) {
HXLINE( 630)			_hx_tmp2 = (this->lightsStop == false);
            		}
            		else {
HXLINE( 630)			_hx_tmp2 = false;
            		}
HXDLIN( 630)		if (_hx_tmp2) {
HXLINE( 631)			this->driveCarBack(this->phillyCars2);
            		}
HXLINE( 633)		if ((this->curBeat == (this->lastChange + this->changeInterval))) {
HXLINE( 633)			this->changeLights(this->curBeat);
            		}
            	}


void PhillyStreets_obj::changeLights(int beat){
            	HX_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_637_changeLights)
HXLINE( 638)		this->lastChange = beat;
HXLINE( 639)		this->lightsStop = !(this->lightsStop);
HXLINE( 641)		if (this->lightsStop) {
HXLINE( 643)			this->phillyTraffic->animation->play(HX_("greentored",13,61,c8,55),null(),null(),null());
HXLINE( 644)			this->changeInterval = 20;
            		}
            		else {
HXLINE( 648)			this->phillyTraffic->animation->play(HX_("redtogreen",37,4e,60,05),null(),null(),null());
HXLINE( 649)			this->changeInterval = 30;
HXLINE( 651)			if ((this->carWaiting == true)) {
HXLINE( 651)				this->finishCarLights(this->phillyCars);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(PhillyStreets_obj,changeLights,(void))

void PhillyStreets_obj::finishCarLights( ::objects::BGSprite sprite){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::states::stages::PhillyStreets,_gthis) HXARGC(1)
            		void _hx_run( ::flixel::tweens::FlxTween _){
            			HX_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_670_finishCarLights)
HXLINE( 670)			_gthis->carInterruptable = true;
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_656_finishCarLights)
HXDLIN( 656)		 ::states::stages::PhillyStreets _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 657)		this->carWaiting = false;
HXLINE( 658)		Float duration = ::flixel::FlxG_obj::random->_hx_float(((Float)1.8),3,null());
HXLINE( 659)		int rotations_0 = -5;
HXDLIN( 659)		int rotations_1 = 18;
HXLINE( 660)		Float offset_0 = ((Float)306.6);
HXDLIN( 660)		Float offset_1 = ((Float)168.3);
HXLINE( 661)		Float startdelay = ::flixel::FlxG_obj::random->_hx_float(((Float)0.2),((Float)1.2),null());
HXLINE( 664)		 ::flixel::math::FlxBasePoint point = ::flixel::math::FlxBasePoint_obj::pool->get().StaticCast<  ::flixel::math::FlxBasePoint >()->set(((( (Float)(1950) ) - offset_0) - ( (Float)(80) )),((( (Float)(980) ) - offset_1) + 15));
HXDLIN( 664)		point->_inPool = false;
HXLINE( 665)		 ::flixel::math::FlxBasePoint point1 = ::flixel::math::FlxBasePoint_obj::pool->get().StaticCast<  ::flixel::math::FlxBasePoint >()->set((( (Float)(2400) ) - offset_0),((( (Float)(980) ) - offset_1) - ( (Float)(50) )));
HXDLIN( 665)		point1->_inPool = false;
HXLINE( 666)		 ::flixel::math::FlxBasePoint point2 = ::flixel::math::FlxBasePoint_obj::pool->get().StaticCast<  ::flixel::math::FlxBasePoint >()->set((( (Float)(3102) ) - offset_0),((( (Float)(1127) ) - offset_1) + 40));
HXDLIN( 666)		point2->_inPool = false;
HXLINE( 663)		::Array< ::Dynamic> path = ::Array_obj< ::Dynamic>::__new(3)->init(0,point)->init(1,point1)->init(2,point2);
HXLINE( 669)		::flixel::tweens::FlxTween_obj::angle(sprite,( (Float)(rotations_0) ),( (Float)(rotations_1) ),duration, ::Dynamic(::hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("startDelay",c1,af,3d,f3),startdelay)
            			->setFixed(1,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::sineIn_dyn())));
HXLINE( 670)		::flixel::tweens::FlxTween_obj::quadPath(sprite,path,duration,true, ::Dynamic(::hx::Anon_obj::Create(3)
            			->setFixed(0,HX_("startDelay",c1,af,3d,f3),startdelay)
            			->setFixed(1,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::sineIn_dyn())
            			->setFixed(2,HX_("onComplete",f8,d4,7e,5d), ::Dynamic(new _hx_Closure_0(_gthis)))));
            	}


HX_DEFINE_DYNAMIC_FUNC1(PhillyStreets_obj,finishCarLights,(void))

void PhillyStreets_obj::driveCarLights( ::objects::BGSprite sprite){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::states::stages::PhillyStreets,_gthis) HXARGC(1)
            		void _hx_run( ::flixel::tweens::FlxTween _){
            			HX_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_708_driveCarLights)
HXLINE( 709)			_gthis->carWaiting = true;
HXLINE( 710)			if ((_gthis->lightsStop == false)) {
HXLINE( 710)				_gthis->finishCarLights(_gthis->phillyCars);
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_674_driveCarLights)
HXDLIN( 674)		 ::states::stages::PhillyStreets _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 675)		this->carInterruptable = false;
HXLINE( 676)		::flixel::tweens::FlxTween_obj::cancelTweensOf(sprite,null());
HXLINE( 677)		int variant = ::flixel::FlxG_obj::random->_hx_int(1,4,null());
HXLINE( 678)		sprite->animation->play((HX_("car",14,74,4b,00) + variant),null(),null(),null());
HXLINE( 679)		::Array< int > extraOffset = ::Array_obj< int >::fromData( _hx_array_data_624cd91b_52,2);
HXLINE( 680)		Float duration = ( (Float)(2) );
HXLINE( 682)		switch((int)(variant)){
            			case (int)1: {
HXLINE( 685)				duration = ::flixel::FlxG_obj::random->_hx_float(1,((Float)1.7),null());
            			}
            			break;
            			case (int)2: {
HXLINE( 687)				extraOffset = ::Array_obj< int >::fromData( _hx_array_data_624cd91b_53,2);
HXLINE( 688)				duration = ::flixel::FlxG_obj::random->_hx_float(((Float)0.9),((Float)1.5),null());
            			}
            			break;
            			case (int)3: {
HXLINE( 690)				extraOffset = ::Array_obj< int >::fromData( _hx_array_data_624cd91b_54,2);
HXLINE( 691)				duration = ::flixel::FlxG_obj::random->_hx_float(((Float)1.5),((Float)2.5),null());
            			}
            			break;
            			case (int)4: {
HXLINE( 693)				extraOffset = ::Array_obj< int >::fromData( _hx_array_data_624cd91b_55,2);
HXLINE( 694)				duration = ::flixel::FlxG_obj::random->_hx_float(((Float)1.5),((Float)2.5),null());
            			}
            			break;
            		}
HXLINE( 696)		int rotations_0 = -7;
HXDLIN( 696)		int rotations_1 = -5;
HXLINE( 697)		Float offset_0 = ((Float)306.6);
HXDLIN( 697)		Float offset_1 = ((Float)168.3);
HXLINE( 698)		{
HXLINE( 698)			 ::flixel::math::FlxBasePoint this1 = sprite->offset;
HXDLIN( 698)			this1->set_x(( (Float)(extraOffset->__get(0)) ));
HXDLIN( 698)			this1->set_y(( (Float)(extraOffset->__get(1)) ));
            		}
HXLINE( 701)		 ::flixel::math::FlxBasePoint point = ::flixel::math::FlxBasePoint_obj::pool->get().StaticCast<  ::flixel::math::FlxBasePoint >()->set(((( (Float)(1500) ) - offset_0) - ( (Float)(20) )),((( (Float)(1049) ) - offset_1) - ( (Float)(20) )));
HXDLIN( 701)		point->_inPool = false;
HXLINE( 702)		 ::flixel::math::FlxBasePoint point1 = ::flixel::math::FlxBasePoint_obj::pool->get().StaticCast<  ::flixel::math::FlxBasePoint >()->set(((( (Float)(1770) ) - offset_0) - ( (Float)(80) )),((( (Float)(994) ) - offset_1) + 10));
HXDLIN( 702)		point1->_inPool = false;
HXLINE( 703)		 ::flixel::math::FlxBasePoint point2 = ::flixel::math::FlxBasePoint_obj::pool->get().StaticCast<  ::flixel::math::FlxBasePoint >()->set(((( (Float)(1950) ) - offset_0) - ( (Float)(80) )),((( (Float)(980) ) - offset_1) + 15));
HXDLIN( 703)		point2->_inPool = false;
HXLINE( 700)		::Array< ::Dynamic> path = ::Array_obj< ::Dynamic>::__new(3)->init(0,point)->init(1,point1)->init(2,point2);
HXLINE( 706)		::flixel::tweens::FlxTween_obj::angle(sprite,( (Float)(rotations_0) ),( (Float)(rotations_1) ),duration, ::Dynamic(::hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::cubeOut_dyn())));
HXLINE( 707)		::flixel::tweens::FlxTween_obj::quadPath(sprite,path,duration,true, ::Dynamic(::hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::cubeOut_dyn())
            			->setFixed(1,HX_("onComplete",f8,d4,7e,5d), ::Dynamic(new _hx_Closure_0(_gthis)))));
            	}


HX_DEFINE_DYNAMIC_FUNC1(PhillyStreets_obj,driveCarLights,(void))

void PhillyStreets_obj::driveCar( ::objects::BGSprite sprite){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::states::stages::PhillyStreets,_gthis) HXARGC(1)
            		void _hx_run( ::flixel::tweens::FlxTween _){
            			HX_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_749_driveCar)
HXLINE( 749)			_gthis->carInterruptable = true;
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_715_driveCar)
HXDLIN( 715)		 ::states::stages::PhillyStreets _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 716)		this->carInterruptable = false;
HXLINE( 717)		::flixel::tweens::FlxTween_obj::cancelTweensOf(sprite,null());
HXLINE( 718)		int variant = ::flixel::FlxG_obj::random->_hx_int(1,4,null());
HXLINE( 719)		sprite->animation->play((HX_("car",14,74,4b,00) + variant),null(),null(),null());
HXLINE( 721)		::Array< int > extraOffset = ::Array_obj< int >::fromData( _hx_array_data_624cd91b_58,2);
HXLINE( 722)		Float duration = ( (Float)(2) );
HXLINE( 723)		switch((int)(variant)){
            			case (int)1: {
HXLINE( 726)				duration = ::flixel::FlxG_obj::random->_hx_float(1,((Float)1.7),null());
            			}
            			break;
            			case (int)2: {
HXLINE( 728)				extraOffset = ::Array_obj< int >::fromData( _hx_array_data_624cd91b_59,2);
HXLINE( 729)				duration = ::flixel::FlxG_obj::random->_hx_float(((Float)0.6),((Float)1.2),null());
            			}
            			break;
            			case (int)3: {
HXLINE( 731)				extraOffset = ::Array_obj< int >::fromData( _hx_array_data_624cd91b_60,2);
HXLINE( 732)				duration = ::flixel::FlxG_obj::random->_hx_float(((Float)1.5),((Float)2.5),null());
            			}
            			break;
            			case (int)4: {
HXLINE( 734)				extraOffset = ::Array_obj< int >::fromData( _hx_array_data_624cd91b_61,2);
HXLINE( 735)				duration = ::flixel::FlxG_obj::random->_hx_float(((Float)1.5),((Float)2.5),null());
            			}
            			break;
            		}
HXLINE( 738)		Float offset_0 = ((Float)306.6);
HXDLIN( 738)		Float offset_1 = ((Float)168.3);
HXLINE( 739)		{
HXLINE( 739)			 ::flixel::math::FlxBasePoint this1 = sprite->offset;
HXDLIN( 739)			this1->set_x(( (Float)(extraOffset->__get(0)) ));
HXDLIN( 739)			this1->set_y(( (Float)(extraOffset->__get(1)) ));
            		}
HXLINE( 741)		int rotations_0 = -8;
HXDLIN( 741)		int rotations_1 = 18;
HXLINE( 743)		 ::flixel::math::FlxBasePoint point = ::flixel::math::FlxBasePoint_obj::pool->get().StaticCast<  ::flixel::math::FlxBasePoint >()->set((( (Float)(1570) ) - offset_0),((( (Float)(1049) ) - offset_1) - ( (Float)(30) )));
HXDLIN( 743)		point->_inPool = false;
HXLINE( 744)		 ::flixel::math::FlxBasePoint point1 = ::flixel::math::FlxBasePoint_obj::pool->get().StaticCast<  ::flixel::math::FlxBasePoint >()->set((( (Float)(2400) ) - offset_0),((( (Float)(980) ) - offset_1) - ( (Float)(50) )));
HXDLIN( 744)		point1->_inPool = false;
HXLINE( 745)		 ::flixel::math::FlxBasePoint point2 = ::flixel::math::FlxBasePoint_obj::pool->get().StaticCast<  ::flixel::math::FlxBasePoint >()->set((( (Float)(3102) ) - offset_0),((( (Float)(1127) ) - offset_1) + 40));
HXDLIN( 745)		point2->_inPool = false;
HXLINE( 742)		::Array< ::Dynamic> path = ::Array_obj< ::Dynamic>::__new(3)->init(0,point)->init(1,point1)->init(2,point2);
HXLINE( 748)		::flixel::tweens::FlxTween_obj::angle(sprite,( (Float)(rotations_0) ),( (Float)(rotations_1) ),duration,null());
HXLINE( 749)		::flixel::tweens::FlxTween_obj::quadPath(sprite,path,duration,true, ::Dynamic(::hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("onComplete",f8,d4,7e,5d), ::Dynamic(new _hx_Closure_0(_gthis)))));
            	}


HX_DEFINE_DYNAMIC_FUNC1(PhillyStreets_obj,driveCar,(void))

void PhillyStreets_obj::driveCarBack( ::flixel::FlxSprite sprite){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::states::stages::PhillyStreets,_gthis) HXARGC(1)
            		void _hx_run( ::flixel::tweens::FlxTween _){
            			HX_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_787_driveCarBack)
HXLINE( 787)			_gthis->car2Interruptable = true;
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_753_driveCarBack)
HXDLIN( 753)		 ::states::stages::PhillyStreets _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 754)		this->car2Interruptable = false;
HXLINE( 755)		::flixel::tweens::FlxTween_obj::cancelTweensOf(sprite,null());
HXLINE( 756)		int variant = ::flixel::FlxG_obj::random->_hx_int(1,4,null());
HXLINE( 757)		sprite->animation->play((HX_("car",14,74,4b,00) + variant),null(),null(),null());
HXLINE( 759)		::Array< int > extraOffset = ::Array_obj< int >::fromData( _hx_array_data_624cd91b_64,2);
HXLINE( 760)		Float duration = ( (Float)(2) );
HXLINE( 761)		switch((int)(variant)){
            			case (int)1: {
HXLINE( 764)				duration = ::flixel::FlxG_obj::random->_hx_float(1,((Float)1.7),null());
            			}
            			break;
            			case (int)2: {
HXLINE( 766)				extraOffset = ::Array_obj< int >::fromData( _hx_array_data_624cd91b_65,2);
HXLINE( 767)				duration = ::flixel::FlxG_obj::random->_hx_float(((Float)0.6),((Float)1.2),null());
            			}
            			break;
            			case (int)3: {
HXLINE( 769)				extraOffset = ::Array_obj< int >::fromData( _hx_array_data_624cd91b_66,2);
HXLINE( 770)				duration = ::flixel::FlxG_obj::random->_hx_float(((Float)1.5),((Float)2.5),null());
            			}
            			break;
            			case (int)4: {
HXLINE( 772)				extraOffset = ::Array_obj< int >::fromData( _hx_array_data_624cd91b_67,2);
HXLINE( 773)				duration = ::flixel::FlxG_obj::random->_hx_float(((Float)1.5),((Float)2.5),null());
            			}
            			break;
            		}
HXLINE( 776)		Float offset_0 = ((Float)306.6);
HXDLIN( 776)		Float offset_1 = ((Float)168.3);
HXLINE( 777)		{
HXLINE( 777)			 ::flixel::math::FlxBasePoint this1 = sprite->offset;
HXDLIN( 777)			this1->set_x(( (Float)(extraOffset->__get(0)) ));
HXDLIN( 777)			this1->set_y(( (Float)(extraOffset->__get(1)) ));
            		}
HXLINE( 779)		int rotations_0 = 18;
HXDLIN( 779)		int rotations_1 = -8;
HXLINE( 781)		 ::flixel::math::FlxBasePoint point = ::flixel::math::FlxBasePoint_obj::pool->get().StaticCast<  ::flixel::math::FlxBasePoint >()->set((( (Float)(3102) ) - offset_0),((( (Float)(1127) ) - offset_1) + 60));
HXDLIN( 781)		point->_inPool = false;
HXLINE( 782)		 ::flixel::math::FlxBasePoint point1 = ::flixel::math::FlxBasePoint_obj::pool->get().StaticCast<  ::flixel::math::FlxBasePoint >()->set((( (Float)(2400) ) - offset_0),((( (Float)(980) ) - offset_1) - ( (Float)(30) )));
HXDLIN( 782)		point1->_inPool = false;
HXLINE( 783)		 ::flixel::math::FlxBasePoint point2 = ::flixel::math::FlxBasePoint_obj::pool->get().StaticCast<  ::flixel::math::FlxBasePoint >()->set((( (Float)(1570) ) - offset_0),((( (Float)(1049) ) - offset_1) - ( (Float)(10) )));
HXDLIN( 783)		point2->_inPool = false;
HXLINE( 780)		::Array< ::Dynamic> path = ::Array_obj< ::Dynamic>::__new(3)->init(0,point)->init(1,point1)->init(2,point2);
HXLINE( 786)		::flixel::tweens::FlxTween_obj::angle(sprite,( (Float)(rotations_0) ),( (Float)(rotations_1) ),duration,null());
HXLINE( 787)		::flixel::tweens::FlxTween_obj::quadPath(sprite,path,duration,true, ::Dynamic(::hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("onComplete",f8,d4,7e,5d), ::Dynamic(new _hx_Closure_0(_gthis)))));
            	}


HX_DEFINE_DYNAMIC_FUNC1(PhillyStreets_obj,driveCarBack,(void))

void PhillyStreets_obj::goodNoteHit( ::objects::Note note){
            	HX_GC_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_791_goodNoteHit)
HXDLIN( 791)		 ::states::stages::PhillyStreets _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 793)		if ((::flixel::FlxG_obj::random->_hx_float(0,100,null()) < 10)) {
HXLINE( 795)			 ::Dynamic _hx_switch_0 =  ::Dynamic(::flixel::FlxG_obj::game->_state->__Field(HX_("combo",4e,28,5d,4a),::hx::paccDynamic));
            			if (  (_hx_switch_0==50) ||  (_hx_switch_0==100) ){
HXLINE( 798)				::String animToPlay = (HX_("combo",4e,28,5d,4a) + ::Std_obj::string( ::Dynamic(::flixel::FlxG_obj::game->_state->__Field(HX_("combo",4e,28,5d,4a),::hx::paccDynamic))));
HXLINE( 799)				if (( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("gf",1f,5a,00,00),::hx::paccDynamic)) )->animation->exists(animToPlay)) {
HXLINE( 801)					( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("gf",1f,5a,00,00),::hx::paccDynamic)) )->playAnim(animToPlay,null(),null(),null());
HXLINE( 802)					( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("gf",1f,5a,00,00),::hx::paccDynamic)) )->specialAnim = true;
            				}
HXLINE( 797)				goto _hx_goto_68;
            			}
            			_hx_goto_68:;
            		}
HXLINE( 807)		::String _hx_switch_1 = note->noteType;
            		if (  (_hx_switch_1==HX_("weekend-1-cockgun",aa,40,6b,b0)) ){
            			HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::states::stages::PhillyStreets,_gthis) HXARGC(3)
            			void _hx_run(::String name,int frameNumber,int frameIndex){
            				HX_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_817_goodNoteHit)
HXLINE( 817)				if ((name == HX_("cock",54,b0,c4,41))) {
HXLINE( 820)					if ((frameNumber == 3)) {
HXLINE( 822)						( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->animation->callback = null();
HXLINE( 823)						_gthis->createCasing();
            					}
            				}
            				else {
HXLINE( 825)					( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->animation->callback = null();
            				}
            			}
            			HX_END_LOCAL_FUNC3((void))

            			HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            			void _hx_run( ::objects::Note note){
            				HX_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_831_goodNoteHit)
HXLINE( 831)				if ((note->noteType == HX_("weekend-1-firegun",88,e6,12,66))) {
HXLINE( 832)					note->blockHit = false;
            				}
            			}
            			HX_END_LOCAL_FUNC1((void))

HXLINE( 810)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->holdTimer = ( (Float)(0) );
HXLINE( 811)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->playAnim(HX_("cock",54,b0,c4,41),true,null(),null());
HXLINE( 812)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->specialAnim = true;
HXLINE( 813)			this->gunPrepSnd->play(null(),null(),null());
HXLINE( 815)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->animation->callback =  ::Dynamic(new _hx_Closure_0(_gthis));
HXLINE( 829)			 ::Dynamic(::flixel::FlxG_obj::game->_state->__Field(HX_("notes",41,dc,ca,9f),::hx::paccDynamic))->__Field(HX_("forEachAlive",c3,61,b7,99),::hx::paccDynamic)( ::Dynamic(new _hx_Closure_1()));
HXLINE( 834)			this->showPicoFade();
HXLINE( 809)			goto _hx_goto_69;
            		}
            		if (  (_hx_switch_1==HX_("weekend-1-firegun",88,e6,12,66)) ){
            			HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_2, ::states::stages::PhillyStreets,_gthis) HXARGC(1)
            			void _hx_run( ::flixel::util::FlxTimer tmr){
            				HX_GC_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_845_goodNoteHit)
HXLINE( 845)				_gthis->darkenStageProps();
            			}
            			HX_END_LOCAL_FUNC1((void))

HXLINE( 837)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->holdTimer = ( (Float)(0) );
HXLINE( 838)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->playAnim(HX_("shoot",df,81,27,7c),true,null(),null());
HXLINE( 839)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->specialAnim = true;
HXLINE( 840)			 ::flixel::_hx_system::frontEnds::SoundFrontEnd _hx_tmp = ::flixel::FlxG_obj::sound;
HXDLIN( 840)			::String key = (HX_("shots/shot",d0,63,52,0f) + ::flixel::FlxG_obj::random->_hx_int(1,4,null()));
HXDLIN( 840)			 ::Dynamic modsAllowed = true;
HXDLIN( 840)			if (::hx::IsNull( modsAllowed )) {
HXLINE( 840)				modsAllowed = true;
            			}
HXDLIN( 840)			_hx_tmp->play(::backend::Paths_obj::returnSound((HX_("sounds/",eb,02,a5,b6) + key),null(),modsAllowed,null()),null(),null(),null(),null(),null());
HXLINE( 841)			this->spraycan->playCanShot();
HXLINE( 843)			 ::flixel::util::FlxTimer_obj::__alloc( HX_CTX ,null())->start(((Float)0.041666666666666664), ::Dynamic(new _hx_Closure_2(_gthis)),null());
HXLINE( 836)			goto _hx_goto_69;
            		}
            		_hx_goto_69:;
            	}


void PhillyStreets_obj::createCasing(){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::flixel::FlxSprite,casing) HXARGC(3)
            		void _hx_run(::String name,int frameNumber,int frameIndex){
            			HX_GC_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_862_createCasing)
HXLINE( 862)			bool _hx_tmp;
HXDLIN( 862)			if ((name == HX_("pop",91,5d,55,00))) {
HXLINE( 862)				_hx_tmp = (frameNumber == 40);
            			}
            			else {
HXLINE( 862)				_hx_tmp = false;
            			}
HXDLIN( 862)			if (_hx_tmp) {
HXLINE( 865)				casing->set_x(((casing->x + casing->frame->offset->x) - ( (Float)(1) )));
HXLINE( 866)				casing->set_y(((casing->y + casing->frame->offset->y) + 1));
HXLINE( 868)				casing->set_angle(((Float)125.1));
HXLINE( 871)				Float randomFactorA = ::flixel::FlxG_obj::random->_hx_float(3,10,null());
HXLINE( 872)				Float randomFactorB = ::flixel::FlxG_obj::random->_hx_float(((Float)1.0),((Float)2.0),null());
HXLINE( 873)				casing->velocity->set_x((( (Float)(20) ) * randomFactorB));
HXLINE( 874)				casing->drag->set_x((randomFactorA * randomFactorB));
HXLINE( 877)				casing->angularVelocity = ( (Float)(100) );
HXLINE( 879)				casing->angularDrag = ((casing->drag->x / casing->velocity->x) * ( (Float)(100) ));
HXLINE( 881)				casing->animation->play(HX_("idle",14,a7,b3,45),null(),null(),null());
HXLINE( 882)				casing->animation->callback = null();
            			}
            		}
            		HX_END_LOCAL_FUNC3((void))

            	HX_GC_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_851_createCasing)
HXLINE( 852)		if (::backend::ClientPrefs_obj::data->lowQuality) {
HXLINE( 852)			return;
            		}
HXLINE( 854)		 ::flixel::FlxSprite casing =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,(( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->x + 250),(( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->y + 100),null());
HXLINE( 855)		casing->set_frames(this->casingFrames);
HXLINE( 856)		casing->animation->addByPrefix(HX_("pop",91,5d,55,00),HX_("Pop0",9f,ad,35,35),24,false,null(),null());
HXLINE( 857)		casing->animation->addByPrefix(HX_("idle",14,a7,b3,45),HX_("Bullet0",8e,8f,40,f7),24,true,null(),null());
HXLINE( 858)		casing->animation->play(HX_("pop",91,5d,55,00),true,null(),null());
HXLINE( 860)		casing->animation->callback =  ::Dynamic(new _hx_Closure_0(casing));
HXLINE( 885)		this->casingGroup->add(casing).StaticCast<  ::flixel::FlxSprite >();
            	}


HX_DEFINE_DYNAMIC_FUNC0(PhillyStreets_obj,createCasing,(void))

void PhillyStreets_obj::opponentNoteHit( ::objects::Note note){
            	HX_GC_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_889_opponentNoteHit)
HXDLIN( 889)		 ::states::stages::PhillyStreets _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 890)		Float sndTime = (note->strumTime - ::backend::Conductor_obj::songPosition);
HXLINE( 891)		::String _hx_switch_0 = note->noteType;
            		if (  (_hx_switch_0==HX_("weekend-1-kickcan",08,b2,ef,96)) ){
            			HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            			void _hx_run( ::flixel::util::FlxTimer _){
            				HX_GC_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_914_opponentNoteHit)
HXLINE( 915)				::flixel::FlxG_obj::game->_state->__SetField(HX_("isCameraOnForcedPos",ed,e7,4d,ae),false,::hx::paccDynamic);
HXLINE( 916)				::flixel::FlxG_obj::game->_state->__Field(HX_("moveCameraSection",ef,4b,d5,47),::hx::paccDynamic)();
HXLINE( 917)				::flixel::FlxG_obj::game->_state->__SetField(HX_("cameraSpeed",a2,8a,af,75),1,::hx::paccDynamic);
            			}
            			HX_END_LOCAL_FUNC1((void))

HXLINE( 905)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("dad",47,36,4c,00),::hx::paccDynamic)) )->holdTimer = ( (Float)(0) );
HXLINE( 906)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("dad",47,36,4c,00),::hx::paccDynamic)) )->playAnim(HX_("kickCan",ea,f3,89,a4),true,null(),null());
HXLINE( 907)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("dad",47,36,4c,00),::hx::paccDynamic)) )->specialAnim = true;
HXLINE( 908)			this->kickCanSnd->play(true,(sndTime - ( (Float)(50) )),null());
HXLINE( 909)			this->spraycan->playCanStart();
HXLINE( 910)			 ::flixel::FlxObject fh = ( ( ::flixel::FlxObject)(::flixel::FlxG_obj::game->_state->__Field(HX_("camFollow",e0,6e,47,22),::hx::paccDynamic)) );
HXDLIN( 910)			fh->set_x((fh->x + 250));
HXLINE( 911)			::flixel::FlxG_obj::game->_state->__SetField(HX_("cameraSpeed",a2,8a,af,75),((Float)1.5),::hx::paccDynamic);
HXLINE( 912)			 ::Dynamic fh1 = ::flixel::FlxG_obj::game->_state;
HXDLIN( 912)			fh1->__SetField(HX_("defaultCamZoom",01,50,2a,0b),( ::Dynamic(fh1->__Field(HX_("defaultCamZoom",01,50,2a,0b),::hx::paccDynamic)) - ((Float)0.1)),::hx::paccDynamic);
HXLINE( 914)			 ::flixel::util::FlxTimer_obj::__alloc( HX_CTX ,null())->start(((Float)1.1), ::Dynamic(new _hx_Closure_0()),null());
HXLINE( 904)			goto _hx_goto_76;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-kneecan",2b,61,8e,b9)) ){
HXLINE( 920)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("dad",47,36,4c,00),::hx::paccDynamic)) )->holdTimer = ( (Float)(0) );
HXLINE( 921)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("dad",47,36,4c,00),::hx::paccDynamic)) )->playAnim(HX_("kneeCan",0d,a3,28,c7),true,null(),null());
HXLINE( 922)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("dad",47,36,4c,00),::hx::paccDynamic)) )->specialAnim = true;
HXLINE( 923)			this->kneeCanSnd->play(true,(sndTime - ( (Float)(22) )),null());
HXLINE( 919)			goto _hx_goto_76;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-lightcan",3c,55,76,9e)) ){
HXLINE( 894)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("dad",47,36,4c,00),::hx::paccDynamic)) )->holdTimer = ( (Float)(0) );
HXLINE( 895)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("dad",47,36,4c,00),::hx::paccDynamic)) )->playAnim(HX_("lightCan",da,44,e4,8c),true,null(),null());
HXLINE( 896)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("dad",47,36,4c,00),::hx::paccDynamic)) )->specialAnim = true;
HXLINE( 897)			this->lightCanSnd->play(true,(sndTime - ( (Float)(65) )),null());
HXLINE( 899)			::flixel::FlxG_obj::game->_state->__SetField(HX_("isCameraOnForcedPos",ed,e7,4d,ae),true,::hx::paccDynamic);
HXLINE( 900)			 ::Dynamic fh2 = ::flixel::FlxG_obj::game->_state;
HXDLIN( 900)			fh2->__SetField(HX_("defaultCamZoom",01,50,2a,0b),(fh2->__Field(HX_("defaultCamZoom",01,50,2a,0b),::hx::paccDynamic) + ((Float)0.1)),::hx::paccDynamic);
HXLINE( 901)			::flixel::FlxG_obj::game->_state->__Field(HX_("moveCamera",96,c0,ba,07),::hx::paccDynamic)(true);
HXLINE( 902)			::flixel::FlxG_obj::game->_state->__SetField(HX_("cameraSpeed",a2,8a,af,75),2,::hx::paccDynamic);
HXLINE( 903)			 ::flixel::FlxObject fh3 = ( ( ::flixel::FlxObject)(::flixel::FlxG_obj::game->_state->__Field(HX_("camFollow",e0,6e,47,22),::hx::paccDynamic)) );
HXDLIN( 903)			fh3->set_x((fh3->x - ( (Float)(100) )));
HXLINE( 893)			goto _hx_goto_76;
            		}
            		_hx_goto_76:;
            	}


void PhillyStreets_obj::noteMiss( ::objects::Note note){
            	HX_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_929_noteMiss)
HXDLIN( 929)		 ::states::stages::PhillyStreets _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 930)		if ((note->noteType == HX_("weekend-1-firegun",88,e6,12,66))) {
            			HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_2, ::states::stages::PhillyStreets,_gthis) HXARGC(1)
            			void _hx_run(::String name){
            				HX_GC_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_945_noteMiss)
HXLINE( 946)				bool _hx_tmp;
HXDLIN( 946)				bool _hx_tmp1;
HXDLIN( 946)				bool _hx_tmp2;
HXDLIN( 946)				if ((name == HX_("shootMISS",5b,78,f4,65))) {
HXLINE( 946)					_hx_tmp2 = ::hx::IsGreater( ::flixel::FlxG_obj::game->_state->__Field(HX_("health",9c,28,06,fd),::hx::paccDynamic),((Float)0.0) );
            				}
            				else {
HXLINE( 946)					_hx_tmp2 = false;
            				}
HXDLIN( 946)				if (_hx_tmp2) {
HXLINE( 946)					_hx_tmp1 = !(( (bool)(::flixel::FlxG_obj::game->_state->__Field(HX_("practiceMode",be,79,8f,7f),::hx::paccDynamic)) ));
            				}
            				else {
HXLINE( 946)					_hx_tmp1 = false;
            				}
HXDLIN( 946)				if (_hx_tmp1) {
HXLINE( 946)					_hx_tmp = ::hx::IsNull( ::flixel::FlxG_obj::game->_state->__Field(HX_("gameOverTimer",7f,2b,da,cb),::hx::paccDynamic) );
            				}
            				else {
HXLINE( 946)					_hx_tmp = false;
            				}
HXDLIN( 946)				if (_hx_tmp) {
            					HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_1, ::states::stages::PhillyStreets,_gthis) HXARGC(1)
            					void _hx_run( ::flixel::util::FlxTimer tmr){
            						HX_GC_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_950_noteMiss)
HXLINE( 951)						( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->set_visible(!(( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->visible));
HXLINE( 952)						if (((tmr->loops - tmr->_loopsCounter) == 0)) {
            							HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            							void _hx_run( ::flixel::util::FlxTimer tmr2){
            								HX_GC_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_956_noteMiss)
HXLINE( 957)								( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->set_visible(!(( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->visible));
HXLINE( 958)								if (((tmr2->loops - tmr2->_loopsCounter) == 0)) {
HXLINE( 960)									( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->set_visible(true);
            								}
            							}
            							HX_END_LOCAL_FUNC1((void))

HXLINE( 954)							( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->set_visible(true);
HXLINE( 955)							_gthis->picoFlicker =  ::flixel::util::FlxTimer_obj::__alloc( HX_CTX ,null())->start(((Float)0.016666666666666666), ::Dynamic(new _hx_Closure_0()),30);
            						}
            					}
            					HX_END_LOCAL_FUNC1((void))

HXLINE( 949)					_gthis->picoFlicker =  ::flixel::util::FlxTimer_obj::__alloc( HX_CTX ,null())->start(((Float)0.033333333333333333), ::Dynamic(new _hx_Closure_1(_gthis)),30);
            				}
HXLINE( 968)				( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->animation->finishCallback = null();
            			}
            			HX_END_LOCAL_FUNC1((void))

HXLINE( 933)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->playAnim(HX_("shootMISS",5b,78,f4,65),true,null(),null());
HXLINE( 934)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->specialAnim = true;
HXLINE( 935)			this->bonkSnd->play(null(),null(),null());
HXLINE( 937)			if (::hx::IsNotNull( this->picoFlicker )) {
HXLINE( 939)				this->picoFlicker->cancel();
HXLINE( 940)				this->picoFlicker->destroy();
            			}
HXLINE( 942)			this->picoFlicker = null();
HXLINE( 944)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->animation->finishCallback =  ::Dynamic(new _hx_Closure_2(_gthis));
HXLINE( 971)			 ::Dynamic fh = ::flixel::FlxG_obj::game->_state;
HXDLIN( 971)			fh->__SetField(HX_("health",9c,28,06,fd),( ::Dynamic(fh->__Field(HX_("health",9c,28,06,fd),::hx::paccDynamic)) - ((Float)0.4)),::hx::paccDynamic);
HXLINE( 972)			bool _hx_tmp;
HXDLIN( 972)			if (::hx::IsLessEq( ::flixel::FlxG_obj::game->_state->__Field(HX_("health",9c,28,06,fd),::hx::paccDynamic),((Float)0.0) )) {
HXLINE( 972)				_hx_tmp = !(( (bool)(::flixel::FlxG_obj::game->_state->__Field(HX_("practiceMode",be,79,8f,7f),::hx::paccDynamic)) ));
            			}
            			else {
HXLINE( 972)				_hx_tmp = false;
            			}
HXDLIN( 972)			if (_hx_tmp) {
HXLINE( 974)				::substates::GameOverSubstate_obj::deathSoundName = HX_("fnf_loss_sfx-pico-explode",3c,40,33,85);
HXLINE( 975)				::substates::GameOverSubstate_obj::loopSoundName = HX_("gameOverStart-pico-explode",4a,ef,63,3d);
HXLINE( 976)				::substates::GameOverSubstate_obj::characterName = HX_("pico-explosion-dead",44,6f,3a,5c);
            			}
            		}
            	}


void PhillyStreets_obj::showPicoFade(){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::states::stages::PhillyStreets,_gthis) HXARGC(1)
            		void _hx_run( ::flixel::tweens::FlxTween _){
            			HX_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_996_showPicoFade)
HXLINE( 996)			_gthis->picoFade->set_visible(false);
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_982_showPicoFade)
HXDLIN( 982)		 ::states::stages::PhillyStreets _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 983)		if (::backend::ClientPrefs_obj::data->lowQuality) {
HXLINE( 983)			return;
            		}
HXLINE( 985)		this->picoFade->setPosition(( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->x,( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->y);
HXLINE( 986)		this->picoFade->set_frames(( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->frames);
HXLINE( 987)		this->picoFade->set_frame(( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->frame);
HXLINE( 988)		this->picoFade->set_alpha(((Float)0.3));
HXLINE( 989)		{
HXLINE( 989)			 ::flixel::math::FlxBasePoint this1 = this->picoFade->scale;
HXDLIN( 989)			this1->set_x(( (Float)(1) ));
HXDLIN( 989)			this1->set_y(( (Float)(1) ));
            		}
HXLINE( 990)		this->picoFade->updateHitbox();
HXLINE( 991)		this->picoFade->set_visible(true);
HXLINE( 993)		::flixel::tweens::FlxTween_obj::cancelTweensOf(this->picoFade->scale,null());
HXLINE( 994)		::flixel::tweens::FlxTween_obj::cancelTweensOf(this->picoFade,null());
HXLINE( 995)		::flixel::tweens::FlxTween_obj::tween(this->picoFade->scale, ::Dynamic(::hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("x",78,00,00,00),((Float)1.3))
            			->setFixed(1,HX_("y",79,00,00,00),((Float)1.3))),((Float)0.4),null());
HXLINE( 996)		::flixel::tweens::FlxTween_obj::tween(this->picoFade, ::Dynamic(::hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("alpha",5e,a7,96,21),0)),((Float)0.4), ::Dynamic(::hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("onComplete",f8,d4,7e,5d), ::Dynamic(new _hx_Closure_0(_gthis)))));
            	}


HX_DEFINE_DYNAMIC_FUNC0(PhillyStreets_obj,showPicoFade,(void))

void PhillyStreets_obj::darkenStageProps(){
            	HX_GC_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_1002_darkenStageProps)
HXDLIN(1002)		int _g = 0;
HXDLIN(1002)		::Array< ::Dynamic> _g1 = this->darkenable;
HXDLIN(1002)		while((_g < _g1->length)){
            			HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::flixel::FlxSprite,sprite) HXARGC(1)
            			void _hx_run( ::flixel::util::FlxTimer tmr){
            				HX_GC_STACKFRAME(&_hx_pos_06ef21b7f8b4c92f_1007_darkenStageProps)
HXLINE(1008)				sprite->set_color(-14540254);
HXLINE(1009)				::flixel::tweens::FlxTween_obj::color(sprite,((Float)1.4),-14540254,-1,null());
            			}
            			HX_END_LOCAL_FUNC1((void))

HXDLIN(1002)			 ::flixel::FlxSprite sprite = _g1->__get(_g).StaticCast<  ::flixel::FlxSprite >();
HXDLIN(1002)			_g = (_g + 1);
HXLINE(1005)			sprite->set_color(-15658735);
HXLINE(1006)			 ::flixel::util::FlxTimer_obj::__alloc( HX_CTX ,null())->start(((Float)0.041666666666666664), ::Dynamic(new _hx_Closure_0(sprite)),null());
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(PhillyStreets_obj,darkenStageProps,(void))


::hx::ObjectPtr< PhillyStreets_obj > PhillyStreets_obj::__new() {
	::hx::ObjectPtr< PhillyStreets_obj > __this = new PhillyStreets_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< PhillyStreets_obj > PhillyStreets_obj::__alloc(::hx::Ctx *_hx_ctx) {
	PhillyStreets_obj *__this = (PhillyStreets_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(PhillyStreets_obj), true, "states.stages.PhillyStreets"));
	*(void **)__this = PhillyStreets_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

PhillyStreets_obj::PhillyStreets_obj()
{
}

void PhillyStreets_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(PhillyStreets);
	HX_MARK_MEMBER_NAME(MIN_BLINK_DELAY,"MIN_BLINK_DELAY");
	HX_MARK_MEMBER_NAME(MAX_BLINK_DELAY,"MAX_BLINK_DELAY");
	HX_MARK_MEMBER_NAME(VULTURE_THRESHOLD,"VULTURE_THRESHOLD");
	HX_MARK_MEMBER_NAME(blinkCountdown,"blinkCountdown");
	HX_MARK_MEMBER_NAME(rainShader,"rainShader");
	HX_MARK_MEMBER_NAME(rainShaderStartIntensity,"rainShaderStartIntensity");
	HX_MARK_MEMBER_NAME(rainShaderEndIntensity,"rainShaderEndIntensity");
	HX_MARK_MEMBER_NAME(scrollingSky,"scrollingSky");
	HX_MARK_MEMBER_NAME(phillyTraffic,"phillyTraffic");
	HX_MARK_MEMBER_NAME(phillyCars,"phillyCars");
	HX_MARK_MEMBER_NAME(phillyCars2,"phillyCars2");
	HX_MARK_MEMBER_NAME(picoFade,"picoFade");
	HX_MARK_MEMBER_NAME(spraycan,"spraycan");
	HX_MARK_MEMBER_NAME(spraycanPile,"spraycanPile");
	HX_MARK_MEMBER_NAME(darkenable,"darkenable");
	HX_MARK_MEMBER_NAME(abot,"abot");
	HX_MARK_MEMBER_NAME(noteTypes,"noteTypes");
	HX_MARK_MEMBER_NAME(videoEnded,"videoEnded");
	HX_MARK_MEMBER_NAME(cutsceneHandler,"cutsceneHandler");
	HX_MARK_MEMBER_NAME(casingGroup,"casingGroup");
	HX_MARK_MEMBER_NAME(casingFrames,"casingFrames");
	HX_MARK_MEMBER_NAME(gunPrepSnd,"gunPrepSnd");
	HX_MARK_MEMBER_NAME(bonkSnd,"bonkSnd");
	HX_MARK_MEMBER_NAME(lightCanSnd,"lightCanSnd");
	HX_MARK_MEMBER_NAME(kickCanSnd,"kickCanSnd");
	HX_MARK_MEMBER_NAME(kneeCanSnd,"kneeCanSnd");
	HX_MARK_MEMBER_NAME(currentNeneState,"currentNeneState");
	HX_MARK_MEMBER_NAME(animationFinished,"animationFinished");
	HX_MARK_MEMBER_NAME(lightsStop,"lightsStop");
	HX_MARK_MEMBER_NAME(lastChange,"lastChange");
	HX_MARK_MEMBER_NAME(changeInterval,"changeInterval");
	HX_MARK_MEMBER_NAME(carWaiting,"carWaiting");
	HX_MARK_MEMBER_NAME(carInterruptable,"carInterruptable");
	HX_MARK_MEMBER_NAME(car2Interruptable,"car2Interruptable");
	HX_MARK_MEMBER_NAME(picoFlicker,"picoFlicker");
	 ::flixel::FlxBasic_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void PhillyStreets_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(MIN_BLINK_DELAY,"MIN_BLINK_DELAY");
	HX_VISIT_MEMBER_NAME(MAX_BLINK_DELAY,"MAX_BLINK_DELAY");
	HX_VISIT_MEMBER_NAME(VULTURE_THRESHOLD,"VULTURE_THRESHOLD");
	HX_VISIT_MEMBER_NAME(blinkCountdown,"blinkCountdown");
	HX_VISIT_MEMBER_NAME(rainShader,"rainShader");
	HX_VISIT_MEMBER_NAME(rainShaderStartIntensity,"rainShaderStartIntensity");
	HX_VISIT_MEMBER_NAME(rainShaderEndIntensity,"rainShaderEndIntensity");
	HX_VISIT_MEMBER_NAME(scrollingSky,"scrollingSky");
	HX_VISIT_MEMBER_NAME(phillyTraffic,"phillyTraffic");
	HX_VISIT_MEMBER_NAME(phillyCars,"phillyCars");
	HX_VISIT_MEMBER_NAME(phillyCars2,"phillyCars2");
	HX_VISIT_MEMBER_NAME(picoFade,"picoFade");
	HX_VISIT_MEMBER_NAME(spraycan,"spraycan");
	HX_VISIT_MEMBER_NAME(spraycanPile,"spraycanPile");
	HX_VISIT_MEMBER_NAME(darkenable,"darkenable");
	HX_VISIT_MEMBER_NAME(abot,"abot");
	HX_VISIT_MEMBER_NAME(noteTypes,"noteTypes");
	HX_VISIT_MEMBER_NAME(videoEnded,"videoEnded");
	HX_VISIT_MEMBER_NAME(cutsceneHandler,"cutsceneHandler");
	HX_VISIT_MEMBER_NAME(casingGroup,"casingGroup");
	HX_VISIT_MEMBER_NAME(casingFrames,"casingFrames");
	HX_VISIT_MEMBER_NAME(gunPrepSnd,"gunPrepSnd");
	HX_VISIT_MEMBER_NAME(bonkSnd,"bonkSnd");
	HX_VISIT_MEMBER_NAME(lightCanSnd,"lightCanSnd");
	HX_VISIT_MEMBER_NAME(kickCanSnd,"kickCanSnd");
	HX_VISIT_MEMBER_NAME(kneeCanSnd,"kneeCanSnd");
	HX_VISIT_MEMBER_NAME(currentNeneState,"currentNeneState");
	HX_VISIT_MEMBER_NAME(animationFinished,"animationFinished");
	HX_VISIT_MEMBER_NAME(lightsStop,"lightsStop");
	HX_VISIT_MEMBER_NAME(lastChange,"lastChange");
	HX_VISIT_MEMBER_NAME(changeInterval,"changeInterval");
	HX_VISIT_MEMBER_NAME(carWaiting,"carWaiting");
	HX_VISIT_MEMBER_NAME(carInterruptable,"carInterruptable");
	HX_VISIT_MEMBER_NAME(car2Interruptable,"car2Interruptable");
	HX_VISIT_MEMBER_NAME(picoFlicker,"picoFlicker");
	 ::flixel::FlxBasic_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val PhillyStreets_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"abot") ) { return ::hx::Val( abot ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"create") ) { return ::hx::Val( create_dyn() ); }
		if (HX_FIELD_EQ(inName,"update") ) { return ::hx::Val( update_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"bonkSnd") ) { return ::hx::Val( bonkSnd ); }
		if (HX_FIELD_EQ(inName,"beatHit") ) { return ::hx::Val( beatHit_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"picoFade") ) { return ::hx::Val( picoFade ); }
		if (HX_FIELD_EQ(inName,"spraycan") ) { return ::hx::Val( spraycan ); }
		if (HX_FIELD_EQ(inName,"precache") ) { return ::hx::Val( precache_dyn() ); }
		if (HX_FIELD_EQ(inName,"driveCar") ) { return ::hx::Val( driveCar_dyn() ); }
		if (HX_FIELD_EQ(inName,"noteMiss") ) { return ::hx::Val( noteMiss_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"noteTypes") ) { return ::hx::Val( noteTypes ); }
		if (HX_FIELD_EQ(inName,"startSong") ) { return ::hx::Val( startSong_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"rainShader") ) { return ::hx::Val( rainShader ); }
		if (HX_FIELD_EQ(inName,"phillyCars") ) { return ::hx::Val( phillyCars ); }
		if (HX_FIELD_EQ(inName,"darkenable") ) { return ::hx::Val( darkenable ); }
		if (HX_FIELD_EQ(inName,"createPost") ) { return ::hx::Val( createPost_dyn() ); }
		if (HX_FIELD_EQ(inName,"videoEnded") ) { return ::hx::Val( videoEnded ); }
		if (HX_FIELD_EQ(inName,"gunPrepSnd") ) { return ::hx::Val( gunPrepSnd ); }
		if (HX_FIELD_EQ(inName,"kickCanSnd") ) { return ::hx::Val( kickCanSnd ); }
		if (HX_FIELD_EQ(inName,"kneeCanSnd") ) { return ::hx::Val( kneeCanSnd ); }
		if (HX_FIELD_EQ(inName,"sectionHit") ) { return ::hx::Val( sectionHit_dyn() ); }
		if (HX_FIELD_EQ(inName,"lightsStop") ) { return ::hx::Val( lightsStop ); }
		if (HX_FIELD_EQ(inName,"lastChange") ) { return ::hx::Val( lastChange ); }
		if (HX_FIELD_EQ(inName,"carWaiting") ) { return ::hx::Val( carWaiting ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"phillyCars2") ) { return ::hx::Val( phillyCars2 ); }
		if (HX_FIELD_EQ(inName,"casingGroup") ) { return ::hx::Val( casingGroup ); }
		if (HX_FIELD_EQ(inName,"lightCanSnd") ) { return ::hx::Val( lightCanSnd ); }
		if (HX_FIELD_EQ(inName,"goodNoteHit") ) { return ::hx::Val( goodNoteHit_dyn() ); }
		if (HX_FIELD_EQ(inName,"picoFlicker") ) { return ::hx::Val( picoFlicker ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"scrollingSky") ) { return ::hx::Val( scrollingSky ); }
		if (HX_FIELD_EQ(inName,"spraycanPile") ) { return ::hx::Val( spraycanPile ); }
		if (HX_FIELD_EQ(inName,"casingFrames") ) { return ::hx::Val( casingFrames ); }
		if (HX_FIELD_EQ(inName,"changeLights") ) { return ::hx::Val( changeLights_dyn() ); }
		if (HX_FIELD_EQ(inName,"driveCarBack") ) { return ::hx::Val( driveCarBack_dyn() ); }
		if (HX_FIELD_EQ(inName,"createCasing") ) { return ::hx::Val( createCasing_dyn() ); }
		if (HX_FIELD_EQ(inName,"showPicoFade") ) { return ::hx::Val( showPicoFade_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"phillyTraffic") ) { return ::hx::Val( phillyTraffic ); }
		if (HX_FIELD_EQ(inName,"videoCutscene") ) { return ::hx::Val( videoCutscene_dyn() ); }
		if (HX_FIELD_EQ(inName,"updateABotEye") ) { return ::hx::Val( updateABotEye_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"blinkCountdown") ) { return ::hx::Val( blinkCountdown ); }
		if (HX_FIELD_EQ(inName,"changeInterval") ) { return ::hx::Val( changeInterval ); }
		if (HX_FIELD_EQ(inName,"driveCarLights") ) { return ::hx::Val( driveCarLights_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"MIN_BLINK_DELAY") ) { return ::hx::Val( MIN_BLINK_DELAY ); }
		if (HX_FIELD_EQ(inName,"MAX_BLINK_DELAY") ) { return ::hx::Val( MAX_BLINK_DELAY ); }
		if (HX_FIELD_EQ(inName,"cutsceneHandler") ) { return ::hx::Val( cutsceneHandler ); }
		if (HX_FIELD_EQ(inName,"darnellCutscene") ) { return ::hx::Val( darnellCutscene_dyn() ); }
		if (HX_FIELD_EQ(inName,"setupRainShader") ) { return ::hx::Val( setupRainShader_dyn() ); }
		if (HX_FIELD_EQ(inName,"transitionState") ) { return ::hx::Val( transitionState_dyn() ); }
		if (HX_FIELD_EQ(inName,"finishCarLights") ) { return ::hx::Val( finishCarLights_dyn() ); }
		if (HX_FIELD_EQ(inName,"opponentNoteHit") ) { return ::hx::Val( opponentNoteHit_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"currentNeneState") ) { return ::hx::Val( currentNeneState ); }
		if (HX_FIELD_EQ(inName,"carInterruptable") ) { return ::hx::Val( carInterruptable ); }
		if (HX_FIELD_EQ(inName,"darkenStageProps") ) { return ::hx::Val( darkenStageProps_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"VULTURE_THRESHOLD") ) { return ::hx::Val( VULTURE_THRESHOLD ); }
		if (HX_FIELD_EQ(inName,"animationFinished") ) { return ::hx::Val( animationFinished ); }
		if (HX_FIELD_EQ(inName,"car2Interruptable") ) { return ::hx::Val( car2Interruptable ); }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"rainShaderEndIntensity") ) { return ::hx::Val( rainShaderEndIntensity ); }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"onNeneAnimationFinished") ) { return ::hx::Val( onNeneAnimationFinished_dyn() ); }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"rainShaderStartIntensity") ) { return ::hx::Val( rainShaderStartIntensity ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val PhillyStreets_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"abot") ) { abot=inValue.Cast<  ::states::stages::objects::ABotSpeaker >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"bonkSnd") ) { bonkSnd=inValue.Cast<  ::flixel::sound::FlxSound >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"picoFade") ) { picoFade=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"spraycan") ) { spraycan=inValue.Cast<  ::states::stages::objects::SpraycanAtlasSprite >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"noteTypes") ) { noteTypes=inValue.Cast< ::Array< ::String > >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"rainShader") ) { rainShader=inValue.Cast<  ::shaders::RainShader >(); return inValue; }
		if (HX_FIELD_EQ(inName,"phillyCars") ) { phillyCars=inValue.Cast<  ::objects::BGSprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"darkenable") ) { darkenable=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		if (HX_FIELD_EQ(inName,"videoEnded") ) { videoEnded=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"gunPrepSnd") ) { gunPrepSnd=inValue.Cast<  ::flixel::sound::FlxSound >(); return inValue; }
		if (HX_FIELD_EQ(inName,"kickCanSnd") ) { kickCanSnd=inValue.Cast<  ::flixel::sound::FlxSound >(); return inValue; }
		if (HX_FIELD_EQ(inName,"kneeCanSnd") ) { kneeCanSnd=inValue.Cast<  ::flixel::sound::FlxSound >(); return inValue; }
		if (HX_FIELD_EQ(inName,"lightsStop") ) { lightsStop=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"lastChange") ) { lastChange=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"carWaiting") ) { carWaiting=inValue.Cast< bool >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"phillyCars2") ) { phillyCars2=inValue.Cast<  ::objects::BGSprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"casingGroup") ) { casingGroup=inValue.Cast<  ::flixel::group::FlxTypedSpriteGroup >(); return inValue; }
		if (HX_FIELD_EQ(inName,"lightCanSnd") ) { lightCanSnd=inValue.Cast<  ::flixel::sound::FlxSound >(); return inValue; }
		if (HX_FIELD_EQ(inName,"picoFlicker") ) { picoFlicker=inValue.Cast<  ::flixel::util::FlxTimer >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"scrollingSky") ) { scrollingSky=inValue.Cast<  ::flixel::addons::display::FlxTiledSprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"spraycanPile") ) { spraycanPile=inValue.Cast<  ::objects::BGSprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"casingFrames") ) { casingFrames=inValue.Cast<  ::flixel::graphics::frames::FlxAtlasFrames >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"phillyTraffic") ) { phillyTraffic=inValue.Cast<  ::objects::BGSprite >(); return inValue; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"blinkCountdown") ) { blinkCountdown=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"changeInterval") ) { changeInterval=inValue.Cast< int >(); return inValue; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"MIN_BLINK_DELAY") ) { MIN_BLINK_DELAY=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"MAX_BLINK_DELAY") ) { MAX_BLINK_DELAY=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"cutsceneHandler") ) { cutsceneHandler=inValue.Cast<  ::cutscenes::CutsceneHandler >(); return inValue; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"currentNeneState") ) { currentNeneState=inValue.Cast<  ::states::stages::NeneState >(); return inValue; }
		if (HX_FIELD_EQ(inName,"carInterruptable") ) { carInterruptable=inValue.Cast< bool >(); return inValue; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"VULTURE_THRESHOLD") ) { VULTURE_THRESHOLD=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"animationFinished") ) { animationFinished=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"car2Interruptable") ) { car2Interruptable=inValue.Cast< bool >(); return inValue; }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"rainShaderEndIntensity") ) { rainShaderEndIntensity=inValue.Cast< Float >(); return inValue; }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"rainShaderStartIntensity") ) { rainShaderStartIntensity=inValue.Cast< Float >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void PhillyStreets_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("MIN_BLINK_DELAY",53,d3,3a,5d));
	outFields->push(HX_("MAX_BLINK_DELAY",65,1f,55,01));
	outFields->push(HX_("VULTURE_THRESHOLD",ad,5c,45,bc));
	outFields->push(HX_("blinkCountdown",b5,33,4d,b5));
	outFields->push(HX_("rainShader",99,33,41,34));
	outFields->push(HX_("rainShaderStartIntensity",6a,17,a5,ad));
	outFields->push(HX_("rainShaderEndIntensity",91,d0,be,e6));
	outFields->push(HX_("scrollingSky",ec,e4,0e,b9));
	outFields->push(HX_("phillyTraffic",75,21,a2,92));
	outFields->push(HX_("phillyCars",27,75,00,da));
	outFields->push(HX_("phillyCars2",2b,0d,66,e6));
	outFields->push(HX_("picoFade",01,a1,bd,c1));
	outFields->push(HX_("spraycan",c3,e4,e0,a1));
	outFields->push(HX_("spraycanPile",15,1f,77,ea));
	outFields->push(HX_("darkenable",79,bf,06,dd));
	outFields->push(HX_("abot",46,70,68,40));
	outFields->push(HX_("noteTypes",27,bb,58,58));
	outFields->push(HX_("videoEnded",7f,86,48,4c));
	outFields->push(HX_("cutsceneHandler",60,c0,ea,b5));
	outFields->push(HX_("casingGroup",12,34,7b,24));
	outFields->push(HX_("casingFrames",73,e7,af,57));
	outFields->push(HX_("gunPrepSnd",dc,57,1c,5f));
	outFields->push(HX_("bonkSnd",3f,82,e1,e9));
	outFields->push(HX_("lightCanSnd",af,1a,76,1c));
	outFields->push(HX_("kickCanSnd",9f,35,db,50));
	outFields->push(HX_("kneeCanSnd",5c,5e,76,e8));
	outFields->push(HX_("currentNeneState",8a,f7,4f,7f));
	outFields->push(HX_("animationFinished",96,e2,c1,ba));
	outFields->push(HX_("lightsStop",7f,79,22,5c));
	outFields->push(HX_("lastChange",66,74,4d,82));
	outFields->push(HX_("changeInterval",d5,b6,b7,81));
	outFields->push(HX_("carWaiting",d9,07,35,6f));
	outFields->push(HX_("carInterruptable",09,54,98,ce));
	outFields->push(HX_("car2Interruptable",3f,fc,e2,1d));
	outFields->push(HX_("picoFlicker",93,30,53,e4));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo PhillyStreets_obj_sMemberStorageInfo[] = {
	{::hx::fsInt,(int)offsetof(PhillyStreets_obj,MIN_BLINK_DELAY),HX_("MIN_BLINK_DELAY",53,d3,3a,5d)},
	{::hx::fsInt,(int)offsetof(PhillyStreets_obj,MAX_BLINK_DELAY),HX_("MAX_BLINK_DELAY",65,1f,55,01)},
	{::hx::fsFloat,(int)offsetof(PhillyStreets_obj,VULTURE_THRESHOLD),HX_("VULTURE_THRESHOLD",ad,5c,45,bc)},
	{::hx::fsInt,(int)offsetof(PhillyStreets_obj,blinkCountdown),HX_("blinkCountdown",b5,33,4d,b5)},
	{::hx::fsObject /*  ::shaders::RainShader */ ,(int)offsetof(PhillyStreets_obj,rainShader),HX_("rainShader",99,33,41,34)},
	{::hx::fsFloat,(int)offsetof(PhillyStreets_obj,rainShaderStartIntensity),HX_("rainShaderStartIntensity",6a,17,a5,ad)},
	{::hx::fsFloat,(int)offsetof(PhillyStreets_obj,rainShaderEndIntensity),HX_("rainShaderEndIntensity",91,d0,be,e6)},
	{::hx::fsObject /*  ::flixel::addons::display::FlxTiledSprite */ ,(int)offsetof(PhillyStreets_obj,scrollingSky),HX_("scrollingSky",ec,e4,0e,b9)},
	{::hx::fsObject /*  ::objects::BGSprite */ ,(int)offsetof(PhillyStreets_obj,phillyTraffic),HX_("phillyTraffic",75,21,a2,92)},
	{::hx::fsObject /*  ::objects::BGSprite */ ,(int)offsetof(PhillyStreets_obj,phillyCars),HX_("phillyCars",27,75,00,da)},
	{::hx::fsObject /*  ::objects::BGSprite */ ,(int)offsetof(PhillyStreets_obj,phillyCars2),HX_("phillyCars2",2b,0d,66,e6)},
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(PhillyStreets_obj,picoFade),HX_("picoFade",01,a1,bd,c1)},
	{::hx::fsObject /*  ::states::stages::objects::SpraycanAtlasSprite */ ,(int)offsetof(PhillyStreets_obj,spraycan),HX_("spraycan",c3,e4,e0,a1)},
	{::hx::fsObject /*  ::objects::BGSprite */ ,(int)offsetof(PhillyStreets_obj,spraycanPile),HX_("spraycanPile",15,1f,77,ea)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(PhillyStreets_obj,darkenable),HX_("darkenable",79,bf,06,dd)},
	{::hx::fsObject /*  ::states::stages::objects::ABotSpeaker */ ,(int)offsetof(PhillyStreets_obj,abot),HX_("abot",46,70,68,40)},
	{::hx::fsObject /* ::Array< ::String > */ ,(int)offsetof(PhillyStreets_obj,noteTypes),HX_("noteTypes",27,bb,58,58)},
	{::hx::fsBool,(int)offsetof(PhillyStreets_obj,videoEnded),HX_("videoEnded",7f,86,48,4c)},
	{::hx::fsObject /*  ::cutscenes::CutsceneHandler */ ,(int)offsetof(PhillyStreets_obj,cutsceneHandler),HX_("cutsceneHandler",60,c0,ea,b5)},
	{::hx::fsObject /*  ::flixel::group::FlxTypedSpriteGroup */ ,(int)offsetof(PhillyStreets_obj,casingGroup),HX_("casingGroup",12,34,7b,24)},
	{::hx::fsObject /*  ::flixel::graphics::frames::FlxAtlasFrames */ ,(int)offsetof(PhillyStreets_obj,casingFrames),HX_("casingFrames",73,e7,af,57)},
	{::hx::fsObject /*  ::flixel::sound::FlxSound */ ,(int)offsetof(PhillyStreets_obj,gunPrepSnd),HX_("gunPrepSnd",dc,57,1c,5f)},
	{::hx::fsObject /*  ::flixel::sound::FlxSound */ ,(int)offsetof(PhillyStreets_obj,bonkSnd),HX_("bonkSnd",3f,82,e1,e9)},
	{::hx::fsObject /*  ::flixel::sound::FlxSound */ ,(int)offsetof(PhillyStreets_obj,lightCanSnd),HX_("lightCanSnd",af,1a,76,1c)},
	{::hx::fsObject /*  ::flixel::sound::FlxSound */ ,(int)offsetof(PhillyStreets_obj,kickCanSnd),HX_("kickCanSnd",9f,35,db,50)},
	{::hx::fsObject /*  ::flixel::sound::FlxSound */ ,(int)offsetof(PhillyStreets_obj,kneeCanSnd),HX_("kneeCanSnd",5c,5e,76,e8)},
	{::hx::fsObject /*  ::states::stages::NeneState */ ,(int)offsetof(PhillyStreets_obj,currentNeneState),HX_("currentNeneState",8a,f7,4f,7f)},
	{::hx::fsBool,(int)offsetof(PhillyStreets_obj,animationFinished),HX_("animationFinished",96,e2,c1,ba)},
	{::hx::fsBool,(int)offsetof(PhillyStreets_obj,lightsStop),HX_("lightsStop",7f,79,22,5c)},
	{::hx::fsInt,(int)offsetof(PhillyStreets_obj,lastChange),HX_("lastChange",66,74,4d,82)},
	{::hx::fsInt,(int)offsetof(PhillyStreets_obj,changeInterval),HX_("changeInterval",d5,b6,b7,81)},
	{::hx::fsBool,(int)offsetof(PhillyStreets_obj,carWaiting),HX_("carWaiting",d9,07,35,6f)},
	{::hx::fsBool,(int)offsetof(PhillyStreets_obj,carInterruptable),HX_("carInterruptable",09,54,98,ce)},
	{::hx::fsBool,(int)offsetof(PhillyStreets_obj,car2Interruptable),HX_("car2Interruptable",3f,fc,e2,1d)},
	{::hx::fsObject /*  ::flixel::util::FlxTimer */ ,(int)offsetof(PhillyStreets_obj,picoFlicker),HX_("picoFlicker",93,30,53,e4)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *PhillyStreets_obj_sStaticStorageInfo = 0;
#endif

static ::String PhillyStreets_obj_sMemberFields[] = {
	HX_("MIN_BLINK_DELAY",53,d3,3a,5d),
	HX_("MAX_BLINK_DELAY",65,1f,55,01),
	HX_("VULTURE_THRESHOLD",ad,5c,45,bc),
	HX_("blinkCountdown",b5,33,4d,b5),
	HX_("rainShader",99,33,41,34),
	HX_("rainShaderStartIntensity",6a,17,a5,ad),
	HX_("rainShaderEndIntensity",91,d0,be,e6),
	HX_("scrollingSky",ec,e4,0e,b9),
	HX_("phillyTraffic",75,21,a2,92),
	HX_("phillyCars",27,75,00,da),
	HX_("phillyCars2",2b,0d,66,e6),
	HX_("picoFade",01,a1,bd,c1),
	HX_("spraycan",c3,e4,e0,a1),
	HX_("spraycanPile",15,1f,77,ea),
	HX_("darkenable",79,bf,06,dd),
	HX_("abot",46,70,68,40),
	HX_("create",fc,66,0f,7c),
	HX_("noteTypes",27,bb,58,58),
	HX_("createPost",7c,45,ea,5c),
	HX_("videoEnded",7f,86,48,4c),
	HX_("videoCutscene",25,60,e8,9c),
	HX_("cutsceneHandler",60,c0,ea,b5),
	HX_("darnellCutscene",f6,03,ae,0e),
	HX_("updateABotEye",e2,1d,fa,26),
	HX_("startSong",57,9d,4b,05),
	HX_("onNeneAnimationFinished",e9,c2,ea,40),
	HX_("casingGroup",12,34,7b,24),
	HX_("casingFrames",73,e7,af,57),
	HX_("gunPrepSnd",dc,57,1c,5f),
	HX_("bonkSnd",3f,82,e1,e9),
	HX_("lightCanSnd",af,1a,76,1c),
	HX_("kickCanSnd",9f,35,db,50),
	HX_("kneeCanSnd",5c,5e,76,e8),
	HX_("precache",3f,db,c0,2d),
	HX_("setupRainShader",76,c4,61,ef),
	HX_("currentNeneState",8a,f7,4f,7f),
	HX_("animationFinished",96,e2,c1,ba),
	HX_("update",09,86,05,87),
	HX_("transitionState",3c,fc,36,c9),
	HX_("sectionHit",6e,f5,cd,be),
	HX_("lightsStop",7f,79,22,5c),
	HX_("lastChange",66,74,4d,82),
	HX_("changeInterval",d5,b6,b7,81),
	HX_("carWaiting",d9,07,35,6f),
	HX_("carInterruptable",09,54,98,ce),
	HX_("car2Interruptable",3f,fc,e2,1d),
	HX_("beatHit",7d,ea,04,74),
	HX_("changeLights",6d,e4,2f,cf),
	HX_("finishCarLights",3e,d7,2e,aa),
	HX_("driveCarLights",a7,5f,48,d9),
	HX_("driveCar",2a,85,fa,0b),
	HX_("driveCarBack",71,68,df,36),
	HX_("goodNoteHit",c4,4d,c4,22),
	HX_("createCasing",09,d4,db,dd),
	HX_("opponentNoteHit",64,75,4c,b1),
	HX_("picoFlicker",93,30,53,e4),
	HX_("noteMiss",0e,78,8f,57),
	HX_("showPicoFade",1e,f7,4a,ed),
	HX_("darkenStageProps",11,c3,74,7d),
	::String(null()) };

::hx::Class PhillyStreets_obj::__mClass;

void PhillyStreets_obj::__register()
{
	PhillyStreets_obj _hx_dummy;
	PhillyStreets_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("states.stages.PhillyStreets",1b,d9,4c,62);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(PhillyStreets_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< PhillyStreets_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = PhillyStreets_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = PhillyStreets_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace states
} // end namespace stages

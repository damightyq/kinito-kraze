// Generated by Haxe 4.3.4
#include <hxcpp.h>

#ifndef INCLUDED_backend_MusicBeatState
#include <backend/MusicBeatState.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxCamera
#include <flixel/FlxCamera.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxGame
#include <flixel/FlxGame.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_FlxState
#include <flixel/FlxState.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedSpriteGroup
#include <flixel/group/FlxTypedSpriteGroup.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_objects_Character
#include <objects/Character.h>
#endif
#ifndef INCLUDED_objects_Note
#include <objects/Note.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_states_PlayState
#include <states/PlayState.h>
#endif
#ifndef INCLUDED_states_stages_objects_PicoBlazinHandler
#include <states/stages/objects/PicoBlazinHandler.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_97f284050b6d5f46_7_new,"states.stages.objects.PicoBlazinHandler","new",0xbb6e7348,"states.stages.objects.PicoBlazinHandler.new","states/stages/objects/PicoBlazinHandler.hx",7,0x302055c9)
HX_LOCAL_STACK_FRAME(_hx_pos_97f284050b6d5f46_13_noteHit,"states.stages.objects.PicoBlazinHandler","noteHit",0x1c552069,"states.stages.objects.PicoBlazinHandler.noteHit","states/stages/objects/PicoBlazinHandler.hx",13,0x302055c9)
HX_LOCAL_STACK_FRAME(_hx_pos_97f284050b6d5f46_93_noteMiss,"states.stages.objects.PicoBlazinHandler","noteMiss",0xb1754c26,"states.stages.objects.PicoBlazinHandler.noteMiss","states/stages/objects/PicoBlazinHandler.hx",93,0x302055c9)
HX_LOCAL_STACK_FRAME(_hx_pos_97f284050b6d5f46_187_noteMissPress,"states.stages.objects.PicoBlazinHandler","noteMissPress",0x931cad7d,"states.stages.objects.PicoBlazinHandler.noteMissPress","states/stages/objects/PicoBlazinHandler.hx",187,0x302055c9)
HX_LOCAL_STACK_FRAME(_hx_pos_97f284050b6d5f46_194_movePicoToBack,"states.stages.objects.PicoBlazinHandler","movePicoToBack",0xb6389890,"states.stages.objects.PicoBlazinHandler.movePicoToBack","states/stages/objects/PicoBlazinHandler.hx",194,0x302055c9)
HX_LOCAL_STACK_FRAME(_hx_pos_97f284050b6d5f46_204_movePicoToFront,"states.stages.objects.PicoBlazinHandler","movePicoToFront",0x142cf620,"states.stages.objects.PicoBlazinHandler.movePicoToFront","states/stages/objects/PicoBlazinHandler.hx",204,0x302055c9)
HX_LOCAL_STACK_FRAME(_hx_pos_97f284050b6d5f46_215_doAlternate,"states.stages.objects.PicoBlazinHandler","doAlternate",0xe2865317,"states.stages.objects.PicoBlazinHandler.doAlternate","states/stages/objects/PicoBlazinHandler.hx",215,0x302055c9)
HX_LOCAL_STACK_FRAME(_hx_pos_97f284050b6d5f46_221_playBlockAnim,"states.stages.objects.PicoBlazinHandler","playBlockAnim",0xc94ffa52,"states.stages.objects.PicoBlazinHandler.playBlockAnim","states/stages/objects/PicoBlazinHandler.hx",221,0x302055c9)
HX_LOCAL_STACK_FRAME(_hx_pos_97f284050b6d5f46_228_playCringeAnim,"states.stages.objects.PicoBlazinHandler","playCringeAnim",0x842007cf,"states.stages.objects.PicoBlazinHandler.playCringeAnim","states/stages/objects/PicoBlazinHandler.hx",228,0x302055c9)
HX_LOCAL_STACK_FRAME(_hx_pos_97f284050b6d5f46_234_playDodgeAnim,"states.stages.objects.PicoBlazinHandler","playDodgeAnim",0x7663fedc,"states.stages.objects.PicoBlazinHandler.playDodgeAnim","states/stages/objects/PicoBlazinHandler.hx",234,0x302055c9)
HX_LOCAL_STACK_FRAME(_hx_pos_97f284050b6d5f46_240_playIdleAnim,"states.stages.objects.PicoBlazinHandler","playIdleAnim",0x35f83171,"states.stages.objects.PicoBlazinHandler.playIdleAnim","states/stages/objects/PicoBlazinHandler.hx",240,0x302055c9)
HX_LOCAL_STACK_FRAME(_hx_pos_97f284050b6d5f46_246_playFakeoutAnim,"states.stages.objects.PicoBlazinHandler","playFakeoutAnim",0x6ac3281e,"states.stages.objects.PicoBlazinHandler.playFakeoutAnim","states/stages/objects/PicoBlazinHandler.hx",246,0x302055c9)
HX_LOCAL_STACK_FRAME(_hx_pos_97f284050b6d5f46_252_playUppercutPrepAnim,"states.stages.objects.PicoBlazinHandler","playUppercutPrepAnim",0xdf19c74a,"states.stages.objects.PicoBlazinHandler.playUppercutPrepAnim","states/stages/objects/PicoBlazinHandler.hx",252,0x302055c9)
HX_LOCAL_STACK_FRAME(_hx_pos_97f284050b6d5f46_258_playUppercutAnim,"states.stages.objects.PicoBlazinHandler","playUppercutAnim",0x8dd91bbd,"states.stages.objects.PicoBlazinHandler.playUppercutAnim","states/stages/objects/PicoBlazinHandler.hx",258,0x302055c9)
HX_LOCAL_STACK_FRAME(_hx_pos_97f284050b6d5f46_265_playUppercutHitAnim,"states.stages.objects.PicoBlazinHandler","playUppercutHitAnim",0x916b5bd8,"states.stages.objects.PicoBlazinHandler.playUppercutHitAnim","states/stages/objects/PicoBlazinHandler.hx",265,0x302055c9)
HX_LOCAL_STACK_FRAME(_hx_pos_97f284050b6d5f46_272_playHitHighAnim,"states.stages.objects.PicoBlazinHandler","playHitHighAnim",0xe34ab55a,"states.stages.objects.PicoBlazinHandler.playHitHighAnim","states/stages/objects/PicoBlazinHandler.hx",272,0x302055c9)
HX_LOCAL_STACK_FRAME(_hx_pos_97f284050b6d5f46_279_playHitLowAnim,"states.stages.objects.PicoBlazinHandler","playHitLowAnim",0x5a7a23de,"states.stages.objects.PicoBlazinHandler.playHitLowAnim","states/stages/objects/PicoBlazinHandler.hx",279,0x302055c9)
HX_LOCAL_STACK_FRAME(_hx_pos_97f284050b6d5f46_286_playHitSpinAnim,"states.stages.objects.PicoBlazinHandler","playHitSpinAnim",0xbcaa0fba,"states.stages.objects.PicoBlazinHandler.playHitSpinAnim","states/stages/objects/PicoBlazinHandler.hx",286,0x302055c9)
HX_LOCAL_STACK_FRAME(_hx_pos_97f284050b6d5f46_293_playPunchHighAnim,"states.stages.objects.PicoBlazinHandler","playPunchHighAnim",0xe5487cb5,"states.stages.objects.PicoBlazinHandler.playPunchHighAnim","states/stages/objects/PicoBlazinHandler.hx",293,0x302055c9)
HX_LOCAL_STACK_FRAME(_hx_pos_97f284050b6d5f46_299_playPunchLowAnim,"states.stages.objects.PicoBlazinHandler","playPunchLowAnim",0xfea5c0e3,"states.stages.objects.PicoBlazinHandler.playPunchLowAnim","states/stages/objects/PicoBlazinHandler.hx",299,0x302055c9)
HX_LOCAL_STACK_FRAME(_hx_pos_97f284050b6d5f46_306_playTauntConditionalAnim,"states.stages.objects.PicoBlazinHandler","playTauntConditionalAnim",0x00668f95,"states.stages.objects.PicoBlazinHandler.playTauntConditionalAnim","states/stages/objects/PicoBlazinHandler.hx",306,0x302055c9)
HX_LOCAL_STACK_FRAME(_hx_pos_97f284050b6d5f46_313_playTauntAnim,"states.stages.objects.PicoBlazinHandler","playTauntAnim",0xb7276e33,"states.stages.objects.PicoBlazinHandler.playTauntAnim","states/stages/objects/PicoBlazinHandler.hx",313,0x302055c9)
HX_LOCAL_STACK_FRAME(_hx_pos_97f284050b6d5f46_320_willMissBeLethal,"states.stages.objects.PicoBlazinHandler","willMissBeLethal",0xfda8b1e1,"states.stages.objects.PicoBlazinHandler.willMissBeLethal","states/stages/objects/PicoBlazinHandler.hx",320,0x302055c9)
HX_LOCAL_STACK_FRAME(_hx_pos_97f284050b6d5f46_325_isDarnellPreppingUppercut,"states.stages.objects.PicoBlazinHandler","isDarnellPreppingUppercut",0x40ea61e9,"states.stages.objects.PicoBlazinHandler.isDarnellPreppingUppercut","states/stages/objects/PicoBlazinHandler.hx",325,0x302055c9)
HX_LOCAL_STACK_FRAME(_hx_pos_97f284050b6d5f46_330_isDarnellInUppercut,"states.stages.objects.PicoBlazinHandler","isDarnellInUppercut",0x1f7be46f,"states.stages.objects.PicoBlazinHandler.isDarnellInUppercut","states/stages/objects/PicoBlazinHandler.hx",330,0x302055c9)
HX_LOCAL_STACK_FRAME(_hx_pos_97f284050b6d5f46_335_wasNoteHitPoorly,"states.stages.objects.PicoBlazinHandler","wasNoteHitPoorly",0x4cf0657f,"states.stages.objects.PicoBlazinHandler.wasNoteHitPoorly","states/stages/objects/PicoBlazinHandler.hx",335,0x302055c9)
HX_LOCAL_STACK_FRAME(_hx_pos_97f284050b6d5f46_340_isPlayerLowHealth,"states.stages.objects.PicoBlazinHandler","isPlayerLowHealth",0x411324cd,"states.stages.objects.PicoBlazinHandler.isPlayerLowHealth","states/stages/objects/PicoBlazinHandler.hx",340,0x302055c9)
HX_LOCAL_STACK_FRAME(_hx_pos_97f284050b6d5f46_344_moveToBack,"states.stages.objects.PicoBlazinHandler","moveToBack",0xc50dc94b,"states.stages.objects.PicoBlazinHandler.moveToBack","states/stages/objects/PicoBlazinHandler.hx",344,0x302055c9)
HX_LOCAL_STACK_FRAME(_hx_pos_97f284050b6d5f46_354_moveToFront,"states.stages.objects.PicoBlazinHandler","moveToFront",0xffe26905,"states.stages.objects.PicoBlazinHandler.moveToFront","states/stages/objects/PicoBlazinHandler.hx",354,0x302055c9)
HX_LOCAL_STACK_FRAME(_hx_pos_97f284050b6d5f46_367_get_boyfriend,"states.stages.objects.PicoBlazinHandler","get_boyfriend",0x91265229,"states.stages.objects.PicoBlazinHandler.get_boyfriend","states/stages/objects/PicoBlazinHandler.hx",367,0x302055c9)
HX_LOCAL_STACK_FRAME(_hx_pos_97f284050b6d5f46_368_get_dad,"states.stages.objects.PicoBlazinHandler","get_dad",0xf5cb35c6,"states.stages.objects.PicoBlazinHandler.get_dad","states/stages/objects/PicoBlazinHandler.hx",368,0x302055c9)
HX_LOCAL_STACK_FRAME(_hx_pos_97f284050b6d5f46_369_get_boyfriendGroup,"states.stages.objects.PicoBlazinHandler","get_boyfriendGroup",0x5a745c56,"states.stages.objects.PicoBlazinHandler.get_boyfriendGroup","states/stages/objects/PicoBlazinHandler.hx",369,0x302055c9)
HX_LOCAL_STACK_FRAME(_hx_pos_97f284050b6d5f46_370_get_dadGroup,"states.stages.objects.PicoBlazinHandler","get_dadGroup",0x6c403f99,"states.stages.objects.PicoBlazinHandler.get_dadGroup","states/stages/objects/PicoBlazinHandler.hx",370,0x302055c9)
namespace states{
namespace stages{
namespace objects{

void PicoBlazinHandler_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_97f284050b6d5f46_7_new)
HXLINE( 213)		this->alternate = false;
HXLINE(  11)		this->cantUppercut = false;
            	}

Dynamic PicoBlazinHandler_obj::__CreateEmpty() { return new PicoBlazinHandler_obj; }

void *PicoBlazinHandler_obj::_hx_vtable = 0;

Dynamic PicoBlazinHandler_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< PicoBlazinHandler_obj > _hx_result = new PicoBlazinHandler_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool PicoBlazinHandler_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x73f60160;
}

void PicoBlazinHandler_obj::noteHit( ::objects::Note note){
            	HX_STACKFRAME(&_hx_pos_97f284050b6d5f46_13_noteHit)
HXLINE(  14)		bool _hx_tmp;
HXDLIN(  14)		bool _hx_tmp1;
HXDLIN(  14)		if (this->wasNoteHitPoorly(note->rating)) {
HXLINE(  14)			_hx_tmp1 = this->isPlayerLowHealth();
            		}
            		else {
HXLINE(  14)			_hx_tmp1 = false;
            		}
HXDLIN(  14)		if (_hx_tmp1) {
HXLINE(  14)			_hx_tmp = this->isDarnellPreppingUppercut();
            		}
            		else {
HXLINE(  14)			_hx_tmp = false;
            		}
HXDLIN(  14)		if (_hx_tmp) {
HXLINE(  16)			this->playPunchHighAnim();
HXLINE(  17)			return;
            		}
HXLINE(  20)		if (this->cantUppercut) {
HXLINE(  22)			this->playBlockAnim();
HXLINE(  23)			this->cantUppercut = false;
HXLINE(  24)			return;
            		}
HXLINE(  27)		::String _hx_switch_0 = note->noteType;
            		if (  (_hx_switch_0==HX_("weekend-1-blockhigh",ad,48,d9,98)) ){
HXLINE(  48)			this->playBlockAnim();
HXDLIN(  48)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-blocklow",a9,35,2c,2b)) ){
HXLINE(  50)			this->playBlockAnim();
HXDLIN(  50)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-blockspin",0d,f3,23,a0)) ){
HXLINE(  52)			this->playBlockAnim();
HXDLIN(  52)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-darnelluppercut",aa,c4,4c,f3)) ){
HXLINE(  77)			this->playUppercutHitAnim();
HXDLIN(  77)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-darnelluppercutprep",97,20,7c,3f)) ){
HXLINE(  75)			this->playIdleAnim();
HXDLIN(  75)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-dodgehigh",37,4d,ed,45)) ){
HXLINE(  55)			this->playDodgeAnim();
HXDLIN(  55)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-dodgelow",5f,90,07,fe)) ){
HXLINE(  57)			this->playDodgeAnim();
HXDLIN(  57)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-dodgespin",97,f7,37,4d)) ){
HXLINE(  59)			this->playDodgeAnim();
HXDLIN(  59)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-fakeout",17,06,70,2b)) ){
HXLINE(  82)			this->playFakeoutAnim();
HXDLIN(  82)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-hithigh",33,19,08,e2)) ){
HXLINE(  63)			this->playHitHighAnim();
HXDLIN(  63)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-hitlow",e3,57,3b,6f)) ){
HXLINE(  65)			this->playHitLowAnim();
HXDLIN(  65)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-hitspin",93,c3,52,e9)) ){
HXLINE(  67)			this->playHitSpinAnim();
HXDLIN(  67)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-idle",56,a6,4f,bf)) ){
HXLINE(  80)			this->playIdleAnim();
HXDLIN(  80)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-picouppercut",87,dc,6b,e9)) ){
HXLINE(  72)			this->playUppercutAnim(true);
HXDLIN(  72)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-picouppercutprep",f4,ea,00,a8)) ){
HXLINE(  70)			this->playUppercutPrepAnim();
HXDLIN(  70)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-punchhigh",8e,d5,09,41)) ){
HXLINE(  39)			this->playPunchHighAnim();
HXDLIN(  39)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-punchhighblocked",1e,93,04,da)) ){
HXLINE(  41)			this->playPunchHighAnim();
HXDLIN(  41)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-punchhighdodged",bb,c3,11,c2)) ){
HXLINE(  43)			this->playPunchHighAnim();
HXDLIN(  43)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-punchhighspin",50,96,57,62)) ){
HXLINE(  45)			this->playPunchHighAnim();
HXDLIN(  45)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-punchlow",e8,9f,d8,59)) ){
HXLINE(  30)			this->playPunchLowAnim();
HXDLIN(  30)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-punchlowblocked",04,28,bf,80)) ){
HXLINE(  32)			this->playPunchLowAnim();
HXDLIN(  32)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-punchlowdodged",95,cd,9f,f7)) ){
HXLINE(  34)			this->playPunchLowAnim();
HXDLIN(  34)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-punchlowspin",aa,95,63,bd)) ){
HXLINE(  36)			this->playPunchLowAnim();
HXDLIN(  36)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-reversefakeout",f9,04,4b,f9)) ){
HXLINE(  88)			this->playIdleAnim();
HXDLIN(  88)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-taunt",2c,7f,d5,f9)) ){
HXLINE(  84)			this->playTauntConditionalAnim();
HXDLIN(  84)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-tauntforce",3f,b3,26,31)) ){
HXLINE(  86)			this->playTauntAnim();
HXDLIN(  86)			goto _hx_goto_1;
            		}
            		_hx_goto_1:;
            	}


HX_DEFINE_DYNAMIC_FUNC1(PicoBlazinHandler_obj,noteHit,(void))

void PicoBlazinHandler_obj::noteMiss( ::objects::Note note){
            	HX_STACKFRAME(&_hx_pos_97f284050b6d5f46_93_noteMiss)
HXLINE(  95)		if (this->isDarnellInUppercut()) {
HXLINE(  97)			this->playUppercutHitAnim();
HXLINE(  98)			return;
            		}
HXLINE( 101)		if (this->willMissBeLethal()) {
HXLINE( 103)			this->playHitLowAnim();
HXLINE( 104)			return;
            		}
HXLINE( 107)		if (this->cantUppercut) {
HXLINE( 109)			this->playHitHighAnim();
HXLINE( 110)			return;
            		}
HXLINE( 113)		::String _hx_switch_0 = note->noteType;
            		if (  (_hx_switch_0==HX_("weekend-1-blockhigh",ad,48,d9,98)) ){
HXLINE( 137)			this->playHitHighAnim();
HXDLIN( 137)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-blocklow",a9,35,2c,2b)) ){
HXLINE( 139)			this->playHitLowAnim();
HXDLIN( 139)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-blockspin",0d,f3,23,a0)) ){
HXLINE( 141)			this->playHitSpinAnim();
HXDLIN( 141)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-darnelluppercut",aa,c4,4c,f3)) ){
HXLINE( 170)			this->playUppercutHitAnim();
HXDLIN( 170)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-darnelluppercutprep",97,20,7c,3f)) ){
HXLINE( 168)			this->playIdleAnim();
HXDLIN( 168)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-dodgehigh",37,4d,ed,45)) ){
HXLINE( 145)			this->playHitHighAnim();
HXDLIN( 145)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-dodgelow",5f,90,07,fe)) ){
HXLINE( 147)			this->playHitLowAnim();
HXDLIN( 147)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-dodgespin",97,f7,37,4d)) ){
HXLINE( 149)			this->playHitSpinAnim();
HXDLIN( 149)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-fakeout",17,06,70,2b)) ){
HXLINE( 175)			this->playHitHighAnim();
HXDLIN( 175)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-hithigh",33,19,08,e2)) ){
HXLINE( 153)			this->playHitHighAnim();
HXDLIN( 153)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-hitlow",e3,57,3b,6f)) ){
HXLINE( 155)			this->playHitLowAnim();
HXDLIN( 155)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-hitspin",93,c3,52,e9)) ){
HXLINE( 157)			this->playHitSpinAnim();
HXDLIN( 157)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-idle",56,a6,4f,bf)) ){
HXLINE( 173)			this->playIdleAnim();
HXDLIN( 173)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-picouppercut",87,dc,6b,e9)) ){
HXLINE( 164)			this->playUppercutAnim(false);
HXDLIN( 164)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-picouppercutprep",f4,ea,00,a8)) ){
HXLINE( 161)			this->playPunchHighAnim();
HXLINE( 162)			this->cantUppercut = true;
HXLINE( 160)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-punchhigh",8e,d5,09,41)) ){
HXLINE( 127)			this->playHitHighAnim();
HXDLIN( 127)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-punchhighblocked",1e,93,04,da)) ){
HXLINE( 129)			this->playHitHighAnim();
HXDLIN( 129)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-punchhighdodged",bb,c3,11,c2)) ){
HXLINE( 131)			this->playHitHighAnim();
HXDLIN( 131)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-punchhighspin",50,96,57,62)) ){
HXLINE( 133)			this->playHitSpinAnim();
HXDLIN( 133)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-punchlow",e8,9f,d8,59)) ){
HXLINE( 117)			this->playHitLowAnim();
HXDLIN( 117)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-punchlowblocked",04,28,bf,80)) ){
HXLINE( 119)			this->playHitLowAnim();
HXDLIN( 119)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-punchlowdodged",95,cd,9f,f7)) ){
HXLINE( 121)			this->playHitLowAnim();
HXDLIN( 121)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-punchlowspin",aa,95,63,bd)) ){
HXLINE( 123)			this->playHitSpinAnim();
HXDLIN( 123)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-reversefakeout",f9,04,4b,f9)) ){
HXLINE( 181)			this->playIdleAnim();
HXDLIN( 181)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-taunt",2c,7f,d5,f9)) ){
HXLINE( 177)			this->playTauntConditionalAnim();
HXDLIN( 177)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("weekend-1-tauntforce",3f,b3,26,31)) ){
HXLINE( 179)			this->playTauntAnim();
HXDLIN( 179)			goto _hx_goto_3;
            		}
            		_hx_goto_3:;
            	}


HX_DEFINE_DYNAMIC_FUNC1(PicoBlazinHandler_obj,noteMiss,(void))

void PicoBlazinHandler_obj::noteMissPress(int direction){
            	HX_STACKFRAME(&_hx_pos_97f284050b6d5f46_187_noteMissPress)
HXDLIN( 187)		if (this->willMissBeLethal()) {
HXLINE( 188)			this->playHitLowAnim();
            		}
            		else {
HXLINE( 190)			this->playPunchHighAnim();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(PicoBlazinHandler_obj,noteMissPress,(void))

void PicoBlazinHandler_obj::movePicoToBack(){
            	HX_STACKFRAME(&_hx_pos_97f284050b6d5f46_194_movePicoToBack)
HXLINE( 195)		::Array< ::Dynamic> bfPos = ::flixel::FlxG_obj::game->_state->members;
HXDLIN( 195)		int bfPos1 = bfPos->indexOf(this->get_boyfriendGroup(),null());
HXLINE( 196)		::Array< ::Dynamic> dadPos = ::flixel::FlxG_obj::game->_state->members;
HXDLIN( 196)		int dadPos1 = dadPos->indexOf(this->get_dadGroup(),null());
HXLINE( 197)		if ((bfPos1 < dadPos1)) {
HXLINE( 197)			return;
            		}
HXLINE( 199)		::flixel::FlxG_obj::game->_state->members->set(dadPos1,this->get_boyfriendGroup());
HXLINE( 200)		::flixel::FlxG_obj::game->_state->members->set(bfPos1,this->get_dadGroup());
            	}


HX_DEFINE_DYNAMIC_FUNC0(PicoBlazinHandler_obj,movePicoToBack,(void))

void PicoBlazinHandler_obj::movePicoToFront(){
            	HX_STACKFRAME(&_hx_pos_97f284050b6d5f46_204_movePicoToFront)
HXLINE( 205)		::Array< ::Dynamic> bfPos = ::flixel::FlxG_obj::game->_state->members;
HXDLIN( 205)		int bfPos1 = bfPos->indexOf(this->get_boyfriendGroup(),null());
HXLINE( 206)		::Array< ::Dynamic> dadPos = ::flixel::FlxG_obj::game->_state->members;
HXDLIN( 206)		int dadPos1 = dadPos->indexOf(this->get_dadGroup(),null());
HXLINE( 207)		if ((bfPos1 > dadPos1)) {
HXLINE( 207)			return;
            		}
HXLINE( 209)		::flixel::FlxG_obj::game->_state->members->set(dadPos1,this->get_boyfriendGroup());
HXLINE( 210)		::flixel::FlxG_obj::game->_state->members->set(bfPos1,this->get_dadGroup());
            	}


HX_DEFINE_DYNAMIC_FUNC0(PicoBlazinHandler_obj,movePicoToFront,(void))

::String PicoBlazinHandler_obj::doAlternate(){
            	HX_STACKFRAME(&_hx_pos_97f284050b6d5f46_215_doAlternate)
HXLINE( 216)		this->alternate = !(this->alternate);
HXLINE( 217)		if (this->alternate) {
HXLINE( 217)			return HX_("1",31,00,00,00);
            		}
            		else {
HXLINE( 217)			return HX_("2",32,00,00,00);
            		}
HXDLIN( 217)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(PicoBlazinHandler_obj,doAlternate,return )

void PicoBlazinHandler_obj::playBlockAnim(){
            	HX_STACKFRAME(&_hx_pos_97f284050b6d5f46_221_playBlockAnim)
HXLINE( 222)		this->get_boyfriend()->playAnim(HX_("block",4d,75,fc,b4),true,null(),null());
HXLINE( 223)		::flixel::FlxG_obj::camera->shake(((Float)0.002),((Float)0.1),null(),null(),null());
HXLINE( 224)		this->moveToBack();
            	}


HX_DEFINE_DYNAMIC_FUNC0(PicoBlazinHandler_obj,playBlockAnim,(void))

void PicoBlazinHandler_obj::playCringeAnim(){
            	HX_STACKFRAME(&_hx_pos_97f284050b6d5f46_228_playCringeAnim)
HXLINE( 229)		this->get_boyfriend()->playAnim(HX_("cringe",72,13,be,7e),true,null(),null());
HXLINE( 230)		this->moveToBack();
            	}


HX_DEFINE_DYNAMIC_FUNC0(PicoBlazinHandler_obj,playCringeAnim,(void))

void PicoBlazinHandler_obj::playDodgeAnim(){
            	HX_STACKFRAME(&_hx_pos_97f284050b6d5f46_234_playDodgeAnim)
HXLINE( 235)		this->get_boyfriend()->playAnim(HX_("dodge",d7,ec,bc,dd),true,null(),null());
HXLINE( 236)		this->moveToBack();
            	}


HX_DEFINE_DYNAMIC_FUNC0(PicoBlazinHandler_obj,playDodgeAnim,(void))

void PicoBlazinHandler_obj::playIdleAnim(){
            	HX_STACKFRAME(&_hx_pos_97f284050b6d5f46_240_playIdleAnim)
HXLINE( 241)		this->get_boyfriend()->playAnim(HX_("idle",14,a7,b3,45),false,null(),null());
HXLINE( 242)		this->moveToBack();
            	}


HX_DEFINE_DYNAMIC_FUNC0(PicoBlazinHandler_obj,playIdleAnim,(void))

void PicoBlazinHandler_obj::playFakeoutAnim(){
            	HX_STACKFRAME(&_hx_pos_97f284050b6d5f46_246_playFakeoutAnim)
HXLINE( 247)		this->get_boyfriend()->playAnim(HX_("fakeout",19,90,22,39),true,null(),null());
HXLINE( 248)		this->moveToBack();
            	}


HX_DEFINE_DYNAMIC_FUNC0(PicoBlazinHandler_obj,playFakeoutAnim,(void))

void PicoBlazinHandler_obj::playUppercutPrepAnim(){
            	HX_STACKFRAME(&_hx_pos_97f284050b6d5f46_252_playUppercutPrepAnim)
HXLINE( 253)		this->get_boyfriend()->playAnim(HX_("uppercutPrep",6d,10,57,1c),true,null(),null());
HXLINE( 254)		this->moveToFront();
            	}


HX_DEFINE_DYNAMIC_FUNC0(PicoBlazinHandler_obj,playUppercutPrepAnim,(void))

void PicoBlazinHandler_obj::playUppercutAnim(bool hit){
            	HX_STACKFRAME(&_hx_pos_97f284050b6d5f46_258_playUppercutAnim)
HXLINE( 259)		this->get_boyfriend()->playAnim(HX_("uppercut",60,f5,88,90),true,null(),null());
HXLINE( 260)		if (hit) {
HXLINE( 260)			::flixel::FlxG_obj::camera->shake(((Float)0.005),((Float)0.25),null(),null(),null());
            		}
HXLINE( 261)		this->moveToFront();
            	}


HX_DEFINE_DYNAMIC_FUNC1(PicoBlazinHandler_obj,playUppercutAnim,(void))

void PicoBlazinHandler_obj::playUppercutHitAnim(){
            	HX_STACKFRAME(&_hx_pos_97f284050b6d5f46_265_playUppercutHitAnim)
HXLINE( 266)		this->get_boyfriend()->playAnim(HX_("uppercutHit",d3,a4,69,a5),true,null(),null());
HXLINE( 267)		::flixel::FlxG_obj::camera->shake(((Float)0.005),((Float)0.25),null(),null(),null());
HXLINE( 268)		this->moveToBack();
            	}


HX_DEFINE_DYNAMIC_FUNC0(PicoBlazinHandler_obj,playUppercutHitAnim,(void))

void PicoBlazinHandler_obj::playHitHighAnim(){
            	HX_STACKFRAME(&_hx_pos_97f284050b6d5f46_272_playHitHighAnim)
HXLINE( 273)		this->get_boyfriend()->playAnim(HX_("hitHigh",55,cf,93,da),true,null(),null());
HXLINE( 274)		::flixel::FlxG_obj::camera->shake(((Float)0.0025),((Float)0.15),null(),null(),null());
HXLINE( 275)		this->moveToBack();
            	}


HX_DEFINE_DYNAMIC_FUNC0(PicoBlazinHandler_obj,playHitHighAnim,(void))

void PicoBlazinHandler_obj::playHitLowAnim(){
            	HX_STACKFRAME(&_hx_pos_97f284050b6d5f46_279_playHitLowAnim)
HXLINE( 280)		this->get_boyfriend()->playAnim(HX_("hitLow",01,3c,17,57),true,null(),null());
HXLINE( 281)		::flixel::FlxG_obj::camera->shake(((Float)0.0025),((Float)0.15),null(),null(),null());
HXLINE( 282)		this->moveToBack();
            	}


HX_DEFINE_DYNAMIC_FUNC0(PicoBlazinHandler_obj,playHitLowAnim,(void))

void PicoBlazinHandler_obj::playHitSpinAnim(){
            	HX_STACKFRAME(&_hx_pos_97f284050b6d5f46_286_playHitSpinAnim)
HXLINE( 287)		this->get_boyfriend()->playAnim(HX_("hitSpin",b5,79,de,e1),true,null(),null());
HXLINE( 288)		::flixel::FlxG_obj::camera->shake(((Float)0.0025),((Float)0.15),null(),null(),null());
HXLINE( 289)		this->moveToBack();
            	}


HX_DEFINE_DYNAMIC_FUNC0(PicoBlazinHandler_obj,playHitSpinAnim,(void))

void PicoBlazinHandler_obj::playPunchHighAnim(){
            	HX_STACKFRAME(&_hx_pos_97f284050b6d5f46_293_playPunchHighAnim)
HXLINE( 294)		 ::objects::Character _hx_tmp = this->get_boyfriend();
HXDLIN( 294)		_hx_tmp->playAnim((HX_("punchHigh",30,90,cd,f2) + this->doAlternate()),true,null(),null());
HXLINE( 295)		this->moveToFront();
            	}


HX_DEFINE_DYNAMIC_FUNC0(PicoBlazinHandler_obj,playPunchHighAnim,(void))

void PicoBlazinHandler_obj::playPunchLowAnim(){
            	HX_STACKFRAME(&_hx_pos_97f284050b6d5f46_299_playPunchLowAnim)
HXLINE( 300)		 ::objects::Character _hx_tmp = this->get_boyfriend();
HXDLIN( 300)		_hx_tmp->playAnim((HX_("punchLow",86,8f,46,48) + this->doAlternate()),true,null(),null());
HXLINE( 301)		this->moveToFront();
            	}


HX_DEFINE_DYNAMIC_FUNC0(PicoBlazinHandler_obj,playPunchLowAnim,(void))

void PicoBlazinHandler_obj::playTauntConditionalAnim(){
            	HX_STACKFRAME(&_hx_pos_97f284050b6d5f46_306_playTauntConditionalAnim)
HXDLIN( 306)		if ((this->get_boyfriend()->_lastPlayedAnimation == HX_("fakeout",19,90,22,39))) {
HXLINE( 307)			this->playTauntAnim();
            		}
            		else {
HXLINE( 309)			this->playIdleAnim();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(PicoBlazinHandler_obj,playTauntConditionalAnim,(void))

void PicoBlazinHandler_obj::playTauntAnim(){
            	HX_STACKFRAME(&_hx_pos_97f284050b6d5f46_313_playTauntAnim)
HXLINE( 314)		this->get_boyfriend()->playAnim(HX_("taunt",ae,24,f2,0a),true,null(),null());
HXLINE( 315)		this->moveToBack();
            	}


HX_DEFINE_DYNAMIC_FUNC0(PicoBlazinHandler_obj,playTauntAnim,(void))

bool PicoBlazinHandler_obj::willMissBeLethal(){
            	HX_STACKFRAME(&_hx_pos_97f284050b6d5f46_320_willMissBeLethal)
HXDLIN( 320)		if ((::states::PlayState_obj::instance->health <= ((Float)0.0))) {
HXDLIN( 320)			return !(::states::PlayState_obj::instance->practiceMode);
            		}
            		else {
HXDLIN( 320)			return false;
            		}
HXDLIN( 320)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC0(PicoBlazinHandler_obj,willMissBeLethal,return )

bool PicoBlazinHandler_obj::isDarnellPreppingUppercut(){
            	HX_STACKFRAME(&_hx_pos_97f284050b6d5f46_325_isDarnellPreppingUppercut)
HXDLIN( 325)		return (this->get_dad()->_lastPlayedAnimation == HX_("uppercutPrep",6d,10,57,1c));
            	}


HX_DEFINE_DYNAMIC_FUNC0(PicoBlazinHandler_obj,isDarnellPreppingUppercut,return )

bool PicoBlazinHandler_obj::isDarnellInUppercut(){
            	HX_STACKFRAME(&_hx_pos_97f284050b6d5f46_330_isDarnellInUppercut)
HXDLIN( 330)		if ((this->get_dad()->_lastPlayedAnimation != HX_("uppercut",60,f5,88,90))) {
HXDLIN( 330)			return (this->get_dad()->_lastPlayedAnimation == HX_("uppercut-hold",8c,72,3c,82));
            		}
            		else {
HXDLIN( 330)			return true;
            		}
HXDLIN( 330)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC0(PicoBlazinHandler_obj,isDarnellInUppercut,return )

bool PicoBlazinHandler_obj::wasNoteHitPoorly(::String rating){
            	HX_STACKFRAME(&_hx_pos_97f284050b6d5f46_335_wasNoteHitPoorly)
HXDLIN( 335)		if ((rating != HX_("bad",c5,b1,4a,00))) {
HXDLIN( 335)			return (rating == HX_("shit",c0,cf,52,4c));
            		}
            		else {
HXDLIN( 335)			return true;
            		}
HXDLIN( 335)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC1(PicoBlazinHandler_obj,wasNoteHitPoorly,return )

bool PicoBlazinHandler_obj::isPlayerLowHealth(){
            	HX_STACKFRAME(&_hx_pos_97f284050b6d5f46_340_isPlayerLowHealth)
HXDLIN( 340)		return (::states::PlayState_obj::instance->health <= ((Float)0.6));
            	}


HX_DEFINE_DYNAMIC_FUNC0(PicoBlazinHandler_obj,isPlayerLowHealth,return )

void PicoBlazinHandler_obj::moveToBack(){
            	HX_STACKFRAME(&_hx_pos_97f284050b6d5f46_344_moveToBack)
HXLINE( 345)		::Array< ::Dynamic> bfPos = ::flixel::FlxG_obj::game->_state->members;
HXDLIN( 345)		int bfPos1 = bfPos->indexOf(this->get_boyfriendGroup(),null());
HXLINE( 346)		::Array< ::Dynamic> dadPos = ::flixel::FlxG_obj::game->_state->members;
HXDLIN( 346)		int dadPos1 = dadPos->indexOf(this->get_dadGroup(),null());
HXLINE( 347)		if ((bfPos1 < dadPos1)) {
HXLINE( 347)			return;
            		}
HXLINE( 349)		::flixel::FlxG_obj::game->_state->members->set(dadPos1,this->get_boyfriendGroup());
HXLINE( 350)		::flixel::FlxG_obj::game->_state->members->set(bfPos1,this->get_dadGroup());
            	}


HX_DEFINE_DYNAMIC_FUNC0(PicoBlazinHandler_obj,moveToBack,(void))

void PicoBlazinHandler_obj::moveToFront(){
            	HX_STACKFRAME(&_hx_pos_97f284050b6d5f46_354_moveToFront)
HXLINE( 355)		::Array< ::Dynamic> bfPos = ::flixel::FlxG_obj::game->_state->members;
HXDLIN( 355)		int bfPos1 = bfPos->indexOf(this->get_boyfriendGroup(),null());
HXLINE( 356)		::Array< ::Dynamic> dadPos = ::flixel::FlxG_obj::game->_state->members;
HXDLIN( 356)		int dadPos1 = dadPos->indexOf(this->get_dadGroup(),null());
HXLINE( 357)		if ((bfPos1 > dadPos1)) {
HXLINE( 357)			return;
            		}
HXLINE( 359)		::flixel::FlxG_obj::game->_state->members->set(dadPos1,this->get_boyfriendGroup());
HXLINE( 360)		::flixel::FlxG_obj::game->_state->members->set(bfPos1,this->get_dadGroup());
            	}


HX_DEFINE_DYNAMIC_FUNC0(PicoBlazinHandler_obj,moveToFront,(void))

 ::objects::Character PicoBlazinHandler_obj::get_boyfriend(){
            	HX_STACKFRAME(&_hx_pos_97f284050b6d5f46_367_get_boyfriend)
HXDLIN( 367)		return ::states::PlayState_obj::instance->boyfriend;
            	}


HX_DEFINE_DYNAMIC_FUNC0(PicoBlazinHandler_obj,get_boyfriend,return )

 ::objects::Character PicoBlazinHandler_obj::get_dad(){
            	HX_STACKFRAME(&_hx_pos_97f284050b6d5f46_368_get_dad)
HXDLIN( 368)		return ::states::PlayState_obj::instance->dad;
            	}


HX_DEFINE_DYNAMIC_FUNC0(PicoBlazinHandler_obj,get_dad,return )

 ::flixel::group::FlxTypedSpriteGroup PicoBlazinHandler_obj::get_boyfriendGroup(){
            	HX_STACKFRAME(&_hx_pos_97f284050b6d5f46_369_get_boyfriendGroup)
HXDLIN( 369)		return ::states::PlayState_obj::instance->boyfriendGroup;
            	}


HX_DEFINE_DYNAMIC_FUNC0(PicoBlazinHandler_obj,get_boyfriendGroup,return )

 ::flixel::group::FlxTypedSpriteGroup PicoBlazinHandler_obj::get_dadGroup(){
            	HX_STACKFRAME(&_hx_pos_97f284050b6d5f46_370_get_dadGroup)
HXDLIN( 370)		return ::states::PlayState_obj::instance->dadGroup;
            	}


HX_DEFINE_DYNAMIC_FUNC0(PicoBlazinHandler_obj,get_dadGroup,return )


::hx::ObjectPtr< PicoBlazinHandler_obj > PicoBlazinHandler_obj::__new() {
	::hx::ObjectPtr< PicoBlazinHandler_obj > __this = new PicoBlazinHandler_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< PicoBlazinHandler_obj > PicoBlazinHandler_obj::__alloc(::hx::Ctx *_hx_ctx) {
	PicoBlazinHandler_obj *__this = (PicoBlazinHandler_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(PicoBlazinHandler_obj), false, "states.stages.objects.PicoBlazinHandler"));
	*(void **)__this = PicoBlazinHandler_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

PicoBlazinHandler_obj::PicoBlazinHandler_obj()
{
}

::hx::Val PicoBlazinHandler_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"dad") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_dad() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"noteHit") ) { return ::hx::Val( noteHit_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_dad") ) { return ::hx::Val( get_dad_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"noteMiss") ) { return ::hx::Val( noteMiss_dyn() ); }
		if (HX_FIELD_EQ(inName,"dadGroup") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_dadGroup() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"alternate") ) { return ::hx::Val( alternate ); }
		if (HX_FIELD_EQ(inName,"boyfriend") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_boyfriend() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"moveToBack") ) { return ::hx::Val( moveToBack_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"doAlternate") ) { return ::hx::Val( doAlternate_dyn() ); }
		if (HX_FIELD_EQ(inName,"moveToFront") ) { return ::hx::Val( moveToFront_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"cantUppercut") ) { return ::hx::Val( cantUppercut ); }
		if (HX_FIELD_EQ(inName,"playIdleAnim") ) { return ::hx::Val( playIdleAnim_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_dadGroup") ) { return ::hx::Val( get_dadGroup_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"noteMissPress") ) { return ::hx::Val( noteMissPress_dyn() ); }
		if (HX_FIELD_EQ(inName,"playBlockAnim") ) { return ::hx::Val( playBlockAnim_dyn() ); }
		if (HX_FIELD_EQ(inName,"playDodgeAnim") ) { return ::hx::Val( playDodgeAnim_dyn() ); }
		if (HX_FIELD_EQ(inName,"playTauntAnim") ) { return ::hx::Val( playTauntAnim_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_boyfriend") ) { return ::hx::Val( get_boyfriend_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"movePicoToBack") ) { return ::hx::Val( movePicoToBack_dyn() ); }
		if (HX_FIELD_EQ(inName,"playCringeAnim") ) { return ::hx::Val( playCringeAnim_dyn() ); }
		if (HX_FIELD_EQ(inName,"playHitLowAnim") ) { return ::hx::Val( playHitLowAnim_dyn() ); }
		if (HX_FIELD_EQ(inName,"boyfriendGroup") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_boyfriendGroup() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"movePicoToFront") ) { return ::hx::Val( movePicoToFront_dyn() ); }
		if (HX_FIELD_EQ(inName,"playFakeoutAnim") ) { return ::hx::Val( playFakeoutAnim_dyn() ); }
		if (HX_FIELD_EQ(inName,"playHitHighAnim") ) { return ::hx::Val( playHitHighAnim_dyn() ); }
		if (HX_FIELD_EQ(inName,"playHitSpinAnim") ) { return ::hx::Val( playHitSpinAnim_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"playUppercutAnim") ) { return ::hx::Val( playUppercutAnim_dyn() ); }
		if (HX_FIELD_EQ(inName,"playPunchLowAnim") ) { return ::hx::Val( playPunchLowAnim_dyn() ); }
		if (HX_FIELD_EQ(inName,"willMissBeLethal") ) { return ::hx::Val( willMissBeLethal_dyn() ); }
		if (HX_FIELD_EQ(inName,"wasNoteHitPoorly") ) { return ::hx::Val( wasNoteHitPoorly_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"playPunchHighAnim") ) { return ::hx::Val( playPunchHighAnim_dyn() ); }
		if (HX_FIELD_EQ(inName,"isPlayerLowHealth") ) { return ::hx::Val( isPlayerLowHealth_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"get_boyfriendGroup") ) { return ::hx::Val( get_boyfriendGroup_dyn() ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"playUppercutHitAnim") ) { return ::hx::Val( playUppercutHitAnim_dyn() ); }
		if (HX_FIELD_EQ(inName,"isDarnellInUppercut") ) { return ::hx::Val( isDarnellInUppercut_dyn() ); }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"playUppercutPrepAnim") ) { return ::hx::Val( playUppercutPrepAnim_dyn() ); }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"playTauntConditionalAnim") ) { return ::hx::Val( playTauntConditionalAnim_dyn() ); }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"isDarnellPreppingUppercut") ) { return ::hx::Val( isDarnellPreppingUppercut_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val PicoBlazinHandler_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"alternate") ) { alternate=inValue.Cast< bool >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"cantUppercut") ) { cantUppercut=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void PicoBlazinHandler_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("cantUppercut",e4,cf,eb,e0));
	outFields->push(HX_("alternate",3a,c9,33,35));
	outFields->push(HX_("boyfriend",6a,29,b8,e6));
	outFields->push(HX_("dad",47,36,4c,00));
	outFields->push(HX_("boyfriendGroup",75,99,09,ef));
	outFields->push(HX_("dadGroup",78,cb,28,42));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo PicoBlazinHandler_obj_sMemberStorageInfo[] = {
	{::hx::fsBool,(int)offsetof(PicoBlazinHandler_obj,cantUppercut),HX_("cantUppercut",e4,cf,eb,e0)},
	{::hx::fsBool,(int)offsetof(PicoBlazinHandler_obj,alternate),HX_("alternate",3a,c9,33,35)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *PicoBlazinHandler_obj_sStaticStorageInfo = 0;
#endif

static ::String PicoBlazinHandler_obj_sMemberFields[] = {
	HX_("cantUppercut",e4,cf,eb,e0),
	HX_("noteHit",81,e9,4a,4d),
	HX_("noteMiss",0e,78,8f,57),
	HX_("noteMissPress",95,58,12,aa),
	HX_("movePicoToBack",78,a2,38,b6),
	HX_("movePicoToFront",38,97,35,14),
	HX_("alternate",3a,c9,33,35),
	HX_("doAlternate",2f,88,32,8e),
	HX_("playBlockAnim",6a,a5,45,e0),
	HX_("playCringeAnim",b7,11,20,84),
	HX_("playDodgeAnim",f4,a9,59,8d),
	HX_("playIdleAnim",59,71,fa,c0),
	HX_("playFakeoutAnim",36,c9,cb,6a),
	HX_("playUppercutPrepAnim",32,2f,ba,cf),
	HX_("playUppercutAnim",a5,6f,5d,95),
	HX_("playUppercutHitAnim",f0,68,76,8a),
	HX_("playHitHighAnim",72,56,53,e3),
	HX_("playHitLowAnim",c6,2d,7a,5a),
	HX_("playHitSpinAnim",d2,b0,b2,bc),
	HX_("playPunchHighAnim",cd,93,8d,71),
	HX_("playPunchLowAnim",cb,14,2a,06),
	HX_("playTauntConditionalAnim",7d,0b,bd,9b),
	HX_("playTauntAnim",4b,19,1d,ce),
	HX_("willMissBeLethal",c9,05,2d,05),
	HX_("isDarnellPreppingUppercut",01,51,40,91),
	HX_("isDarnellInUppercut",87,f1,86,18),
	HX_("wasNoteHitPoorly",67,b9,74,54),
	HX_("isPlayerLowHealth",e5,3b,58,cd),
	HX_("moveToBack",33,bf,f8,c6),
	HX_("moveToFront",1d,9e,8e,ab),
	HX_("get_boyfriend",41,fd,1b,a8),
	HX_("get_dad",de,fe,c0,26),
	HX_("get_boyfriendGroup",3e,7a,a3,8a),
	HX_("get_dadGroup",81,7f,42,f7),
	::String(null()) };

::hx::Class PicoBlazinHandler_obj::__mClass;

void PicoBlazinHandler_obj::__register()
{
	PicoBlazinHandler_obj _hx_dummy;
	PicoBlazinHandler_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("states.stages.objects.PicoBlazinHandler",56,6f,59,7d);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(PicoBlazinHandler_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< PicoBlazinHandler_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = PicoBlazinHandler_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = PicoBlazinHandler_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace states
} // end namespace stages
} // end namespace objects

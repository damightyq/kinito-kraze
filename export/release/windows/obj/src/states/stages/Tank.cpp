// Generated by Haxe 4.3.4
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_StringTools
#include <StringTools.h>
#endif
#ifndef INCLUDED_backend_BaseStage
#include <backend/BaseStage.h>
#endif
#ifndef INCLUDED_backend_ClientPrefs
#include <backend/ClientPrefs.h>
#endif
#ifndef INCLUDED_backend_Conductor
#include <backend/Conductor.h>
#endif
#ifndef INCLUDED_backend_Countdown
#include <backend/Countdown.h>
#endif
#ifndef INCLUDED_backend_Language
#include <backend/Language.h>
#endif
#ifndef INCLUDED_backend_MusicBeatState
#include <backend/MusicBeatState.h>
#endif
#ifndef INCLUDED_backend_Paths
#include <backend/Paths.h>
#endif
#ifndef INCLUDED_backend_SaveVariables
#include <backend/SaveVariables.h>
#endif
#ifndef INCLUDED_cutscenes_CutsceneHandler
#include <cutscenes/CutsceneHandler.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxCamera
#include <flixel/FlxCamera.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxGame
#include <flixel/FlxGame.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_FlxState
#include <flixel/FlxState.h>
#endif
#ifndef INCLUDED_flixel_animation_FlxAnimation
#include <flixel/animation/FlxAnimation.h>
#endif
#ifndef INCLUDED_flixel_animation_FlxAnimationController
#include <flixel/animation/FlxAnimationController.h>
#endif
#ifndef INCLUDED_flixel_animation_FlxBaseAnimation
#include <flixel/animation/FlxBaseAnimation.h>
#endif
#ifndef INCLUDED_flixel_graphics_FlxGraphic
#include <flixel/graphics/FlxGraphic.h>
#endif
#ifndef INCLUDED_flixel_graphics_frames_FlxAtlasFrames
#include <flixel/graphics/frames/FlxAtlasFrames.h>
#endif
#ifndef INCLUDED_flixel_graphics_frames_FlxFramesCollection
#include <flixel/graphics/frames/FlxFramesCollection.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroupIterator
#include <flixel/group/FlxTypedGroupIterator.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedSpriteGroup
#include <flixel/group/FlxTypedSpriteGroup.h>
#endif
#ifndef INCLUDED_flixel_math_FlxBasePoint
#include <flixel/math/FlxBasePoint.h>
#endif
#ifndef INCLUDED_flixel_math_FlxRandom
#include <flixel/math/FlxRandom.h>
#endif
#ifndef INCLUDED_flixel_sound_FlxSound
#include <flixel/sound/FlxSound.h>
#endif
#ifndef INCLUDED_flixel_sound_FlxSoundGroup
#include <flixel/sound/FlxSoundGroup.h>
#endif
#ifndef INCLUDED_flixel_system_frontEnds_SoundFrontEnd
#include <flixel/system/frontEnds/SoundFrontEnd.h>
#endif
#ifndef INCLUDED_flixel_tweens_FlxEase
#include <flixel/tweens/FlxEase.h>
#endif
#ifndef INCLUDED_flixel_tweens_FlxTween
#include <flixel/tweens/FlxTween.h>
#endif
#ifndef INCLUDED_flixel_tweens_misc_NumTween
#include <flixel/tweens/misc/NumTween.h>
#endif
#ifndef INCLUDED_flixel_tweens_misc_VarTween
#include <flixel/tweens/misc/VarTween.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxPooled
#include <flixel/util/IFlxPooled.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxSignal
#include <flixel/util/IFlxSignal.h>
#endif
#ifndef INCLUDED_flixel_util__FlxSignal_FlxBaseSignal
#include <flixel/util/_FlxSignal/FlxBaseSignal.h>
#endif
#ifndef INCLUDED_flixel_util__FlxSignal_FlxSignal0
#include <flixel/util/_FlxSignal/FlxSignal0.h>
#endif
#ifndef INCLUDED_flxanimate_FlxAnimate
#include <flxanimate/FlxAnimate.h>
#endif
#ifndef INCLUDED_flxanimate_PsychFlxAnimate
#include <flxanimate/PsychFlxAnimate.h>
#endif
#ifndef INCLUDED_flxanimate_animate_FlxAnim
#include <flxanimate/animate/FlxAnim.h>
#endif
#ifndef INCLUDED_flxanimate_animate_FlxElement
#include <flxanimate/animate/FlxElement.h>
#endif
#ifndef INCLUDED_flxanimate_animate_SymbolParameters
#include <flxanimate/animate/SymbolParameters.h>
#endif
#ifndef INCLUDED_flxanimate_interfaces_IFilterable
#include <flxanimate/interfaces/IFilterable.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_objects_BGSprite
#include <objects/BGSprite.h>
#endif
#ifndef INCLUDED_objects_Character
#include <objects/Character.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_media_Sound
#include <openfl/media/Sound.h>
#endif
#ifndef INCLUDED_states_PlayState
#include <states/PlayState.h>
#endif
#ifndef INCLUDED_states_stages_Tank
#include <states/stages/Tank.h>
#endif
#ifndef INCLUDED_states_stages_objects_BackgroundTank
#include <states/stages/objects/BackgroundTank.h>
#endif
#ifndef INCLUDED_states_stages_objects_TankmenBG
#include <states/stages/objects/TankmenBG.h>
#endif
#ifndef INCLUDED_sys_FileSystem
#include <sys/FileSystem.h>
#endif
#ifndef INCLUDED_sys_io_File
#include <sys/io/File.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_012ed43d484e6e58_8_new,"states.stages.Tank","new",0x88aa7169,"states.stages.Tank.new","states/stages/Tank.hx",8,0x70a88007)
HX_LOCAL_STACK_FRAME(_hx_pos_012ed43d484e6e58_16_create,"states.stages.Tank","create",0xbec65193,"states.stages.Tank.create","states/stages/Tank.hx",16,0x70a88007)
static const ::String _hx_array_data_969188f7_3[] = {
	HX_("SmokeBlurLeft",bd,78,c1,fc),
};
static const ::String _hx_array_data_969188f7_4[] = {
	HX_("SmokeRight",0d,9e,e3,35),
};
static const ::String _hx_array_data_969188f7_5[] = {
	HX_("watchtower gradient color",39,8f,02,81),
};
static const ::String _hx_array_data_969188f7_6[] = {
	HX_("fg",41,59,00,00),
};
static const ::String _hx_array_data_969188f7_7[] = {
	HX_("fg",41,59,00,00),
};
static const ::String _hx_array_data_969188f7_8[] = {
	HX_("foreground",c3,18,ef,10),
};
static const ::String _hx_array_data_969188f7_9[] = {
	HX_("fg",41,59,00,00),
};
static const ::String _hx_array_data_969188f7_10[] = {
	HX_("fg",41,59,00,00),
};
static const ::String _hx_array_data_969188f7_11[] = {
	HX_("fg",41,59,00,00),
};
HX_LOCAL_STACK_FRAME(_hx_pos_012ed43d484e6e58_91_createPost,"states.stages.Tank","createPost",0xe7dfc793,"states.stages.Tank.createPost","states/stages/Tank.hx",91,0x70a88007)
HX_LOCAL_STACK_FRAME(_hx_pos_012ed43d484e6e58_122_countdownTick,"states.stages.Tank","countdownTick",0x117b92f7,"states.stages.Tank.countdownTick","states/stages/Tank.hx",122,0x70a88007)
HX_LOCAL_STACK_FRAME(_hx_pos_012ed43d484e6e58_123_beatHit,"states.stages.Tank","beatHit",0x915b4406,"states.stages.Tank.beatHit","states/stages/Tank.hx",123,0x70a88007)
HX_LOCAL_STACK_FRAME(_hx_pos_012ed43d484e6e58_129_everyoneDance,"states.stages.Tank","everyoneDance",0x6e22ebd1,"states.stages.Tank.everyoneDance","states/stages/Tank.hx",129,0x70a88007)
HX_LOCAL_STACK_FRAME(_hx_pos_012ed43d484e6e58_125_everyoneDance,"states.stages.Tank","everyoneDance",0x6e22ebd1,"states.stages.Tank.everyoneDance","states/stages/Tank.hx",125,0x70a88007)
HX_LOCAL_STACK_FRAME(_hx_pos_012ed43d484e6e58_155_prepareCutscene,"states.stages.Tank","prepareCutscene",0xde6853ba,"states.stages.Tank.prepareCutscene","states/stages/Tank.hx",155,0x70a88007)
HX_LOCAL_STACK_FRAME(_hx_pos_012ed43d484e6e58_169_prepareCutscene,"states.stages.Tank","prepareCutscene",0xde6853ba,"states.stages.Tank.prepareCutscene","states/stages/Tank.hx",169,0x70a88007)
HX_LOCAL_STACK_FRAME(_hx_pos_012ed43d484e6e58_140_prepareCutscene,"states.stages.Tank","prepareCutscene",0xde6853ba,"states.stages.Tank.prepareCutscene","states/stages/Tank.hx",140,0x70a88007)
HX_LOCAL_STACK_FRAME(_hx_pos_012ed43d484e6e58_215_ughIntro,"states.stages.Tank","ughIntro",0x53d4af0d,"states.stages.Tank.ughIntro","states/stages/Tank.hx",215,0x70a88007)
HX_LOCAL_STACK_FRAME(_hx_pos_012ed43d484e6e58_222_ughIntro,"states.stages.Tank","ughIntro",0x53d4af0d,"states.stages.Tank.ughIntro","states/stages/Tank.hx",222,0x70a88007)
HX_LOCAL_STACK_FRAME(_hx_pos_012ed43d484e6e58_229_ughIntro,"states.stages.Tank","ughIntro",0x53d4af0d,"states.stages.Tank.ughIntro","states/stages/Tank.hx",229,0x70a88007)
HX_LOCAL_STACK_FRAME(_hx_pos_012ed43d484e6e58_237_ughIntro,"states.stages.Tank","ughIntro",0x53d4af0d,"states.stages.Tank.ughIntro","states/stages/Tank.hx",237,0x70a88007)
HX_LOCAL_STACK_FRAME(_hx_pos_012ed43d484e6e58_195_ughIntro,"states.stages.Tank","ughIntro",0x53d4af0d,"states.stages.Tank.ughIntro","states/stages/Tank.hx",195,0x70a88007)
HX_LOCAL_STACK_FRAME(_hx_pos_012ed43d484e6e58_262_gunsIntro,"states.stages.Tank","gunsIntro",0x1087b542,"states.stages.Tank.gunsIntro","states/stages/Tank.hx",262,0x70a88007)
HX_LOCAL_STACK_FRAME(_hx_pos_012ed43d484e6e58_275_gunsIntro,"states.stages.Tank","gunsIntro",0x1087b542,"states.stages.Tank.gunsIntro","states/stages/Tank.hx",275,0x70a88007)
HX_LOCAL_STACK_FRAME(_hx_pos_012ed43d484e6e58_271_gunsIntro,"states.stages.Tank","gunsIntro",0x1087b542,"states.stages.Tank.gunsIntro","states/stages/Tank.hx",271,0x70a88007)
HX_LOCAL_STACK_FRAME(_hx_pos_012ed43d484e6e58_248_gunsIntro,"states.stages.Tank","gunsIntro",0x1087b542,"states.stages.Tank.gunsIntro","states/stages/Tank.hx",248,0x70a88007)
HX_LOCAL_STACK_FRAME(_hx_pos_012ed43d484e6e58_291_stressIntro,"states.stages.Tank","stressIntro",0x8c69aba1,"states.stages.Tank.stressIntro","states/stages/Tank.hx",291,0x70a88007)
HX_LOCAL_STACK_FRAME(_hx_pos_012ed43d484e6e58_309_stressIntro,"states.stages.Tank","stressIntro",0x8c69aba1,"states.stages.Tank.stressIntro","states/stages/Tank.hx",309,0x70a88007)
HX_LOCAL_STACK_FRAME(_hx_pos_012ed43d484e6e58_317_stressIntro,"states.stages.Tank","stressIntro",0x8c69aba1,"states.stages.Tank.stressIntro","states/stages/Tank.hx",317,0x70a88007)
HX_LOCAL_STACK_FRAME(_hx_pos_012ed43d484e6e58_351_stressIntro,"states.stages.Tank","stressIntro",0x8c69aba1,"states.stages.Tank.stressIntro","states/stages/Tank.hx",351,0x70a88007)
HX_LOCAL_STACK_FRAME(_hx_pos_012ed43d484e6e58_357_stressIntro,"states.stages.Tank","stressIntro",0x8c69aba1,"states.stages.Tank.stressIntro","states/stages/Tank.hx",357,0x70a88007)
HX_LOCAL_STACK_FRAME(_hx_pos_012ed43d484e6e58_365_stressIntro,"states.stages.Tank","stressIntro",0x8c69aba1,"states.stages.Tank.stressIntro","states/stages/Tank.hx",365,0x70a88007)
HX_LOCAL_STACK_FRAME(_hx_pos_012ed43d484e6e58_370_stressIntro,"states.stages.Tank","stressIntro",0x8c69aba1,"states.stages.Tank.stressIntro","states/stages/Tank.hx",370,0x70a88007)
HX_LOCAL_STACK_FRAME(_hx_pos_012ed43d484e6e58_375_stressIntro,"states.stages.Tank","stressIntro",0x8c69aba1,"states.stages.Tank.stressIntro","states/stages/Tank.hx",375,0x70a88007)
HX_LOCAL_STACK_FRAME(_hx_pos_012ed43d484e6e58_383_stressIntro,"states.stages.Tank","stressIntro",0x8c69aba1,"states.stages.Tank.stressIntro","states/stages/Tank.hx",383,0x70a88007)
HX_LOCAL_STACK_FRAME(_hx_pos_012ed43d484e6e58_379_stressIntro,"states.stages.Tank","stressIntro",0x8c69aba1,"states.stages.Tank.stressIntro","states/stages/Tank.hx",379,0x70a88007)
HX_LOCAL_STACK_FRAME(_hx_pos_012ed43d484e6e58_398_stressIntro,"states.stages.Tank","stressIntro",0x8c69aba1,"states.stages.Tank.stressIntro","states/stages/Tank.hx",398,0x70a88007)
HX_LOCAL_STACK_FRAME(_hx_pos_012ed43d484e6e58_281_stressIntro,"states.stages.Tank","stressIntro",0x8c69aba1,"states.stages.Tank.stressIntro","states/stages/Tank.hx",281,0x70a88007)
HX_LOCAL_STACK_FRAME(_hx_pos_012ed43d484e6e58_403_zoomBack,"states.stages.Tank","zoomBack",0x28452d31,"states.stages.Tank.zoomBack","states/stages/Tank.hx",403,0x70a88007)
HX_LOCAL_STACK_FRAME(_hx_pos_012ed43d484e6e58_415_zoomBack,"states.stages.Tank","zoomBack",0x28452d31,"states.stages.Tank.zoomBack","states/stages/Tank.hx",415,0x70a88007)
namespace states{
namespace stages{

void Tank_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_012ed43d484e6e58_8_new)
HXLINE( 279)		this->dualWieldAnimPlayed = 0;
HXLINE(   8)		super::__construct();
            	}

Dynamic Tank_obj::__CreateEmpty() { return new Tank_obj; }

void *Tank_obj::_hx_vtable = 0;

Dynamic Tank_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Tank_obj > _hx_result = new Tank_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Tank_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x73e389c1) {
		if (inClassId<=(int)0x230cab9d) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x230cab9d;
		} else {
			return inClassId==(int)0x73e389c1;
		}
	} else {
		return inClassId==(int)0x7ccf8994;
	}
}

void Tank_obj::create(){
            	HX_GC_STACKFRAME(&_hx_pos_012ed43d484e6e58_16_create)
HXLINE(  17)		 ::objects::BGSprite sky =  ::objects::BGSprite_obj::__alloc( HX_CTX ,HX_("tankSky",17,cc,64,3d),-400,-400,0,0,null(),null());
HXLINE(  18)		this->add(sky);
HXLINE(  20)		if (!(::backend::ClientPrefs_obj::data->lowQuality)) {
HXLINE(  22)			int clouds = ::flixel::FlxG_obj::random->_hx_int(-700,-100,null());
HXDLIN(  22)			 ::objects::BGSprite clouds1 =  ::objects::BGSprite_obj::__alloc( HX_CTX ,HX_("tankClouds",e8,67,44,47),clouds,::flixel::FlxG_obj::random->_hx_int(-20,20,null()),((Float)0.1),((Float)0.1),null(),null());
HXLINE(  23)			clouds1->set_active(true);
HXLINE(  24)			{
HXLINE(  24)				 ::flixel::math::FlxBasePoint this1 = clouds1->velocity;
HXDLIN(  24)				this1->set_x(::flixel::FlxG_obj::random->_hx_float(5,15,null()));
            			}
HXLINE(  25)			this->add(clouds1);
HXLINE(  27)			 ::objects::BGSprite mountains =  ::objects::BGSprite_obj::__alloc( HX_CTX ,HX_("tankMountains",3c,a9,69,8a),-300,-20,((Float)0.2),((Float)0.2),null(),null());
HXLINE(  28)			mountains->setGraphicSize(::Std_obj::_hx_int((((Float)1.2) * mountains->get_width())),null());
HXLINE(  29)			mountains->updateHitbox();
HXLINE(  30)			this->add(mountains);
HXLINE(  32)			 ::objects::BGSprite buildings =  ::objects::BGSprite_obj::__alloc( HX_CTX ,HX_("tankBuildings",35,bb,64,e0),-200,0,((Float)0.3),((Float)0.3),null(),null());
HXLINE(  33)			buildings->setGraphicSize(::Std_obj::_hx_int((((Float)1.1) * buildings->get_width())),null());
HXLINE(  34)			buildings->updateHitbox();
HXLINE(  35)			this->add(buildings);
            		}
HXLINE(  38)		 ::objects::BGSprite ruins =  ::objects::BGSprite_obj::__alloc( HX_CTX ,HX_("tankRuins",c1,09,6b,6c),-200,0,((Float).35),((Float).35),null(),null());
HXLINE(  39)		ruins->setGraphicSize(::Std_obj::_hx_int((((Float)1.1) * ruins->get_width())),null());
HXLINE(  40)		ruins->updateHitbox();
HXLINE(  41)		this->add(ruins);
HXLINE(  43)		if (!(::backend::ClientPrefs_obj::data->lowQuality)) {
HXLINE(  45)			 ::objects::BGSprite smokeLeft =  ::objects::BGSprite_obj::__alloc( HX_CTX ,HX_("smokeLeft",16,a7,ec,46),-200,-100,((Float)0.4),((Float)0.4),::Array_obj< ::String >::fromData( _hx_array_data_969188f7_3,1),true);
HXLINE(  46)			this->add(smokeLeft);
HXLINE(  47)			 ::objects::BGSprite smokeRight =  ::objects::BGSprite_obj::__alloc( HX_CTX ,HX_("smokeRight",ed,99,32,3f),1100,-100,((Float)0.4),((Float)0.4),::Array_obj< ::String >::fromData( _hx_array_data_969188f7_4,1),true);
HXLINE(  48)			this->add(smokeRight);
HXLINE(  50)			this->tankWatchtower =  ::objects::BGSprite_obj::__alloc( HX_CTX ,HX_("tankWatchtower",e4,90,73,b1),100,50,((Float)0.5),((Float)0.5),::Array_obj< ::String >::fromData( _hx_array_data_969188f7_5,1),null());
HXLINE(  51)			this->add(this->tankWatchtower);
            		}
HXLINE(  54)		this->tankGround =  ::states::stages::objects::BackgroundTank_obj::__alloc( HX_CTX );
HXLINE(  55)		this->add(this->tankGround);
HXLINE(  57)		this->tankmanRun =  ::flixel::group::FlxTypedGroup_obj::__alloc( HX_CTX ,null());
HXLINE(  58)		this->add(this->tankmanRun);
HXLINE(  60)		 ::objects::BGSprite ground =  ::objects::BGSprite_obj::__alloc( HX_CTX ,HX_("tankGround",11,5d,19,55),-420,-150,null(),null(),null(),null());
HXLINE(  61)		ground->setGraphicSize(::Std_obj::_hx_int((((Float)1.15) * ground->get_width())),null());
HXLINE(  62)		ground->updateHitbox();
HXLINE(  63)		this->add(ground);
HXLINE(  65)		this->foregroundSprites =  ::flixel::group::FlxTypedGroup_obj::__alloc( HX_CTX ,null());
HXLINE(  66)		 ::flixel::group::FlxTypedGroup _hx_tmp = this->foregroundSprites;
HXDLIN(  66)		_hx_tmp->add( ::objects::BGSprite_obj::__alloc( HX_CTX ,HX_("tank0",06,d2,ec,0a),-500,650,((Float)1.7),((Float)1.5),::Array_obj< ::String >::fromData( _hx_array_data_969188f7_6,1),null())).StaticCast<  ::objects::BGSprite >();
HXLINE(  67)		if (!(::backend::ClientPrefs_obj::data->lowQuality)) {
HXLINE(  67)			 ::flixel::group::FlxTypedGroup _hx_tmp1 = this->foregroundSprites;
HXDLIN(  67)			_hx_tmp1->add( ::objects::BGSprite_obj::__alloc( HX_CTX ,HX_("tank1",07,d2,ec,0a),-300,750,2,((Float)0.2),::Array_obj< ::String >::fromData( _hx_array_data_969188f7_7,1),null())).StaticCast<  ::objects::BGSprite >();
            		}
HXLINE(  68)		 ::flixel::group::FlxTypedGroup _hx_tmp2 = this->foregroundSprites;
HXDLIN(  68)		_hx_tmp2->add( ::objects::BGSprite_obj::__alloc( HX_CTX ,HX_("tank2",08,d2,ec,0a),450,940,((Float)1.5),((Float)1.5),::Array_obj< ::String >::fromData( _hx_array_data_969188f7_8,1),null())).StaticCast<  ::objects::BGSprite >();
HXLINE(  69)		if (!(::backend::ClientPrefs_obj::data->lowQuality)) {
HXLINE(  69)			 ::flixel::group::FlxTypedGroup _hx_tmp3 = this->foregroundSprites;
HXDLIN(  69)			_hx_tmp3->add( ::objects::BGSprite_obj::__alloc( HX_CTX ,HX_("tank4",0a,d2,ec,0a),1300,900,((Float)1.5),((Float)1.5),::Array_obj< ::String >::fromData( _hx_array_data_969188f7_9,1),null())).StaticCast<  ::objects::BGSprite >();
            		}
HXLINE(  70)		 ::flixel::group::FlxTypedGroup _hx_tmp4 = this->foregroundSprites;
HXDLIN(  70)		_hx_tmp4->add( ::objects::BGSprite_obj::__alloc( HX_CTX ,HX_("tank5",0b,d2,ec,0a),1620,700,((Float)1.5),((Float)1.5),::Array_obj< ::String >::fromData( _hx_array_data_969188f7_10,1),null())).StaticCast<  ::objects::BGSprite >();
HXLINE(  71)		if (!(::backend::ClientPrefs_obj::data->lowQuality)) {
HXLINE(  71)			 ::flixel::group::FlxTypedGroup _hx_tmp5 = this->foregroundSprites;
HXDLIN(  71)			_hx_tmp5->add( ::objects::BGSprite_obj::__alloc( HX_CTX ,HX_("tank3",09,d2,ec,0a),1300,1200,((Float)3.5),((Float)2.5),::Array_obj< ::String >::fromData( _hx_array_data_969188f7_11,1),null())).StaticCast<  ::objects::BGSprite >();
            		}
HXLINE(  74)		if ((( (::String)(::flixel::FlxG_obj::game->_state->__Field(HX_("songName",c0,d0,d7,36),::hx::paccDynamic)) ) == HX_("stress",34,24,2d,11))) {
HXLINE(  74)			this->setDefaultGF(HX_("pico-speaker",57,7a,55,5e));
            		}
            		else {
HXLINE(  75)			this->setDefaultGF(HX_("gf-tankmen",fe,a1,7c,b5));
            		}
HXLINE(  77)		bool _hx_tmp6;
HXDLIN(  77)		if (::states::PlayState_obj::isStoryMode) {
HXLINE(  77)			_hx_tmp6 = !(::states::PlayState_obj::seenCutscene);
            		}
            		else {
HXLINE(  77)			_hx_tmp6 = false;
            		}
HXDLIN(  77)		if (_hx_tmp6) {
HXLINE(  79)			::String _hx_switch_0 = ( (::String)(::flixel::FlxG_obj::game->_state->__Field(HX_("songName",c0,d0,d7,36),::hx::paccDynamic)) );
            			if (  (_hx_switch_0==HX_("guns",f3,21,6e,44)) ){
HXLINE(  84)				this->setStartCallback(this->gunsIntro_dyn());
HXDLIN(  84)				goto _hx_goto_1;
            			}
            			if (  (_hx_switch_0==HX_("stress",34,24,2d,11)) ){
HXLINE(  86)				this->setStartCallback(this->stressIntro_dyn());
HXDLIN(  86)				goto _hx_goto_1;
            			}
            			if (  (_hx_switch_0==HX_("ugh",d6,21,59,00)) ){
HXLINE(  82)				this->setStartCallback(this->ughIntro_dyn());
HXDLIN(  82)				goto _hx_goto_1;
            			}
            			_hx_goto_1:;
            		}
            	}


void Tank_obj::createPost(){
            	HX_GC_STACKFRAME(&_hx_pos_012ed43d484e6e58_91_createPost)
HXLINE(  92)		this->add(this->foregroundSprites);
HXLINE(  94)		if (!(::backend::ClientPrefs_obj::data->lowQuality)) {
HXLINE(  96)			 ::Dynamic filter = null();
HXDLIN(  96)			 ::flixel::group::FlxTypedGroupIterator daGf =  ::flixel::group::FlxTypedGroupIterator_obj::__alloc( HX_CTX ,( ( ::flixel::group::FlxTypedSpriteGroup)(::flixel::FlxG_obj::game->_state->__Field(HX_("gfGroup",a0,b8,ab,b0),::hx::paccDynamic)) )->group->members,filter);
HXDLIN(  96)			while(daGf->hasNext()){
HXLINE(  96)				 ::flixel::FlxSprite daGf1 = daGf->next().StaticCast<  ::flixel::FlxSprite >();
HXLINE(  98)				 ::objects::Character gf = ( ( ::objects::Character)(daGf1) );
HXLINE(  99)				if ((gf->curCharacter == HX_("pico-speaker",57,7a,55,5e))) {
HXLINE( 101)					 ::states::stages::objects::TankmenBG firstTank =  ::states::stages::objects::TankmenBG_obj::__alloc( HX_CTX ,( (Float)(20) ),( (Float)(500) ),true);
HXLINE( 102)					firstTank->resetShit(( (Float)(20) ),( (Float)(1500) ),true);
HXLINE( 103)					firstTank->strumTime = ( (Float)(10) );
HXLINE( 104)					firstTank->set_visible(false);
HXLINE( 105)					this->tankmanRun->add(firstTank).StaticCast<  ::states::stages::objects::TankmenBG >();
HXLINE( 107)					{
HXLINE( 107)						int _g = 0;
HXDLIN( 107)						int _g1 = ::states::stages::objects::TankmenBG_obj::animationNotes->get_length();
HXDLIN( 107)						while((_g < _g1)){
HXLINE( 107)							_g = (_g + 1);
HXDLIN( 107)							int i = (_g - 1);
HXLINE( 109)							if ((::flixel::FlxG_obj::random->_hx_float(0,100,null()) < 16)) {
HXLINE( 110)								 ::states::stages::objects::TankmenBG tankBih = this->tankmanRun->recycle(::hx::ClassOf< ::states::stages::objects::TankmenBG >(),null(),null(),null()).StaticCast<  ::states::stages::objects::TankmenBG >();
HXLINE( 111)								tankBih->strumTime = ( (Float)(::states::stages::objects::TankmenBG_obj::animationNotes->__get(i)->__GetItem(0)) );
HXLINE( 112)								int _hx_tmp = (200 + ::flixel::FlxG_obj::random->_hx_int(50,100,null()));
HXDLIN( 112)								tankBih->resetShit(( (Float)(500) ),( (Float)(_hx_tmp) ),::hx::IsLess( ::states::stages::objects::TankmenBG_obj::animationNotes->__get(i)->__GetItem(1),2 ));
HXLINE( 113)								this->tankmanRun->add(tankBih).StaticCast<  ::states::stages::objects::TankmenBG >();
            							}
            						}
            					}
HXLINE( 116)					goto _hx_goto_12;
            				}
            			}
            			_hx_goto_12:;
            		}
            	}


void Tank_obj::countdownTick( ::backend::Countdown count,int num){
            	HX_STACKFRAME(&_hx_pos_012ed43d484e6e58_122_countdownTick)
HXDLIN( 122)		if ((::hx::Mod(num,2) == 0)) {
HXDLIN( 122)			this->everyoneDance();
            		}
            	}


void Tank_obj::beatHit(){
            	HX_STACKFRAME(&_hx_pos_012ed43d484e6e58_123_beatHit)
HXDLIN( 123)		this->everyoneDance();
            	}


void Tank_obj::everyoneDance(){
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		void _hx_run( ::objects::BGSprite spr){
            			HX_STACKFRAME(&_hx_pos_012ed43d484e6e58_129_everyoneDance)
HXLINE( 129)			spr->dance(null());
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_STACKFRAME(&_hx_pos_012ed43d484e6e58_125_everyoneDance)
HXLINE( 126)		if (!(::backend::ClientPrefs_obj::data->lowQuality)) {
HXLINE( 126)			this->tankWatchtower->dance(null());
            		}
HXLINE( 127)		this->foregroundSprites->forEach( ::Dynamic(new _hx_Closure_0()),null());
            	}


HX_DEFINE_DYNAMIC_FUNC0(Tank_obj,everyoneDance,(void))

void Tank_obj::prepareCutscene(){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::states::stages::Tank,_gthis) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_012ed43d484e6e58_155_prepareCutscene)
HXLINE( 156)			Float timeForStuff = ((::backend::Conductor_obj::crochet / ( (Float)(1000) )) * ((Float)4.5));
HXLINE( 157)			{
HXLINE( 157)				 ::flixel::sound::FlxSound _this = ::flixel::FlxG_obj::sound->music;
HXDLIN( 157)				 ::Dynamic onComplete = null();
HXDLIN( 157)				if (::hx::IsNotNull( _this->fadeTween )) {
HXLINE( 157)					_this->fadeTween->cancel();
            				}
HXDLIN( 157)				_this->fadeTween = ::flixel::tweens::FlxTween_obj::num(_this->_volume,( (Float)(0) ),timeForStuff, ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("onComplete",f8,d4,7e,5d),onComplete)),_this->volumeTween_dyn());
            			}
HXLINE( 158)			::flixel::tweens::FlxTween_obj::tween(::flixel::FlxG_obj::camera, ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("zoom",13,a3,f8,50),( (Float)(::flixel::FlxG_obj::game->_state->__Field(HX_("defaultCamZoom",01,50,2a,0b),::hx::paccDynamic)) ))),timeForStuff, ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::quadInOut_dyn())));
HXLINE( 159)			_gthis->startCountdown();
HXLINE( 161)			( ( ::flixel::group::FlxTypedSpriteGroup)(::flixel::FlxG_obj::game->_state->__Field(HX_("dadGroup",78,cb,28,42),::hx::paccDynamic)) )->set_alpha(( (Float)(1) ));
HXLINE( 162)			( ( ::flixel::FlxCamera)(::flixel::FlxG_obj::game->_state->__Field(HX_("camHUD",e8,2b,76,b7),::hx::paccDynamic)) )->set_visible(true);
HXLINE( 163)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->animation->finishCallback = null();
HXLINE( 164)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("gf",1f,5a,00,00),::hx::paccDynamic)) )->animation->finishCallback = null();
HXLINE( 165)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("gf",1f,5a,00,00),::hx::paccDynamic)) )->dance();
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_1, ::states::stages::Tank,_gthis) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_012ed43d484e6e58_169_prepareCutscene)
HXLINE( 170)			( ( ::flixel::group::FlxTypedSpriteGroup)(::flixel::FlxG_obj::game->_state->__Field(HX_("dadGroup",78,cb,28,42),::hx::paccDynamic)) )->set_alpha(( (Float)(1) ));
HXLINE( 171)			( ( ::flixel::group::FlxTypedSpriteGroup)(::flixel::FlxG_obj::game->_state->__Field(HX_("gfGroup",a0,b8,ab,b0),::hx::paccDynamic)) )->set_alpha(( (Float)(1) ));
HXLINE( 172)			( ( ::flixel::group::FlxTypedSpriteGroup)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriendGroup",75,99,09,ef),::hx::paccDynamic)) )->set_alpha(( (Float)(1) ));
HXLINE( 173)			( ( ::flixel::FlxCamera)(::flixel::FlxG_obj::game->_state->__Field(HX_("camHUD",e8,2b,76,b7),::hx::paccDynamic)) )->set_visible(true);
HXLINE( 175)			if (::hx::IsNotNull( _gthis->audioPlaying )) {
HXLINE( 176)				 ::flixel::sound::FlxSound _this = _gthis->audioPlaying;
HXDLIN( 176)				_this->cleanup(_this->autoDestroy,true);
            			}
HXLINE( 178)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->animation->finishCallback = null();
HXLINE( 179)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("gf",1f,5a,00,00),::hx::paccDynamic)) )->animation->finishCallback = null();
HXLINE( 180)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("gf",1f,5a,00,00),::hx::paccDynamic)) )->dance();
HXLINE( 181)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("dad",47,36,4c,00),::hx::paccDynamic)) )->dance();
HXLINE( 182)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->dance();
HXLINE( 184)			::flixel::tweens::FlxTween_obj::cancelTweensOf(::flixel::FlxG_obj::camera,null());
HXLINE( 185)			::flixel::tweens::FlxTween_obj::cancelTweensOf(( ( ::flixel::FlxObject)(::flixel::FlxG_obj::game->_state->__Field(HX_("camFollow",e0,6e,47,22),::hx::paccDynamic)) ),null());
HXLINE( 186)			::flixel::FlxG_obj::game->_state->__Field(HX_("moveCameraSection",ef,4b,d5,47),::hx::paccDynamic)();
HXLINE( 187)			{
HXLINE( 187)				 ::flixel::math::FlxBasePoint this1 = ::flixel::FlxG_obj::camera->scroll;
HXDLIN( 187)				Float y = (( ( ::flixel::FlxObject)(::flixel::FlxG_obj::game->_state->__Field(HX_("camFollow",e0,6e,47,22),::hx::paccDynamic)) )->y - (( (Float)(::flixel::FlxG_obj::height) ) / ( (Float)(2) )));
HXDLIN( 187)				this1->set_x((( ( ::flixel::FlxObject)(::flixel::FlxG_obj::game->_state->__Field(HX_("camFollow",e0,6e,47,22),::hx::paccDynamic)) )->x - (( (Float)(::flixel::FlxG_obj::width) ) / ( (Float)(2) ))));
HXDLIN( 187)				this1->set_y(y);
            			}
HXLINE( 188)			::flixel::FlxG_obj::camera->set_zoom(( (Float)(::flixel::FlxG_obj::game->_state->__Field(HX_("defaultCamZoom",01,50,2a,0b),::hx::paccDynamic)) ));
HXLINE( 189)			_gthis->startCountdown();
            		}
            		HX_END_LOCAL_FUNC0((void))

            	HX_GC_STACKFRAME(&_hx_pos_012ed43d484e6e58_140_prepareCutscene)
HXDLIN( 140)		 ::states::stages::Tank _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 141)		this->cutsceneHandler =  ::cutscenes::CutsceneHandler_obj::__alloc( HX_CTX ,null());
HXLINE( 143)		( ( ::flixel::group::FlxTypedSpriteGroup)(::flixel::FlxG_obj::game->_state->__Field(HX_("dadGroup",78,cb,28,42),::hx::paccDynamic)) )->set_alpha(((Float)0.00001));
HXLINE( 144)		( ( ::flixel::FlxCamera)(::flixel::FlxG_obj::game->_state->__Field(HX_("camHUD",e8,2b,76,b7),::hx::paccDynamic)) )->set_visible(false);
HXLINE( 147)		this->tankman =  ::flxanimate::PsychFlxAnimate_obj::__alloc( HX_CTX ,(( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("dad",47,36,4c,00),::hx::paccDynamic)) )->x + 419),(( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("dad",47,36,4c,00),::hx::paccDynamic)) )->y + 225),null(),null());
HXLINE( 148)		this->tankman->set_showPivot(false);
HXLINE( 149)		::backend::Paths_obj::loadAnimateAtlas(this->tankman,HX_("cutscenes/tankman",4a,9f,45,4a),null(),null());
HXLINE( 150)		this->tankman->set_antialiasing(::backend::ClientPrefs_obj::data->antialiasing);
HXLINE( 151)		this->addBehindDad(this->tankman);
HXLINE( 152)		this->cutsceneHandler->push(this->tankman);
HXLINE( 154)		this->cutsceneHandler->finishCallback =  ::Dynamic(new _hx_Closure_0(_gthis));
HXLINE( 168)		this->cutsceneHandler->skipCallback =  ::Dynamic(new _hx_Closure_1(_gthis));
HXLINE( 191)		( ( ::flixel::FlxObject)(::flixel::FlxG_obj::game->_state->__Field(HX_("camFollow",e0,6e,47,22),::hx::paccDynamic)) )->setPosition((( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("dad",47,36,4c,00),::hx::paccDynamic)) )->x + 280),(( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("dad",47,36,4c,00),::hx::paccDynamic)) )->y + 170));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Tank_obj,prepareCutscene,(void))

void Tank_obj::ughIntro(){
            		HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_0, ::states::stages::Tank,_gthis, ::flixel::sound::FlxSound,wellWellWell1) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_012ed43d484e6e58_215_ughIntro)
HXLINE( 216)			wellWellWell1->play(true,null(),null());
HXLINE( 217)			_gthis->audioPlaying = wellWellWell1;
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_012ed43d484e6e58_222_ughIntro)
HXLINE( 223)			 ::flixel::FlxObject fh = ( ( ::flixel::FlxObject)(::flixel::FlxG_obj::game->_state->__Field(HX_("camFollow",e0,6e,47,22),::hx::paccDynamic)) );
HXDLIN( 223)			fh->set_x((fh->x + 750));
HXLINE( 224)			 ::flixel::FlxObject fh1 = ( ( ::flixel::FlxObject)(::flixel::FlxG_obj::game->_state->__Field(HX_("camFollow",e0,6e,47,22),::hx::paccDynamic)) );
HXDLIN( 224)			fh1->set_y((fh1->y + 100));
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_2) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_012ed43d484e6e58_229_ughIntro)
HXLINE( 230)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->playAnim(HX_("singUP",6a,52,21,b9),true,null(),null());
HXLINE( 231)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->specialAnim = true;
HXLINE( 232)			 ::flixel::_hx_system::frontEnds::SoundFrontEnd _hx_tmp = ::flixel::FlxG_obj::sound;
HXDLIN( 232)			_hx_tmp->play(::backend::Paths_obj::returnSound((HX_("sounds/",eb,02,a5,b6) + HX_("bfBeep",d2,98,c5,15)),null(),true,null()),null(),null(),null(),null(),null());
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_3, ::states::stages::Tank,_gthis, ::flixel::sound::FlxSound,killYou1) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_012ed43d484e6e58_237_ughIntro)
HXLINE( 238)			 ::flixel::FlxObject fh = ( ( ::flixel::FlxObject)(::flixel::FlxG_obj::game->_state->__Field(HX_("camFollow",e0,6e,47,22),::hx::paccDynamic)) );
HXDLIN( 238)			fh->set_x((fh->x - ( (Float)(750) )));
HXLINE( 239)			 ::flixel::FlxObject fh1 = ( ( ::flixel::FlxObject)(::flixel::FlxG_obj::game->_state->__Field(HX_("camFollow",e0,6e,47,22),::hx::paccDynamic)) );
HXDLIN( 239)			fh1->set_y((fh1->y - ( (Float)(100) )));
HXLINE( 242)			_gthis->tankman->anim->play(HX_("killYou",e1,20,df,d3),true,null(),null());
HXLINE( 243)			killYou1->play(true,null(),null());
HXLINE( 244)			_gthis->audioPlaying = killYou1;
            		}
            		HX_END_LOCAL_FUNC0((void))

            	HX_GC_STACKFRAME(&_hx_pos_012ed43d484e6e58_195_ughIntro)
HXDLIN( 195)		 ::states::stages::Tank _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 196)		this->prepareCutscene();
HXLINE( 197)		this->cutsceneHandler->endTime = ( (Float)(12) );
HXLINE( 198)		this->cutsceneHandler->music = HX_("DISTORTO",c4,37,c3,ce);
HXLINE( 199)		::backend::Paths_obj::returnSound((HX_("sounds/",eb,02,a5,b6) + HX_("wellWellWell",6a,f7,bb,f4)),null(),true,null());
HXLINE( 200)		::backend::Paths_obj::returnSound((HX_("sounds/",eb,02,a5,b6) + HX_("killYou",e1,20,df,d3)),null(),true,null());
HXLINE( 201)		::backend::Paths_obj::returnSound((HX_("sounds/",eb,02,a5,b6) + HX_("bfBeep",d2,98,c5,15)),null(),true,null());
HXLINE( 203)		 ::flixel::sound::FlxSound wellWellWell =  ::flixel::sound::FlxSound_obj::__alloc( HX_CTX );
HXDLIN( 203)		 ::flixel::sound::FlxSound wellWellWell1 = wellWellWell->loadEmbedded(::backend::Paths_obj::returnSound((HX_("sounds/",eb,02,a5,b6) + HX_("wellWellWell",6a,f7,bb,f4)),null(),true,null()),null(),null(),null());
HXLINE( 204)		::flixel::FlxG_obj::sound->list->add(wellWellWell1).StaticCast<  ::flixel::sound::FlxSound >();
HXLINE( 205)		 ::flixel::sound::FlxSound killYou =  ::flixel::sound::FlxSound_obj::__alloc( HX_CTX );
HXDLIN( 205)		 ::flixel::sound::FlxSound killYou1 = killYou->loadEmbedded(::backend::Paths_obj::returnSound((HX_("sounds/",eb,02,a5,b6) + HX_("killYou",e1,20,df,d3)),null(),true,null()),null(),null(),null());
HXLINE( 206)		::flixel::FlxG_obj::sound->list->add(killYou1).StaticCast<  ::flixel::sound::FlxSound >();
HXLINE( 208)		this->tankman->anim->addBySymbol(HX_("wellWell",3c,17,0b,96),HX_("TANK TALK 1 P1",2e,59,02,09),24,false,null(),null());
HXLINE( 209)		this->tankman->anim->addBySymbol(HX_("killYou",e1,20,df,d3),HX_("TANK TALK 1 P2",2f,59,02,09),24,false,null(),null());
HXLINE( 210)		this->tankman->anim->play(HX_("wellWell",3c,17,0b,96),true,null(),null());
HXLINE( 211)		 ::flixel::FlxCamera fh = ::flixel::FlxG_obj::camera;
HXDLIN( 211)		fh->set_zoom((fh->zoom * ((Float)1.2)));
HXLINE( 214)		this->cutsceneHandler->timer(((Float)0.1), ::Dynamic(new _hx_Closure_0(_gthis,wellWellWell1)));
HXLINE( 221)		this->cutsceneHandler->timer(( (Float)(3) ), ::Dynamic(new _hx_Closure_1()));
HXLINE( 228)		this->cutsceneHandler->timer(((Float)4.5), ::Dynamic(new _hx_Closure_2()));
HXLINE( 236)		this->cutsceneHandler->timer(( (Float)(6) ), ::Dynamic(new _hx_Closure_3(_gthis,killYou1)));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Tank_obj,ughIntro,(void))

void Tank_obj::gunsIntro(){
            		HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_0, ::states::stages::Tank,_gthis, ::flixel::sound::FlxSound,tightBars1) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_012ed43d484e6e58_262_gunsIntro)
HXLINE( 263)			tightBars1->play(true,null(),null());
HXLINE( 264)			_gthis->audioPlaying = tightBars1;
HXLINE( 265)			::flixel::tweens::FlxTween_obj::tween(::flixel::FlxG_obj::camera, ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("zoom",13,a3,f8,50),(( (Float)(::flixel::FlxG_obj::game->_state->__Field(HX_("defaultCamZoom",01,50,2a,0b),::hx::paccDynamic)) ) * ((Float)1.2)))),4, ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::quadInOut_dyn())));
HXLINE( 266)			::flixel::tweens::FlxTween_obj::tween(::flixel::FlxG_obj::camera, ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("zoom",13,a3,f8,50),((( (Float)(::flixel::FlxG_obj::game->_state->__Field(HX_("defaultCamZoom",01,50,2a,0b),::hx::paccDynamic)) ) * ((Float)1.2)) * ((Float)1.2)))),((Float)0.5), ::Dynamic(::hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("startDelay",c1,af,3d,f3),4)
            				->setFixed(1,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::quadInOut_dyn())));
HXLINE( 267)			::flixel::tweens::FlxTween_obj::tween(::flixel::FlxG_obj::camera, ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("zoom",13,a3,f8,50),(( (Float)(::flixel::FlxG_obj::game->_state->__Field(HX_("defaultCamZoom",01,50,2a,0b),::hx::paccDynamic)) ) * ((Float)1.2)))),1, ::Dynamic(::hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("startDelay",c1,af,3d,f3),((Float)4.5))
            				->setFixed(1,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::quadInOut_dyn())));
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_2) HXARGC(0)
            		void _hx_run(){
            			HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            			void _hx_run(::String name){
            				HX_GC_STACKFRAME(&_hx_pos_012ed43d484e6e58_275_gunsIntro)
HXLINE( 275)				( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("gf",1f,5a,00,00),::hx::paccDynamic)) )->playAnim(HX_("sad",16,98,57,00),true,null(),null());
            			}
            			HX_END_LOCAL_FUNC1((void))

            			HX_GC_STACKFRAME(&_hx_pos_012ed43d484e6e58_271_gunsIntro)
HXLINE( 272)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("gf",1f,5a,00,00),::hx::paccDynamic)) )->playAnim(HX_("sad",16,98,57,00),true,null(),null());
HXLINE( 273)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("gf",1f,5a,00,00),::hx::paccDynamic)) )->animation->finishCallback =  ::Dynamic(new _hx_Closure_1());
            		}
            		HX_END_LOCAL_FUNC0((void))

            	HX_GC_STACKFRAME(&_hx_pos_012ed43d484e6e58_248_gunsIntro)
HXDLIN( 248)		 ::states::stages::Tank _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 249)		this->prepareCutscene();
HXLINE( 250)		this->cutsceneHandler->endTime = ((Float)11.5);
HXLINE( 251)		this->cutsceneHandler->music = HX_("DISTORTO",c4,37,c3,ce);
HXLINE( 252)		::backend::Paths_obj::returnSound((HX_("sounds/",eb,02,a5,b6) + HX_("tankSong2",73,1b,de,fb)),null(),true,null());
HXLINE( 254)		 ::flixel::sound::FlxSound tightBars =  ::flixel::sound::FlxSound_obj::__alloc( HX_CTX );
HXDLIN( 254)		 ::flixel::sound::FlxSound tightBars1 = tightBars->loadEmbedded(::backend::Paths_obj::returnSound((HX_("sounds/",eb,02,a5,b6) + HX_("tankSong2",73,1b,de,fb)),null(),true,null()),null(),null(),null());
HXLINE( 255)		::flixel::FlxG_obj::sound->list->add(tightBars1).StaticCast<  ::flixel::sound::FlxSound >();
HXLINE( 257)		this->tankman->anim->addBySymbol(HX_("tightBars",3e,0f,ba,51),HX_("TANK TALK 2",b4,26,63,8b),24,false,null(),null());
HXLINE( 258)		this->tankman->anim->play(HX_("tightBars",3e,0f,ba,51),true,null(),null());
HXLINE( 259)		( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->animation->_curAnim->finish();
HXLINE( 261)		this->cutsceneHandler->onStart =  ::Dynamic(new _hx_Closure_0(_gthis,tightBars1));
HXLINE( 270)		this->cutsceneHandler->timer(( (Float)(4) ), ::Dynamic(new _hx_Closure_2()));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Tank_obj,gunsIntro,(void))

void Tank_obj::stressIntro(){
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		void _hx_run( ::objects::BGSprite spr){
            			HX_STACKFRAME(&_hx_pos_012ed43d484e6e58_291_stressIntro)
HXLINE( 291)			spr->set_y((spr->y + 100));
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_2, ::states::stages::Tank,_gthis,::Array< ::Dynamic>,picoStressCycle) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_012ed43d484e6e58_309_stressIntro)
HXLINE( 309)			::String _hx_switch_0 = _gthis->pico->anim->curInstance->symbol->name;
            			if (  (_hx_switch_0==HX_("GF Time to Die sequence",b4,b8,db,9a)) ||  (_hx_switch_0==HX_("dieBitch",52,c7,3f,0e)) ){
            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            				void _hx_run(::String name){
            					HX_GC_STACKFRAME(&_hx_pos_012ed43d484e6e58_317_stressIntro)
HXLINE( 317)					if ((name != HX_("idle",14,a7,b3,45))) {
HXLINE( 319)						( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->playAnim(HX_("idle",14,a7,b3,45),true,null(),null());
HXLINE( 320)						( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->animation->_curAnim->finish();
            					}
            				}
            				HX_END_LOCAL_FUNC1((void))

HXLINE( 311)				_gthis->pico->anim->play(HX_("picoAppears",d9,41,ee,b6),true,null(),null());
HXLINE( 312)				( ( ::flixel::group::FlxTypedSpriteGroup)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriendGroup",75,99,09,ef),::hx::paccDynamic)) )->set_alpha(( (Float)(1) ));
HXLINE( 313)				_gthis->boyfriendCutscene->set_visible(false);
HXLINE( 314)				( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->playAnim(HX_("bfCatch",d7,2f,ed,87),true,null(),null());
HXLINE( 315)				( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->animation->finishCallback =  ::Dynamic(new _hx_Closure_1());
HXLINE( 310)				goto _hx_goto_31;
            			}
            			if (  (_hx_switch_0==HX_("Pico Dual Wield on Speaker idle",98,71,23,21)) ||  (_hx_switch_0==HX_("picoEnd",f6,af,1b,77)) ){
HXLINE( 326)				( ( ::flixel::group::FlxTypedSpriteGroup)(::flixel::FlxG_obj::game->_state->__Field(HX_("gfGroup",a0,b8,ab,b0),::hx::paccDynamic)) )->set_alpha(( (Float)(1) ));
HXLINE( 327)				_gthis->pico->set_visible(false);
HXLINE( 328)				if (_gthis->pico->anim->onComplete->has(picoStressCycle->__get(0))) {
HXLINE( 329)					_gthis->pico->anim->onComplete->remove(picoStressCycle->__get(0));
            				}
HXLINE( 325)				goto _hx_goto_31;
            			}
            			if (  (_hx_switch_0==HX_("Pico Saves them sequence",40,72,c5,47)) ||  (_hx_switch_0==HX_("picoAppears",d9,41,ee,b6)) ){
HXLINE( 324)				_gthis->pico->anim->play(HX_("picoEnd",f6,af,1b,77),true,null(),null());
HXDLIN( 324)				goto _hx_goto_31;
            			}
            			_hx_goto_31:;
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_3, ::states::stages::Tank,_gthis, ::flixel::sound::FlxSound,cutsceneSnd1) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_012ed43d484e6e58_351_stressIntro)
HXLINE( 352)			cutsceneSnd1->play(true,null(),null());
HXLINE( 353)			_gthis->audioPlaying = cutsceneSnd1;
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_4, ::states::stages::Tank,_gthis) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_012ed43d484e6e58_357_stressIntro)
HXLINE( 358)			::flixel::tweens::FlxTween_obj::tween(( ( ::flixel::FlxObject)(::flixel::FlxG_obj::game->_state->__Field(HX_("camFollow",e0,6e,47,22),::hx::paccDynamic)) ), ::Dynamic(::hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("x",78,00,00,00),650)
            				->setFixed(1,HX_("y",79,00,00,00),300)),1, ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::sineOut_dyn())));
HXLINE( 359)			::flixel::tweens::FlxTween_obj::tween(::flixel::FlxG_obj::camera, ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("zoom",13,a3,f8,50),((Float)1.296))),((Float)2.25), ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::quadInOut_dyn())));
HXLINE( 360)			_gthis->pico->anim->play(HX_("dieBitch",52,c7,3f,0e),true,null(),null());
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_5, ::states::stages::Tank,_gthis) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_012ed43d484e6e58_365_stressIntro)
HXLINE( 365)			_gthis->zoomBack();
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_6, ::states::stages::Tank,_gthis) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_012ed43d484e6e58_370_stressIntro)
HXLINE( 370)			_gthis->tankman->anim->play(HX_("lookWhoItIs",74,92,dd,ed),true,null(),null());
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_7) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_012ed43d484e6e58_375_stressIntro)
HXLINE( 375)			( ( ::flixel::FlxObject)(::flixel::FlxG_obj::game->_state->__Field(HX_("camFollow",e0,6e,47,22),::hx::paccDynamic)) )->setPosition((( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("dad",47,36,4c,00),::hx::paccDynamic)) )->x + 500),(( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("dad",47,36,4c,00),::hx::paccDynamic)) )->y + 170));
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_9) HXARGC(0)
            		void _hx_run(){
            			HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_8) HXARGC(1)
            			void _hx_run(::String name){
            				HX_GC_STACKFRAME(&_hx_pos_012ed43d484e6e58_383_stressIntro)
HXLINE( 383)				if ((name == HX_("singUPmiss",66,22,08,8a))) {
HXLINE( 385)					( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->playAnim(HX_("idle",14,a7,b3,45),true,null(),null());
HXLINE( 386)					( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->animation->_curAnim->finish();
            				}
            			}
            			HX_END_LOCAL_FUNC1((void))

            			HX_GC_STACKFRAME(&_hx_pos_012ed43d484e6e58_379_stressIntro)
HXLINE( 380)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->playAnim(HX_("singUPmiss",66,22,08,8a),true,null(),null());
HXLINE( 381)			( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->animation->finishCallback =  ::Dynamic(new _hx_Closure_8());
HXLINE( 390)			( ( ::flixel::FlxObject)(::flixel::FlxG_obj::game->_state->__Field(HX_("camFollow",e0,6e,47,22),::hx::paccDynamic)) )->setPosition((( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->x + 280),(( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->y + 200));
HXLINE( 391)			::flixel::FlxG_obj::camera->snapToTarget();
HXLINE( 392)			::flixel::FlxG_obj::game->_state->__SetField(HX_("cameraSpeed",a2,8a,af,75),12,::hx::paccDynamic);
HXLINE( 393)			::flixel::tweens::FlxTween_obj::tween(::flixel::FlxG_obj::camera, ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("zoom",13,a3,f8,50),((Float)1.296))),((Float)0.25), ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::elasticOut_dyn())));
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_10, ::states::stages::Tank,_gthis) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_012ed43d484e6e58_398_stressIntro)
HXLINE( 398)			_gthis->zoomBack();
            		}
            		HX_END_LOCAL_FUNC0((void))

            	HX_GC_STACKFRAME(&_hx_pos_012ed43d484e6e58_281_stressIntro)
HXDLIN( 281)		 ::states::stages::Tank _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 282)		this->prepareCutscene();
HXLINE( 284)		this->cutsceneHandler->endTime = ((Float)35.5);
HXLINE( 285)		( ( ::flixel::group::FlxTypedSpriteGroup)(::flixel::FlxG_obj::game->_state->__Field(HX_("gfGroup",a0,b8,ab,b0),::hx::paccDynamic)) )->set_alpha(((Float)0.00001));
HXLINE( 286)		( ( ::flixel::group::FlxTypedSpriteGroup)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriendGroup",75,99,09,ef),::hx::paccDynamic)) )->set_alpha(((Float)0.00001));
HXLINE( 287)		( ( ::flixel::FlxObject)(::flixel::FlxG_obj::game->_state->__Field(HX_("camFollow",e0,6e,47,22),::hx::paccDynamic)) )->setPosition((( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("dad",47,36,4c,00),::hx::paccDynamic)) )->x + 400),(( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("dad",47,36,4c,00),::hx::paccDynamic)) )->y + 170));
HXLINE( 288)		::flixel::tweens::FlxTween_obj::tween(::flixel::FlxG_obj::camera, ::Dynamic(::hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("zoom",13,a3,f8,50),((Float)1.08))),1, ::Dynamic(::hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::quadInOut_dyn())));
HXLINE( 289)		this->foregroundSprites->forEach( ::Dynamic(new _hx_Closure_0()),null());
HXLINE( 293)		::backend::Paths_obj::returnSound((HX_("sounds/",eb,02,a5,b6) + HX_("stressCutscene",de,50,b5,25)),null(),true,null());
HXLINE( 295)		this->pico =  ::flxanimate::PsychFlxAnimate_obj::__alloc( HX_CTX ,(( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("gf",1f,5a,00,00),::hx::paccDynamic)) )->x + 150),(( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("gf",1f,5a,00,00),::hx::paccDynamic)) )->y + 450),null(),null());
HXLINE( 296)		this->pico->set_showPivot(false);
HXLINE( 297)		::backend::Paths_obj::loadAnimateAtlas(this->pico,HX_("cutscenes/picoAppears",33,18,70,b9),null(),null());
HXLINE( 298)		this->pico->set_antialiasing(::backend::ClientPrefs_obj::data->antialiasing);
HXLINE( 299)		this->pico->anim->addBySymbol(HX_("dance",33,83,83,d4),HX_("GF Dancing at Gunpoint",2c,35,43,ed),24,true,null(),null());
HXLINE( 300)		this->pico->anim->addBySymbol(HX_("dieBitch",52,c7,3f,0e),HX_("GF Time to Die sequence",b4,b8,db,9a),24,false,null(),null());
HXLINE( 301)		this->pico->anim->addBySymbol(HX_("picoAppears",d9,41,ee,b6),HX_("Pico Saves them sequence",40,72,c5,47),24,false,null(),null());
HXLINE( 302)		this->pico->anim->addBySymbol(HX_("picoEnd",f6,af,1b,77),HX_("Pico Dual Wield on Speaker idle",98,71,23,21),24,false,null(),null());
HXLINE( 303)		this->pico->anim->play(HX_("dance",33,83,83,d4),true,null(),null());
HXLINE( 304)		this->addBehindGF(this->pico);
HXLINE( 305)		this->cutsceneHandler->push(this->pico);
HXLINE( 308)		::Array< ::Dynamic> picoStressCycle = ::Array_obj< ::Dynamic>::__new(1)->init(0,null());
HXDLIN( 308)		picoStressCycle[0] =  ::Dynamic(new _hx_Closure_2(_gthis,picoStressCycle));
HXLINE( 332)		this->pico->anim->onComplete->add(picoStressCycle->__get(0));
HXLINE( 334)		this->boyfriendCutscene =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,(( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->x + 5),(( ( ::objects::Character)(::flixel::FlxG_obj::game->_state->__Field(HX_("boyfriend",6a,29,b8,e6),::hx::paccDynamic)) )->y + 20),null());
HXLINE( 335)		this->boyfriendCutscene->set_antialiasing(::backend::ClientPrefs_obj::data->antialiasing);
HXLINE( 336)		 ::flixel::FlxSprite _hx_tmp = this->boyfriendCutscene;
HXDLIN( 336)		::String parentFolder = null();
HXDLIN( 336)		if ((HX_("characters/BOYFRIEND",65,2c,9c,1b).indexOf(HX_("psychic",d5,09,aa,19),null()) != -1)) {
HXLINE( 336)			::haxe::Log_obj::trace(HX_("characters/BOYFRIEND",65,2c,9c,1b), ::Dynamic(::hx::Anon_obj::Create(5)
            				->setFixed(0,HX_("className",a3,92,3d,dc),HX_("backend.Paths",34,17,99,92))
            				->setFixed(1,HX_("customParams",d7,51,18,ed),::cpp::VirtualArray_obj::__new(2)->init(0,parentFolder)->init(1,true))
            				->setFixed(2,HX_("methodName",cc,19,0f,12),HX_("getSparrowAtlas",55,ab,b7,a7))
            				->setFixed(3,HX_("fileName",e7,5a,43,62),HX_("source/backend/Paths.hx",ff,43,8c,3d))
            				->setFixed(4,HX_("lineNumber",dd,81,22,76),372)));
            		}
HXDLIN( 336)		 ::flixel::graphics::FlxGraphic imageLoaded = ::backend::Paths_obj::image(HX_("characters/BOYFRIEND",65,2c,9c,1b),parentFolder,true);
HXDLIN( 336)		bool xmlExists = false;
HXDLIN( 336)		::String xml = ::backend::Paths_obj::modFolders(((HX_("images/",77,50,74,c1) + HX_("characters/BOYFRIEND",65,2c,9c,1b)) + HX_(".xml",69,3e,c3,1e)));
HXDLIN( 336)		if (::sys::FileSystem_obj::exists(xml)) {
HXLINE( 336)			xmlExists = true;
            		}
HXDLIN( 336)		 ::Dynamic _hx_tmp1;
HXDLIN( 336)		if (xmlExists) {
HXLINE( 336)			_hx_tmp1 = ::sys::io::File_obj::getContent(xml);
            		}
            		else {
HXLINE( 336)			::String key = (HX_("images/",77,50,74,c1) + HX_("characters/BOYFRIEND",65,2c,9c,1b));
HXDLIN( 336)			::Dynamic this1 = ::backend::Language_obj::phrases;
HXDLIN( 336)			::String str = ( ( ::haxe::ds::StringMap)(this1) )->get_string(::StringTools_obj::trim(key).toLowerCase());
HXDLIN( 336)			if (::hx::IsNotNull( str )) {
HXLINE( 336)				key = str;
            			}
HXDLIN( 336)			_hx_tmp1 = ::backend::Paths_obj::getPath((key + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),parentFolder,null());
            		}
HXDLIN( 336)		_hx_tmp->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(imageLoaded,_hx_tmp1));
HXLINE( 337)		this->boyfriendCutscene->animation->addByPrefix(HX_("idle",14,a7,b3,45),HX_("BF idle dance",03,fa,cc,7f),24,false,null(),null());
HXLINE( 338)		this->boyfriendCutscene->animation->play(HX_("idle",14,a7,b3,45),true,null(),null());
HXLINE( 339)		this->boyfriendCutscene->animation->_curAnim->finish();
HXLINE( 340)		this->addBehindBF(this->boyfriendCutscene);
HXLINE( 341)		this->cutsceneHandler->push(this->boyfriendCutscene);
HXLINE( 343)		 ::flixel::sound::FlxSound cutsceneSnd =  ::flixel::sound::FlxSound_obj::__alloc( HX_CTX );
HXDLIN( 343)		 ::flixel::sound::FlxSound cutsceneSnd1 = cutsceneSnd->loadEmbedded(::backend::Paths_obj::returnSound((HX_("sounds/",eb,02,a5,b6) + HX_("stressCutscene",de,50,b5,25)),null(),true,null()),null(),null(),null());
HXLINE( 344)		::flixel::FlxG_obj::sound->list->add(cutsceneSnd1).StaticCast<  ::flixel::sound::FlxSound >();
HXLINE( 346)		this->tankman->anim->addBySymbol(HX_("godEffingDamnIt",02,28,cf,6e),HX_("TANK TALK 3 P1 UNCUT",f5,ff,77,96),24,false,null(),null());
HXLINE( 347)		this->tankman->anim->addBySymbol(HX_("lookWhoItIs",74,92,dd,ed),HX_("TANK TALK 3 P2 UNCUT",b6,76,0d,c0),24,false,null(),null());
HXLINE( 348)		this->tankman->anim->play(HX_("godEffingDamnIt",02,28,cf,6e),true,null(),null());
HXLINE( 350)		this->cutsceneHandler->onStart =  ::Dynamic(new _hx_Closure_3(_gthis,cutsceneSnd1));
HXLINE( 356)		this->cutsceneHandler->timer(((Float)15.2), ::Dynamic(new _hx_Closure_4(_gthis)));
HXLINE( 363)		this->cutsceneHandler->timer(((Float)17.5), ::Dynamic(new _hx_Closure_5(_gthis)));
HXLINE( 368)		this->cutsceneHandler->timer(((Float)19.5), ::Dynamic(new _hx_Closure_6(_gthis)));
HXLINE( 373)		this->cutsceneHandler->timer(( (Float)(20) ), ::Dynamic(new _hx_Closure_7()));
HXLINE( 378)		this->cutsceneHandler->timer(((Float)31.2), ::Dynamic(new _hx_Closure_9()));
HXLINE( 396)		this->cutsceneHandler->timer(((Float)32.2), ::Dynamic(new _hx_Closure_10(_gthis)));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Tank_obj,stressIntro,(void))

void Tank_obj::zoomBack(){
            	HX_STACKFRAME(&_hx_pos_012ed43d484e6e58_403_zoomBack)
HXLINE( 404)		int calledTimes = 0;
HXLINE( 405)		( ( ::flixel::FlxObject)(::flixel::FlxG_obj::game->_state->__Field(HX_("camFollow",e0,6e,47,22),::hx::paccDynamic)) )->setPosition(630,425);
HXLINE( 406)		::flixel::FlxG_obj::camera->snapToTarget();
HXLINE( 407)		::flixel::FlxG_obj::camera->set_zoom(((Float)0.8));
HXLINE( 408)		::flixel::FlxG_obj::game->_state->__SetField(HX_("cameraSpeed",a2,8a,af,75),1,::hx::paccDynamic);
HXLINE( 410)		calledTimes = (calledTimes + 1);
HXLINE( 411)		if ((calledTimes > 1)) {
            			HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            			void _hx_run( ::objects::BGSprite spr){
            				HX_STACKFRAME(&_hx_pos_012ed43d484e6e58_415_zoomBack)
HXLINE( 415)				spr->set_y((spr->y - ( (Float)(100) )));
            			}
            			HX_END_LOCAL_FUNC1((void))

HXLINE( 413)			this->foregroundSprites->forEach( ::Dynamic(new _hx_Closure_0()),null());
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(Tank_obj,zoomBack,(void))


::hx::ObjectPtr< Tank_obj > Tank_obj::__new() {
	::hx::ObjectPtr< Tank_obj > __this = new Tank_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< Tank_obj > Tank_obj::__alloc(::hx::Ctx *_hx_ctx) {
	Tank_obj *__this = (Tank_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Tank_obj), true, "states.stages.Tank"));
	*(void **)__this = Tank_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

Tank_obj::Tank_obj()
{
}

void Tank_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Tank);
	HX_MARK_MEMBER_NAME(tankWatchtower,"tankWatchtower");
	HX_MARK_MEMBER_NAME(tankGround,"tankGround");
	HX_MARK_MEMBER_NAME(tankmanRun,"tankmanRun");
	HX_MARK_MEMBER_NAME(foregroundSprites,"foregroundSprites");
	HX_MARK_MEMBER_NAME(cutsceneHandler,"cutsceneHandler");
	HX_MARK_MEMBER_NAME(tankman,"tankman");
	HX_MARK_MEMBER_NAME(pico,"pico");
	HX_MARK_MEMBER_NAME(boyfriendCutscene,"boyfriendCutscene");
	HX_MARK_MEMBER_NAME(audioPlaying,"audioPlaying");
	HX_MARK_MEMBER_NAME(dualWieldAnimPlayed,"dualWieldAnimPlayed");
	 ::flixel::FlxBasic_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void Tank_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(tankWatchtower,"tankWatchtower");
	HX_VISIT_MEMBER_NAME(tankGround,"tankGround");
	HX_VISIT_MEMBER_NAME(tankmanRun,"tankmanRun");
	HX_VISIT_MEMBER_NAME(foregroundSprites,"foregroundSprites");
	HX_VISIT_MEMBER_NAME(cutsceneHandler,"cutsceneHandler");
	HX_VISIT_MEMBER_NAME(tankman,"tankman");
	HX_VISIT_MEMBER_NAME(pico,"pico");
	HX_VISIT_MEMBER_NAME(boyfriendCutscene,"boyfriendCutscene");
	HX_VISIT_MEMBER_NAME(audioPlaying,"audioPlaying");
	HX_VISIT_MEMBER_NAME(dualWieldAnimPlayed,"dualWieldAnimPlayed");
	 ::flixel::FlxBasic_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val Tank_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"pico") ) { return ::hx::Val( pico ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"create") ) { return ::hx::Val( create_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"beatHit") ) { return ::hx::Val( beatHit_dyn() ); }
		if (HX_FIELD_EQ(inName,"tankman") ) { return ::hx::Val( tankman ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"ughIntro") ) { return ::hx::Val( ughIntro_dyn() ); }
		if (HX_FIELD_EQ(inName,"zoomBack") ) { return ::hx::Val( zoomBack_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"gunsIntro") ) { return ::hx::Val( gunsIntro_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"tankGround") ) { return ::hx::Val( tankGround ); }
		if (HX_FIELD_EQ(inName,"tankmanRun") ) { return ::hx::Val( tankmanRun ); }
		if (HX_FIELD_EQ(inName,"createPost") ) { return ::hx::Val( createPost_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"stressIntro") ) { return ::hx::Val( stressIntro_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"audioPlaying") ) { return ::hx::Val( audioPlaying ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"countdownTick") ) { return ::hx::Val( countdownTick_dyn() ); }
		if (HX_FIELD_EQ(inName,"everyoneDance") ) { return ::hx::Val( everyoneDance_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"tankWatchtower") ) { return ::hx::Val( tankWatchtower ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"cutsceneHandler") ) { return ::hx::Val( cutsceneHandler ); }
		if (HX_FIELD_EQ(inName,"prepareCutscene") ) { return ::hx::Val( prepareCutscene_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"foregroundSprites") ) { return ::hx::Val( foregroundSprites ); }
		if (HX_FIELD_EQ(inName,"boyfriendCutscene") ) { return ::hx::Val( boyfriendCutscene ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"dualWieldAnimPlayed") ) { return ::hx::Val( dualWieldAnimPlayed ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val Tank_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"pico") ) { pico=inValue.Cast<  ::flxanimate::PsychFlxAnimate >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"tankman") ) { tankman=inValue.Cast<  ::flxanimate::PsychFlxAnimate >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"tankGround") ) { tankGround=inValue.Cast<  ::states::stages::objects::BackgroundTank >(); return inValue; }
		if (HX_FIELD_EQ(inName,"tankmanRun") ) { tankmanRun=inValue.Cast<  ::flixel::group::FlxTypedGroup >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"audioPlaying") ) { audioPlaying=inValue.Cast<  ::flixel::sound::FlxSound >(); return inValue; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"tankWatchtower") ) { tankWatchtower=inValue.Cast<  ::objects::BGSprite >(); return inValue; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"cutsceneHandler") ) { cutsceneHandler=inValue.Cast<  ::cutscenes::CutsceneHandler >(); return inValue; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"foregroundSprites") ) { foregroundSprites=inValue.Cast<  ::flixel::group::FlxTypedGroup >(); return inValue; }
		if (HX_FIELD_EQ(inName,"boyfriendCutscene") ) { boyfriendCutscene=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"dualWieldAnimPlayed") ) { dualWieldAnimPlayed=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Tank_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("tankWatchtower",e4,90,73,b1));
	outFields->push(HX_("tankGround",11,5d,19,55));
	outFields->push(HX_("tankmanRun",3b,77,15,bc));
	outFields->push(HX_("foregroundSprites",4b,a6,ec,f3));
	outFields->push(HX_("cutsceneHandler",60,c0,ea,b5));
	outFields->push(HX_("tankman",f0,7d,78,3d));
	outFields->push(HX_("pico",e5,e8,57,4a));
	outFields->push(HX_("boyfriendCutscene",14,7c,39,34));
	outFields->push(HX_("audioPlaying",38,25,93,95));
	outFields->push(HX_("dualWieldAnimPlayed",13,72,f1,27));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo Tank_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::objects::BGSprite */ ,(int)offsetof(Tank_obj,tankWatchtower),HX_("tankWatchtower",e4,90,73,b1)},
	{::hx::fsObject /*  ::states::stages::objects::BackgroundTank */ ,(int)offsetof(Tank_obj,tankGround),HX_("tankGround",11,5d,19,55)},
	{::hx::fsObject /*  ::flixel::group::FlxTypedGroup */ ,(int)offsetof(Tank_obj,tankmanRun),HX_("tankmanRun",3b,77,15,bc)},
	{::hx::fsObject /*  ::flixel::group::FlxTypedGroup */ ,(int)offsetof(Tank_obj,foregroundSprites),HX_("foregroundSprites",4b,a6,ec,f3)},
	{::hx::fsObject /*  ::cutscenes::CutsceneHandler */ ,(int)offsetof(Tank_obj,cutsceneHandler),HX_("cutsceneHandler",60,c0,ea,b5)},
	{::hx::fsObject /*  ::flxanimate::PsychFlxAnimate */ ,(int)offsetof(Tank_obj,tankman),HX_("tankman",f0,7d,78,3d)},
	{::hx::fsObject /*  ::flxanimate::PsychFlxAnimate */ ,(int)offsetof(Tank_obj,pico),HX_("pico",e5,e8,57,4a)},
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(Tank_obj,boyfriendCutscene),HX_("boyfriendCutscene",14,7c,39,34)},
	{::hx::fsObject /*  ::flixel::sound::FlxSound */ ,(int)offsetof(Tank_obj,audioPlaying),HX_("audioPlaying",38,25,93,95)},
	{::hx::fsInt,(int)offsetof(Tank_obj,dualWieldAnimPlayed),HX_("dualWieldAnimPlayed",13,72,f1,27)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *Tank_obj_sStaticStorageInfo = 0;
#endif

static ::String Tank_obj_sMemberFields[] = {
	HX_("tankWatchtower",e4,90,73,b1),
	HX_("tankGround",11,5d,19,55),
	HX_("tankmanRun",3b,77,15,bc),
	HX_("foregroundSprites",4b,a6,ec,f3),
	HX_("create",fc,66,0f,7c),
	HX_("createPost",7c,45,ea,5c),
	HX_("countdownTick",ae,ec,5f,18),
	HX_("beatHit",7d,ea,04,74),
	HX_("everyoneDance",88,45,07,75),
	HX_("cutsceneHandler",60,c0,ea,b5),
	HX_("tankman",f0,7d,78,3d),
	HX_("pico",e5,e8,57,4a),
	HX_("boyfriendCutscene",14,7c,39,34),
	HX_("audioPlaying",38,25,93,95),
	HX_("prepareCutscene",31,c9,5f,aa),
	HX_("ughIntro",b6,b0,9c,c5),
	HX_("gunsIntro",79,27,c1,2d),
	HX_("dualWieldAnimPlayed",13,72,f1,27),
	HX_("stressIntro",98,59,8d,80),
	HX_("zoomBack",da,2e,0d,9a),
	::String(null()) };

::hx::Class Tank_obj::__mClass;

void Tank_obj::__register()
{
	Tank_obj _hx_dummy;
	Tank_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("states.stages.Tank",f7,88,91,96);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Tank_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Tank_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Tank_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Tank_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace states
} // end namespace stages
